

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 19 00:12:29 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1829 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0113                     	;# 
   118  0114                     	;# 
   119  0115                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  0118                     	;# 
   123  0119                     	;# 
   124  011A                     	;# 
   125  011B                     	;# 
   126  011D                     	;# 
   127  011E                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  018E                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020C                     	;# 
   149  020D                     	;# 
   150  020E                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0216                     	;# 
   163  0216                     	;# 
   164  0217                     	;# 
   165  0217                     	;# 
   166  0219                     	;# 
   167  021A                     	;# 
   168  021B                     	;# 
   169  021C                     	;# 
   170  021D                     	;# 
   171  021E                     	;# 
   172  021F                     	;# 
   173  0291                     	;# 
   174  0291                     	;# 
   175  0292                     	;# 
   176  0293                     	;# 
   177  0294                     	;# 
   178  0295                     	;# 
   179  0295                     	;# 
   180  0296                     	;# 
   181  0298                     	;# 
   182  0298                     	;# 
   183  0299                     	;# 
   184  029A                     	;# 
   185  029B                     	;# 
   186  029C                     	;# 
   187  029D                     	;# 
   188  029E                     	;# 
   189  0311                     	;# 
   190  0311                     	;# 
   191  0312                     	;# 
   192  0313                     	;# 
   193  0318                     	;# 
   194  0318                     	;# 
   195  0319                     	;# 
   196  031A                     	;# 
   197  038C                     	;# 
   198  038D                     	;# 
   199  038E                     	;# 
   200  0391                     	;# 
   201  0392                     	;# 
   202  0393                     	;# 
   203  0394                     	;# 
   204  0395                     	;# 
   205  0396                     	;# 
   206  039A                     	;# 
   207  039C                     	;# 
   208  039D                     	;# 
   209  039E                     	;# 
   210  039F                     	;# 
   211  0415                     	;# 
   212  0416                     	;# 
   213  0417                     	;# 
   214  041C                     	;# 
   215  041D                     	;# 
   216  041E                     	;# 
   217  0FE4                     	;# 
   218  0FE5                     	;# 
   219  0FE6                     	;# 
   220  0FE7                     	;# 
   221  0FE8                     	;# 
   222  0FE9                     	;# 
   223  0FEA                     	;# 
   224  0FEB                     	;# 
   225  0FED                     	;# 
   226  0FEE                     	;# 
   227  0FEF                     	;# 
   228  0016                     _TMR1L	set	22
   229  0017                     _TMR1H	set	23
   230  0064                     _RA4	set	100
   231  008C                     _TRISA	set	140
   232  009B                     _ADRESL	set	155
   233  009C                     _ADRESH	set	156
   234  009E                     _ADCON1	set	158
   235  009D                     _ADCON0	set	157
   236  04E9                     _GO_nDONE	set	1257
   237  046E                     _TRISB6	set	1134
   238  046C                     _TRISB4	set	1132
   239  0211                     _SSP1BUF	set	529
   240  0216                     _SSP1CON2bits	set	534
   241  0214                     _SSP1STAT	set	532
   242  0212                     _SSP1ADD	set	530
   243  0216                     _SSP1CON2	set	534
   244  0215                     _SSP1CON1	set	533
   245                           
   246                           	psect	stringtext1
   247  0800                     __pstringtext1:	
   248  0800                     STR_1:	
   249  0800  3448               	retlw	72	;'H'
   250  0801  3465               	retlw	101	;'e'
   251  0802  346C               	retlw	108	;'l'
   252  0803  346C               	retlw	108	;'l'
   253  0804  346F               	retlw	111	;'o'
   254  0805  3420               	retlw	32	;' '
   255  0806  3457               	retlw	87	;'W'
   256  0807  346F               	retlw	111	;'o'
   257  0808  3472               	retlw	114	;'r'
   258  0809  346C               	retlw	108	;'l'
   259  080A  3464               	retlw	100	;'d'
   260  080B  3400               	retlw	0
   261                           
   262                           	psect	stringtext2
   263  0000                     __pstringtext2:	
   264                           
   265                           ; #config settings
   266  0000                     
   267                           	psect	cinit
   268  07FD                     start_initialization:	
   269  07FD                     __initialization:	
   270  07FD                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273  07FD                     __end_of__initialization:	
   274  07FD  0020               	movlb	0
   275  07FE  3187  2F3C         	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:	
   279  0070                     ?_i2c_Init:	
   280  0070                     ??_i2c_Init:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_i2c_Wait:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ??_i2c_Wait:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_i2c_Start:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ??_i2c_Start:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_i2c_Restart:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ??_i2c_Restart:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_i2c_Stop:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ??_i2c_Stop:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_i2c_Write:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ??_i2c_Write:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_i2c_Address:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_i2c_Read:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ??_i2c_Read:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_I2C_LCD_Busy:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_I2C_LCD_Init:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_ADC_Initialize:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ??_ADC_Initialize:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_sprintf:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_ADC_Read:	
   341                           ; 2 bytes @ 0x0
   342                           
   343  0070                     ?___ftpack:	
   344                           ; 2 bytes @ 0x0
   345                           
   346  0070                     i2c_Write@data:	
   347                           ; 3 bytes @ 0x0
   348                           
   349  0070                     i2c_Address@mode:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     sprintf@f:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ___ftpack@arg:	
   356                           ; 2 bytes @ 0x0
   357                           
   358                           
   359                           ; 3 bytes @ 0x0
   360  0070                     	ds	1
   361  0071                     ??_i2c_Address:	
   362  0071                     i2c_Read@ack:	
   363                           ; 1 bytes @ 0x1
   364                           
   365                           
   366                           ; 1 bytes @ 0x1
   367  0071                     	ds	1
   368  0072                     ??_sprintf:	
   369  0072                     ??_ADC_Read:	
   370                           ; 1 bytes @ 0x2
   371                           
   372  0072                     i2c_Address@address:	
   373                           ; 1 bytes @ 0x2
   374                           
   375  0072                     i2c_Read@i2cReadData:	
   376                           ; 1 bytes @ 0x2
   377                           
   378                           
   379                           ; 1 bytes @ 0x2
   380  0072                     	ds	1
   381  0073                     i2c_Address@l_address:	
   382  0073                     ___ftpack@exp:	
   383                           ; 1 bytes @ 0x3
   384                           
   385                           
   386                           ; 1 bytes @ 0x3
   387  0073                     	ds	1
   388  0074                     ??_I2C_LCD_Busy:	
   389  0074                     ___ftpack@sign:	
   390                           ; 1 bytes @ 0x4
   391                           
   392                           
   393                           ; 1 bytes @ 0x4
   394  0074                     	ds	1
   395  0075                     ??___ftpack:	
   396  0075                     I2C_LCD_Busy@Temp1:	
   397                           ; 1 bytes @ 0x5
   398                           
   399  0075                     sprintf@ap:	
   400                           ; 1 bytes @ 0x5
   401                           
   402                           
   403                           ; 1 bytes @ 0x5
   404  0075                     	ds	1
   405  0076                     I2C_LCD_Busy@read_byte:	
   406  0076                     sprintf@c:	
   407                           ; 1 bytes @ 0x6
   408                           
   409                           
   410                           ; 1 bytes @ 0x6
   411  0076                     	ds	1
   412  0077                     I2C_LCD_Busy@Slave:	
   413  0077                     sprintf@sp:	
   414                           ; 1 bytes @ 0x7
   415                           
   416                           
   417                           ; 1 bytes @ 0x7
   418  0077                     	ds	1
   419  0078                     ??_I2C_LCD_Init:	
   420  0078                     ?_I2C_LCD_Pos:	
   421                           ; 1 bytes @ 0x8
   422                           
   423  0078                     ?_I2C_LCD_SWrite:	
   424                           ; 1 bytes @ 0x8
   425                           
   426  0078                     ?___lwtoft:	
   427                           ; 1 bytes @ 0x8
   428                           
   429  0078                     I2C_LCD_Pos@Pos:	
   430                           ; 3 bytes @ 0x8
   431                           
   432  0078                     I2C_LCD_SWrite@Data:	
   433                           ; 1 bytes @ 0x8
   434                           
   435  0078                     ___lwtoft@c:	
   436                           ; 1 bytes @ 0x8
   437                           
   438                           
   439                           ; 2 bytes @ 0x8
   440  0078                     	ds	1
   441  0079                     ??_I2C_LCD_Pos:	
   442  0079                     I2C_LCD_Init@Tvar1:	
   443                           ; 1 bytes @ 0x9
   444                           
   445  0079                     I2C_LCD_SWrite@Max:	
   446                           ; 1 bytes @ 0x9
   447                           
   448                           
   449                           ; 1 bytes @ 0x9
   450  0079                     	ds	1
   451  007A                     ??_I2C_LCD_SWrite:	
   452  007A                     I2C_LCD_Init@Slave:	
   453                           ; 1 bytes @ 0xA
   454                           
   455                           
   456                           ; 1 bytes @ 0xA
   457  007A                     	ds	1
   458  007B                     ??___lwtoft:	
   459  007B                     I2C_LCD_Pos@Slave:	
   460                           ; 1 bytes @ 0xB
   461                           
   462                           
   463                           ; 1 bytes @ 0xB
   464  007B                     	ds	1
   465  007C                     I2C_LCD_Pos@HiBytex:	
   466                           
   467                           ; 1 bytes @ 0xC
   468  007C                     	ds	1
   469  007D                     I2C_LCD_Pos@LoBytex:	
   470                           
   471                           ; 1 bytes @ 0xD
   472  007D                     	ds	1
   473                           
   474                           	psect	cstackBANK0
   475  0020                     __pcstackBANK0:	
   476  0020                     ?___ftge:	
   477  0020                     I2C_LCD_SWrite@Slave:	
   478                           ; 1 bit 
   479                           
   480  0020                     ___ftge@ff1:	
   481                           ; 1 bytes @ 0x0
   482                           
   483                           
   484                           ; 3 bytes @ 0x0
   485  0020                     	ds	1
   486  0021                     I2C_LCD_SWrite@H:	
   487                           
   488                           ; 1 bytes @ 0x1
   489  0021                     	ds	1
   490  0022                     I2C_LCD_SWrite@L:	
   491                           
   492                           ; 1 bytes @ 0x2
   493  0022                     	ds	1
   494  0023                     I2C_LCD_SWrite@j:	
   495  0023                     ___ftge@ff2:	
   496                           ; 2 bytes @ 0x3
   497                           
   498                           
   499                           ; 3 bytes @ 0x3
   500  0023                     	ds	3
   501  0026                     ??___ftge:	
   502                           
   503                           ; 1 bytes @ 0x6
   504  0026                     	ds	3
   505  0029                     ??_main:	
   506                           
   507                           ; 1 bytes @ 0x9
   508  0029                     	ds	2
   509  002B                     main@Sout:	
   510                           
   511                           ; 20 bytes @ 0xB
   512  002B                     	ds	20
   513  003F                     main@Sptr:	
   514                           
   515                           ; 1 bytes @ 0x1F
   516  003F                     	ds	1
   517  0040                     main@adc_value:	
   518                           
   519                           ; 2 bytes @ 0x20
   520  0040                     	ds	2
   521                           
   522                           	psect	maintext
   523  073C                     __pmaintext:	
   524 ;;
   525 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   526 ;;
   527 ;; *************** function _main *****************
   528 ;; Defined at:
   529 ;;		line 65 in file "main.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  Sout           20   11[BANK0 ] unsigned char [20]
   534 ;;  adc_value       2   32[BANK0 ] unsigned int 
   535 ;;  z               2    0        int 
   536 ;;  Sptr            1   31[BANK0 ] PTR unsigned char 
   537 ;;		 -> main@Sout(20), 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : B1F/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   548 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
   549 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   550 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
   551 ;;Total ram usage:       25 bytes
   552 ;; Hardware stack levels required when called:    4
   553 ;; This function calls:
   554 ;;		_ADC_Initialize
   555 ;;		_ADC_Read
   556 ;;		_I2C_LCD_Init
   557 ;;		_I2C_LCD_Pos
   558 ;;		_I2C_LCD_SWrite
   559 ;;		___ftge
   560 ;;		___lwtoft
   561 ;;		_i2c_Init
   562 ;;		_sprintf
   563 ;; This function is called by:
   564 ;;		Startup code after reset
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _main
   570  073C                     _main:	
   571                           
   572                           ;main.c: 67: TMR1H = TMR1L = 0;
   573                           
   574                           ;incstack = 0
   575                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   576  073C  0020               	movlb	0	; select bank0
   577  073D  0196               	clrf	22	;volatile
   578  073E  0197               	clrf	23	;volatile
   579                           
   580                           ;main.c: 69: unsigned int adc_value = 0;
   581  073F  01C0               	clrf	main@adc_value
   582  0740  01C1               	clrf	main@adc_value+1
   583                           
   584                           ;main.c: 71: TRISA = 0x00;
   585  0741  0021               	movlb	1	; select bank1
   586  0742  018C               	clrf	12	;volatile
   587                           
   588                           ;main.c: 73: TRISA = ((1u << 2u));
   589  0743  3004               	movlw	4
   590  0744  008C               	movwf	12	;volatile
   591                           
   592                           ;main.c: 75: ADC_Initialize();
   593  0745  3185  2539  3187   	fcall	_ADC_Initialize
   594                           
   595                           ;main.c: 78: unsigned char Sout[20];
   596                           ;main.c: 79: unsigned char * Sptr;
   597                           ;main.c: 80: int z;
   598                           ;main.c: 81: Sptr = Sout;
   599  0748  302B               	movlw	(low (main@Sout| 0))& (0+255)
   600  0749  0020               	movlb	0	; select bank0
   601  074A  00A9               	movwf	??_main
   602  074B  0829               	movf	??_main,w
   603  074C  00BF               	movwf	main@Sptr
   604                           
   605                           ;main.c: 83: i2c_Init();
   606  074D  3185  254E  3187   	fcall	_i2c_Init
   607                           
   608                           ;main.c: 84: I2C_LCD_Init(0x27);
   609  0750  3027               	movlw	39
   610  0751  3186  2647  3187   	fcall	_I2C_LCD_Init
   611                           
   612                           ;main.c: 86: I2C_LCD_Pos(0x27, 0x40);
   613  0754  3040               	movlw	64
   614  0755  0020               	movlb	0	; select bank0
   615  0756  00A9               	movwf	??_main
   616  0757  0829               	movf	??_main,w
   617  0758  00F8               	movwf	I2C_LCD_Pos@Pos
   618  0759  3027               	movlw	39
   619  075A  3185  25D4  3187   	fcall	_I2C_LCD_Pos
   620                           
   621                           ;main.c: 88: sprintf(Sout, "Hello World");
   622  075D  3000               	movlw	low (STR_1| (0+32768))
   623  075E  00F0               	movwf	sprintf@f
   624  075F  3088               	movlw	high (STR_1| (0+32768))
   625  0760  00F1               	movwf	sprintf@f+1
   626  0761  302B               	movlw	(low (main@Sout| 0))& (0+255)
   627  0762  3185  25AC  3187   	fcall	_sprintf
   628                           
   629                           ;main.c: 90: I2C_LCD_SWrite(0x27, Sout, 11);
   630  0765  302B               	movlw	(low (main@Sout| 0))& (0+255)
   631  0766  0020               	movlb	0	; select bank0
   632  0767  00A9               	movwf	??_main
   633  0768  0829               	movf	??_main,w
   634  0769  00F8               	movwf	I2C_LCD_SWrite@Data
   635  076A  300B               	movlw	11
   636  076B  00AA               	movwf	??_main+1
   637  076C  082A               	movf	??_main+1,w
   638  076D  00F9               	movwf	I2C_LCD_SWrite@Max
   639  076E  3027               	movlw	39
   640  076F  3186  26E1  3187   	fcall	_I2C_LCD_SWrite
   641  0772  2F96               	goto	L1
   642  0773                     l1093:	
   643                           ;main.c: 92: RA4 = 0;
   644                           
   645  0773  0020               	movlb	0	; select bank0
   646  0774  160C               	bsf	12,4	;volatile
   647  0775                     l1089:	
   648                           ;main.c: 94: while(1) {
   649                           
   650                           
   651                           ;main.c: 96: adc_value = ADC_Read();
   652  0775  3185  257C  3187   	fcall	_ADC_Read
   653  0778  0871               	movf	?_ADC_Read+1,w
   654  0779  0020               	movlb	0	; select bank0
   655  077A  00C1               	movwf	main@adc_value+1
   656  077B  0870               	movf	?_ADC_Read,w
   657  077C  00C0               	movwf	main@adc_value
   658                           
   659                           ;main.c: 98: if (adc_value < 712.0f) RA4 = 1;
   660  077D  0841               	movf	main@adc_value+1,w
   661  077E  00F9               	movwf	___lwtoft@c+1
   662  077F  0840               	movf	main@adc_value,w
   663  0780  00F8               	movwf	___lwtoft@c
   664  0781  3185  2569  3187   	fcall	___lwtoft
   665  0784  0878               	movf	?___lwtoft,w
   666  0785  0020               	movlb	0	; select bank0
   667  0786  00A0               	movwf	___ftge@ff1
   668  0787  0879               	movf	?___lwtoft+1,w
   669  0788  00A1               	movwf	___ftge@ff1+1
   670  0789  087A               	movf	?___lwtoft+2,w
   671  078A  00A2               	movwf	___ftge@ff1+2
   672  078B  3000               	movlw	0
   673  078C  00A3               	movwf	___ftge@ff2
   674  078D  3032               	movlw	50
   675  078E  00A4               	movwf	___ftge@ff2+1
   676  078F  3044               	movlw	68
   677  0790  00A5               	movwf	___ftge@ff2+2
   678  0791  3186  260B  3187   	fcall	___ftge
   679  0794  1C03               	btfss	3,0
   680  0795  2F73               	goto	l1093
   681  0796                     L1:	
   682                           
   683                           ;main.c: 99: else RA4 = 0;
   684  0796  0020               	movlb	0	; select bank0
   685  0797  120C               	bcf	12,4	;volatile
   686  0798  2F75               	goto	l1089
   687  0799                     __end_of_main:	
   688                           
   689                           	psect	text1
   690  05AC                     __ptext1:	
   691 ;; *************** function _sprintf *****************
   692 ;; Defined at:
   693 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;  sp              1    wreg     PTR unsigned char 
   696 ;;		 -> main@Sout(20), 
   697 ;;  f               2    0[COMMON] PTR const unsigned char 
   698 ;;		 -> STR_1(12), 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  sp              1    7[COMMON] PTR unsigned char 
   701 ;;		 -> main@Sout(20), 
   702 ;;  tmpval          4    0        struct .
   703 ;;  cp              2    0        PTR const unsigned char 
   704 ;;  len             2    0        unsigned int 
   705 ;;  val             2    0        unsigned int 
   706 ;;  c               1    6[COMMON] char 
   707 ;;  ap              1    5[COMMON] PTR void [1]
   708 ;;		 -> ?_sprintf(2), 
   709 ;;  flag            1    0        unsigned char 
   710 ;;  prec            1    0        char 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  2    0[COMMON] int 
   713 ;; Registers used:
   714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   721 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   722 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   723 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   724 ;;Total ram usage:        8 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; This function calls:
   727 ;;		Nothing
   728 ;; This function is called by:
   729 ;;		_main
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function _sprintf
   735  05AC                     _sprintf:	
   736                           
   737                           ;incstack = 0
   738                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath]
   739                           ;sprintf@sp stored from wreg
   740  05AC  00F7               	movwf	sprintf@sp
   741                           
   742                           ;doprnt.c: 494: va_list ap;
   743                           ;doprnt.c: 499: signed char c;
   744                           ;doprnt.c: 506: signed char prec;
   745                           ;doprnt.c: 508: unsigned char flag;
   746                           ;doprnt.c: 523: union {
   747                           ;doprnt.c: 524: unsigned long vd;
   748                           ;doprnt.c: 525: double integ;
   749                           ;doprnt.c: 526: } tmpval;
   750                           ;doprnt.c: 528: unsigned int val;
   751                           ;doprnt.c: 529: unsigned len;
   752                           ;doprnt.c: 530: const char * cp;
   753                           ;doprnt.c: 533: *ap = __va_start();
   754  05AD  3072               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
   755  05AE  00F2               	movwf	??_sprintf
   756  05AF  0872               	movf	??_sprintf,w
   757  05B0  00F5               	movwf	sprintf@ap
   758  05B1                     l1019:	
   759                           ;doprnt.c: 543: }
   760                           ;doprnt.c: 1422: {
   761                           
   762                           ;doprnt.c: 542: continue;
   763                           
   764                           ;doprnt.c: 536: while(c = *f++) {
   765                           
   766  05B1  0871               	movf	sprintf@f+1,w
   767  05B2  00F3               	movwf	??_sprintf+1
   768  05B3  0870               	movf	sprintf@f,w
   769  05B4  00F2               	movwf	??_sprintf
   770  05B5  0AF0               	incf	sprintf@f,f
   771  05B6  1903               	skipnz
   772  05B7  0AF1               	incf	sprintf@f+1,f
   773  05B8  0872               	movf	??_sprintf,w
   774  05B9  0084               	movwf	4
   775  05BA  0873               	movf	??_sprintf+1,w
   776  05BB  0085               	movwf	5
   777  05BC  0800               	movf	0,w	;code access
   778  05BD  00F4               	movwf	??_sprintf+2
   779  05BE  0874               	movf	??_sprintf+2,w
   780  05BF  00F6               	movwf	sprintf@c
   781  05C0  0876               	movf	sprintf@c,w
   782  05C1  1903               	btfsc	3,2
   783  05C2  2DCF               	goto	l1021
   784                           
   785                           ;doprnt.c: 540: {
   786                           ;doprnt.c: 541: ((*sp++ = (c)));
   787  05C3  0876               	movf	sprintf@c,w
   788  05C4  00F2               	movwf	??_sprintf
   789  05C5  0877               	movf	sprintf@sp,w
   790  05C6  0086               	movwf	6
   791  05C7  0187               	clrf	7
   792  05C8  0872               	movf	??_sprintf,w
   793  05C9  0081               	movwf	1
   794  05CA  3001               	movlw	1
   795  05CB  00F2               	movwf	??_sprintf
   796  05CC  0872               	movf	??_sprintf,w
   797  05CD  07F7               	addwf	sprintf@sp,f
   798  05CE  2DB1               	goto	l1019
   799  05CF                     l1021:	
   800                           
   801                           ;doprnt.c: 1469: }
   802                           ;doprnt.c: 1533: }
   803                           ;doprnt.c: 1538: *sp = 0;
   804  05CF  0877               	movf	sprintf@sp,w
   805  05D0  0086               	movwf	6
   806  05D1  0187               	clrf	7
   807  05D2  0181               	clrf	1
   808  05D3  0008               	return
   809  05D4                     __end_of_sprintf:	
   810                           ;doprnt.c: 1540: return 0;
   811                           ;	Return value of _sprintf is never used
   812                           
   813                           
   814                           	psect	text2
   815  054E                     __ptext2:	
   816 ;; *************** function _i2c_Init *****************
   817 ;; Defined at:
   818 ;;		line 12 in file "i2c_LCD.h"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _i2c_Init
   847  054E                     _i2c_Init:	
   848                           
   849                           ;i2c_LCD.h: 16: TRISB4=1;
   850                           
   851                           ;incstack = 0
   852                           ; Regs used in _i2c_Init: [wreg+status,2]
   853  054E  0021               	movlb	1	; select bank1
   854  054F  160D               	bsf	13,4	;volatile
   855                           
   856                           ;i2c_LCD.h: 17: TRISB6=1;
   857  0550  170D               	bsf	13,6	;volatile
   858                           
   859                           ;i2c_LCD.h: 19: SSP1CON1 = 0b00101000;
   860  0551  3028               	movlw	40
   861  0552  0024               	movlb	4	; select bank4
   862  0553  0095               	movwf	21	;volatile
   863                           
   864                           ;i2c_LCD.h: 20: SSP1CON2 = 0x00;
   865  0554  0196               	clrf	22	;volatile
   866                           
   867                           ;i2c_LCD.h: 22: SSP1ADD = 9;
   868  0555  3009               	movlw	9
   869  0556  0092               	movwf	18	;volatile
   870                           
   871                           ;i2c_LCD.h: 24: SSP1STAT = 0b11000000;
   872  0557  30C0               	movlw	192
   873  0558  0094               	movwf	20	;volatile
   874  0559  0008               	return
   875  055A                     __end_of_i2c_Init:	
   876                           
   877                           	psect	text3
   878  0569                     __ptext3:	
   879 ;; *************** function ___lwtoft *****************
   880 ;; Defined at:
   881 ;;		line 28 in file "/opt/microchip/xc8/v1.45/sources/common/lwtoft.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  c               2    8[COMMON] unsigned int 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  3    8[COMMON] float 
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0, pclath, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   895 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   898 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   899 ;;Total ram usage:        4 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    1
   902 ;; This function calls:
   903 ;;		___ftpack
   904 ;; This function is called by:
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function ___lwtoft
   911  0569                     ___lwtoft:	
   912                           
   913                           ;incstack = 0
   914                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   915  0569  0878               	movf	___lwtoft@c,w
   916  056A  00F0               	movwf	___ftpack@arg
   917  056B  0879               	movf	___lwtoft@c+1,w
   918  056C  00F1               	movwf	___ftpack@arg+1
   919  056D  01F2               	clrf	___ftpack@arg+2
   920  056E  308E               	movlw	142
   921  056F  00FB               	movwf	??___lwtoft
   922  0570  087B               	movf	??___lwtoft,w
   923  0571  00F3               	movwf	___ftpack@exp
   924  0572  01F4               	clrf	___ftpack@sign
   925  0573  3187  2799         	fcall	___ftpack
   926  0575  0870               	movf	?___ftpack,w
   927  0576  00F8               	movwf	?___lwtoft
   928  0577  0871               	movf	?___ftpack+1,w
   929  0578  00F9               	movwf	?___lwtoft+1
   930  0579  0872               	movf	?___ftpack+2,w
   931  057A  00FA               	movwf	?___lwtoft+2
   932  057B  0008               	return
   933  057C                     __end_of___lwtoft:	
   934                           
   935                           	psect	text4
   936  0799                     __ptext4:	
   937 ;; *************** function ___ftpack *****************
   938 ;; Defined at:
   939 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/float.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  arg             3    0[COMMON] unsigned um
   942 ;;  exp             1    3[COMMON] unsigned char 
   943 ;;  sign            1    4[COMMON] unsigned char 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  3    0[COMMON] float 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   955 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   957 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   958 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   959 ;;Total ram usage:        8 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		___lwtoft
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function ___ftpack
   970  0799                     ___ftpack:	
   971                           
   972                           ;incstack = 0
   973                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
   974  0799  0873               	movf	___ftpack@exp,w
   975  079A  1903               	btfsc	3,2
   976  079B  2FA1               	goto	l923
   977  079C  0872               	movf	___ftpack@arg+2,w
   978  079D  0471               	iorwf	___ftpack@arg+1,w
   979  079E  0470               	iorwf	___ftpack@arg,w
   980  079F  1D03               	skipz
   981  07A0  2FB2               	goto	l929
   982  07A1                     l923:	
   983  07A1  3000               	movlw	0
   984  07A2  00F0               	movwf	?___ftpack
   985  07A3  3000               	movlw	0
   986  07A4  00F1               	movwf	?___ftpack+1
   987  07A5  3000               	movlw	0
   988  07A6  00F2               	movwf	?___ftpack+2
   989  07A7  0008               	return
   990  07A8                     l927:	
   991  07A8  3001               	movlw	1
   992  07A9  00F5               	movwf	??___ftpack
   993  07AA  0875               	movf	??___ftpack,w
   994  07AB  07F3               	addwf	___ftpack@exp,f
   995  07AC  3001               	movlw	1
   996  07AD                     u335:	
   997  07AD  36F2               	lsrf	___ftpack@arg+2,f
   998  07AE  0CF1               	rrf	___ftpack@arg+1,f
   999  07AF  0CF0               	rrf	___ftpack@arg,f
  1000  07B0  0B89               	decfsz	9,f
  1001  07B1  2FAD               	goto	u335
  1002  07B2                     l929:	
  1003  07B2  30FE               	movlw	254
  1004  07B3  0572               	andwf	___ftpack@arg+2,w
  1005  07B4  1903               	btfsc	3,2
  1006  07B5  2FCB               	goto	l360
  1007  07B6  2FA8               	goto	l927
  1008  07B7                     l931:	
  1009  07B7  3001               	movlw	1
  1010  07B8  00F5               	movwf	??___ftpack
  1011  07B9  0875               	movf	??___ftpack,w
  1012  07BA  07F3               	addwf	___ftpack@exp,f
  1013  07BB  3001               	movlw	1
  1014  07BC  07F0               	addwf	___ftpack@arg,f
  1015  07BD  3000               	movlw	0
  1016  07BE  1803               	skipnc
  1017  07BF  3001               	movlw	1
  1018  07C0  07F1               	addwf	___ftpack@arg+1,f
  1019  07C1  3000               	movlw	0
  1020  07C2  1803               	skipnc
  1021  07C3  3001               	movlw	1
  1022  07C4  07F2               	addwf	___ftpack@arg+2,f
  1023  07C5  3001               	movlw	1
  1024  07C6                     u355:	
  1025  07C6  36F2               	lsrf	___ftpack@arg+2,f
  1026  07C7  0CF1               	rrf	___ftpack@arg+1,f
  1027  07C8  0CF0               	rrf	___ftpack@arg,f
  1028  07C9  0B89               	decfsz	9,f
  1029  07CA  2FC6               	goto	u355
  1030  07CB                     l360:	
  1031  07CB  30FF               	movlw	255
  1032  07CC  0572               	andwf	___ftpack@arg+2,w
  1033  07CD  1903               	btfsc	3,2
  1034  07CE  2FD8               	goto	l939
  1035  07CF  2FB7               	goto	l931
  1036  07D0                     l937:	
  1037  07D0  3001               	movlw	1
  1038  07D1  02F3               	subwf	___ftpack@exp,f
  1039  07D2  3001               	movlw	1
  1040  07D3                     u375:	
  1041  07D3  35F0               	lslf	___ftpack@arg,f
  1042  07D4  0DF1               	rlf	___ftpack@arg+1,f
  1043  07D5  0DF2               	rlf	___ftpack@arg+2,f
  1044  07D6  0B89               	decfsz	9,f
  1045  07D7  2FD3               	goto	u375
  1046  07D8                     l939:	
  1047  07D8  1BF1               	btfsc	___ftpack@arg+1,7
  1048  07D9  2FDE               	goto	l367
  1049  07DA  3002               	movlw	2
  1050  07DB  0273               	subwf	___ftpack@exp,w
  1051  07DC  1803               	skipnc
  1052  07DD  2FD0               	goto	l937
  1053  07DE                     l367:	
  1054  07DE  1873               	btfsc	___ftpack@exp,0
  1055  07DF  2FE6               	goto	l368
  1056  07E0  30FF               	movlw	255
  1057  07E1  05F0               	andwf	___ftpack@arg,f
  1058  07E2  307F               	movlw	127
  1059  07E3  05F1               	andwf	___ftpack@arg+1,f
  1060  07E4  30FF               	movlw	255
  1061  07E5  05F2               	andwf	___ftpack@arg+2,f
  1062  07E6                     l368:	
  1063  07E6  1003               	clrc
  1064  07E7  0CF3               	rrf	___ftpack@exp,f
  1065  07E8  0873               	movf	___ftpack@exp,w
  1066  07E9  00F5               	movwf	??___ftpack
  1067  07EA  01F6               	clrf	??___ftpack+1
  1068  07EB  01F7               	clrf	??___ftpack+2
  1069  07EC  3010               	movlw	16
  1070  07ED                     u415:	
  1071  07ED  35F5               	lslf	??___ftpack,f
  1072  07EE  0DF6               	rlf	??___ftpack+1,f
  1073  07EF  0DF7               	rlf	??___ftpack+2,f
  1074  07F0  0B89               	decfsz	9,f
  1075  07F1  2FED               	goto	u415
  1076  07F2  0875               	movf	??___ftpack,w
  1077  07F3  04F0               	iorwf	___ftpack@arg,f
  1078  07F4  0876               	movf	??___ftpack+1,w
  1079  07F5  04F1               	iorwf	___ftpack@arg+1,f
  1080  07F6  0877               	movf	??___ftpack+2,w
  1081  07F7  04F2               	iorwf	___ftpack@arg+2,f
  1082  07F8  0874               	movf	___ftpack@sign,w
  1083  07F9  1903               	btfsc	3,2
  1084  07FA  0008               	return
  1085  07FB  17F2               	bsf	___ftpack@arg+2,7
  1086  07FC  0008               	return
  1087  07FD                     __end_of___ftpack:	
  1088                           
  1089                           	psect	text5
  1090  060B                     __ptext5:	
  1091 ;; *************** function ___ftge *****************
  1092 ;; Defined at:
  1093 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/ftge.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  ff1             3    0[BANK0 ] float 
  1096 ;;  ff2             3    3[BANK0 ] float 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;		None               void
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1108 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1110 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1111 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1112 ;;Total ram usage:        9 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function ___ftge
  1123  060B                     ___ftge:	
  1124                           
  1125                           ;incstack = 0
  1126                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  1127  060B  0020               	movlb	0	; select bank0
  1128  060C  1FA2               	btfss	___ftge@ff1+2,7
  1129  060D  2E22               	goto	l1029
  1130  060E  0920               	comf	___ftge@ff1,w
  1131  060F  00A6               	movwf	??___ftge
  1132  0610  0921               	comf	___ftge@ff1+1,w
  1133  0611  00A7               	movwf	??___ftge+1
  1134  0612  0922               	comf	___ftge@ff1+2,w
  1135  0613  00A8               	movwf	??___ftge+2
  1136  0614  0AA6               	incf	??___ftge,f
  1137  0615  1903               	skipnz
  1138  0616  0AA7               	incf	??___ftge+1,f
  1139  0617  1903               	skipnz
  1140  0618  0AA8               	incf	??___ftge+2,f
  1141  0619  3000               	movlw	0
  1142  061A  0726               	addwf	??___ftge,w
  1143  061B  00A0               	movwf	___ftge@ff1
  1144  061C  3000               	movlw	0
  1145  061D  3D27               	addwfc	??___ftge+1,w
  1146  061E  00A1               	movwf	___ftge@ff1+1
  1147  061F  3080               	movlw	128
  1148  0620  3D28               	addwfc	??___ftge+2,w
  1149  0621  00A2               	movwf	___ftge@ff1+2
  1150  0622                     l1029:	
  1151  0622  1FA5               	btfss	___ftge@ff2+2,7
  1152  0623  2E38               	goto	l1033
  1153  0624  0923               	comf	___ftge@ff2,w
  1154  0625  00A6               	movwf	??___ftge
  1155  0626  0924               	comf	___ftge@ff2+1,w
  1156  0627  00A7               	movwf	??___ftge+1
  1157  0628  0925               	comf	___ftge@ff2+2,w
  1158  0629  00A8               	movwf	??___ftge+2
  1159  062A  0AA6               	incf	??___ftge,f
  1160  062B  1903               	skipnz
  1161  062C  0AA7               	incf	??___ftge+1,f
  1162  062D  1903               	skipnz
  1163  062E  0AA8               	incf	??___ftge+2,f
  1164  062F  3000               	movlw	0
  1165  0630  0726               	addwf	??___ftge,w
  1166  0631  00A3               	movwf	___ftge@ff2
  1167  0632  3000               	movlw	0
  1168  0633  3D27               	addwfc	??___ftge+1,w
  1169  0634  00A4               	movwf	___ftge@ff2+1
  1170  0635  3080               	movlw	128
  1171  0636  3D28               	addwfc	??___ftge+2,w
  1172  0637  00A5               	movwf	___ftge@ff2+2
  1173  0638                     l1033:	
  1174  0638  3080               	movlw	128
  1175  0639  06A2               	xorwf	___ftge@ff1+2,f
  1176  063A  3080               	movlw	128
  1177  063B  06A5               	xorwf	___ftge@ff2+2,f
  1178  063C  0825               	movf	___ftge@ff2+2,w
  1179  063D  0222               	subwf	___ftge@ff1+2,w
  1180  063E  1D03               	skipz
  1181  063F  0008               	return
  1182  0640  0824               	movf	___ftge@ff2+1,w
  1183  0641  0221               	subwf	___ftge@ff1+1,w
  1184  0642  1D03               	skipz
  1185  0643  0008               	return
  1186  0644  0823               	movf	___ftge@ff2,w
  1187  0645  0220               	subwf	___ftge@ff1,w
  1188  0646  0008               	return
  1189  0647                     __end_of___ftge:	
  1190                           
  1191                           	psect	text6
  1192  06E1                     __ptext6:	
  1193 ;; *************** function _I2C_LCD_SWrite *****************
  1194 ;; Defined at:
  1195 ;;		line 76 in file "i2c.h"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  Slave           1    wreg     unsigned char 
  1198 ;;  Data            1    8[COMMON] PTR unsigned char 
  1199 ;;		 -> main@Sout(20), 
  1200 ;;  Max             1    9[COMMON] unsigned char 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  Slave           1    0[BANK0 ] unsigned char 
  1203 ;;  j               2    3[BANK0 ] int 
  1204 ;;  k               2    0        int 
  1205 ;;  L               1    2[BANK0 ] unsigned char 
  1206 ;;  H               1    1[BANK0 ] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1217 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1218 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1219 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1220 ;;Total ram usage:       10 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    3
  1223 ;; This function calls:
  1224 ;;		_I2C_LCD_Busy
  1225 ;;		_i2c_Address
  1226 ;;		_i2c_Start
  1227 ;;		_i2c_Stop
  1228 ;;		_i2c_Write
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _I2C_LCD_SWrite
  1236  06E1                     _I2C_LCD_SWrite:	
  1237                           
  1238                           ;incstack = 0
  1239                           ; Regs used in _I2C_LCD_SWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1240                           ;I2C_LCD_SWrite@Slave stored from wreg
  1241  06E1  0020               	movlb	0	; select bank0
  1242  06E2  00A0               	movwf	I2C_LCD_SWrite@Slave
  1243                           
  1244                           ;i2c.h: 77: int j, k;
  1245                           ;i2c.h: 78: unsigned char H, L;
  1246                           ;i2c.h: 79: i2c_Start();
  1247  06E3  3185  252F  3186   	fcall	_i2c_Start
  1248                           
  1249                           ;i2c.h: 80: i2c_Address(Slave, 0);
  1250  06E6  01F0               	clrf	i2c_Address@mode
  1251  06E7  0020               	movlb	0	; select bank0
  1252  06E8  0820               	movf	I2C_LCD_SWrite@Slave,w
  1253  06E9  3185  255A  3186   	fcall	_i2c_Address
  1254                           
  1255                           ;i2c.h: 82: for (j=0; j<Max; j++){
  1256  06EC  0020               	movlb	0	; select bank0
  1257  06ED  01A3               	clrf	I2C_LCD_SWrite@j
  1258  06EE  01A4               	clrf	I2C_LCD_SWrite@j+1
  1259  06EF                     l999:	
  1260  06EF  0824               	movf	I2C_LCD_SWrite@j+1,w
  1261  06F0  3A80               	xorlw	128
  1262  06F1  00FA               	movwf	??_I2C_LCD_SWrite
  1263  06F2  3080               	movlw	128
  1264  06F3  027A               	subwf	??_I2C_LCD_SWrite,w
  1265  06F4  1D03               	skipz
  1266  06F5  2EF8               	goto	u455
  1267  06F6  0879               	movf	I2C_LCD_SWrite@Max,w
  1268  06F7  0223               	subwf	I2C_LCD_SWrite@j,w
  1269  06F8                     u455:	
  1270  06F8  1803               	btfsc	3,0
  1271  06F9  2F34               	goto	l1001
  1272                           
  1273                           ;i2c.h: 84: H = Data[j] & 0xF0;
  1274  06FA  0020               	movlb	0	; select bank0
  1275  06FB  0823               	movf	I2C_LCD_SWrite@j,w
  1276  06FC  0778               	addwf	I2C_LCD_SWrite@Data,w
  1277  06FD  00FA               	movwf	??_I2C_LCD_SWrite
  1278  06FE  087A               	movf	??_I2C_LCD_SWrite,w
  1279  06FF  0086               	movwf	6
  1280  0700  0187               	clrf	7
  1281  0701  0801               	movf	1,w
  1282  0702  39F0               	andlw	240
  1283  0703  00FB               	movwf	??_I2C_LCD_SWrite+1
  1284  0704  087B               	movf	??_I2C_LCD_SWrite+1,w
  1285  0705  00A1               	movwf	I2C_LCD_SWrite@H
  1286                           
  1287                           ;i2c.h: 85: L = Data[j] << 4 ;
  1288  0706  0823               	movf	I2C_LCD_SWrite@j,w
  1289  0707  0778               	addwf	I2C_LCD_SWrite@Data,w
  1290  0708  00FA               	movwf	??_I2C_LCD_SWrite
  1291  0709  087A               	movf	??_I2C_LCD_SWrite,w
  1292  070A  0086               	movwf	6
  1293  070B  0187               	clrf	7
  1294  070C  0801               	movf	1,w
  1295  070D  00FB               	movwf	??_I2C_LCD_SWrite+1
  1296  070E  3003               	movlw	3
  1297  070F                     u445:	
  1298  070F  35FB               	lslf	??_I2C_LCD_SWrite+1,f
  1299  0710  3EFF               	addlw	-1
  1300  0711  1D03               	skipz
  1301  0712  2F0F               	goto	u445
  1302  0713  357B               	lslf	??_I2C_LCD_SWrite+1,w
  1303  0714  00FC               	movwf	??_I2C_LCD_SWrite+2
  1304  0715  087C               	movf	??_I2C_LCD_SWrite+2,w
  1305  0716  00A2               	movwf	I2C_LCD_SWrite@L
  1306                           
  1307                           ;i2c.h: 87: i2c_Write(H | 0x0D);
  1308  0717  0821               	movf	I2C_LCD_SWrite@H,w
  1309  0718  380D               	iorlw	13
  1310  0719  3185  253F  3186   	fcall	_i2c_Write
  1311                           
  1312                           ;i2c.h: 88: i2c_Write(H | 0x09);
  1313  071C  0020               	movlb	0	; select bank0
  1314  071D  0821               	movf	I2C_LCD_SWrite@H,w
  1315  071E  3809               	iorlw	9
  1316  071F  3185  253F  3186   	fcall	_i2c_Write
  1317                           
  1318                           ;i2c.h: 89: i2c_Write(L | 0x0D);
  1319  0722  0020               	movlb	0	; select bank0
  1320  0723  0822               	movf	I2C_LCD_SWrite@L,w
  1321  0724  380D               	iorlw	13
  1322  0725  3185  253F  3186   	fcall	_i2c_Write
  1323                           
  1324                           ;i2c.h: 90: i2c_Write(L | 0x09);
  1325  0728  0020               	movlb	0	; select bank0
  1326  0729  0822               	movf	I2C_LCD_SWrite@L,w
  1327  072A  3809               	iorlw	9
  1328  072B  3185  253F  3186   	fcall	_i2c_Write
  1329  072E  3001               	movlw	1
  1330  072F  0020               	movlb	0	; select bank0
  1331  0730  07A3               	addwf	I2C_LCD_SWrite@j,f
  1332  0731  3000               	movlw	0
  1333  0732  3DA4               	addwfc	I2C_LCD_SWrite@j+1,f
  1334  0733  2EEF               	goto	l999
  1335  0734                     l1001:	
  1336                           
  1337                           ;i2c.h: 92: }
  1338                           ;i2c.h: 93: I2C_LCD_Busy(Slave);
  1339  0734  0020               	movlb	0	; select bank0
  1340  0735  0820               	movf	I2C_LCD_SWrite@Slave,w
  1341  0736  3186  268A  3186   	fcall	_I2C_LCD_Busy
  1342                           
  1343                           ;i2c.h: 94: i2c_Stop();
  1344  0739  3185  2534         	fcall	_i2c_Stop
  1345  073B  0008               	return
  1346  073C                     __end_of_I2C_LCD_SWrite:	
  1347                           
  1348                           	psect	text7
  1349  05D4                     __ptext7:	
  1350 ;; *************** function _I2C_LCD_Pos *****************
  1351 ;; Defined at:
  1352 ;;		line 61 in file "i2c.h"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  Slave           1    wreg     unsigned char 
  1355 ;;  Pos             1    8[COMMON] unsigned char 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  Slave           1   11[COMMON] unsigned char 
  1358 ;;  LoBytex         1   13[COMMON] unsigned char 
  1359 ;;  HiBytex         1   12[COMMON] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, pclath, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1369 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1370 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1372 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1373 ;;Total ram usage:        6 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    3
  1376 ;; This function calls:
  1377 ;;		_I2C_LCD_Busy
  1378 ;;		_i2c_Address
  1379 ;;		_i2c_Start
  1380 ;;		_i2c_Stop
  1381 ;;		_i2c_Write
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function _I2C_LCD_Pos
  1389  05D4                     _I2C_LCD_Pos:	
  1390                           
  1391                           ;incstack = 0
  1392                           ; Regs used in _I2C_LCD_Pos: [wreg+status,2+status,0+pclath+cstack]
  1393                           ;I2C_LCD_Pos@Slave stored from wreg
  1394  05D4  00FB               	movwf	I2C_LCD_Pos@Slave
  1395                           
  1396                           ;i2c.h: 62: unsigned char HiBytex, LoBytex;
  1397                           ;i2c.h: 63: HiBytex = Pos & 0x70;
  1398  05D5  0878               	movf	I2C_LCD_Pos@Pos,w
  1399  05D6  3970               	andlw	112
  1400  05D7  00F9               	movwf	??_I2C_LCD_Pos
  1401  05D8  0879               	movf	??_I2C_LCD_Pos,w
  1402  05D9  00FC               	movwf	I2C_LCD_Pos@HiBytex
  1403                           
  1404                           ;i2c.h: 64: LoBytex = Pos << 4;
  1405  05DA  0878               	movf	I2C_LCD_Pos@Pos,w
  1406  05DB  00F9               	movwf	??_I2C_LCD_Pos
  1407  05DC  3003               	movlw	3
  1408  05DD                     u435:	
  1409  05DD  35F9               	lslf	??_I2C_LCD_Pos,f
  1410  05DE  3EFF               	addlw	-1
  1411  05DF  1D03               	skipz
  1412  05E0  2DDD               	goto	u435
  1413  05E1  3579               	lslf	??_I2C_LCD_Pos,w
  1414  05E2  00FA               	movwf	??_I2C_LCD_Pos+1
  1415  05E3  087A               	movf	??_I2C_LCD_Pos+1,w
  1416  05E4  00FD               	movwf	I2C_LCD_Pos@LoBytex
  1417                           
  1418                           ;i2c.h: 65: i2c_Start();
  1419  05E5  3185  252F  3185   	fcall	_i2c_Start
  1420                           
  1421                           ;i2c.h: 66: i2c_Address(Slave, 0);
  1422  05E8  01F0               	clrf	i2c_Address@mode
  1423  05E9  087B               	movf	I2C_LCD_Pos@Slave,w
  1424  05EA  3185  255A  3185   	fcall	_i2c_Address
  1425                           
  1426                           ;i2c.h: 67: i2c_Write(HiBytex | 0x8C);
  1427  05ED  087C               	movf	I2C_LCD_Pos@HiBytex,w
  1428  05EE  388C               	iorlw	140
  1429  05EF  3185  253F  3185   	fcall	_i2c_Write
  1430                           
  1431                           ;i2c.h: 68: i2c_Write(HiBytex | 0x88);
  1432  05F2  087C               	movf	I2C_LCD_Pos@HiBytex,w
  1433  05F3  3888               	iorlw	136
  1434  05F4  3185  253F  3185   	fcall	_i2c_Write
  1435                           
  1436                           ;i2c.h: 69: i2c_Write(LoBytex | 0x0C);
  1437  05F7  087D               	movf	I2C_LCD_Pos@LoBytex,w
  1438  05F8  380C               	iorlw	12
  1439  05F9  3185  253F  3185   	fcall	_i2c_Write
  1440                           
  1441                           ;i2c.h: 70: i2c_Write(LoBytex | 0x08);
  1442  05FC  087D               	movf	I2C_LCD_Pos@LoBytex,w
  1443  05FD  3808               	iorlw	8
  1444  05FE  3185  253F  3185   	fcall	_i2c_Write
  1445                           
  1446                           ;i2c.h: 71: Pos =I2C_LCD_Busy(Slave);
  1447  0601  087B               	movf	I2C_LCD_Pos@Slave,w
  1448  0602  3186  268A  3185   	fcall	_I2C_LCD_Busy
  1449  0605  00F9               	movwf	??_I2C_LCD_Pos
  1450  0606  0879               	movf	??_I2C_LCD_Pos,w
  1451  0607  00F8               	movwf	I2C_LCD_Pos@Pos
  1452                           
  1453                           ;i2c.h: 72: i2c_Stop();
  1454  0608  3185  2534         	fcall	_i2c_Stop
  1455  060A  0008               	return
  1456  060B                     __end_of_I2C_LCD_Pos:	
  1457                           
  1458                           	psect	text8
  1459  0647                     __ptext8:	
  1460 ;; *************** function _I2C_LCD_Init *****************
  1461 ;; Defined at:
  1462 ;;		line 40 in file "i2c.h"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  Slave           1    wreg     unsigned char 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  Slave           1   10[COMMON] unsigned char 
  1467 ;;  Tvar1           1    9[COMMON] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1480 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1481 ;;Total ram usage:        3 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    3
  1484 ;; This function calls:
  1485 ;;		_I2C_LCD_Busy
  1486 ;;		_i2c_Address
  1487 ;;		_i2c_Start
  1488 ;;		_i2c_Stop
  1489 ;;		_i2c_Write
  1490 ;; This function is called by:
  1491 ;;		_main
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           
  1496                           ;psect for function _I2C_LCD_Init
  1497  0647                     _I2C_LCD_Init:	
  1498                           
  1499                           ;incstack = 0
  1500                           ; Regs used in _I2C_LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1501                           ;I2C_LCD_Init@Slave stored from wreg
  1502  0647  00FA               	movwf	I2C_LCD_Init@Slave
  1503                           
  1504                           ;i2c.h: 41: unsigned char Tvar1;
  1505                           ;i2c.h: 42: i2c_Start();
  1506  0648  3185  252F  3186   	fcall	_i2c_Start
  1507                           
  1508                           ;i2c.h: 43: i2c_Address(Slave, 0);
  1509  064B  01F0               	clrf	i2c_Address@mode
  1510  064C  087A               	movf	I2C_LCD_Init@Slave,w
  1511  064D  3185  255A  3186   	fcall	_i2c_Address
  1512                           
  1513                           ;i2c.h: 44: i2c_Write(0x3C);
  1514  0650  303C               	movlw	60
  1515  0651  3185  253F  3186   	fcall	_i2c_Write
  1516                           
  1517                           ;i2c.h: 45: i2c_Write(0x38);
  1518  0654  3038               	movlw	56
  1519  0655  3185  253F  3186   	fcall	_i2c_Write
  1520                           
  1521                           ;i2c.h: 46: i2c_Write(0x3C);
  1522  0658  303C               	movlw	60
  1523  0659  3185  253F  3186   	fcall	_i2c_Write
  1524                           
  1525                           ;i2c.h: 47: i2c_Write(0x38);
  1526  065C  3038               	movlw	56
  1527  065D  3185  253F  3186   	fcall	_i2c_Write
  1528                           
  1529                           ;i2c.h: 48: i2c_Write(0x3C);
  1530  0660  303C               	movlw	60
  1531  0661  3185  253F  3186   	fcall	_i2c_Write
  1532                           
  1533                           ;i2c.h: 49: i2c_Write(0x38);
  1534  0664  3038               	movlw	56
  1535  0665  3185  253F  3186   	fcall	_i2c_Write
  1536                           
  1537                           ;i2c.h: 50: i2c_Write(0x2C);
  1538  0668  302C               	movlw	44
  1539  0669  3185  253F  3186   	fcall	_i2c_Write
  1540                           
  1541                           ;i2c.h: 51: i2c_Write(0x28);
  1542  066C  3028               	movlw	40
  1543  066D  3185  253F  3186   	fcall	_i2c_Write
  1544                           
  1545                           ;i2c.h: 52: i2c_Write(0x0C);
  1546  0670  300C               	movlw	12
  1547  0671  3185  253F  3186   	fcall	_i2c_Write
  1548                           
  1549                           ;i2c.h: 53: i2c_Write(0x08);
  1550  0674  3008               	movlw	8
  1551  0675  3185  253F  3186   	fcall	_i2c_Write
  1552                           
  1553                           ;i2c.h: 54: i2c_Write(0xFC);
  1554  0678  30FC               	movlw	252
  1555  0679  3185  253F  3186   	fcall	_i2c_Write
  1556                           
  1557                           ;i2c.h: 55: i2c_Write(0xF8);
  1558  067C  30F8               	movlw	248
  1559  067D  3185  253F  3186   	fcall	_i2c_Write
  1560                           
  1561                           ;i2c.h: 56: Tvar1=I2C_LCD_Busy(Slave);
  1562  0680  087A               	movf	I2C_LCD_Init@Slave,w
  1563  0681  3186  268A  3186   	fcall	_I2C_LCD_Busy
  1564  0684  00F8               	movwf	??_I2C_LCD_Init
  1565  0685  0878               	movf	??_I2C_LCD_Init,w
  1566  0686  00F9               	movwf	I2C_LCD_Init@Tvar1
  1567                           
  1568                           ;i2c.h: 57: i2c_Stop();
  1569  0687  3185  2534         	fcall	_i2c_Stop
  1570  0689  0008               	return
  1571  068A                     __end_of_I2C_LCD_Init:	
  1572                           
  1573                           	psect	text9
  1574  068A                     __ptext9:	
  1575 ;; *************** function _I2C_LCD_Busy *****************
  1576 ;; Defined at:
  1577 ;;		line 11 in file "i2c.h"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  Slave           1    wreg     unsigned char 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  Slave           1    7[COMMON] unsigned char 
  1582 ;;  read_byte       1    6[COMMON] unsigned char 
  1583 ;;  Temp1           1    5[COMMON] unsigned char 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      unsigned char 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0, pclath, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1594 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1595 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1597 ;;Total ram usage:        4 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    2
  1600 ;; This function calls:
  1601 ;;		_i2c_Address
  1602 ;;		_i2c_Read
  1603 ;;		_i2c_Restart
  1604 ;;		_i2c_Start
  1605 ;;		_i2c_Stop
  1606 ;;		_i2c_Write
  1607 ;; This function is called by:
  1608 ;;		_I2C_LCD_Init
  1609 ;;		_I2C_LCD_Pos
  1610 ;;		_I2C_LCD_SWrite
  1611 ;;		_I2C_LCD_Command
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function _I2C_LCD_Busy
  1617  068A                     _I2C_LCD_Busy:	
  1618                           
  1619                           ;incstack = 0
  1620                           ; Regs used in _I2C_LCD_Busy: [wreg+status,2+status,0+pclath+cstack]
  1621                           ;I2C_LCD_Busy@Slave stored from wreg
  1622  068A  00F7               	movwf	I2C_LCD_Busy@Slave
  1623                           
  1624                           ;i2c.h: 13: unsigned char read_byte, Temp1;
  1625                           ;i2c.h: 14: i2c_Start();
  1626  068B  3185  252F  3186   	fcall	_i2c_Start
  1627                           
  1628                           ;i2c.h: 15: i2c_Address(Slave, 0);
  1629  068E  01F0               	clrf	i2c_Address@mode
  1630  068F  0877               	movf	I2C_LCD_Busy@Slave,w
  1631  0690  3185  255A  3186   	fcall	_i2c_Address
  1632                           
  1633                           ;i2c.h: 16: i2c_Write(0xFA);
  1634  0693  30FA               	movlw	250
  1635  0694  3185  253F  3186   	fcall	_i2c_Write
  1636                           
  1637                           ;i2c.h: 17: i2c_Write(0xFE);
  1638  0697  30FE               	movlw	254
  1639  0698  3185  253F  3186   	fcall	_i2c_Write
  1640                           
  1641                           ;i2c.h: 18: i2c_Restart();
  1642  069B  3185  252A  3186   	fcall	_i2c_Restart
  1643                           
  1644                           ;i2c.h: 19: i2c_Address(Slave, 1);
  1645  069E  01F0               	clrf	i2c_Address@mode
  1646  069F  0AF0               	incf	i2c_Address@mode,f
  1647  06A0  0877               	movf	I2C_LCD_Busy@Slave,w
  1648  06A1  3185  255A  3186   	fcall	_i2c_Address
  1649  06A4                     l889:	
  1650                           ;i2c.h: 20: while((i2c_Read(1))& 0x80);
  1651                           
  1652  06A4  3001               	movlw	1
  1653  06A5  3185  2590  3186   	fcall	_i2c_Read
  1654  06A8  3980               	andlw	128
  1655  06A9  1D03               	btfss	3,2
  1656  06AA  2EA4               	goto	l889
  1657                           
  1658                           ;i2c.h: 21: Temp1 = i2c_Read(0);
  1659  06AB  3000               	movlw	0
  1660  06AC  3185  2590  3186   	fcall	_i2c_Read
  1661  06AF  00F4               	movwf	??_I2C_LCD_Busy
  1662  06B0  0874               	movf	??_I2C_LCD_Busy,w
  1663  06B1  00F5               	movwf	I2C_LCD_Busy@Temp1
  1664                           
  1665                           ;i2c.h: 22: Temp1 &= 0x70;
  1666  06B2  3070               	movlw	112
  1667  06B3  00F4               	movwf	??_I2C_LCD_Busy
  1668  06B4  0874               	movf	??_I2C_LCD_Busy,w
  1669  06B5  05F5               	andwf	I2C_LCD_Busy@Temp1,f
  1670                           
  1671                           ;i2c.h: 23: i2c_Restart();
  1672  06B6  3185  252A  3186   	fcall	_i2c_Restart
  1673                           
  1674                           ;i2c.h: 24: i2c_Address(Slave, 0);
  1675  06B9  01F0               	clrf	i2c_Address@mode
  1676  06BA  0877               	movf	I2C_LCD_Busy@Slave,w
  1677  06BB  3185  255A  3186   	fcall	_i2c_Address
  1678                           
  1679                           ;i2c.h: 25: i2c_Write(0xFA);
  1680  06BE  30FA               	movlw	250
  1681  06BF  3185  253F  3186   	fcall	_i2c_Write
  1682                           
  1683                           ;i2c.h: 26: i2c_Write(0xFE);
  1684  06C2  30FE               	movlw	254
  1685  06C3  3185  253F  3186   	fcall	_i2c_Write
  1686                           
  1687                           ;i2c.h: 27: i2c_Restart();
  1688  06C6  3185  252A  3186   	fcall	_i2c_Restart
  1689                           
  1690                           ;i2c.h: 28: i2c_Address(Slave, 1);
  1691  06C9  01F0               	clrf	i2c_Address@mode
  1692  06CA  0AF0               	incf	i2c_Address@mode,f
  1693  06CB  0877               	movf	I2C_LCD_Busy@Slave,w
  1694  06CC  3185  255A  3186   	fcall	_i2c_Address
  1695                           
  1696                           ;i2c.h: 29: read_byte = i2c_Read(0);
  1697  06CF  3000               	movlw	0
  1698  06D0  3185  2590  3186   	fcall	_i2c_Read
  1699  06D3  00F4               	movwf	??_I2C_LCD_Busy
  1700  06D4  0874               	movf	??_I2C_LCD_Busy,w
  1701  06D5  00F6               	movwf	I2C_LCD_Busy@read_byte
  1702                           
  1703                           ;i2c.h: 30: read_byte >>= 4;
  1704  06D6  0EF6               	swapf	I2C_LCD_Busy@read_byte,f
  1705  06D7  300F               	movlw	15
  1706  06D8  05F6               	andwf	I2C_LCD_Busy@read_byte,f
  1707                           
  1708                           ;i2c.h: 31: read_byte += Temp1;
  1709  06D9  0875               	movf	I2C_LCD_Busy@Temp1,w
  1710  06DA  00F4               	movwf	??_I2C_LCD_Busy
  1711  06DB  0874               	movf	??_I2C_LCD_Busy,w
  1712  06DC  07F6               	addwf	I2C_LCD_Busy@read_byte,f
  1713                           
  1714                           ;i2c.h: 32: i2c_Stop();
  1715  06DD  3185  2534         	fcall	_i2c_Stop
  1716                           
  1717                           ;i2c.h: 33: return read_byte;
  1718  06DF  0876               	movf	I2C_LCD_Busy@read_byte,w
  1719  06E0  0008               	return
  1720  06E1                     __end_of_I2C_LCD_Busy:	
  1721                           
  1722                           	psect	text10
  1723  053F                     __ptext10:	
  1724 ;; *************** function _i2c_Write *****************
  1725 ;; Defined at:
  1726 ;;		line 54 in file "i2c_LCD.h"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  data            1    wreg     unsigned char 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  data            1    0[COMMON] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0, pclath, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1744 ;;Total ram usage:        1 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    1
  1747 ;; This function calls:
  1748 ;;		_i2c_Wait
  1749 ;; This function is called by:
  1750 ;;		_I2C_LCD_Busy
  1751 ;;		_I2C_LCD_Init
  1752 ;;		_I2C_LCD_Pos
  1753 ;;		_I2C_LCD_SWrite
  1754 ;;		_I2C_LCD_Command
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _i2c_Write
  1760  053F                     _i2c_Write:	
  1761                           
  1762                           ;incstack = 0
  1763                           ; Regs used in _i2c_Write: [wreg+status,2+status,0+pclath+cstack]
  1764                           ;i2c_Write@data stored from wreg
  1765  053F  00F0               	movwf	i2c_Write@data
  1766                           
  1767                           ;i2c_LCD.h: 56: i2c_Wait();
  1768  0540  3185  2546         	fcall	_i2c_Wait
  1769                           
  1770                           ;i2c_LCD.h: 57: SSP1BUF = data;
  1771  0542  0870               	movf	i2c_Write@data,w
  1772  0543  0024               	movlb	4	; select bank4
  1773  0544  0091               	movwf	17	;volatile
  1774  0545  0008               	return
  1775  0546                     __end_of_i2c_Write:	
  1776                           
  1777                           	psect	text11
  1778  0534                     __ptext11:	
  1779 ;; *************** function _i2c_Stop *****************
  1780 ;; Defined at:
  1781 ;;		line 47 in file "i2c_LCD.h"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0, pclath, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1799 ;;Total ram usage:        0 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    1
  1802 ;; This function calls:
  1803 ;;		_i2c_Wait
  1804 ;; This function is called by:
  1805 ;;		_I2C_LCD_Busy
  1806 ;;		_I2C_LCD_Init
  1807 ;;		_I2C_LCD_Pos
  1808 ;;		_I2C_LCD_SWrite
  1809 ;;		_I2C_LCD_Command
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _i2c_Stop
  1815  0534                     _i2c_Stop:	
  1816                           
  1817                           ;i2c_LCD.h: 49: i2c_Wait();
  1818                           
  1819                           ;incstack = 0
  1820                           ; Regs used in _i2c_Stop: [wreg+status,2+status,0+pclath+cstack]
  1821  0534  3185  2546         	fcall	_i2c_Wait
  1822                           
  1823                           ;i2c_LCD.h: 50: SSP1CON2bits.PEN=1;
  1824  0536  0024               	movlb	4	; select bank4
  1825  0537  1516               	bsf	22,2	;volatile
  1826  0538  0008               	return
  1827  0539                     __end_of_i2c_Stop:	
  1828                           
  1829                           	psect	text12
  1830  052F                     __ptext12:	
  1831 ;; *************** function _i2c_Start *****************
  1832 ;; Defined at:
  1833 ;;		line 34 in file "i2c_LCD.h"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1851 ;;Total ram usage:        0 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    1
  1854 ;; This function calls:
  1855 ;;		_i2c_Wait
  1856 ;; This function is called by:
  1857 ;;		_I2C_LCD_Busy
  1858 ;;		_I2C_LCD_Init
  1859 ;;		_I2C_LCD_Pos
  1860 ;;		_I2C_LCD_SWrite
  1861 ;;		_I2C_LCD_Command
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           
  1866                           ;psect for function _i2c_Start
  1867  052F                     _i2c_Start:	
  1868                           
  1869                           ;i2c_LCD.h: 36: i2c_Wait();
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _i2c_Start: [wreg+status,2+status,0+pclath+cstack]
  1873  052F  3185  2546         	fcall	_i2c_Wait
  1874                           
  1875                           ;i2c_LCD.h: 37: SSP1CON2bits.SEN=1;
  1876  0531  0024               	movlb	4	; select bank4
  1877  0532  1416               	bsf	22,0	;volatile
  1878  0533  0008               	return
  1879  0534                     __end_of_i2c_Start:	
  1880                           
  1881                           	psect	text13
  1882  052A                     __ptext13:	
  1883 ;; *************** function _i2c_Restart *****************
  1884 ;; Defined at:
  1885 ;;		line 41 in file "i2c_LCD.h"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    1
  1906 ;; This function calls:
  1907 ;;		_i2c_Wait
  1908 ;; This function is called by:
  1909 ;;		_I2C_LCD_Busy
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _i2c_Restart
  1915  052A                     _i2c_Restart:	
  1916                           
  1917                           ;i2c_LCD.h: 42: i2c_Wait();
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _i2c_Restart: [wreg+status,2+status,0+pclath+cstack]
  1921  052A  3185  2546         	fcall	_i2c_Wait
  1922                           
  1923                           ;i2c_LCD.h: 43: SSP1CON2bits.RSEN=1;
  1924  052C  0024               	movlb	4	; select bank4
  1925  052D  1496               	bsf	22,1	;volatile
  1926  052E  0008               	return
  1927  052F                     __end_of_i2c_Restart:	
  1928                           
  1929                           	psect	text14
  1930  0590                     __ptext14:	
  1931 ;; *************** function _i2c_Read *****************
  1932 ;; Defined at:
  1933 ;;		line 73 in file "i2c_LCD.h"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  ack             1    wreg     unsigned char 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  ack             1    1[COMMON] unsigned char 
  1938 ;;  i2cReadData     1    2[COMMON] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      unsigned char 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0, pclath, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1951 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1952 ;;Total ram usage:        3 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    1
  1955 ;; This function calls:
  1956 ;;		_i2c_Wait
  1957 ;; This function is called by:
  1958 ;;		_I2C_LCD_Busy
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _i2c_Read
  1964  0590                     _i2c_Read:	
  1965                           
  1966                           ;incstack = 0
  1967                           ; Regs used in _i2c_Read: [wreg+status,2+status,0+pclath+cstack]
  1968                           ;i2c_Read@ack stored from wreg
  1969  0590  00F1               	movwf	i2c_Read@ack
  1970                           
  1971                           ;i2c_LCD.h: 78: unsigned char i2cReadData;
  1972                           ;i2c_LCD.h: 80: i2c_Wait();
  1973  0591  3185  2546  3185   	fcall	_i2c_Wait
  1974                           
  1975                           ;i2c_LCD.h: 81: SSP1CON2bits.RCEN=1;
  1976  0594  0024               	movlb	4	; select bank4
  1977  0595  1596               	bsf	22,3	;volatile
  1978                           
  1979                           ;i2c_LCD.h: 82: i2c_Wait();
  1980  0596  3185  2546  3185   	fcall	_i2c_Wait
  1981                           
  1982                           ;i2c_LCD.h: 83: i2cReadData = SSP1BUF;
  1983  0599  0024               	movlb	4	; select bank4
  1984  059A  0811               	movf	17,w	;volatile
  1985  059B  00F0               	movwf	??_i2c_Read
  1986  059C  0870               	movf	??_i2c_Read,w
  1987  059D  00F2               	movwf	i2c_Read@i2cReadData
  1988                           
  1989                           ;i2c_LCD.h: 84: i2c_Wait();
  1990  059E  3185  2546  3185   	fcall	_i2c_Wait
  1991                           
  1992                           ;i2c_LCD.h: 85: if ( ack ) SSP1CON2bits.ACKDT=0;
  1993  05A1  0871               	movf	i2c_Read@ack,w
  1994  05A2  1903               	btfsc	3,2
  1995  05A3  2DA7               	goto	l65
  1996  05A4  0024               	movlb	4	; select bank4
  1997  05A5  1296               	bcf	22,5	;volatile
  1998  05A6  2DA9               	goto	l66
  1999  05A7                     l65:	
  2000                           
  2001                           ;i2c_LCD.h: 86: else SSP1CON2bits.ACKDT=1;
  2002  05A7  0024               	movlb	4	; select bank4
  2003  05A8  1696               	bsf	22,5	;volatile
  2004  05A9                     l66:	
  2005                           
  2006                           ;i2c_LCD.h: 87: SSP1CON2bits.ACKEN=1;
  2007  05A9  1616               	bsf	22,4	;volatile
  2008                           
  2009                           ;i2c_LCD.h: 89: return( i2cReadData );
  2010  05AA  0872               	movf	i2c_Read@i2cReadData,w
  2011  05AB  0008               	return
  2012  05AC                     __end_of_i2c_Read:	
  2013                           
  2014                           	psect	text15
  2015  055A                     __ptext15:	
  2016 ;; *************** function _i2c_Address *****************
  2017 ;; Defined at:
  2018 ;;		line 62 in file "i2c_LCD.h"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  address         1    wreg     unsigned char 
  2021 ;;  mode            1    0[COMMON] unsigned char 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  address         1    2[COMMON] unsigned char 
  2024 ;;  l_address       1    3[COMMON] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0, pclath, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2034 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2035 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2038 ;;Total ram usage:        4 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    1
  2041 ;; This function calls:
  2042 ;;		_i2c_Wait
  2043 ;; This function is called by:
  2044 ;;		_I2C_LCD_Busy
  2045 ;;		_I2C_LCD_Init
  2046 ;;		_I2C_LCD_Pos
  2047 ;;		_I2C_LCD_SWrite
  2048 ;;		_I2C_LCD_Command
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           
  2053                           ;psect for function _i2c_Address
  2054  055A                     _i2c_Address:	
  2055                           
  2056                           ;incstack = 0
  2057                           ; Regs used in _i2c_Address: [wreg+status,2+status,0+pclath+cstack]
  2058                           ;i2c_Address@address stored from wreg
  2059  055A  00F2               	movwf	i2c_Address@address
  2060                           
  2061                           ;i2c_LCD.h: 64: unsigned char l_address;
  2062                           ;i2c_LCD.h: 66: l_address=address<<1;
  2063  055B  3572               	lslf	i2c_Address@address,w
  2064  055C  00F1               	movwf	??_i2c_Address
  2065  055D  0871               	movf	??_i2c_Address,w
  2066  055E  00F3               	movwf	i2c_Address@l_address
  2067                           
  2068                           ;i2c_LCD.h: 67: l_address+=mode;
  2069  055F  0870               	movf	i2c_Address@mode,w
  2070  0560  00F1               	movwf	??_i2c_Address
  2071  0561  0871               	movf	??_i2c_Address,w
  2072  0562  07F3               	addwf	i2c_Address@l_address,f
  2073                           
  2074                           ;i2c_LCD.h: 68: i2c_Wait();
  2075  0563  3185  2546         	fcall	_i2c_Wait
  2076                           
  2077                           ;i2c_LCD.h: 69: SSP1BUF = l_address;
  2078  0565  0873               	movf	i2c_Address@l_address,w
  2079  0566  0024               	movlb	4	; select bank4
  2080  0567  0091               	movwf	17	;volatile
  2081  0568  0008               	return
  2082  0569                     __end_of_i2c_Address:	
  2083                           
  2084                           	psect	text16
  2085  0546                     __ptext16:	
  2086 ;; *************** function _i2c_Wait *****************
  2087 ;; Defined at:
  2088 ;;		line 29 in file "i2c_LCD.h"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_i2c_Start
  2112 ;;		_i2c_Restart
  2113 ;;		_i2c_Stop
  2114 ;;		_i2c_Write
  2115 ;;		_i2c_Address
  2116 ;;		_i2c_Read
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           
  2121                           ;psect for function _i2c_Wait
  2122  0546                     _i2c_Wait:	
  2123  0546                     l845:	
  2124                           ;i2c_LCD.h: 30: while ( ( SSP1CON2 & 0x1F ) || ( SSP1STAT & 0x04 ) );
  2125                           
  2126                           ;incstack = 0
  2127                           ; Regs used in _i2c_Wait: [wreg+status,2]
  2128                           
  2129  0546  0024               	movlb	4	; select bank4
  2130  0547  0816               	movf	22,w	;volatile
  2131  0548  391F               	andlw	31
  2132  0549  1D03               	btfss	3,2
  2133  054A  2D46               	goto	l845
  2134  054B  1D14               	btfss	20,2	;volatile
  2135  054C  0008               	return
  2136  054D  2D46               	goto	l845
  2137  054E                     __end_of_i2c_Wait:	
  2138                           
  2139                           	psect	text17
  2140  057C                     __ptext17:	
  2141 ;; *************** function _ADC_Read *****************
  2142 ;; Defined at:
  2143 ;;		line 55 in file "main.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  2    0[COMMON] unsigned int 
  2150 ;; Registers used:
  2151 ;;		wreg
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2159 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2160 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2161 ;;Total ram usage:        3 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function _ADC_Read
  2172  057C                     _ADC_Read:	
  2173                           
  2174                           ;main.c: 57: ADCON0 = 0b00101101;
  2175                           
  2176                           ;incstack = 0
  2177                           ; Regs used in _ADC_Read: [wreg]
  2178  057C  302D               	movlw	45
  2179  057D  0021               	movlb	1	; select bank1
  2180  057E  009D               	movwf	29	;volatile
  2181                           
  2182                           ;main.c: 59: _delay((unsigned long)((2)*(16000000/4000.0)));
  2183  057F  300B               	movlw	11
  2184  0580  00F2               	movwf	??_ADC_Read
  2185  0581  3062               	movlw	98
  2186  0582                     u537:	
  2187  0582  0B89               	decfsz	9,f
  2188  0583  2D82               	goto	u537
  2189  0584  0BF2               	decfsz	??_ADC_Read,f
  2190  0585  2D82               	goto	u537
  2191  0586  3200               	nop2
  2192                           
  2193                           ;main.c: 60: GO_nDONE = 1;
  2194  0587  0021               	movlb	1	; select bank1
  2195  0588  149D               	bsf	29,1	;volatile
  2196  0589                     l94:	
  2197                           ;main.c: 61: while(GO_nDONE);
  2198                           
  2199  0589  189D               	btfsc	29,1	;volatile
  2200  058A  2D89               	goto	l94
  2201                           
  2202                           ;main.c: 62: return ((ADRESH<<8)+ADRESL);
  2203  058B  081C               	movf	28,w	;volatile
  2204  058C  00F1               	movwf	?_ADC_Read+1
  2205  058D  081B               	movf	27,w	;volatile
  2206  058E  00F0               	movwf	?_ADC_Read
  2207  058F  0008               	return
  2208  0590                     __end_of_ADC_Read:	
  2209                           
  2210                           	psect	text18
  2211  0539                     __ptext18:	
  2212 ;; *************** function _ADC_Initialize *****************
  2213 ;; Defined at:
  2214 ;;		line 49 in file "main.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function _ADC_Initialize
  2243  0539                     _ADC_Initialize:	
  2244                           
  2245                           ;main.c: 51: ADCON0 = 0b00101101;
  2246                           
  2247                           ;incstack = 0
  2248                           ; Regs used in _ADC_Initialize: [wreg]
  2249  0539  302D               	movlw	45
  2250  053A  0021               	movlb	1	; select bank1
  2251  053B  009D               	movwf	29	;volatile
  2252                           
  2253                           ;main.c: 52: ADCON1 = 0b11000000;
  2254  053C  30C0               	movlw	192
  2255  053D  009E               	movwf	30	;volatile
  2256  053E  0008               	return
  2257  053F                     __end_of_ADC_Initialize:	
  2258  007E                     btemp	set	126	;btemp
  2259  007E                     wtemp0	set	126


Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      34
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@Sout(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMMON[2]), 

    main@Sptr	PTR unsigned char  size(1) Largest target is 20
		 -> main@Sout(BANK0[20]), 

    I2C_LCD_SWrite@Data	PTR unsigned char  size(1) Largest target is 20
		 -> main@Sout(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_I2C_LCD_Pos
    ___lwtoft->___ftpack
    ___ftge->___lwtoft
    _I2C_LCD_SWrite->_I2C_LCD_Busy
    _I2C_LCD_Pos->_I2C_LCD_Busy
    _I2C_LCD_Init->_I2C_LCD_Busy
    _I2C_LCD_Busy->_i2c_Address

Critical Paths under _main in BANK0

    _main->___ftge

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0    6456
                                              9 BANK0     25    25      0
                     _ADC_Initialize
                           _ADC_Read
                       _I2C_LCD_Init
                        _I2C_LCD_Pos
                     _I2C_LCD_SWrite
                             ___ftge
                           ___lwtoft
                           _i2c_Init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    18      2     171
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1665
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1590
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     242
                                              0 BANK0      9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SWrite                                      12    10      2    1584
                                              8 COMMON     5     3      2
                                              0 BANK0      5     5      0
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Pos                                          6     5      1    1442
                                              8 COMMON     6     5      1
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Init                                         3     3      0    1255
                                              8 COMMON     3     3      0
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Busy                                         4     4      0     696
                                              4 COMMON     4     4      0
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          4     3      1     492
                                              0 COMMON     4     3      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2       0
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _I2C_LCD_Init
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _I2C_LCD_Pos
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _I2C_LCD_SWrite
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   ___ftge
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _i2c_Init
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      22       5       42.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 19 00:12:29 2023

            __CFG_CP$OFF 0000            ??_i2c_Address 0071                       l65 05A7  
                     l66 05A9                       l94 0589              __CFG_LVP$ON 0000  
            i2c_Read@ack 0071                      l360 07CB                      l367 07DE  
                    l368 07E6                      l931 07B7                      l923 07A1  
                    l845 0546                      l927 07A8                      l937 07D0  
                    l929 07B2                      l939 07D8                      l889 06A4  
                    l999 06EF                      _RA4 0064                      u415 07ED  
                    u335 07AD             __CFG_CPD$OFF 0000                      u435 05DD  
                    u355 07C6                      u445 070F                      u455 06F8  
                    u375 07D3                      u537 0582             __CFG_BORV$LO 0000  
                    wreg 0009            ??_i2c_Restart 0070             _I2C_LCD_Busy 068A  
           _I2C_LCD_Init 0647                     l1001 0734                     l1021 05CF  
                   l1033 0638                     l1019 05B1                     l1029 0622  
                   l1093 0773                     l1089 0775                     STR_1 0800  
           __CFG_WRT$OFF 0000                     _main 073C             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E         __end_of_ADC_Read 0590  
                   start 0002            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _TMR1H 0017  
                  _TMR1L 0016                    _TRISA 008C      __end_of_i2c_Address 0569  
         __CFG_FCMEN$OFF 0000            ___ftpack@sign 0074           __CFG_BOREN$OFF 0000  
    __end_of_i2c_Restart 052F                    status 0003                    wtemp0 007E  
        __end_of_sprintf 05D4            main@adc_value 0040          __initialization 07FD  
           __end_of_main 0799         __end_of_i2c_Init 055A         __end_of_i2c_Read 05AC  
       __end_of_i2c_Wait 054E         __end_of_i2c_Stop 0539           _I2C_LCD_SWrite 06E1  
                 ??_main 0029           __CFG_PLLEN$OFF 0000                   _ADCON0 009D  
                 _ADCON1 009E                   _ADRESH 009C                   _ADRESL 009B  
       __end_of___ftpack 07FD       __size_of_i2c_Start 0005       __size_of_i2c_Write 0007  
       __end_of___lwtoft 057C                   _TRISB4 046C                   _TRISB6 046E  
         __CFG_PWRTE$OFF 0000   __end_of_I2C_LCD_SWrite 073C                   ___ftge 060B  
         __CFG_STVREN$ON 0000              _i2c_Address 055A            i2c_Write@data 0070  
              ?_ADC_Read 0070              _i2c_Restart 052A                ??_sprintf 0072  
__end_of__initialization 07FD               ___ftge@ff1 0020               ___ftge@ff2 0023  
     I2C_LCD_SWrite@Data 0078           __pcstackCOMMON 0070          ?_I2C_LCD_SWrite 0078  
      __end_of_i2c_Start 0534        __end_of_i2c_Write 0546               ___lwtoft@c 0078  
             ??_ADC_Read 0072       I2C_LCD_Pos@HiBytex 007C       I2C_LCD_Pos@LoBytex 007D  
              ?_i2c_Init 0070                ?_i2c_Read 0070                ?_i2c_Wait 0070  
              ?_i2c_Stop 0070            ??_I2C_LCD_Pos 0079         I2C_LCD_Pos@Slave 007B  
             __pmaintext 073C                  ?___ftge 0020                ?___ftpack 0070  
__size_of_ADC_Initialize 0006                ?___lwtoft 0078       i2c_Address@address 0072  
                _SSP1ADD 0212                  _SSP1BUF 0211               ??_i2c_Init 0070  
             ??_i2c_Read 0070               ??_i2c_Wait 0070               ??_i2c_Stop 0070  
    __end_of_I2C_LCD_Pos 060B          __size_of___ftge 003C               ??___ftpack 0075  
                __ptext1 05AC                  __ptext2 054E                  __ptext3 0569  
                __ptext4 0799                  __ptext5 060B                  __ptext6 06E1  
                __ptext7 05D4                  __ptext8 0647                  __ptext9 068A  
             ??___lwtoft 007B                  _sprintf 05AC     end_of_initialization 07FD  
   i2c_Address@l_address 0073             ?_i2c_Address 0070         __CFG_FOSC$INTOSC 0000  
           ?_i2c_Restart 0070        __size_of_ADC_Read 0014              _I2C_LCD_Pos 05D4  
       ??_I2C_LCD_SWrite 007A      I2C_LCD_SWrite@Slave 0020           __end_of___ftge 0647  
         _ADC_Initialize 0539                _i2c_Start 052F                _i2c_Write 053F  
    start_initialization 07FD            ?_I2C_LCD_Busy 0070            ?_I2C_LCD_Init 0070  
      __size_of_i2c_Init 000C        __size_of_i2c_Read 001C        __size_of_i2c_Wait 0008  
      __size_of_i2c_Stop 0005                 ??___ftge 0026        I2C_LCD_Busy@Temp1 0075  
 __end_of_ADC_Initialize 053F        I2C_LCD_Busy@Slave 0077        I2C_LCD_Init@Slave 007A  
      I2C_LCD_Init@Tvar1 0079        __size_of___ftpack 0064               ?_i2c_Start 0070  
             ?_i2c_Write 0070           ??_I2C_LCD_Busy 0074                ___latbits 0002  
         ??_I2C_LCD_Init 0078        __size_of___lwtoft 0013            __pcstackBANK0 0020  
      I2C_LCD_SWrite@Max 0079          I2C_LCD_SWrite@H 0021          I2C_LCD_SWrite@L 0022  
        I2C_LCD_SWrite@j 0023          ?_ADC_Initialize 0070     __size_of_i2c_Address 000F  
               _ADC_Read 057C                 ?_sprintf 0070     __size_of_i2c_Restart 0005  
               _GO_nDONE 04E9                 _SSP1CON1 0215                 _SSP1CON2 0216  
               _SSP1STAT 0214              ??_i2c_Start 0070              ??_i2c_Write 0070  
               _i2c_Init 054E                 _i2c_Read 0590                 _i2c_Wait 0546  
               _i2c_Stop 0534             ?_I2C_LCD_Pos 0078     __end_of_I2C_LCD_Busy 06E1  
   __end_of_I2C_LCD_Init 068A                 ___ftpack 0799                 ___lwtoft 0569  
         I2C_LCD_Pos@Pos 0078                 __ptext10 053F                 __ptext11 0534  
               __ptext12 052F                 __ptext13 052A                 __ptext14 0590  
               __ptext15 055A                 __ptext16 0546                 __ptext17 057C  
               __ptext18 0539             _SSP1CON2bits 0216         __size_of_sprintf 0028  
          __size_of_main 005D    I2C_LCD_Busy@read_byte 0076                 main@Sptr 003F  
               main@Sout 002B                sprintf@ap 0075                sprintf@sp 0077  
        i2c_Address@mode 0070        __CFG_CLKOUTEN$OFF 0000         ??_ADC_Initialize 0070  
__size_of_I2C_LCD_SWrite 005B            __pstringtext1 0800            __pstringtext2 0000  
               sprintf@c 0076                 sprintf@f 0070      i2c_Read@i2cReadData 0072  
  __size_of_I2C_LCD_Busy 0057    __size_of_I2C_LCD_Init 0043     __size_of_I2C_LCD_Pos 0037  
