

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 20 18:11:35 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1829 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011B                     	;# 
   132  011D                     	;# 
   133  011E                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  018E                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0194                     	;# 
   144  0195                     	;# 
   145  0196                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019D                     	;# 
   152  019E                     	;# 
   153  019F                     	;# 
   154  020C                     	;# 
   155  020D                     	;# 
   156  020E                     	;# 
   157  0211                     	;# 
   158  0211                     	;# 
   159  0212                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0213                     	;# 
   163  0214                     	;# 
   164  0214                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0216                     	;# 
   169  0216                     	;# 
   170  0217                     	;# 
   171  0217                     	;# 
   172  0219                     	;# 
   173  021A                     	;# 
   174  021B                     	;# 
   175  021C                     	;# 
   176  021D                     	;# 
   177  021E                     	;# 
   178  021F                     	;# 
   179  0291                     	;# 
   180  0291                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0294                     	;# 
   184  0295                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0298                     	;# 
   188  0298                     	;# 
   189  0299                     	;# 
   190  029A                     	;# 
   191  029B                     	;# 
   192  029C                     	;# 
   193  029D                     	;# 
   194  029E                     	;# 
   195  0311                     	;# 
   196  0311                     	;# 
   197  0312                     	;# 
   198  0313                     	;# 
   199  0318                     	;# 
   200  0318                     	;# 
   201  0319                     	;# 
   202  031A                     	;# 
   203  038C                     	;# 
   204  038D                     	;# 
   205  038E                     	;# 
   206  0391                     	;# 
   207  0392                     	;# 
   208  0393                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  039A                     	;# 
   213  039C                     	;# 
   214  039D                     	;# 
   215  039E                     	;# 
   216  039F                     	;# 
   217  0415                     	;# 
   218  0416                     	;# 
   219  0417                     	;# 
   220  041C                     	;# 
   221  041D                     	;# 
   222  041E                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE9                     	;# 
   229  0FEA                     	;# 
   230  0FEB                     	;# 
   231  0FED                     	;# 
   232  0FEE                     	;# 
   233  0FEF                     	;# 
   234                           
   235                           	psect	stringtext1
   236  0800                     __pstringtext1:	
   237  0800                     _dpowers:	
   238  0800  3401               	retlw	1
   239  0801  3400               	retlw	0
   240  0802  340A               	retlw	10
   241  0803  3400               	retlw	0
   242  0804  3464               	retlw	100
   243  0805  3400               	retlw	0
   244  0806  34E8               	retlw	232
   245  0807  3403               	retlw	3
   246  0808  3410               	retlw	16
   247  0809  3427               	retlw	39
   248  080A                     __end_of_dpowers:	
   249  0016                     _TMR1L	set	22
   250  0017                     _TMR1H	set	23
   251  0061                     _RA1	set	97
   252  00C0                     _TMR1ON	set	192
   253  0070                     _RC0	set	112
   254  0064                     _RA4	set	100
   255  008E                     _TRISC	set	142
   256  008C                     _TRISA	set	140
   257  009B                     _ADRESL	set	155
   258  009C                     _ADRESH	set	156
   259  009E                     _ADCON1	set	158
   260  009D                     _ADCON0	set	157
   261  04E9                     _GO_nDONE	set	1257
   262  046E                     _TRISB6	set	1134
   263  046C                     _TRISB4	set	1132
   264  0211                     _SSP1BUF	set	529
   265  0216                     _SSP1CON2bits	set	534
   266  0214                     _SSP1STAT	set	532
   267  0212                     _SSP1ADD	set	530
   268  0216                     _SSP1CON2	set	534
   269  0215                     _SSP1CON1	set	533
   270  080A                     STR_3:	
   271  080A  344C               	retlw	76	;'L'
   272  080B  3469               	retlw	105	;'i'
   273  080C  3467               	retlw	103	;'g'
   274  080D  3468               	retlw	104	;'h'
   275  080E  3474               	retlw	116	;'t'
   276  080F  3456               	retlw	86	;'V'
   277  0810  3461               	retlw	97	;'a'
   278  0811  346C               	retlw	108	;'l'
   279  0812  3475               	retlw	117	;'u'
   280  0813  3465               	retlw	101	;'e'
   281  0814  3420               	retlw	32	;' '
   282  0815  343D               	retlw	61	;'='
   283  0816  3420               	retlw	32	;' '
   284  0817  3425               	retlw	37	;'%'
   285  0818  3464               	retlw	100	;'d'
   286  0819  3400               	retlw	0
   287                           
   288                           	psect	stringtext2
   289  081A                     __pstringtext2:	
   290  081A                     STR_4:	
   291  081A  3444               	retlw	68	;'D'
   292  081B  3469               	retlw	105	;'i'
   293  081C  3473               	retlw	115	;'s'
   294  081D  3474               	retlw	116	;'t'
   295  081E  3456               	retlw	86	;'V'
   296  081F  3461               	retlw	97	;'a'
   297  0820  346C               	retlw	108	;'l'
   298  0821  3475               	retlw	117	;'u'
   299  0822  3465               	retlw	101	;'e'
   300  0823  3420               	retlw	32	;' '
   301  0824  343D               	retlw	61	;'='
   302  0825  3420               	retlw	32	;' '
   303  0826  3425               	retlw	37	;'%'
   304  0827  3464               	retlw	100	;'d'
   305  0828  3400               	retlw	0
   306                           
   307                           	psect	stringtext3
   308  0829                     __pstringtext3:	
   309  0829                     STR_1:	
   310  0829  3448               	retlw	72	;'H'
   311  082A  3465               	retlw	101	;'e'
   312  082B  346C               	retlw	108	;'l'
   313  082C  346C               	retlw	108	;'l'
   314  082D  346F               	retlw	111	;'o'
   315  082E  3420               	retlw	32	;' '
   316  082F  3457               	retlw	87	;'W'
   317  0830  346F               	retlw	111	;'o'
   318  0831  3472               	retlw	114	;'r'
   319  0832  346C               	retlw	108	;'l'
   320  0833  3464               	retlw	100	;'d'
   321  0834  3400               	retlw	0
   322                           
   323                           	psect	stringtext4
   324  0000                     __pstringtext4:	
   325  0819                     
   326                           ; #config settings
   327  0000                     
   328                           	psect	cinit
   329  07FD                     start_initialization:	
   330  07FD                     __initialization:	
   331  07FD                     end_of_initialization:	
   332                           ;End of C runtime variable initialization code
   333                           
   334  07FD                     __end_of__initialization:	
   335  07FD  0020               	movlb	0
   336  07FE  3187  2F13         	ljmp	_main	;jump to C main() function
   337                           
   338                           	psect	cstackCOMMON
   339  0070                     __pcstackCOMMON:	
   340  0070                     ?_i2c_Init:	
   341  0070                     ??_i2c_Init:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_i2c_Wait:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_i2c_Wait:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_i2c_Start:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ??_i2c_Start:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_i2c_Restart:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ??_i2c_Restart:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_i2c_Stop:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ??_i2c_Stop:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_i2c_Write:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ??_i2c_Write:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_i2c_Address:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_i2c_Read:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_i2c_Read:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_I2C_LCD_Busy:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_I2C_LCD_Init:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_ADC_Initialize:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ??_ADC_Initialize:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_main:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_ADC_Read:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?___lwdiv:	
   402                           ; 2 bytes @ 0x0
   403                           
   404  0070                     ?___ftpack:	
   405                           ; 2 bytes @ 0x0
   406                           
   407  0070                     i2c_Write@data:	
   408                           ; 3 bytes @ 0x0
   409                           
   410  0070                     i2c_Address@mode:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ___lwdiv@divisor:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ___ftpack@arg:	
   417                           ; 2 bytes @ 0x0
   418                           
   419                           
   420                           ; 3 bytes @ 0x0
   421  0070                     	ds	1
   422  0071                     ??_i2c_Address:	
   423  0071                     i2c_Read@ack:	
   424                           ; 1 bytes @ 0x1
   425                           
   426                           
   427                           ; 1 bytes @ 0x1
   428  0071                     	ds	1
   429  0072                     ??_ADC_Read:	
   430  0072                     i2c_Address@address:	
   431                           ; 1 bytes @ 0x2
   432                           
   433  0072                     i2c_Read@i2cReadData:	
   434                           ; 1 bytes @ 0x2
   435                           
   436  0072                     ___lwdiv@dividend:	
   437                           ; 1 bytes @ 0x2
   438                           
   439                           
   440                           ; 2 bytes @ 0x2
   441  0072                     	ds	1
   442  0073                     i2c_Address@l_address:	
   443  0073                     ___ftpack@exp:	
   444                           ; 1 bytes @ 0x3
   445                           
   446                           
   447                           ; 1 bytes @ 0x3
   448  0073                     	ds	1
   449  0074                     ??_I2C_LCD_Busy:	
   450  0074                     ??___lwdiv:	
   451                           ; 1 bytes @ 0x4
   452                           
   453  0074                     ___ftpack@sign:	
   454                           ; 1 bytes @ 0x4
   455                           
   456                           
   457                           ; 1 bytes @ 0x4
   458  0074                     	ds	1
   459  0075                     ??___ftpack:	
   460  0075                     I2C_LCD_Busy@Temp1:	
   461                           ; 1 bytes @ 0x5
   462                           
   463  0075                     ___lwdiv@quotient:	
   464                           ; 1 bytes @ 0x5
   465                           
   466                           
   467                           ; 2 bytes @ 0x5
   468  0075                     	ds	1
   469  0076                     I2C_LCD_Busy@read_byte:	
   470                           
   471                           ; 1 bytes @ 0x6
   472  0076                     	ds	1
   473  0077                     I2C_LCD_Busy@Slave:	
   474  0077                     ___lwdiv@counter:	
   475                           ; 1 bytes @ 0x7
   476                           
   477                           
   478                           ; 1 bytes @ 0x7
   479  0077                     	ds	1
   480  0078                     ??_I2C_LCD_Init:	
   481  0078                     ?_I2C_LCD_Pos:	
   482                           ; 1 bytes @ 0x8
   483                           
   484  0078                     ?_I2C_LCD_SWrite:	
   485                           ; 1 bytes @ 0x8
   486                           
   487  0078                     ?_I2C_LCD_Command:	
   488                           ; 1 bytes @ 0x8
   489                           
   490  0078                     ?___lwmod:	
   491                           ; 1 bytes @ 0x8
   492                           
   493  0078                     ?___awtoft:	
   494                           ; 2 bytes @ 0x8
   495                           
   496  0078                     I2C_LCD_Pos@Pos:	
   497                           ; 3 bytes @ 0x8
   498                           
   499  0078                     I2C_LCD_SWrite@Data:	
   500                           ; 1 bytes @ 0x8
   501                           
   502  0078                     I2C_LCD_Command@Cmd:	
   503                           ; 1 bytes @ 0x8
   504                           
   505  0078                     ___awtoft@c:	
   506                           ; 1 bytes @ 0x8
   507                           
   508  0078                     ___lwmod@divisor:	
   509                           ; 2 bytes @ 0x8
   510                           
   511                           
   512                           ; 2 bytes @ 0x8
   513  0078                     	ds	1
   514  0079                     ??_I2C_LCD_Pos:	
   515  0079                     ??_I2C_LCD_Command:	
   516                           ; 1 bytes @ 0x9
   517                           
   518  0079                     I2C_LCD_Init@Tvar1:	
   519                           ; 1 bytes @ 0x9
   520                           
   521  0079                     I2C_LCD_SWrite@Max:	
   522                           ; 1 bytes @ 0x9
   523                           
   524                           
   525                           ; 1 bytes @ 0x9
   526  0079                     	ds	1
   527  007A                     ??_I2C_LCD_SWrite:	
   528  007A                     I2C_LCD_Init@Slave:	
   529                           ; 1 bytes @ 0xA
   530                           
   531  007A                     ___lwmod@dividend:	
   532                           ; 1 bytes @ 0xA
   533                           
   534                           
   535                           ; 2 bytes @ 0xA
   536  007A                     	ds	1
   537  007B                     ??___awtoft:	
   538  007B                     I2C_LCD_Pos@Slave:	
   539                           ; 1 bytes @ 0xB
   540                           
   541  007B                     I2C_LCD_Command@Slave:	
   542                           ; 1 bytes @ 0xB
   543                           
   544                           
   545                           ; 1 bytes @ 0xB
   546  007B                     	ds	1
   547  007C                     ??___lwmod:	
   548  007C                     I2C_LCD_Pos@HiBytex:	
   549                           ; 1 bytes @ 0xC
   550                           
   551  007C                     I2C_LCD_Command@HiBytex:	
   552                           ; 1 bytes @ 0xC
   553                           
   554                           
   555                           ; 1 bytes @ 0xC
   556  007C                     	ds	1
   557  007D                     I2C_LCD_Pos@LoBytex:	
   558  007D                     I2C_LCD_Command@LoBytex:	
   559                           ; 1 bytes @ 0xD
   560                           
   561  007D                     ___awtoft@sign:	
   562                           ; 1 bytes @ 0xD
   563                           
   564  007D                     ___lwmod@counter:	
   565                           ; 1 bytes @ 0xD
   566                           
   567                           
   568                           ; 1 bytes @ 0xD
   569  007D                     	ds	1
   570                           
   571                           	psect	cstackBANK0
   572  0020                     __pcstackBANK0:	
   573  0020                     ?_sprintf:	
   574  0020                     ?___ftdiv:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0020                     I2C_LCD_SWrite@Slave:	
   578                           ; 3 bytes @ 0x0
   579                           
   580  0020                     sprintf@f:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0020                     ___ftdiv@f2:	
   584                           ; 2 bytes @ 0x0
   585                           
   586                           
   587                           ; 3 bytes @ 0x0
   588  0020                     	ds	1
   589  0021                     I2C_LCD_SWrite@H:	
   590                           
   591                           ; 1 bytes @ 0x1
   592  0021                     	ds	1
   593  0022                     I2C_LCD_SWrite@L:	
   594                           
   595                           ; 1 bytes @ 0x2
   596  0022                     	ds	1
   597  0023                     I2C_LCD_SWrite@j:	
   598  0023                     ___ftdiv@f1:	
   599                           ; 2 bytes @ 0x3
   600                           
   601                           
   602                           ; 3 bytes @ 0x3
   603  0023                     	ds	1
   604  0024                     ??_sprintf:	
   605                           
   606                           ; 1 bytes @ 0x4
   607  0024                     	ds	2
   608  0026                     ??___ftdiv:	
   609                           
   610                           ; 1 bytes @ 0x6
   611  0026                     	ds	2
   612  0028                     sprintf@ap:	
   613                           
   614                           ; 1 bytes @ 0x8
   615  0028                     	ds	1
   616  0029                     sprintf@flag:	
   617                           
   618                           ; 1 bytes @ 0x9
   619  0029                     	ds	1
   620  002A                     sprintf@prec:	
   621  002A                     ___ftdiv@cntr:	
   622                           ; 1 bytes @ 0xA
   623                           
   624                           
   625                           ; 1 bytes @ 0xA
   626  002A                     	ds	1
   627  002B                     sprintf@val:	
   628  002B                     ___ftdiv@f3:	
   629                           ; 2 bytes @ 0xB
   630                           
   631                           
   632                           ; 3 bytes @ 0xB
   633  002B                     	ds	2
   634  002D                     sprintf@sp:	
   635                           
   636                           ; 1 bytes @ 0xD
   637  002D                     	ds	1
   638  002E                     sprintf@c:	
   639  002E                     ___ftdiv@exp:	
   640                           ; 1 bytes @ 0xE
   641                           
   642                           
   643                           ; 1 bytes @ 0xE
   644  002E                     	ds	1
   645  002F                     ___ftdiv@sign:	
   646                           
   647                           ; 1 bytes @ 0xF
   648  002F                     	ds	1
   649  0030                     ?___fttol:	
   650  0030                     ___fttol@f1:	
   651                           ; 4 bytes @ 0x10
   652                           
   653                           
   654                           ; 3 bytes @ 0x10
   655  0030                     	ds	4
   656  0034                     ??___fttol:	
   657                           
   658                           ; 1 bytes @ 0x14
   659  0034                     	ds	4
   660  0038                     ___fttol@sign1:	
   661                           
   662                           ; 1 bytes @ 0x18
   663  0038                     	ds	1
   664  0039                     ___fttol@lval:	
   665                           
   666                           ; 4 bytes @ 0x19
   667  0039                     	ds	4
   668  003D                     ___fttol@exp1:	
   669                           
   670                           ; 1 bytes @ 0x1D
   671  003D                     	ds	1
   672  003E                     ??_main:	
   673                           
   674                           ; 1 bytes @ 0x1E
   675  003E                     	ds	2
   676  0040                     main@Sout:	
   677                           
   678                           ; 20 bytes @ 0x20
   679  0040                     	ds	20
   680  0054                     main@Sptr:	
   681                           
   682                           ; 1 bytes @ 0x34
   683  0054                     	ds	1
   684  0055                     main@adc_value:	
   685                           
   686                           ; 2 bytes @ 0x35
   687  0055                     	ds	2
   688  0057                     main@a:	
   689                           
   690                           ; 2 bytes @ 0x37
   691  0057                     	ds	2
   692                           
   693                           	psect	maintext
   694  0713                     __pmaintext:	
   695 ;;
   696 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   697 ;;
   698 ;; *************** function _main *****************
   699 ;; Defined at:
   700 ;;		line 65 in file "main.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  a               2   55[BANK0 ] int 
   705 ;;  Sout           20   32[BANK0 ] unsigned char [20]
   706 ;;  adc_value       2   53[BANK0 ] unsigned int 
   707 ;;  z               2    0        int 
   708 ;;  Sptr            1   52[BANK0 ] PTR unsigned char 
   709 ;;		 -> main@Sout(20), 
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : B1F/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   720 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
   721 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   722 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
   723 ;;Total ram usage:       27 bytes
   724 ;; Hardware stack levels required when called:    4
   725 ;; This function calls:
   726 ;;		_ADC_Initialize
   727 ;;		_ADC_Read
   728 ;;		_I2C_LCD_Command
   729 ;;		_I2C_LCD_Init
   730 ;;		_I2C_LCD_Pos
   731 ;;		_I2C_LCD_SWrite
   732 ;;		___awtoft
   733 ;;		___ftdiv
   734 ;;		___fttol
   735 ;;		_i2c_Init
   736 ;;		_sprintf
   737 ;; This function is called by:
   738 ;;		Startup code after reset
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function _main
   744  0713                     _main:	
   745                           
   746                           ;main.c: 67: TMR1H = TMR1L = 0;
   747                           
   748                           ;incstack = 0
   749                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   750  0713  0020               	movlb	0	; select bank0
   751  0714  0196               	clrf	22	;volatile
   752  0715  0197               	clrf	23	;volatile
   753                           
   754                           ;main.c: 69: unsigned int adc_value = 0;
   755  0716  01D5               	clrf	main@adc_value
   756  0717  01D6               	clrf	main@adc_value+1
   757                           
   758                           ;main.c: 71: TRISA = 0x00;
   759  0718  0021               	movlb	1	; select bank1
   760  0719  018C               	clrf	12	;volatile
   761                           
   762                           ;main.c: 73: TRISA = ((1u << 1u));
   763  071A  3002               	movlw	2
   764  071B  008C               	movwf	12	;volatile
   765                           
   766                           ;main.c: 75: TRISC = 0x00;
   767  071C  018E               	clrf	14	;volatile
   768                           
   769                           ;main.c: 77: ADC_Initialize();
   770  071D  3182  2272  3187   	fcall	_ADC_Initialize
   771                           
   772                           ;main.c: 80: unsigned char Sout[20];
   773                           ;main.c: 81: unsigned char * Sptr;
   774                           ;main.c: 82: int z;
   775                           ;main.c: 83: Sptr = Sout;
   776  0720  3040               	movlw	(low (main@Sout| 0))& (0+255)
   777  0721  0020               	movlb	0	; select bank0
   778  0722  00BE               	movwf	??_main
   779  0723  083E               	movf	??_main,w
   780  0724  00D4               	movwf	main@Sptr
   781                           
   782                           ;main.c: 85: i2c_Init();
   783  0725  3182  2287  3187   	fcall	_i2c_Init
   784                           
   785                           ;main.c: 86: I2C_LCD_Init(0x27);
   786  0728  3027               	movlw	39
   787  0729  3183  23BD  3187   	fcall	_I2C_LCD_Init
   788                           
   789                           ;main.c: 88: I2C_LCD_Command(0x27, 0x01);
   790  072C  01F8               	clrf	I2C_LCD_Command@Cmd
   791  072D  0AF8               	incf	I2C_LCD_Command@Cmd,f
   792  072E  3027               	movlw	39
   793  072F  3183  231E  3187   	fcall	_I2C_LCD_Command
   794                           
   795                           ;main.c: 90: sprintf(Sout, "Hello World");
   796  0732  3029               	movlw	low (STR_1| (0+32768))
   797  0733  0020               	movlb	0	; select bank0
   798  0734  00A0               	movwf	sprintf@f
   799  0735  3088               	movlw	high (STR_1| (0+32768))
   800  0736  00A1               	movwf	sprintf@f+1
   801  0737  3040               	movlw	(low (main@Sout| 0))& (0+255)
   802  0738  3186  2646  3187   	fcall	_sprintf
   803                           
   804                           ;main.c: 92: I2C_LCD_SWrite(0x27, Sout, 11);
   805  073B  3040               	movlw	(low (main@Sout| 0))& (0+255)
   806  073C  0020               	movlb	0	; select bank0
   807  073D  00BE               	movwf	??_main
   808  073E  083E               	movf	??_main,w
   809  073F  00F8               	movwf	I2C_LCD_SWrite@Data
   810  0740  300B               	movlw	11
   811  0741  00BF               	movwf	??_main+1
   812  0742  083F               	movf	??_main+1,w
   813  0743  00F9               	movwf	I2C_LCD_SWrite@Max
   814  0744  3027               	movlw	39
   815  0745  3184  2457  3187   	fcall	_I2C_LCD_SWrite
   816                           
   817                           ;main.c: 94: _delay((unsigned long)((50)*(8000000/4000.0)));
   818  0748  3082               	movlw	130
   819  0749  0020               	movlb	0	; select bank0
   820  074A  00BE               	movwf	??_main
   821  074B  30DD               	movlw	221
   822  074C                     u1277:	
   823  074C  0B89               	decfsz	9,f
   824  074D  2F4C               	goto	u1277
   825  074E  0BBE               	decfsz	??_main,f
   826  074F  2F4C               	goto	u1277
   827  0750  3200               	nop2
   828                           
   829                           ;main.c: 96: I2C_LCD_Command(0x27, 0x01);
   830  0751  01F8               	clrf	I2C_LCD_Command@Cmd
   831  0752  0AF8               	incf	I2C_LCD_Command@Cmd,f
   832  0753  3027               	movlw	39
   833  0754  3183  231E  3187   	fcall	_I2C_LCD_Command
   834                           
   835                           ;main.c: 97: sprintf(Sout, "");
   836  0757  3019               	movlw	low ((STR_3+15)| (0+32768))
   837  0758  0020               	movlb	0	; select bank0
   838  0759  00A0               	movwf	sprintf@f
   839  075A  3088               	movlw	high ((STR_3+15)| (0+32768))
   840  075B  00A1               	movwf	sprintf@f+1
   841  075C  3040               	movlw	(low (main@Sout| 0))& (0+255)
   842  075D  3186  2646  3187   	fcall	_sprintf
   843                           
   844                           ;main.c: 99: RA4 = 0;
   845  0760  0020               	movlb	0	; select bank0
   846  0761  120C               	bcf	12,4	;volatile
   847  0762                     l1468:	
   848                           ;main.c: 101: while(1) {
   849                           
   850                           
   851                           ;main.c: 103: adc_value = ADC_Read();
   852  0762  3182  22A2  3187   	fcall	_ADC_Read
   853  0765  0871               	movf	?_ADC_Read+1,w
   854  0766  0020               	movlb	0	; select bank0
   855  0767  00D6               	movwf	main@adc_value+1
   856  0768  0870               	movf	?_ADC_Read,w
   857  0769  00D5               	movwf	main@adc_value
   858                           
   859                           ;main.c: 106: if (adc_value < 800) RA4 = 1;
   860  076A  3003               	movlw	3
   861  076B  0256               	subwf	main@adc_value+1,w
   862  076C  3020               	movlw	32
   863  076D  1903               	skipnz
   864  076E  0255               	subwf	main@adc_value,w
   865  076F  1803               	skipnc
   866  0770  2F73               	goto	l111
   867  0771  160C               	bsf	12,4	;volatile
   868  0772  2F74               	goto	l112
   869  0773                     l111:	
   870                           
   871                           ;main.c: 107: else RA4 = 0;
   872  0773  120C               	bcf	12,4	;volatile
   873  0774                     l112:	
   874                           
   875                           ;main.c: 109: RC0 = 1;
   876  0774  140E               	bsf	14,0	;volatile
   877                           
   878                           ;main.c: 110: _delay((unsigned long)((10)*(8000000/4000000.0)));
   879  0775  3006               	movlw	6
   880  0776                     u1287:	
   881  0776  0B89               	decfsz	9,f
   882  0777  2F76               	goto	u1287
   883  0778  3200               	nop2
   884                           
   885                           ;main.c: 111: RC0 = 0;
   886  0779  0020               	movlb	0	; select bank0
   887  077A  100E               	bcf	14,0	;volatile
   888                           
   889                           ;main.c: 112: int a = 0;
   890  077B  01D7               	clrf	main@a
   891  077C  01D8               	clrf	main@a+1
   892                           
   893                           ;main.c: 114: TMR1ON = 1;
   894  077D  1418               	bsf	24,0	;volatile
   895  077E                     l113:	
   896                           ;main.c: 115: while(RA1);
   897                           
   898  077E  188C               	btfsc	12,1	;volatile
   899  077F  2F7E               	goto	l113
   900                           
   901                           ;main.c: 116: TMR1ON = 0;
   902  0780  1018               	bcf	24,0	;volatile
   903                           
   904                           ;main.c: 118: a = (TMR1L | (TMR1H<<8));
   905  0781  0817               	movf	23,w	;volatile
   906  0782  00D8               	movwf	main@a+1
   907  0783  0816               	movf	22,w	;volatile
   908  0784  00D7               	movwf	main@a
   909                           
   910                           ;main.c: 119: a = a/58.82;
   911  0785  0858               	movf	main@a+1,w
   912  0786  00F9               	movwf	___awtoft@c+1
   913  0787  0857               	movf	main@a,w
   914  0788  00F8               	movwf	___awtoft@c
   915  0789  3182  22D2  3187   	fcall	___awtoft
   916  078C  0878               	movf	?___awtoft,w
   917  078D  0020               	movlb	0	; select bank0
   918  078E  00A3               	movwf	___ftdiv@f1
   919  078F  0879               	movf	?___awtoft+1,w
   920  0790  00A4               	movwf	___ftdiv@f1+1
   921  0791  087A               	movf	?___awtoft+2,w
   922  0792  00A5               	movwf	___ftdiv@f1+2
   923  0793  3048               	movlw	72
   924  0794  00A0               	movwf	___ftdiv@f2
   925  0795  306B               	movlw	107
   926  0796  00A1               	movwf	___ftdiv@f2+1
   927  0797  3042               	movlw	66
   928  0798  00A2               	movwf	___ftdiv@f2+2
   929  0799  3185  259D  3187   	fcall	___ftdiv
   930  079C  0020               	movlb	0	; select bank0
   931  079D  0820               	movf	?___ftdiv,w
   932  079E  00B0               	movwf	___fttol@f1
   933  079F  0821               	movf	?___ftdiv+1,w
   934  07A0  00B1               	movwf	___fttol@f1+1
   935  07A1  0822               	movf	?___ftdiv+2,w
   936  07A2  00B2               	movwf	___fttol@f1+2
   937  07A3  3185  2516  3187   	fcall	___fttol
   938  07A6  0020               	movlb	0	; select bank0
   939  07A7  0831               	movf	?___fttol+1,w
   940  07A8  00D8               	movwf	main@a+1
   941  07A9  0830               	movf	?___fttol,w
   942  07AA  00D7               	movwf	main@a
   943                           
   944                           ;main.c: 120: a = a + 1;
   945  07AB  0857               	movf	main@a,w
   946  07AC  3E01               	addlw	1
   947  07AD  00D7               	movwf	main@a
   948  07AE  3000               	movlw	0
   949  07AF  3D58               	addwfc	main@a+1,w
   950  07B0  00D8               	movwf	main@a+1
   951                           
   952                           ;main.c: 122: sprintf(Sout, "LightValue = %d", adc_value);
   953  07B1  300A               	movlw	low (STR_3| (0+32768))
   954  07B2  00A0               	movwf	sprintf@f
   955  07B3  3088               	movlw	high (STR_3| (0+32768))
   956  07B4  00A1               	movwf	sprintf@f+1
   957  07B5  0856               	movf	main@adc_value+1,w
   958  07B6  00A3               	movwf	?_sprintf+3
   959  07B7  0855               	movf	main@adc_value,w
   960  07B8  00A2               	movwf	?_sprintf+2
   961  07B9  3040               	movlw	(low (main@Sout| 0))& (0+255)
   962  07BA  3186  2646  3187   	fcall	_sprintf
   963                           
   964                           ;main.c: 124: I2C_LCD_SWrite(0x27, Sout, 16);
   965  07BD  3040               	movlw	(low (main@Sout| 0))& (0+255)
   966  07BE  0020               	movlb	0	; select bank0
   967  07BF  00BE               	movwf	??_main
   968  07C0  083E               	movf	??_main,w
   969  07C1  00F8               	movwf	I2C_LCD_SWrite@Data
   970  07C2  3010               	movlw	16
   971  07C3  00BF               	movwf	??_main+1
   972  07C4  083F               	movf	??_main+1,w
   973  07C5  00F9               	movwf	I2C_LCD_SWrite@Max
   974  07C6  3027               	movlw	39
   975  07C7  3184  2457  3187   	fcall	_I2C_LCD_SWrite
   976                           
   977                           ;main.c: 126: I2C_LCD_Pos(0x27, 0x40);
   978  07CA  3040               	movlw	64
   979  07CB  0020               	movlb	0	; select bank0
   980  07CC  00BE               	movwf	??_main
   981  07CD  083E               	movf	??_main,w
   982  07CE  00F8               	movwf	I2C_LCD_Pos@Pos
   983  07CF  3027               	movlw	39
   984  07D0  3183  2386  3187   	fcall	_I2C_LCD_Pos
   985                           
   986                           ;main.c: 128: sprintf(Sout, "DistValue = %d", a);
   987  07D3  301A               	movlw	low (STR_4| (0+32768))
   988  07D4  0020               	movlb	0	; select bank0
   989  07D5  00A0               	movwf	sprintf@f
   990  07D6  3088               	movlw	high (STR_4| (0+32768))
   991  07D7  00A1               	movwf	sprintf@f+1
   992  07D8  0858               	movf	main@a+1,w
   993  07D9  00A3               	movwf	?_sprintf+3
   994  07DA  0857               	movf	main@a,w
   995  07DB  00A2               	movwf	?_sprintf+2
   996  07DC  3040               	movlw	(low (main@Sout| 0))& (0+255)
   997  07DD  3186  2646  3187   	fcall	_sprintf
   998                           
   999                           ;main.c: 130: I2C_LCD_SWrite(0x27, Sout, 16);
  1000  07E0  3040               	movlw	(low (main@Sout| 0))& (0+255)
  1001  07E1  0020               	movlb	0	; select bank0
  1002  07E2  00BE               	movwf	??_main
  1003  07E3  083E               	movf	??_main,w
  1004  07E4  00F8               	movwf	I2C_LCD_SWrite@Data
  1005  07E5  3010               	movlw	16
  1006  07E6  00BF               	movwf	??_main+1
  1007  07E7  083F               	movf	??_main+1,w
  1008  07E8  00F9               	movwf	I2C_LCD_SWrite@Max
  1009  07E9  3027               	movlw	39
  1010  07EA  3184  2457  3187   	fcall	_I2C_LCD_SWrite
  1011                           
  1012                           ;main.c: 132: _delay((unsigned long)((50)*(8000000/4000.0)));
  1013  07ED  3082               	movlw	130
  1014  07EE  0020               	movlb	0	; select bank0
  1015  07EF  00BE               	movwf	??_main
  1016  07F0  30DD               	movlw	221
  1017  07F1                     u1297:	
  1018  07F1  0B89               	decfsz	9,f
  1019  07F2  2FF1               	goto	u1297
  1020  07F3  0BBE               	decfsz	??_main,f
  1021  07F4  2FF1               	goto	u1297
  1022  07F5  3200               	nop2
  1023                           
  1024                           ;main.c: 134: I2C_LCD_Command(0x27, 0x01);
  1025  07F6  01F8               	clrf	I2C_LCD_Command@Cmd
  1026  07F7  0AF8               	incf	I2C_LCD_Command@Cmd,f
  1027  07F8  3027               	movlw	39
  1028  07F9  3183  231E  3187   	fcall	_I2C_LCD_Command
  1029  07FC  2F62               	goto	l1468
  1030  07FD                     __end_of_main:	
  1031                           
  1032                           	psect	text1
  1033  0646                     __ptext1:	
  1034 ;; *************** function _sprintf *****************
  1035 ;; Defined at:
  1036 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  sp              1    wreg     PTR unsigned char 
  1039 ;;		 -> main@Sout(20), 
  1040 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  1041 ;;		 -> STR_4(15), STR_3(16), STR_2(1), STR_1(12), 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  1044 ;;		 -> main@Sout(20), 
  1045 ;;  tmpval          4    0        struct .
  1046 ;;  val             2   11[BANK0 ] unsigned int 
  1047 ;;  cp              2    0        PTR const unsigned char 
  1048 ;;  len             2    0        unsigned int 
  1049 ;;  c               1   14[BANK0 ] char 
  1050 ;;  prec            1   10[BANK0 ] char 
  1051 ;;  flag            1    9[BANK0 ] unsigned char 
  1052 ;;  ap              1    8[BANK0 ] PTR void [1]
  1053 ;;		 -> ?_sprintf(2), 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  2    0[BANK0 ] int 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1063 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1064 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1065 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1066 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1067 ;;Total ram usage:       15 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    1
  1070 ;; This function calls:
  1071 ;;		___lwdiv
  1072 ;;		___lwmod
  1073 ;; This function is called by:
  1074 ;;		_main
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _sprintf
  1080  0646                     _sprintf:	
  1081                           
  1082                           ;incstack = 0
  1083                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1084                           ;sprintf@sp stored from wreg
  1085  0646  0020               	movlb	0	; select bank0
  1086  0647  00AD               	movwf	sprintf@sp
  1087                           
  1088                           ;doprnt.c: 494: va_list ap;
  1089                           ;doprnt.c: 499: signed char c;
  1090                           ;doprnt.c: 506: signed char prec;
  1091                           ;doprnt.c: 508: unsigned char flag;
  1092                           ;doprnt.c: 523: union {
  1093                           ;doprnt.c: 524: unsigned long vd;
  1094                           ;doprnt.c: 525: double integ;
  1095                           ;doprnt.c: 526: } tmpval;
  1096                           ;doprnt.c: 528: unsigned int val;
  1097                           ;doprnt.c: 529: unsigned len;
  1098                           ;doprnt.c: 530: const char * cp;
  1099                           ;doprnt.c: 533: *ap = __va_start();
  1100  0648  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1101  0649  00A4               	movwf	??_sprintf
  1102  064A  0824               	movf	??_sprintf,w
  1103  064B  00A8               	movwf	sprintf@ap
  1104  064C                     l1344:	
  1105                           ;doprnt.c: 536: while(c = *f++) {
  1106                           
  1107  064C  0821               	movf	sprintf@f+1,w
  1108  064D  00A5               	movwf	??_sprintf+1
  1109  064E  0820               	movf	sprintf@f,w
  1110  064F  00A4               	movwf	??_sprintf
  1111  0650  0AA0               	incf	sprintf@f,f
  1112  0651  1903               	skipnz
  1113  0652  0AA1               	incf	sprintf@f+1,f
  1114  0653  0824               	movf	??_sprintf,w
  1115  0654  0084               	movwf	4
  1116  0655  0825               	movf	??_sprintf+1,w
  1117  0656  0085               	movwf	5
  1118  0657  0800               	movf	0,w	;code access
  1119  0658  00A6               	movwf	??_sprintf+2
  1120  0659  0826               	movf	??_sprintf+2,w
  1121  065A  00AE               	movwf	sprintf@c
  1122  065B  082E               	movf	sprintf@c,w
  1123  065C  1903               	btfsc	3,2
  1124  065D  2F0E               	goto	l1346
  1125                           
  1126                           ;doprnt.c: 538: if(c != '%')
  1127  065E  3025               	movlw	37
  1128  065F  062E               	xorwf	sprintf@c,w
  1129  0660  1903               	btfsc	3,2
  1130  0661  2E6E               	goto	l1300
  1131                           
  1132                           ;doprnt.c: 540: {
  1133                           ;doprnt.c: 541: ((*sp++ = (c)));
  1134  0662  082E               	movf	sprintf@c,w
  1135  0663  00A4               	movwf	??_sprintf
  1136  0664  082D               	movf	sprintf@sp,w
  1137  0665  0086               	movwf	6
  1138  0666  0187               	clrf	7
  1139  0667  0824               	movf	??_sprintf,w
  1140  0668  0081               	movwf	1
  1141  0669  3001               	movlw	1
  1142  066A  00A4               	movwf	??_sprintf
  1143  066B  0824               	movf	??_sprintf,w
  1144  066C  07AD               	addwf	sprintf@sp,f
  1145                           
  1146                           ;doprnt.c: 542: continue;
  1147  066D  2E4C               	goto	l1344
  1148  066E                     l1300:	
  1149                           
  1150                           ;doprnt.c: 543: }
  1151                           ;doprnt.c: 548: flag = 0;
  1152  066E  01A9               	clrf	sprintf@flag
  1153                           
  1154                           ;doprnt.c: 822: }
  1155                           
  1156                           ;doprnt.c: 813: continue;
  1157                           
  1158                           ;doprnt.c: 802: default:
  1159                           
  1160                           ;doprnt.c: 698: case 'i':
  1161                           ;doprnt.c: 699: break;
  1162                           
  1163                           ;doprnt.c: 697: case 'd':
  1164                           
  1165                           ;doprnt.c: 638: goto alldone;
  1166                           
  1167                           ;doprnt.c: 637: case 0:
  1168                           
  1169                           ;doprnt.c: 635: switch(c = *f++) {
  1170  066F  0821               	movf	sprintf@f+1,w
  1171  0670  00A5               	movwf	??_sprintf+1
  1172  0671  0820               	movf	sprintf@f,w
  1173  0672  00A4               	movwf	??_sprintf
  1174  0673  0AA0               	incf	sprintf@f,f
  1175  0674  1903               	skipnz
  1176  0675  0AA1               	incf	sprintf@f+1,f
  1177  0676  0824               	movf	??_sprintf,w
  1178  0677  0084               	movwf	4
  1179  0678  0825               	movf	??_sprintf+1,w
  1180  0679  0085               	movwf	5
  1181  067A  0800               	movf	0,w	;code access
  1182  067B  00AE               	movwf	sprintf@c
  1183                           
  1184                           ; Switch size 1, requested type "space"
  1185                           ; Number of cases is 3, Range of values is 0 to 105
  1186                           ; switch strategies available:
  1187                           ; Name         Instructions Cycles
  1188                           ; simple_byte           10     6 (average)
  1189                           ; direct_byte          218     6 (fixed)
  1190                           ; jumptable            260     6 (fixed)
  1191                           ;	Chosen strategy is simple_byte
  1192  067C  3A00               	xorlw	0	; case 0
  1193  067D  1903               	skipnz
  1194  067E  2F0E               	goto	l1346
  1195  067F  3A64               	xorlw	100	; case 100
  1196  0680  1903               	skipnz
  1197  0681  2E86               	goto	l1306
  1198  0682  3A0D               	xorlw	13	; case 105
  1199  0683  1903               	skipnz
  1200  0684  2E86               	goto	l1306
  1201  0685  2E4C               	goto	l1344
  1202  0686                     l1306:	
  1203                           
  1204                           ;doprnt.c: 1253: {
  1205                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1206  0686  0828               	movf	sprintf@ap,w
  1207  0687  0086               	movwf	6
  1208  0688  0187               	clrf	7
  1209  0689  3F40               	moviw [0]fsr1
  1210  068A  00AB               	movwf	sprintf@val
  1211  068B  3F41               	moviw [1]fsr1
  1212  068C  00AC               	movwf	sprintf@val+1
  1213  068D  3002               	movlw	2
  1214  068E  00A4               	movwf	??_sprintf
  1215  068F  0824               	movf	??_sprintf,w
  1216  0690  07A8               	addwf	sprintf@ap,f
  1217                           
  1218                           ;doprnt.c: 1261: if((int)val < 0) {
  1219  0691  1FAC               	btfss	sprintf@val+1,7
  1220  0692  2E9C               	goto	l1316
  1221                           
  1222                           ;doprnt.c: 1262: flag |= 0x03;
  1223  0693  3003               	movlw	3
  1224  0694  00A4               	movwf	??_sprintf
  1225  0695  0824               	movf	??_sprintf,w
  1226  0696  04A9               	iorwf	sprintf@flag,f
  1227                           
  1228                           ;doprnt.c: 1263: val = -val;
  1229  0697  09AB               	comf	sprintf@val,f
  1230  0698  09AC               	comf	sprintf@val+1,f
  1231  0699  0AAB               	incf	sprintf@val,f
  1232  069A  1903               	skipnz
  1233  069B  0AAC               	incf	sprintf@val+1,f
  1234  069C                     l1316:	
  1235                           
  1236                           ;doprnt.c: 1264: }
  1237                           ;doprnt.c: 1266: }
  1238                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1239  069C  01AE               	clrf	sprintf@c
  1240  069D  0AAE               	incf	sprintf@c,f
  1241  069E  3005               	movlw	5
  1242  069F  062E               	xorwf	sprintf@c,w
  1243  06A0  1903               	btfsc	3,2
  1244  06A1  2EC1               	goto	l1328
  1245  06A2                     l1322:	
  1246                           
  1247                           ;doprnt.c: 1306: if(val < dpowers[c])
  1248  06A2  082E               	movf	sprintf@c,w
  1249  06A3  00A4               	movwf	??_sprintf
  1250  06A4  01A5               	clrf	??_sprintf+1
  1251  06A5  35A4               	lslf	??_sprintf,f
  1252  06A6  0DA5               	rlf	??_sprintf+1,f
  1253  06A7  3000               	movlw	low (_dpowers| (0+32768))
  1254  06A8  0724               	addwf	??_sprintf,w
  1255  06A9  0084               	movwf	4
  1256  06AA  3088               	movlw	high (_dpowers| (0+32768))
  1257  06AB  3D25               	addwfc	??_sprintf+1,w
  1258  06AC  0085               	movwf	5
  1259  06AD  3F00               	moviw [0]fsr0
  1260  06AE  00A6               	movwf	??_sprintf+2
  1261  06AF  3F01               	moviw [1]fsr0
  1262  06B0  00A7               	movwf	??_sprintf+3
  1263  06B1  0827               	movf	??_sprintf+3,w
  1264  06B2  022C               	subwf	sprintf@val+1,w
  1265  06B3  1D03               	skipz
  1266  06B4  2EB7               	goto	u1015
  1267  06B5  0826               	movf	??_sprintf+2,w
  1268  06B6  022B               	subwf	sprintf@val,w
  1269  06B7                     u1015:	
  1270  06B7  1C03               	btfss	3,0
  1271  06B8  2EC1               	goto	l1328
  1272                           
  1273                           ;doprnt.c: 1307: break;
  1274  06B9  3001               	movlw	1
  1275  06BA  00A4               	movwf	??_sprintf
  1276  06BB  0824               	movf	??_sprintf,w
  1277  06BC  07AE               	addwf	sprintf@c,f
  1278  06BD  3005               	movlw	5
  1279  06BE  062E               	xorwf	sprintf@c,w
  1280  06BF  1D03               	btfss	3,2
  1281  06C0  2EA2               	goto	l1322
  1282  06C1                     l1328:	
  1283                           
  1284                           ;doprnt.c: 1422: {
  1285                           ;doprnt.c: 1438: if(flag & 0x03)
  1286  06C1  0829               	movf	sprintf@flag,w
  1287  06C2  3903               	andlw	3
  1288  06C3  1903               	btfsc	3,2
  1289  06C4  2ED0               	goto	l1334
  1290                           
  1291                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1292  06C5  302D               	movlw	45
  1293  06C6  00A4               	movwf	??_sprintf
  1294  06C7  082D               	movf	sprintf@sp,w
  1295  06C8  0086               	movwf	6
  1296  06C9  0187               	clrf	7
  1297  06CA  0824               	movf	??_sprintf,w
  1298  06CB  0081               	movwf	1
  1299  06CC  3001               	movlw	1
  1300  06CD  00A4               	movwf	??_sprintf
  1301  06CE  0824               	movf	??_sprintf,w
  1302  06CF  07AD               	addwf	sprintf@sp,f
  1303  06D0                     l1334:	
  1304                           
  1305                           ;doprnt.c: 1469: }
  1306                           ;doprnt.c: 1472: prec = c;
  1307  06D0  082E               	movf	sprintf@c,w
  1308  06D1  00A4               	movwf	??_sprintf
  1309  06D2  0824               	movf	??_sprintf,w
  1310  06D3  00AA               	movwf	sprintf@prec
  1311  06D4                     l1342:	
  1312                           ;doprnt.c: 1474: while(prec--) {
  1313                           
  1314  06D4  30FF               	movlw	255
  1315  06D5  00A4               	movwf	??_sprintf
  1316  06D6  0824               	movf	??_sprintf,w
  1317  06D7  07AA               	addwf	sprintf@prec,f
  1318  06D8  0A2A               	incf	sprintf@prec,w
  1319  06D9  1903               	btfsc	3,2
  1320  06DA  2E4C               	goto	l1344
  1321                           
  1322                           ;doprnt.c: 1478: {
  1323                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1324  06DB  300A               	movlw	10
  1325  06DC  00F8               	movwf	___lwmod@divisor
  1326  06DD  3000               	movlw	0
  1327  06DE  00F9               	movwf	___lwmod@divisor+1
  1328  06DF  082A               	movf	sprintf@prec,w
  1329  06E0  00A4               	movwf	??_sprintf
  1330  06E1  01A5               	clrf	??_sprintf+1
  1331  06E2  35A4               	lslf	??_sprintf,f
  1332  06E3  0DA5               	rlf	??_sprintf+1,f
  1333  06E4  3000               	movlw	low (_dpowers| (0+32768))
  1334  06E5  0724               	addwf	??_sprintf,w
  1335  06E6  0084               	movwf	4
  1336  06E7  3088               	movlw	high (_dpowers| (0+32768))
  1337  06E8  3D25               	addwfc	??_sprintf+1,w
  1338  06E9  0085               	movwf	5
  1339  06EA  3F00               	moviw [0]fsr0
  1340  06EB  00F0               	movwf	___lwdiv@divisor
  1341  06EC  3F01               	moviw [1]fsr0
  1342  06ED  00F1               	movwf	___lwdiv@divisor+1
  1343  06EE  082C               	movf	sprintf@val+1,w
  1344  06EF  00F3               	movwf	___lwdiv@dividend+1
  1345  06F0  082B               	movf	sprintf@val,w
  1346  06F1  00F2               	movwf	___lwdiv@dividend
  1347  06F2  3183  2352  3186   	fcall	___lwdiv
  1348  06F5  0871               	movf	?___lwdiv+1,w
  1349  06F6  00FB               	movwf	___lwmod@dividend+1
  1350  06F7  0870               	movf	?___lwdiv,w
  1351  06F8  00FA               	movwf	___lwmod@dividend
  1352  06F9  3182  22F2  3186   	fcall	___lwmod
  1353  06FC  0878               	movf	?___lwmod,w
  1354  06FD  3E30               	addlw	48
  1355  06FE  0020               	movlb	0	; select bank0
  1356  06FF  00A6               	movwf	??_sprintf+2
  1357  0700  0826               	movf	??_sprintf+2,w
  1358  0701  00AE               	movwf	sprintf@c
  1359                           
  1360                           ;doprnt.c: 1523: }
  1361                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1362  0702  082E               	movf	sprintf@c,w
  1363  0703  00A4               	movwf	??_sprintf
  1364  0704  082D               	movf	sprintf@sp,w
  1365  0705  0086               	movwf	6
  1366  0706  0187               	clrf	7
  1367  0707  0824               	movf	??_sprintf,w
  1368  0708  0081               	movwf	1
  1369  0709  3001               	movlw	1
  1370  070A  00A4               	movwf	??_sprintf
  1371  070B  0824               	movf	??_sprintf,w
  1372  070C  07AD               	addwf	sprintf@sp,f
  1373  070D  2ED4               	goto	l1342
  1374  070E                     l1346:	
  1375                           ;doprnt.c: 1525: }
  1376                           ;doprnt.c: 1533: }
  1377                           ;doprnt.c: 1535: alldone:
  1378                           
  1379                           
  1380                           ;doprnt.c: 1538: *sp = 0;
  1381  070E  082D               	movf	sprintf@sp,w
  1382  070F  0086               	movwf	6
  1383  0710  0187               	clrf	7
  1384  0711  0181               	clrf	1
  1385  0712  0008               	return
  1386  0713                     __end_of_sprintf:	
  1387                           ;doprnt.c: 1540: return 0;
  1388                           ;	Return value of _sprintf is never used
  1389                           
  1390                           
  1391                           	psect	text2
  1392  02F2                     __ptext2:	
  1393 ;; *************** function ___lwmod *****************
  1394 ;; Defined at:
  1395 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  divisor         2    8[COMMON] unsigned int 
  1398 ;;  dividend        2   10[COMMON] unsigned int 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  counter         1   13[COMMON] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  2    8[COMMON] unsigned int 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1412 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1413 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1414 ;;Total ram usage:        6 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_sprintf
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function ___lwmod
  1425  02F2                     ___lwmod:	
  1426                           
  1427                           ;incstack = 0
  1428                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1429  02F2  0878               	movf	___lwmod@divisor,w
  1430  02F3  0479               	iorwf	___lwmod@divisor+1,w
  1431  02F4  1903               	btfsc	3,2
  1432  02F5  2B19               	goto	l1206
  1433  02F6  01FD               	clrf	___lwmod@counter
  1434  02F7  0AFD               	incf	___lwmod@counter,f
  1435  02F8                     l1196:	
  1436  02F8  1BF9               	btfsc	___lwmod@divisor+1,7
  1437  02F9  2B04               	goto	l1198
  1438  02FA  3001               	movlw	1
  1439  02FB                     u885:	
  1440  02FB  35F8               	lslf	___lwmod@divisor,f
  1441  02FC  0DF9               	rlf	___lwmod@divisor+1,f
  1442  02FD  0B89               	decfsz	9,f
  1443  02FE  2AFB               	goto	u885
  1444  02FF  3001               	movlw	1
  1445  0300  00FC               	movwf	??___lwmod
  1446  0301  087C               	movf	??___lwmod,w
  1447  0302  07FD               	addwf	___lwmod@counter,f
  1448  0303  2AF8               	goto	l1196
  1449  0304                     l1198:	
  1450  0304  0879               	movf	___lwmod@divisor+1,w
  1451  0305  027B               	subwf	___lwmod@dividend+1,w
  1452  0306  1D03               	skipz
  1453  0307  2B0A               	goto	u905
  1454  0308  0878               	movf	___lwmod@divisor,w
  1455  0309  027A               	subwf	___lwmod@dividend,w
  1456  030A                     u905:	
  1457  030A  1C03               	skipc
  1458  030B  2B10               	goto	l1202
  1459  030C  0878               	movf	___lwmod@divisor,w
  1460  030D  02FA               	subwf	___lwmod@dividend,f
  1461  030E  0879               	movf	___lwmod@divisor+1,w
  1462  030F  3BFB               	subwfb	___lwmod@dividend+1,f
  1463  0310                     l1202:	
  1464  0310  3001               	movlw	1
  1465  0311                     u915:	
  1466  0311  36F9               	lsrf	___lwmod@divisor+1,f
  1467  0312  0CF8               	rrf	___lwmod@divisor,f
  1468  0313  0B89               	decfsz	9,f
  1469  0314  2B11               	goto	u915
  1470  0315  3001               	movlw	1
  1471  0316  02FD               	subwf	___lwmod@counter,f
  1472  0317  1D03               	btfss	3,2
  1473  0318  2B04               	goto	l1198
  1474  0319                     l1206:	
  1475  0319  087B               	movf	___lwmod@dividend+1,w
  1476  031A  00F9               	movwf	?___lwmod+1
  1477  031B  087A               	movf	___lwmod@dividend,w
  1478  031C  00F8               	movwf	?___lwmod
  1479  031D  0008               	return
  1480  031E                     __end_of___lwmod:	
  1481                           
  1482                           	psect	text3
  1483  0352                     __ptext3:	
  1484 ;; *************** function ___lwdiv *****************
  1485 ;; Defined at:
  1486 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  divisor         2    0[COMMON] unsigned int 
  1489 ;;  dividend        2    2[COMMON] unsigned int 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  quotient        2    5[COMMON] unsigned int 
  1492 ;;  counter         1    7[COMMON] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  2    0[COMMON] unsigned int 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1503 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1505 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1506 ;;Total ram usage:        8 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_sprintf
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function ___lwdiv
  1517  0352                     ___lwdiv:	
  1518                           
  1519                           ;incstack = 0
  1520                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1521  0352  01F5               	clrf	___lwdiv@quotient
  1522  0353  01F6               	clrf	___lwdiv@quotient+1
  1523  0354  0870               	movf	___lwdiv@divisor,w
  1524  0355  0471               	iorwf	___lwdiv@divisor+1,w
  1525  0356  1903               	btfsc	3,2
  1526  0357  2B81               	goto	l1184
  1527  0358  01F7               	clrf	___lwdiv@counter
  1528  0359  0AF7               	incf	___lwdiv@counter,f
  1529  035A                     l1172:	
  1530  035A  1BF1               	btfsc	___lwdiv@divisor+1,7
  1531  035B  2B66               	goto	l1174
  1532  035C  3001               	movlw	1
  1533  035D                     u815:	
  1534  035D  35F0               	lslf	___lwdiv@divisor,f
  1535  035E  0DF1               	rlf	___lwdiv@divisor+1,f
  1536  035F  0B89               	decfsz	9,f
  1537  0360  2B5D               	goto	u815
  1538  0361  3001               	movlw	1
  1539  0362  00F4               	movwf	??___lwdiv
  1540  0363  0874               	movf	??___lwdiv,w
  1541  0364  07F7               	addwf	___lwdiv@counter,f
  1542  0365  2B5A               	goto	l1172
  1543  0366                     l1174:	
  1544  0366  3001               	movlw	1
  1545  0367                     u835:	
  1546  0367  35F5               	lslf	___lwdiv@quotient,f
  1547  0368  0DF6               	rlf	___lwdiv@quotient+1,f
  1548  0369  0B89               	decfsz	9,f
  1549  036A  2B67               	goto	u835
  1550  036B  0871               	movf	___lwdiv@divisor+1,w
  1551  036C  0273               	subwf	___lwdiv@dividend+1,w
  1552  036D  1D03               	skipz
  1553  036E  2B71               	goto	u845
  1554  036F  0870               	movf	___lwdiv@divisor,w
  1555  0370  0272               	subwf	___lwdiv@dividend,w
  1556  0371                     u845:	
  1557  0371  1C03               	skipc
  1558  0372  2B78               	goto	l1180
  1559  0373  0870               	movf	___lwdiv@divisor,w
  1560  0374  02F2               	subwf	___lwdiv@dividend,f
  1561  0375  0871               	movf	___lwdiv@divisor+1,w
  1562  0376  3BF3               	subwfb	___lwdiv@dividend+1,f
  1563  0377  1475               	bsf	___lwdiv@quotient,0
  1564  0378                     l1180:	
  1565  0378  3001               	movlw	1
  1566  0379                     u855:	
  1567  0379  36F1               	lsrf	___lwdiv@divisor+1,f
  1568  037A  0CF0               	rrf	___lwdiv@divisor,f
  1569  037B  0B89               	decfsz	9,f
  1570  037C  2B79               	goto	u855
  1571  037D  3001               	movlw	1
  1572  037E  02F7               	subwf	___lwdiv@counter,f
  1573  037F  1D03               	btfss	3,2
  1574  0380  2B66               	goto	l1174
  1575  0381                     l1184:	
  1576  0381  0876               	movf	___lwdiv@quotient+1,w
  1577  0382  00F1               	movwf	?___lwdiv+1
  1578  0383  0875               	movf	___lwdiv@quotient,w
  1579  0384  00F0               	movwf	?___lwdiv
  1580  0385  0008               	return
  1581  0386                     __end_of___lwdiv:	
  1582                           
  1583                           	psect	text4
  1584  0287                     __ptext4:	
  1585 ;; *************** function _i2c_Init *****************
  1586 ;; Defined at:
  1587 ;;		line 12 in file "i2c_LCD.h"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1605 ;;Total ram usage:        0 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _i2c_Init
  1616  0287                     _i2c_Init:	
  1617                           
  1618                           ;i2c_LCD.h: 16: TRISB4=1;
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _i2c_Init: [wreg+status,2]
  1622  0287  0021               	movlb	1	; select bank1
  1623  0288  160D               	bsf	13,4	;volatile
  1624                           
  1625                           ;i2c_LCD.h: 17: TRISB6=1;
  1626  0289  170D               	bsf	13,6	;volatile
  1627                           
  1628                           ;i2c_LCD.h: 19: SSP1CON1 = 0b00101000;
  1629  028A  3028               	movlw	40
  1630  028B  0024               	movlb	4	; select bank4
  1631  028C  0095               	movwf	21	;volatile
  1632                           
  1633                           ;i2c_LCD.h: 20: SSP1CON2 = 0x00;
  1634  028D  0196               	clrf	22	;volatile
  1635                           
  1636                           ;i2c_LCD.h: 22: SSP1ADD = 9;
  1637  028E  3009               	movlw	9
  1638  028F  0092               	movwf	18	;volatile
  1639                           
  1640                           ;i2c_LCD.h: 24: SSP1STAT = 0b11000000;
  1641  0290  30C0               	movlw	192
  1642  0291  0094               	movwf	20	;volatile
  1643  0292  0008               	return
  1644  0293                     __end_of_i2c_Init:	
  1645                           
  1646                           	psect	text5
  1647  0516                     __ptext5:	
  1648 ;; *************** function ___fttol *****************
  1649 ;; Defined at:
  1650 ;;		line 44 in file "/opt/microchip/xc8/v1.45/sources/common/fttol.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  f1              3   16[BANK0 ] float 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  lval            4   25[BANK0 ] unsigned long 
  1655 ;;  exp1            1   29[BANK0 ] unsigned char 
  1656 ;;  sign1           1   24[BANK0 ] unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  4   16[BANK0 ] long 
  1659 ;; Registers used:
  1660 ;;		wreg, status,2, status,0
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1666 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1669 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1670 ;;Total ram usage:       14 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           
  1680                           ;psect for function ___fttol
  1681  0516                     ___fttol:	
  1682                           
  1683                           ;incstack = 0
  1684                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1685  0516  0020               	movlb	0	; select bank0
  1686  0517  0830               	movf	___fttol@f1,w
  1687  0518  00B4               	movwf	??___fttol
  1688  0519  0831               	movf	___fttol@f1+1,w
  1689  051A  00B5               	movwf	??___fttol+1
  1690  051B  0832               	movf	___fttol@f1+2,w
  1691  051C  00B6               	movwf	??___fttol+2
  1692  051D  1003               	clrc
  1693  051E  0D35               	rlf	??___fttol+1,w
  1694  051F  0D36               	rlf	??___fttol+2,w
  1695  0520  00B7               	movwf	??___fttol+3
  1696  0521  0837               	movf	??___fttol+3,w
  1697  0522  00BD               	movwf	___fttol@exp1
  1698  0523  083D               	movf	___fttol@exp1,w
  1699  0524  1D03               	btfss	3,2
  1700  0525  2D2F               	goto	l1410
  1701  0526  3000               	movlw	0
  1702  0527  00B3               	movwf	?___fttol+3
  1703  0528  3000               	movlw	0
  1704  0529  00B2               	movwf	?___fttol+2
  1705  052A  3000               	movlw	0
  1706  052B  00B1               	movwf	?___fttol+1
  1707  052C  3000               	movlw	0
  1708  052D  00B0               	movwf	?___fttol
  1709  052E  0008               	return
  1710  052F                     l1410:	
  1711  052F  0830               	movf	___fttol@f1,w
  1712  0530  00B4               	movwf	??___fttol
  1713  0531  0831               	movf	___fttol@f1+1,w
  1714  0532  00B5               	movwf	??___fttol+1
  1715  0533  0832               	movf	___fttol@f1+2,w
  1716  0534  00B6               	movwf	??___fttol+2
  1717  0535  3017               	movlw	23
  1718  0536                     u1165:	
  1719  0536  36B6               	lsrf	??___fttol+2,f
  1720  0537  0CB5               	rrf	??___fttol+1,f
  1721  0538  0CB4               	rrf	??___fttol,f
  1722  0539  0B89               	decfsz	9,f
  1723  053A  2D36               	goto	u1165
  1724  053B  0834               	movf	??___fttol,w
  1725  053C  00B7               	movwf	??___fttol+3
  1726  053D  0837               	movf	??___fttol+3,w
  1727  053E  00B8               	movwf	___fttol@sign1
  1728  053F  17B1               	bsf	___fttol@f1+1,7
  1729  0540  30FF               	movlw	255
  1730  0541  05B0               	andwf	___fttol@f1,f
  1731  0542  30FF               	movlw	255
  1732  0543  05B1               	andwf	___fttol@f1+1,f
  1733  0544  3000               	movlw	0
  1734  0545  05B2               	andwf	___fttol@f1+2,f
  1735  0546  0830               	movf	___fttol@f1,w
  1736  0547  00B9               	movwf	___fttol@lval
  1737  0548  0831               	movf	___fttol@f1+1,w
  1738  0549  00BA               	movwf	___fttol@lval+1
  1739  054A  0832               	movf	___fttol@f1+2,w
  1740  054B  00BB               	movwf	___fttol@lval+2
  1741  054C  01BC               	clrf	___fttol@lval+3
  1742  054D  308E               	movlw	142
  1743  054E  02BD               	subwf	___fttol@exp1,f
  1744  054F  1FBD               	btfss	___fttol@exp1,7
  1745  0550  2D6D               	goto	l1430
  1746  0551  083D               	movf	___fttol@exp1,w
  1747  0552  3A80               	xorlw	128
  1748  0553  3E8F               	addlw	143
  1749  0554  1803               	skipnc
  1750  0555  2D5F               	goto	l1428
  1751  0556  3000               	movlw	0
  1752  0557  00B3               	movwf	?___fttol+3
  1753  0558  3000               	movlw	0
  1754  0559  00B2               	movwf	?___fttol+2
  1755  055A  3000               	movlw	0
  1756  055B  00B1               	movwf	?___fttol+1
  1757  055C  3000               	movlw	0
  1758  055D  00B0               	movwf	?___fttol
  1759  055E  0008               	return
  1760  055F                     l1428:	
  1761  055F  3001               	movlw	1
  1762  0560                     u1195:	
  1763  0560  36BC               	lsrf	___fttol@lval+3,f
  1764  0561  0CBB               	rrf	___fttol@lval+2,f
  1765  0562  0CBA               	rrf	___fttol@lval+1,f
  1766  0563  0CB9               	rrf	___fttol@lval,f
  1767  0564  0B89               	decfsz	9,f
  1768  0565  2D60               	goto	u1195
  1769  0566  3001               	movlw	1
  1770  0567  00B4               	movwf	??___fttol
  1771  0568  0834               	movf	??___fttol,w
  1772  0569  07BD               	addwf	___fttol@exp1,f
  1773  056A  1903               	btfsc	3,2
  1774  056B  2D86               	goto	l1438
  1775  056C  2D5F               	goto	l1428
  1776  056D                     l1430:	
  1777  056D  3018               	movlw	24
  1778  056E  023D               	subwf	___fttol@exp1,w
  1779  056F  1C03               	skipc
  1780  0570  2D83               	goto	l482
  1781  0571  3000               	movlw	0
  1782  0572  00B3               	movwf	?___fttol+3
  1783  0573  3000               	movlw	0
  1784  0574  00B2               	movwf	?___fttol+2
  1785  0575  3000               	movlw	0
  1786  0576  00B1               	movwf	?___fttol+1
  1787  0577  3000               	movlw	0
  1788  0578  00B0               	movwf	?___fttol
  1789  0579  0008               	return
  1790  057A                     l1436:	
  1791  057A  3001               	movlw	1
  1792  057B                     u1225:	
  1793  057B  35B9               	lslf	___fttol@lval,f
  1794  057C  0DBA               	rlf	___fttol@lval+1,f
  1795  057D  0DBB               	rlf	___fttol@lval+2,f
  1796  057E  0DBC               	rlf	___fttol@lval+3,f
  1797  057F  0B89               	decfsz	9,f
  1798  0580  2D7B               	goto	u1225
  1799  0581  3001               	movlw	1
  1800  0582  02BD               	subwf	___fttol@exp1,f
  1801  0583                     l482:	
  1802  0583  083D               	movf	___fttol@exp1,w
  1803  0584  1D03               	btfss	3,2
  1804  0585  2D7A               	goto	l1436
  1805  0586                     l1438:	
  1806  0586  0838               	movf	___fttol@sign1,w
  1807  0587  1903               	btfsc	3,2
  1808  0588  2D94               	goto	l1442
  1809  0589  09B9               	comf	___fttol@lval,f
  1810  058A  09BA               	comf	___fttol@lval+1,f
  1811  058B  09BB               	comf	___fttol@lval+2,f
  1812  058C  09BC               	comf	___fttol@lval+3,f
  1813  058D  0AB9               	incf	___fttol@lval,f
  1814  058E  1903               	skipnz
  1815  058F  0ABA               	incf	___fttol@lval+1,f
  1816  0590  1903               	skipnz
  1817  0591  0ABB               	incf	___fttol@lval+2,f
  1818  0592  1903               	skipnz
  1819  0593  0ABC               	incf	___fttol@lval+3,f
  1820  0594                     l1442:	
  1821  0594  083C               	movf	___fttol@lval+3,w
  1822  0595  00B3               	movwf	?___fttol+3
  1823  0596  083B               	movf	___fttol@lval+2,w
  1824  0597  00B2               	movwf	?___fttol+2
  1825  0598  083A               	movf	___fttol@lval+1,w
  1826  0599  00B1               	movwf	?___fttol+1
  1827  059A  0839               	movf	___fttol@lval,w
  1828  059B  00B0               	movwf	?___fttol
  1829  059C  0008               	return
  1830  059D                     __end_of___fttol:	
  1831                           
  1832                           	psect	text6
  1833  059D                     __ptext6:	
  1834 ;; *************** function ___ftdiv *****************
  1835 ;; Defined at:
  1836 ;;		line 56 in file "/opt/microchip/xc8/v1.45/sources/common/ftdiv.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  f2              3    0[BANK0 ] float 
  1839 ;;  f1              3    3[BANK0 ] float 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  f3              3   11[BANK0 ] float 
  1842 ;;  sign            1   15[BANK0 ] unsigned char 
  1843 ;;  exp             1   14[BANK0 ] unsigned char 
  1844 ;;  cntr            1   10[BANK0 ] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  3    0[BANK0 ] float 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0, pclath, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1854 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1856 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1857 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1858 ;;Total ram usage:       16 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    1
  1861 ;; This function calls:
  1862 ;;		___ftpack
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function ___ftdiv
  1870  059D                     ___ftdiv:	
  1871                           
  1872                           ;incstack = 0
  1873                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1874  059D  0020               	movlb	0	; select bank0
  1875  059E  0823               	movf	___ftdiv@f1,w
  1876  059F  00A6               	movwf	??___ftdiv
  1877  05A0  0824               	movf	___ftdiv@f1+1,w
  1878  05A1  00A7               	movwf	??___ftdiv+1
  1879  05A2  0825               	movf	___ftdiv@f1+2,w
  1880  05A3  00A8               	movwf	??___ftdiv+2
  1881  05A4  1003               	clrc
  1882  05A5  0D27               	rlf	??___ftdiv+1,w
  1883  05A6  0D28               	rlf	??___ftdiv+2,w
  1884  05A7  00A9               	movwf	??___ftdiv+3
  1885  05A8  0829               	movf	??___ftdiv+3,w
  1886  05A9  00AE               	movwf	___ftdiv@exp
  1887  05AA  082E               	movf	___ftdiv@exp,w
  1888  05AB  1D03               	btfss	3,2
  1889  05AC  2DB4               	goto	l1368
  1890  05AD  3000               	movlw	0
  1891  05AE  00A0               	movwf	?___ftdiv
  1892  05AF  3000               	movlw	0
  1893  05B0  00A1               	movwf	?___ftdiv+1
  1894  05B1  3000               	movlw	0
  1895  05B2  00A2               	movwf	?___ftdiv+2
  1896  05B3  0008               	return
  1897  05B4                     l1368:	
  1898  05B4  0820               	movf	___ftdiv@f2,w
  1899  05B5  00A6               	movwf	??___ftdiv
  1900  05B6  0821               	movf	___ftdiv@f2+1,w
  1901  05B7  00A7               	movwf	??___ftdiv+1
  1902  05B8  0822               	movf	___ftdiv@f2+2,w
  1903  05B9  00A8               	movwf	??___ftdiv+2
  1904  05BA  1003               	clrc
  1905  05BB  0D27               	rlf	??___ftdiv+1,w
  1906  05BC  0D28               	rlf	??___ftdiv+2,w
  1907  05BD  00A9               	movwf	??___ftdiv+3
  1908  05BE  0829               	movf	??___ftdiv+3,w
  1909  05BF  00AF               	movwf	___ftdiv@sign
  1910  05C0  082F               	movf	___ftdiv@sign,w
  1911  05C1  1D03               	btfss	3,2
  1912  05C2  2DCA               	goto	l1374
  1913  05C3  3000               	movlw	0
  1914  05C4  00A0               	movwf	?___ftdiv
  1915  05C5  3000               	movlw	0
  1916  05C6  00A1               	movwf	?___ftdiv+1
  1917  05C7  3000               	movlw	0
  1918  05C8  00A2               	movwf	?___ftdiv+2
  1919  05C9  0008               	return
  1920  05CA                     l1374:	
  1921  05CA  3000               	movlw	0
  1922  05CB  00AB               	movwf	___ftdiv@f3
  1923  05CC  3000               	movlw	0
  1924  05CD  00AC               	movwf	___ftdiv@f3+1
  1925  05CE  3000               	movlw	0
  1926  05CF  00AD               	movwf	___ftdiv@f3+2
  1927  05D0  3089               	movlw	137
  1928  05D1  072F               	addwf	___ftdiv@sign,w
  1929  05D2  00A6               	movwf	??___ftdiv
  1930  05D3  0826               	movf	??___ftdiv,w
  1931  05D4  02AE               	subwf	___ftdiv@exp,f
  1932  05D5  0823               	movf	___ftdiv@f1,w
  1933  05D6  00A6               	movwf	??___ftdiv
  1934  05D7  0824               	movf	___ftdiv@f1+1,w
  1935  05D8  00A7               	movwf	??___ftdiv+1
  1936  05D9  0825               	movf	___ftdiv@f1+2,w
  1937  05DA  00A8               	movwf	??___ftdiv+2
  1938  05DB  3010               	movlw	16
  1939  05DC                     u1095:	
  1940  05DC  36A8               	lsrf	??___ftdiv+2,f
  1941  05DD  0CA7               	rrf	??___ftdiv+1,f
  1942  05DE  0CA6               	rrf	??___ftdiv,f
  1943  05DF  0B89               	decfsz	9,f
  1944  05E0  2DDC               	goto	u1095
  1945  05E1  0826               	movf	??___ftdiv,w
  1946  05E2  00A9               	movwf	??___ftdiv+3
  1947  05E3  0829               	movf	??___ftdiv+3,w
  1948  05E4  00AF               	movwf	___ftdiv@sign
  1949  05E5  0820               	movf	___ftdiv@f2,w
  1950  05E6  00A6               	movwf	??___ftdiv
  1951  05E7  0821               	movf	___ftdiv@f2+1,w
  1952  05E8  00A7               	movwf	??___ftdiv+1
  1953  05E9  0822               	movf	___ftdiv@f2+2,w
  1954  05EA  00A8               	movwf	??___ftdiv+2
  1955  05EB  3010               	movlw	16
  1956  05EC                     u1105:	
  1957  05EC  36A8               	lsrf	??___ftdiv+2,f
  1958  05ED  0CA7               	rrf	??___ftdiv+1,f
  1959  05EE  0CA6               	rrf	??___ftdiv,f
  1960  05EF  0B89               	decfsz	9,f
  1961  05F0  2DEC               	goto	u1105
  1962  05F1  0826               	movf	??___ftdiv,w
  1963  05F2  00A9               	movwf	??___ftdiv+3
  1964  05F3  0829               	movf	??___ftdiv+3,w
  1965  05F4  06AF               	xorwf	___ftdiv@sign,f
  1966  05F5  3080               	movlw	128
  1967  05F6  00A6               	movwf	??___ftdiv
  1968  05F7  0826               	movf	??___ftdiv,w
  1969  05F8  05AF               	andwf	___ftdiv@sign,f
  1970  05F9  17A4               	bsf	___ftdiv@f1+1,7
  1971  05FA  30FF               	movlw	255
  1972  05FB  05A3               	andwf	___ftdiv@f1,f
  1973  05FC  30FF               	movlw	255
  1974  05FD  05A4               	andwf	___ftdiv@f1+1,f
  1975  05FE  3000               	movlw	0
  1976  05FF  05A5               	andwf	___ftdiv@f1+2,f
  1977  0600  17A1               	bsf	___ftdiv@f2+1,7
  1978  0601  30FF               	movlw	255
  1979  0602  05A0               	andwf	___ftdiv@f2,f
  1980  0603  30FF               	movlw	255
  1981  0604  05A1               	andwf	___ftdiv@f2+1,f
  1982  0605  3000               	movlw	0
  1983  0606  05A2               	andwf	___ftdiv@f2+2,f
  1984  0607  3018               	movlw	24
  1985  0608  00A6               	movwf	??___ftdiv
  1986  0609  0826               	movf	??___ftdiv,w
  1987  060A  00AA               	movwf	___ftdiv@cntr
  1988  060B                     l1388:	
  1989  060B  3001               	movlw	1
  1990  060C                     u1115:	
  1991  060C  35AB               	lslf	___ftdiv@f3,f
  1992  060D  0DAC               	rlf	___ftdiv@f3+1,f
  1993  060E  0DAD               	rlf	___ftdiv@f3+2,f
  1994  060F  0B89               	decfsz	9,f
  1995  0610  2E0C               	goto	u1115
  1996  0611  0822               	movf	___ftdiv@f2+2,w
  1997  0612  0225               	subwf	___ftdiv@f1+2,w
  1998  0613  1D03               	skipz
  1999  0614  2E1B               	goto	u1125
  2000  0615  0821               	movf	___ftdiv@f2+1,w
  2001  0616  0224               	subwf	___ftdiv@f1+1,w
  2002  0617  1D03               	skipz
  2003  0618  2E1B               	goto	u1125
  2004  0619  0820               	movf	___ftdiv@f2,w
  2005  061A  0223               	subwf	___ftdiv@f1,w
  2006  061B                     u1125:	
  2007  061B  1C03               	skipc
  2008  061C  2E24               	goto	l1396
  2009  061D  0820               	movf	___ftdiv@f2,w
  2010  061E  02A3               	subwf	___ftdiv@f1,f
  2011  061F  0821               	movf	___ftdiv@f2+1,w
  2012  0620  3BA4               	subwfb	___ftdiv@f1+1,f
  2013  0621  0822               	movf	___ftdiv@f2+2,w
  2014  0622  3BA5               	subwfb	___ftdiv@f1+2,f
  2015  0623  142B               	bsf	___ftdiv@f3,0
  2016  0624                     l1396:	
  2017  0624  3001               	movlw	1
  2018  0625                     u1135:	
  2019  0625  35A3               	lslf	___ftdiv@f1,f
  2020  0626  0DA4               	rlf	___ftdiv@f1+1,f
  2021  0627  0DA5               	rlf	___ftdiv@f1+2,f
  2022  0628  0B89               	decfsz	9,f
  2023  0629  2E25               	goto	u1135
  2024  062A  3001               	movlw	1
  2025  062B  02AA               	subwf	___ftdiv@cntr,f
  2026  062C  1D03               	btfss	3,2
  2027  062D  2E0B               	goto	l1388
  2028  062E  082B               	movf	___ftdiv@f3,w
  2029  062F  00F0               	movwf	___ftpack@arg
  2030  0630  082C               	movf	___ftdiv@f3+1,w
  2031  0631  00F1               	movwf	___ftpack@arg+1
  2032  0632  082D               	movf	___ftdiv@f3+2,w
  2033  0633  00F2               	movwf	___ftpack@arg+2
  2034  0634  082E               	movf	___ftdiv@exp,w
  2035  0635  00A6               	movwf	??___ftdiv
  2036  0636  0826               	movf	??___ftdiv,w
  2037  0637  00F3               	movwf	___ftpack@exp
  2038  0638  082F               	movf	___ftdiv@sign,w
  2039  0639  00A7               	movwf	??___ftdiv+1
  2040  063A  0827               	movf	??___ftdiv+1,w
  2041  063B  00F4               	movwf	___ftpack@sign
  2042  063C  3184  24B2         	fcall	___ftpack
  2043  063E  0870               	movf	?___ftpack,w
  2044  063F  0020               	movlb	0	; select bank0
  2045  0640  00A0               	movwf	?___ftdiv
  2046  0641  0871               	movf	?___ftpack+1,w
  2047  0642  00A1               	movwf	?___ftdiv+1
  2048  0643  0872               	movf	?___ftpack+2,w
  2049  0644  00A2               	movwf	?___ftdiv+2
  2050  0645  0008               	return
  2051  0646                     __end_of___ftdiv:	
  2052                           
  2053                           	psect	text7
  2054  02D2                     __ptext7:	
  2055 ;; *************** function ___awtoft *****************
  2056 ;; Defined at:
  2057 ;;		line 32 in file "/opt/microchip/xc8/v1.45/sources/common/awtoft.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  c               2    8[COMMON] int 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  sign            1   13[COMMON] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  3    8[COMMON] float 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0, pclath, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2071 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2074 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2075 ;;Total ram usage:        6 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    1
  2078 ;; This function calls:
  2079 ;;		___ftpack
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function ___awtoft
  2087  02D2                     ___awtoft:	
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2091  02D2  01FD               	clrf	___awtoft@sign
  2092  02D3  1FF9               	btfss	___awtoft@c+1,7
  2093  02D4  2ADC               	goto	l1358
  2094  02D5  09F8               	comf	___awtoft@c,f
  2095  02D6  09F9               	comf	___awtoft@c+1,f
  2096  02D7  0AF8               	incf	___awtoft@c,f
  2097  02D8  1903               	skipnz
  2098  02D9  0AF9               	incf	___awtoft@c+1,f
  2099  02DA  01FD               	clrf	___awtoft@sign
  2100  02DB  0AFD               	incf	___awtoft@sign,f
  2101  02DC                     l1358:	
  2102  02DC  0878               	movf	___awtoft@c,w
  2103  02DD  00F0               	movwf	___ftpack@arg
  2104  02DE  0879               	movf	___awtoft@c+1,w
  2105  02DF  00F1               	movwf	___ftpack@arg+1
  2106  02E0  01F2               	clrf	___ftpack@arg+2
  2107  02E1  308E               	movlw	142
  2108  02E2  00FB               	movwf	??___awtoft
  2109  02E3  087B               	movf	??___awtoft,w
  2110  02E4  00F3               	movwf	___ftpack@exp
  2111  02E5  087D               	movf	___awtoft@sign,w
  2112  02E6  00FC               	movwf	??___awtoft+1
  2113  02E7  087C               	movf	??___awtoft+1,w
  2114  02E8  00F4               	movwf	___ftpack@sign
  2115  02E9  3184  24B2         	fcall	___ftpack
  2116  02EB  0870               	movf	?___ftpack,w
  2117  02EC  00F8               	movwf	?___awtoft
  2118  02ED  0871               	movf	?___ftpack+1,w
  2119  02EE  00F9               	movwf	?___awtoft+1
  2120  02EF  0872               	movf	?___ftpack+2,w
  2121  02F0  00FA               	movwf	?___awtoft+2
  2122  02F1  0008               	return
  2123  02F2                     __end_of___awtoft:	
  2124                           
  2125                           	psect	text8
  2126  04B2                     __ptext8:	
  2127 ;; *************** function ___ftpack *****************
  2128 ;; Defined at:
  2129 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/float.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  arg             3    0[COMMON] unsigned um
  2132 ;;  exp             1    3[COMMON] unsigned char 
  2133 ;;  sign            1    4[COMMON] unsigned char 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  3    0[COMMON] float 
  2138 ;; Registers used:
  2139 ;;		wreg, status,2, status,0
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2145 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2149 ;;Total ram usage:        8 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		___awtoft
  2155 ;;		___ftdiv
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function ___ftpack
  2161  04B2                     ___ftpack:	
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2165  04B2  0873               	movf	___ftpack@exp,w
  2166  04B3  1903               	btfsc	3,2
  2167  04B4  2CBA               	goto	l1134
  2168  04B5  0872               	movf	___ftpack@arg+2,w
  2169  04B6  0471               	iorwf	___ftpack@arg+1,w
  2170  04B7  0470               	iorwf	___ftpack@arg,w
  2171  04B8  1D03               	skipz
  2172  04B9  2CCB               	goto	l1140
  2173  04BA                     l1134:	
  2174  04BA  3000               	movlw	0
  2175  04BB  00F0               	movwf	?___ftpack
  2176  04BC  3000               	movlw	0
  2177  04BD  00F1               	movwf	?___ftpack+1
  2178  04BE  3000               	movlw	0
  2179  04BF  00F2               	movwf	?___ftpack+2
  2180  04C0  0008               	return
  2181  04C1                     l1138:	
  2182  04C1  3001               	movlw	1
  2183  04C2  00F5               	movwf	??___ftpack
  2184  04C3  0875               	movf	??___ftpack,w
  2185  04C4  07F3               	addwf	___ftpack@exp,f
  2186  04C5  3001               	movlw	1
  2187  04C6                     u705:	
  2188  04C6  36F2               	lsrf	___ftpack@arg+2,f
  2189  04C7  0CF1               	rrf	___ftpack@arg+1,f
  2190  04C8  0CF0               	rrf	___ftpack@arg,f
  2191  04C9  0B89               	decfsz	9,f
  2192  04CA  2CC6               	goto	u705
  2193  04CB                     l1140:	
  2194  04CB  30FE               	movlw	254
  2195  04CC  0572               	andwf	___ftpack@arg+2,w
  2196  04CD  1903               	btfsc	3,2
  2197  04CE  2CE4               	goto	l391
  2198  04CF  2CC1               	goto	l1138
  2199  04D0                     l1142:	
  2200  04D0  3001               	movlw	1
  2201  04D1  00F5               	movwf	??___ftpack
  2202  04D2  0875               	movf	??___ftpack,w
  2203  04D3  07F3               	addwf	___ftpack@exp,f
  2204  04D4  3001               	movlw	1
  2205  04D5  07F0               	addwf	___ftpack@arg,f
  2206  04D6  3000               	movlw	0
  2207  04D7  1803               	skipnc
  2208  04D8  3001               	movlw	1
  2209  04D9  07F1               	addwf	___ftpack@arg+1,f
  2210  04DA  3000               	movlw	0
  2211  04DB  1803               	skipnc
  2212  04DC  3001               	movlw	1
  2213  04DD  07F2               	addwf	___ftpack@arg+2,f
  2214  04DE  3001               	movlw	1
  2215  04DF                     u725:	
  2216  04DF  36F2               	lsrf	___ftpack@arg+2,f
  2217  04E0  0CF1               	rrf	___ftpack@arg+1,f
  2218  04E1  0CF0               	rrf	___ftpack@arg,f
  2219  04E2  0B89               	decfsz	9,f
  2220  04E3  2CDF               	goto	u725
  2221  04E4                     l391:	
  2222  04E4  30FF               	movlw	255
  2223  04E5  0572               	andwf	___ftpack@arg+2,w
  2224  04E6  1903               	btfsc	3,2
  2225  04E7  2CF1               	goto	l1150
  2226  04E8  2CD0               	goto	l1142
  2227  04E9                     l1148:	
  2228  04E9  3001               	movlw	1
  2229  04EA  02F3               	subwf	___ftpack@exp,f
  2230  04EB  3001               	movlw	1
  2231  04EC                     u745:	
  2232  04EC  35F0               	lslf	___ftpack@arg,f
  2233  04ED  0DF1               	rlf	___ftpack@arg+1,f
  2234  04EE  0DF2               	rlf	___ftpack@arg+2,f
  2235  04EF  0B89               	decfsz	9,f
  2236  04F0  2CEC               	goto	u745
  2237  04F1                     l1150:	
  2238  04F1  1BF1               	btfsc	___ftpack@arg+1,7
  2239  04F2  2CF7               	goto	l398
  2240  04F3  3002               	movlw	2
  2241  04F4  0273               	subwf	___ftpack@exp,w
  2242  04F5  1803               	skipnc
  2243  04F6  2CE9               	goto	l1148
  2244  04F7                     l398:	
  2245  04F7  1873               	btfsc	___ftpack@exp,0
  2246  04F8  2CFF               	goto	l399
  2247  04F9  30FF               	movlw	255
  2248  04FA  05F0               	andwf	___ftpack@arg,f
  2249  04FB  307F               	movlw	127
  2250  04FC  05F1               	andwf	___ftpack@arg+1,f
  2251  04FD  30FF               	movlw	255
  2252  04FE  05F2               	andwf	___ftpack@arg+2,f
  2253  04FF                     l399:	
  2254  04FF  1003               	clrc
  2255  0500  0CF3               	rrf	___ftpack@exp,f
  2256  0501  0873               	movf	___ftpack@exp,w
  2257  0502  00F5               	movwf	??___ftpack
  2258  0503  01F6               	clrf	??___ftpack+1
  2259  0504  01F7               	clrf	??___ftpack+2
  2260  0505  3010               	movlw	16
  2261  0506                     u785:	
  2262  0506  35F5               	lslf	??___ftpack,f
  2263  0507  0DF6               	rlf	??___ftpack+1,f
  2264  0508  0DF7               	rlf	??___ftpack+2,f
  2265  0509  0B89               	decfsz	9,f
  2266  050A  2D06               	goto	u785
  2267  050B  0875               	movf	??___ftpack,w
  2268  050C  04F0               	iorwf	___ftpack@arg,f
  2269  050D  0876               	movf	??___ftpack+1,w
  2270  050E  04F1               	iorwf	___ftpack@arg+1,f
  2271  050F  0877               	movf	??___ftpack+2,w
  2272  0510  04F2               	iorwf	___ftpack@arg+2,f
  2273  0511  0874               	movf	___ftpack@sign,w
  2274  0512  1903               	btfsc	3,2
  2275  0513  0008               	return
  2276  0514  17F2               	bsf	___ftpack@arg+2,7
  2277  0515  0008               	return
  2278  0516                     __end_of___ftpack:	
  2279                           
  2280                           	psect	text9
  2281  0457                     __ptext9:	
  2282 ;; *************** function _I2C_LCD_SWrite *****************
  2283 ;; Defined at:
  2284 ;;		line 76 in file "i2c.h"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  Slave           1    wreg     unsigned char 
  2287 ;;  Data            1    8[COMMON] PTR unsigned char 
  2288 ;;		 -> main@Sout(20), 
  2289 ;;  Max             1    9[COMMON] unsigned char 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  Slave           1    0[BANK0 ] unsigned char 
  2292 ;;  j               2    3[BANK0 ] int 
  2293 ;;  k               2    0        int 
  2294 ;;  L               1    2[BANK0 ] unsigned char 
  2295 ;;  H               1    1[BANK0 ] unsigned char 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2306 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;Total ram usage:       10 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    3
  2312 ;; This function calls:
  2313 ;;		_I2C_LCD_Busy
  2314 ;;		_i2c_Address
  2315 ;;		_i2c_Start
  2316 ;;		_i2c_Stop
  2317 ;;		_i2c_Write
  2318 ;; This function is called by:
  2319 ;;		_main
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           
  2324                           ;psect for function _I2C_LCD_SWrite
  2325  0457                     _I2C_LCD_SWrite:	
  2326                           
  2327                           ;incstack = 0
  2328                           ; Regs used in _I2C_LCD_SWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2329                           ;I2C_LCD_SWrite@Slave stored from wreg
  2330  0457  0020               	movlb	0	; select bank0
  2331  0458  00A0               	movwf	I2C_LCD_SWrite@Slave
  2332                           
  2333                           ;i2c.h: 77: int j, k;
  2334                           ;i2c.h: 78: unsigned char H, L;
  2335                           ;i2c.h: 79: i2c_Start();
  2336  0459  3182  2268  3184   	fcall	_i2c_Start
  2337                           
  2338                           ;i2c.h: 80: i2c_Address(Slave, 0);
  2339  045C  01F0               	clrf	i2c_Address@mode
  2340  045D  0020               	movlb	0	; select bank0
  2341  045E  0820               	movf	I2C_LCD_SWrite@Slave,w
  2342  045F  3182  2293  3184   	fcall	_i2c_Address
  2343                           
  2344                           ;i2c.h: 82: for (j=0; j<Max; j++){
  2345  0462  0020               	movlb	0	; select bank0
  2346  0463  01A3               	clrf	I2C_LCD_SWrite@j
  2347  0464  01A4               	clrf	I2C_LCD_SWrite@j+1
  2348  0465                     l1258:	
  2349  0465  0824               	movf	I2C_LCD_SWrite@j+1,w
  2350  0466  3A80               	xorlw	128
  2351  0467  00FA               	movwf	??_I2C_LCD_SWrite
  2352  0468  3080               	movlw	128
  2353  0469  027A               	subwf	??_I2C_LCD_SWrite,w
  2354  046A  1D03               	skipz
  2355  046B  2C6E               	goto	u955
  2356  046C  0879               	movf	I2C_LCD_SWrite@Max,w
  2357  046D  0223               	subwf	I2C_LCD_SWrite@j,w
  2358  046E                     u955:	
  2359  046E  1803               	btfsc	3,0
  2360  046F  2CAA               	goto	l1260
  2361                           
  2362                           ;i2c.h: 84: H = Data[j] & 0xF0;
  2363  0470  0020               	movlb	0	; select bank0
  2364  0471  0823               	movf	I2C_LCD_SWrite@j,w
  2365  0472  0778               	addwf	I2C_LCD_SWrite@Data,w
  2366  0473  00FA               	movwf	??_I2C_LCD_SWrite
  2367  0474  087A               	movf	??_I2C_LCD_SWrite,w
  2368  0475  0086               	movwf	6
  2369  0476  0187               	clrf	7
  2370  0477  0801               	movf	1,w
  2371  0478  39F0               	andlw	240
  2372  0479  00FB               	movwf	??_I2C_LCD_SWrite+1
  2373  047A  087B               	movf	??_I2C_LCD_SWrite+1,w
  2374  047B  00A1               	movwf	I2C_LCD_SWrite@H
  2375                           
  2376                           ;i2c.h: 85: L = Data[j] << 4 ;
  2377  047C  0823               	movf	I2C_LCD_SWrite@j,w
  2378  047D  0778               	addwf	I2C_LCD_SWrite@Data,w
  2379  047E  00FA               	movwf	??_I2C_LCD_SWrite
  2380  047F  087A               	movf	??_I2C_LCD_SWrite,w
  2381  0480  0086               	movwf	6
  2382  0481  0187               	clrf	7
  2383  0482  0801               	movf	1,w
  2384  0483  00FB               	movwf	??_I2C_LCD_SWrite+1
  2385  0484  3003               	movlw	3
  2386  0485                     u945:	
  2387  0485  35FB               	lslf	??_I2C_LCD_SWrite+1,f
  2388  0486  3EFF               	addlw	-1
  2389  0487  1D03               	skipz
  2390  0488  2C85               	goto	u945
  2391  0489  357B               	lslf	??_I2C_LCD_SWrite+1,w
  2392  048A  00FC               	movwf	??_I2C_LCD_SWrite+2
  2393  048B  087C               	movf	??_I2C_LCD_SWrite+2,w
  2394  048C  00A2               	movwf	I2C_LCD_SWrite@L
  2395                           
  2396                           ;i2c.h: 87: i2c_Write(H | 0x0D);
  2397  048D  0821               	movf	I2C_LCD_SWrite@H,w
  2398  048E  380D               	iorlw	13
  2399  048F  3182  2278  3184   	fcall	_i2c_Write
  2400                           
  2401                           ;i2c.h: 88: i2c_Write(H | 0x09);
  2402  0492  0020               	movlb	0	; select bank0
  2403  0493  0821               	movf	I2C_LCD_SWrite@H,w
  2404  0494  3809               	iorlw	9
  2405  0495  3182  2278  3184   	fcall	_i2c_Write
  2406                           
  2407                           ;i2c.h: 89: i2c_Write(L | 0x0D);
  2408  0498  0020               	movlb	0	; select bank0
  2409  0499  0822               	movf	I2C_LCD_SWrite@L,w
  2410  049A  380D               	iorlw	13
  2411  049B  3182  2278  3184   	fcall	_i2c_Write
  2412                           
  2413                           ;i2c.h: 90: i2c_Write(L | 0x09);
  2414  049E  0020               	movlb	0	; select bank0
  2415  049F  0822               	movf	I2C_LCD_SWrite@L,w
  2416  04A0  3809               	iorlw	9
  2417  04A1  3182  2278  3184   	fcall	_i2c_Write
  2418  04A4  3001               	movlw	1
  2419  04A5  0020               	movlb	0	; select bank0
  2420  04A6  07A3               	addwf	I2C_LCD_SWrite@j,f
  2421  04A7  3000               	movlw	0
  2422  04A8  3DA4               	addwfc	I2C_LCD_SWrite@j+1,f
  2423  04A9  2C65               	goto	l1258
  2424  04AA                     l1260:	
  2425                           
  2426                           ;i2c.h: 92: }
  2427                           ;i2c.h: 93: I2C_LCD_Busy(Slave);
  2428  04AA  0020               	movlb	0	; select bank0
  2429  04AB  0820               	movf	I2C_LCD_SWrite@Slave,w
  2430  04AC  3184  2400  3184   	fcall	_I2C_LCD_Busy
  2431                           
  2432                           ;i2c.h: 94: i2c_Stop();
  2433  04AF  3182  226D         	fcall	_i2c_Stop
  2434  04B1  0008               	return
  2435  04B2                     __end_of_I2C_LCD_SWrite:	
  2436                           
  2437                           	psect	text10
  2438  0386                     __ptext10:	
  2439 ;; *************** function _I2C_LCD_Pos *****************
  2440 ;; Defined at:
  2441 ;;		line 61 in file "i2c.h"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  Slave           1    wreg     unsigned char 
  2444 ;;  Pos             1    8[COMMON] unsigned char 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  Slave           1   11[COMMON] unsigned char 
  2447 ;;  LoBytex         1   13[COMMON] unsigned char 
  2448 ;;  HiBytex         1   12[COMMON] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2458 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2459 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2460 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;Total ram usage:        6 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    3
  2465 ;; This function calls:
  2466 ;;		_I2C_LCD_Busy
  2467 ;;		_i2c_Address
  2468 ;;		_i2c_Start
  2469 ;;		_i2c_Stop
  2470 ;;		_i2c_Write
  2471 ;; This function is called by:
  2472 ;;		_main
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function _I2C_LCD_Pos
  2478  0386                     _I2C_LCD_Pos:	
  2479                           
  2480                           ;incstack = 0
  2481                           ; Regs used in _I2C_LCD_Pos: [wreg+status,2+status,0+pclath+cstack]
  2482                           ;I2C_LCD_Pos@Slave stored from wreg
  2483  0386  00FB               	movwf	I2C_LCD_Pos@Slave
  2484                           
  2485                           ;i2c.h: 62: unsigned char HiBytex, LoBytex;
  2486                           ;i2c.h: 63: HiBytex = Pos & 0x70;
  2487  0387  0878               	movf	I2C_LCD_Pos@Pos,w
  2488  0388  3970               	andlw	112
  2489  0389  00F9               	movwf	??_I2C_LCD_Pos
  2490  038A  0879               	movf	??_I2C_LCD_Pos,w
  2491  038B  00FC               	movwf	I2C_LCD_Pos@HiBytex
  2492                           
  2493                           ;i2c.h: 64: LoBytex = Pos << 4;
  2494  038C  0878               	movf	I2C_LCD_Pos@Pos,w
  2495  038D  00F9               	movwf	??_I2C_LCD_Pos
  2496  038E  3003               	movlw	3
  2497  038F                     u935:	
  2498  038F  35F9               	lslf	??_I2C_LCD_Pos,f
  2499  0390  3EFF               	addlw	-1
  2500  0391  1D03               	skipz
  2501  0392  2B8F               	goto	u935
  2502  0393  3579               	lslf	??_I2C_LCD_Pos,w
  2503  0394  00FA               	movwf	??_I2C_LCD_Pos+1
  2504  0395  087A               	movf	??_I2C_LCD_Pos+1,w
  2505  0396  00FD               	movwf	I2C_LCD_Pos@LoBytex
  2506                           
  2507                           ;i2c.h: 65: i2c_Start();
  2508  0397  3182  2268  3183   	fcall	_i2c_Start
  2509                           
  2510                           ;i2c.h: 66: i2c_Address(Slave, 0);
  2511  039A  01F0               	clrf	i2c_Address@mode
  2512  039B  087B               	movf	I2C_LCD_Pos@Slave,w
  2513  039C  3182  2293  3183   	fcall	_i2c_Address
  2514                           
  2515                           ;i2c.h: 67: i2c_Write(HiBytex | 0x8C);
  2516  039F  087C               	movf	I2C_LCD_Pos@HiBytex,w
  2517  03A0  388C               	iorlw	140
  2518  03A1  3182  2278  3183   	fcall	_i2c_Write
  2519                           
  2520                           ;i2c.h: 68: i2c_Write(HiBytex | 0x88);
  2521  03A4  087C               	movf	I2C_LCD_Pos@HiBytex,w
  2522  03A5  3888               	iorlw	136
  2523  03A6  3182  2278  3183   	fcall	_i2c_Write
  2524                           
  2525                           ;i2c.h: 69: i2c_Write(LoBytex | 0x0C);
  2526  03A9  087D               	movf	I2C_LCD_Pos@LoBytex,w
  2527  03AA  380C               	iorlw	12
  2528  03AB  3182  2278  3183   	fcall	_i2c_Write
  2529                           
  2530                           ;i2c.h: 70: i2c_Write(LoBytex | 0x08);
  2531  03AE  087D               	movf	I2C_LCD_Pos@LoBytex,w
  2532  03AF  3808               	iorlw	8
  2533  03B0  3182  2278  3183   	fcall	_i2c_Write
  2534                           
  2535                           ;i2c.h: 71: Pos =I2C_LCD_Busy(Slave);
  2536  03B3  087B               	movf	I2C_LCD_Pos@Slave,w
  2537  03B4  3184  2400  3183   	fcall	_I2C_LCD_Busy
  2538  03B7  00F9               	movwf	??_I2C_LCD_Pos
  2539  03B8  0879               	movf	??_I2C_LCD_Pos,w
  2540  03B9  00F8               	movwf	I2C_LCD_Pos@Pos
  2541                           
  2542                           ;i2c.h: 72: i2c_Stop();
  2543  03BA  3182  226D         	fcall	_i2c_Stop
  2544  03BC  0008               	return
  2545  03BD                     __end_of_I2C_LCD_Pos:	
  2546                           
  2547                           	psect	text11
  2548  03BD                     __ptext11:	
  2549 ;; *************** function _I2C_LCD_Init *****************
  2550 ;; Defined at:
  2551 ;;		line 40 in file "i2c.h"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  Slave           1    wreg     unsigned char 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  Slave           1   10[COMMON] unsigned char 
  2556 ;;  Tvar1           1    9[COMMON] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2570 ;;Total ram usage:        3 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    3
  2573 ;; This function calls:
  2574 ;;		_I2C_LCD_Busy
  2575 ;;		_i2c_Address
  2576 ;;		_i2c_Start
  2577 ;;		_i2c_Stop
  2578 ;;		_i2c_Write
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           
  2585                           ;psect for function _I2C_LCD_Init
  2586  03BD                     _I2C_LCD_Init:	
  2587                           
  2588                           ;incstack = 0
  2589                           ; Regs used in _I2C_LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2590                           ;I2C_LCD_Init@Slave stored from wreg
  2591  03BD  00FA               	movwf	I2C_LCD_Init@Slave
  2592                           
  2593                           ;i2c.h: 41: unsigned char Tvar1;
  2594                           ;i2c.h: 42: i2c_Start();
  2595  03BE  3182  2268  3183   	fcall	_i2c_Start
  2596                           
  2597                           ;i2c.h: 43: i2c_Address(Slave, 0);
  2598  03C1  01F0               	clrf	i2c_Address@mode
  2599  03C2  087A               	movf	I2C_LCD_Init@Slave,w
  2600  03C3  3182  2293  3183   	fcall	_i2c_Address
  2601                           
  2602                           ;i2c.h: 44: i2c_Write(0x3C);
  2603  03C6  303C               	movlw	60
  2604  03C7  3182  2278  3183   	fcall	_i2c_Write
  2605                           
  2606                           ;i2c.h: 45: i2c_Write(0x38);
  2607  03CA  3038               	movlw	56
  2608  03CB  3182  2278  3183   	fcall	_i2c_Write
  2609                           
  2610                           ;i2c.h: 46: i2c_Write(0x3C);
  2611  03CE  303C               	movlw	60
  2612  03CF  3182  2278  3183   	fcall	_i2c_Write
  2613                           
  2614                           ;i2c.h: 47: i2c_Write(0x38);
  2615  03D2  3038               	movlw	56
  2616  03D3  3182  2278  3183   	fcall	_i2c_Write
  2617                           
  2618                           ;i2c.h: 48: i2c_Write(0x3C);
  2619  03D6  303C               	movlw	60
  2620  03D7  3182  2278  3183   	fcall	_i2c_Write
  2621                           
  2622                           ;i2c.h: 49: i2c_Write(0x38);
  2623  03DA  3038               	movlw	56
  2624  03DB  3182  2278  3183   	fcall	_i2c_Write
  2625                           
  2626                           ;i2c.h: 50: i2c_Write(0x2C);
  2627  03DE  302C               	movlw	44
  2628  03DF  3182  2278  3183   	fcall	_i2c_Write
  2629                           
  2630                           ;i2c.h: 51: i2c_Write(0x28);
  2631  03E2  3028               	movlw	40
  2632  03E3  3182  2278  3183   	fcall	_i2c_Write
  2633                           
  2634                           ;i2c.h: 52: i2c_Write(0x0C);
  2635  03E6  300C               	movlw	12
  2636  03E7  3182  2278  3183   	fcall	_i2c_Write
  2637                           
  2638                           ;i2c.h: 53: i2c_Write(0x08);
  2639  03EA  3008               	movlw	8
  2640  03EB  3182  2278  3183   	fcall	_i2c_Write
  2641                           
  2642                           ;i2c.h: 54: i2c_Write(0xFC);
  2643  03EE  30FC               	movlw	252
  2644  03EF  3182  2278  3183   	fcall	_i2c_Write
  2645                           
  2646                           ;i2c.h: 55: i2c_Write(0xF8);
  2647  03F2  30F8               	movlw	248
  2648  03F3  3182  2278  3183   	fcall	_i2c_Write
  2649                           
  2650                           ;i2c.h: 56: Tvar1=I2C_LCD_Busy(Slave);
  2651  03F6  087A               	movf	I2C_LCD_Init@Slave,w
  2652  03F7  3184  2400  3183   	fcall	_I2C_LCD_Busy
  2653  03FA  00F8               	movwf	??_I2C_LCD_Init
  2654  03FB  0878               	movf	??_I2C_LCD_Init,w
  2655  03FC  00F9               	movwf	I2C_LCD_Init@Tvar1
  2656                           
  2657                           ;i2c.h: 57: i2c_Stop();
  2658  03FD  3182  226D         	fcall	_i2c_Stop
  2659  03FF  0008               	return
  2660  0400                     __end_of_I2C_LCD_Init:	
  2661                           
  2662                           	psect	text12
  2663  031E                     __ptext12:	
  2664 ;; *************** function _I2C_LCD_Command *****************
  2665 ;; Defined at:
  2666 ;;		line 98 in file "i2c.h"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  Slave           1    wreg     unsigned char 
  2669 ;;  Cmd             1    8[COMMON] unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  Slave           1   11[COMMON] unsigned char 
  2672 ;;  LoBytex         1   13[COMMON] unsigned char 
  2673 ;;  HiBytex         1   12[COMMON] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2683 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2686 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2687 ;;Total ram usage:        6 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    3
  2690 ;; This function calls:
  2691 ;;		_I2C_LCD_Busy
  2692 ;;		_i2c_Address
  2693 ;;		_i2c_Start
  2694 ;;		_i2c_Stop
  2695 ;;		_i2c_Write
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           
  2702                           ;psect for function _I2C_LCD_Command
  2703  031E                     _I2C_LCD_Command:	
  2704                           
  2705                           ;incstack = 0
  2706                           ; Regs used in _I2C_LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  2707                           ;I2C_LCD_Command@Slave stored from wreg
  2708  031E  00FB               	movwf	I2C_LCD_Command@Slave
  2709                           
  2710                           ;i2c.h: 100: unsigned char HiBytex, LoBytex;
  2711                           ;i2c.h: 101: HiBytex = Cmd & 0xF0;
  2712  031F  0878               	movf	I2C_LCD_Command@Cmd,w
  2713  0320  39F0               	andlw	240
  2714  0321  00F9               	movwf	??_I2C_LCD_Command
  2715  0322  0879               	movf	??_I2C_LCD_Command,w
  2716  0323  00FC               	movwf	I2C_LCD_Command@HiBytex
  2717                           
  2718                           ;i2c.h: 102: LoBytex = Cmd << 4;
  2719  0324  0878               	movf	I2C_LCD_Command@Cmd,w
  2720  0325  00F9               	movwf	??_I2C_LCD_Command
  2721  0326  3003               	movlw	3
  2722  0327                     u965:	
  2723  0327  35F9               	lslf	??_I2C_LCD_Command,f
  2724  0328  3EFF               	addlw	-1
  2725  0329  1D03               	skipz
  2726  032A  2B27               	goto	u965
  2727  032B  3579               	lslf	??_I2C_LCD_Command,w
  2728  032C  00FA               	movwf	??_I2C_LCD_Command+1
  2729  032D  087A               	movf	??_I2C_LCD_Command+1,w
  2730  032E  00FD               	movwf	I2C_LCD_Command@LoBytex
  2731                           
  2732                           ;i2c.h: 103: i2c_Start();
  2733  032F  3182  2268  3183   	fcall	_i2c_Start
  2734                           
  2735                           ;i2c.h: 104: i2c_Address(Slave, 0);
  2736  0332  01F0               	clrf	i2c_Address@mode
  2737  0333  087B               	movf	I2C_LCD_Command@Slave,w
  2738  0334  3182  2293  3183   	fcall	_i2c_Address
  2739                           
  2740                           ;i2c.h: 105: i2c_Write(HiBytex | 0x0C);
  2741  0337  087C               	movf	I2C_LCD_Command@HiBytex,w
  2742  0338  380C               	iorlw	12
  2743  0339  3182  2278  3183   	fcall	_i2c_Write
  2744                           
  2745                           ;i2c.h: 106: i2c_Write(HiBytex | 0x08);
  2746  033C  087C               	movf	I2C_LCD_Command@HiBytex,w
  2747  033D  3808               	iorlw	8
  2748  033E  3182  2278  3183   	fcall	_i2c_Write
  2749                           
  2750                           ;i2c.h: 107: i2c_Write(LoBytex | 0x0C);
  2751  0341  087D               	movf	I2C_LCD_Command@LoBytex,w
  2752  0342  380C               	iorlw	12
  2753  0343  3182  2278  3183   	fcall	_i2c_Write
  2754                           
  2755                           ;i2c.h: 108: i2c_Write(LoBytex | 0x08);
  2756  0346  087D               	movf	I2C_LCD_Command@LoBytex,w
  2757  0347  3808               	iorlw	8
  2758  0348  3182  2278  3183   	fcall	_i2c_Write
  2759                           
  2760                           ;i2c.h: 109: I2C_LCD_Busy(Slave);
  2761  034B  087B               	movf	I2C_LCD_Command@Slave,w
  2762  034C  3184  2400  3183   	fcall	_I2C_LCD_Busy
  2763                           
  2764                           ;i2c.h: 110: i2c_Stop();
  2765  034F  3182  226D         	fcall	_i2c_Stop
  2766  0351  0008               	return
  2767  0352                     __end_of_I2C_LCD_Command:	
  2768                           
  2769                           	psect	text13
  2770  0400                     __ptext13:	
  2771 ;; *************** function _I2C_LCD_Busy *****************
  2772 ;; Defined at:
  2773 ;;		line 11 in file "i2c.h"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  Slave           1    wreg     unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  Slave           1    7[COMMON] unsigned char 
  2778 ;;  read_byte       1    6[COMMON] unsigned char 
  2779 ;;  Temp1           1    5[COMMON] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      unsigned char 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0, pclath, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2790 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2792 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2793 ;;Total ram usage:        4 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    2
  2796 ;; This function calls:
  2797 ;;		_i2c_Address
  2798 ;;		_i2c_Read
  2799 ;;		_i2c_Restart
  2800 ;;		_i2c_Start
  2801 ;;		_i2c_Stop
  2802 ;;		_i2c_Write
  2803 ;; This function is called by:
  2804 ;;		_I2C_LCD_Init
  2805 ;;		_I2C_LCD_Pos
  2806 ;;		_I2C_LCD_SWrite
  2807 ;;		_I2C_LCD_Command
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           
  2812                           ;psect for function _I2C_LCD_Busy
  2813  0400                     _I2C_LCD_Busy:	
  2814                           
  2815                           ;incstack = 0
  2816                           ; Regs used in _I2C_LCD_Busy: [wreg+status,2+status,0+pclath+cstack]
  2817                           ;I2C_LCD_Busy@Slave stored from wreg
  2818  0400  00F7               	movwf	I2C_LCD_Busy@Slave
  2819                           
  2820                           ;i2c.h: 13: unsigned char read_byte, Temp1;
  2821                           ;i2c.h: 14: i2c_Start();
  2822  0401  3182  2268  3184   	fcall	_i2c_Start
  2823                           
  2824                           ;i2c.h: 15: i2c_Address(Slave, 0);
  2825  0404  01F0               	clrf	i2c_Address@mode
  2826  0405  0877               	movf	I2C_LCD_Busy@Slave,w
  2827  0406  3182  2293  3184   	fcall	_i2c_Address
  2828                           
  2829                           ;i2c.h: 16: i2c_Write(0xFA);
  2830  0409  30FA               	movlw	250
  2831  040A  3182  2278  3184   	fcall	_i2c_Write
  2832                           
  2833                           ;i2c.h: 17: i2c_Write(0xFE);
  2834  040D  30FE               	movlw	254
  2835  040E  3182  2278  3184   	fcall	_i2c_Write
  2836                           
  2837                           ;i2c.h: 18: i2c_Restart();
  2838  0411  3182  2263  3184   	fcall	_i2c_Restart
  2839                           
  2840                           ;i2c.h: 19: i2c_Address(Slave, 1);
  2841  0414  01F0               	clrf	i2c_Address@mode
  2842  0415  0AF0               	incf	i2c_Address@mode,f
  2843  0416  0877               	movf	I2C_LCD_Busy@Slave,w
  2844  0417  3182  2293  3184   	fcall	_i2c_Address
  2845  041A                     l1100:	
  2846                           ;i2c.h: 20: while((i2c_Read(1))& 0x80);
  2847                           
  2848  041A  3001               	movlw	1
  2849  041B  3182  22B6  3184   	fcall	_i2c_Read
  2850  041E  3980               	andlw	128
  2851  041F  1D03               	btfss	3,2
  2852  0420  2C1A               	goto	l1100
  2853                           
  2854                           ;i2c.h: 21: Temp1 = i2c_Read(0);
  2855  0421  3000               	movlw	0
  2856  0422  3182  22B6  3184   	fcall	_i2c_Read
  2857  0425  00F4               	movwf	??_I2C_LCD_Busy
  2858  0426  0874               	movf	??_I2C_LCD_Busy,w
  2859  0427  00F5               	movwf	I2C_LCD_Busy@Temp1
  2860                           
  2861                           ;i2c.h: 22: Temp1 &= 0x70;
  2862  0428  3070               	movlw	112
  2863  0429  00F4               	movwf	??_I2C_LCD_Busy
  2864  042A  0874               	movf	??_I2C_LCD_Busy,w
  2865  042B  05F5               	andwf	I2C_LCD_Busy@Temp1,f
  2866                           
  2867                           ;i2c.h: 23: i2c_Restart();
  2868  042C  3182  2263  3184   	fcall	_i2c_Restart
  2869                           
  2870                           ;i2c.h: 24: i2c_Address(Slave, 0);
  2871  042F  01F0               	clrf	i2c_Address@mode
  2872  0430  0877               	movf	I2C_LCD_Busy@Slave,w
  2873  0431  3182  2293  3184   	fcall	_i2c_Address
  2874                           
  2875                           ;i2c.h: 25: i2c_Write(0xFA);
  2876  0434  30FA               	movlw	250
  2877  0435  3182  2278  3184   	fcall	_i2c_Write
  2878                           
  2879                           ;i2c.h: 26: i2c_Write(0xFE);
  2880  0438  30FE               	movlw	254
  2881  0439  3182  2278  3184   	fcall	_i2c_Write
  2882                           
  2883                           ;i2c.h: 27: i2c_Restart();
  2884  043C  3182  2263  3184   	fcall	_i2c_Restart
  2885                           
  2886                           ;i2c.h: 28: i2c_Address(Slave, 1);
  2887  043F  01F0               	clrf	i2c_Address@mode
  2888  0440  0AF0               	incf	i2c_Address@mode,f
  2889  0441  0877               	movf	I2C_LCD_Busy@Slave,w
  2890  0442  3182  2293  3184   	fcall	_i2c_Address
  2891                           
  2892                           ;i2c.h: 29: read_byte = i2c_Read(0);
  2893  0445  3000               	movlw	0
  2894  0446  3182  22B6  3184   	fcall	_i2c_Read
  2895  0449  00F4               	movwf	??_I2C_LCD_Busy
  2896  044A  0874               	movf	??_I2C_LCD_Busy,w
  2897  044B  00F6               	movwf	I2C_LCD_Busy@read_byte
  2898                           
  2899                           ;i2c.h: 30: read_byte >>= 4;
  2900  044C  0EF6               	swapf	I2C_LCD_Busy@read_byte,f
  2901  044D  300F               	movlw	15
  2902  044E  05F6               	andwf	I2C_LCD_Busy@read_byte,f
  2903                           
  2904                           ;i2c.h: 31: read_byte += Temp1;
  2905  044F  0875               	movf	I2C_LCD_Busy@Temp1,w
  2906  0450  00F4               	movwf	??_I2C_LCD_Busy
  2907  0451  0874               	movf	??_I2C_LCD_Busy,w
  2908  0452  07F6               	addwf	I2C_LCD_Busy@read_byte,f
  2909                           
  2910                           ;i2c.h: 32: i2c_Stop();
  2911  0453  3182  226D         	fcall	_i2c_Stop
  2912                           
  2913                           ;i2c.h: 33: return read_byte;
  2914  0455  0876               	movf	I2C_LCD_Busy@read_byte,w
  2915  0456  0008               	return
  2916  0457                     __end_of_I2C_LCD_Busy:	
  2917                           
  2918                           	psect	text14
  2919  0278                     __ptext14:	
  2920 ;; *************** function _i2c_Write *****************
  2921 ;; Defined at:
  2922 ;;		line 54 in file "i2c_LCD.h"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  data            1    wreg     unsigned char 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  data            1    0[COMMON] unsigned char 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0, pclath, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2940 ;;Total ram usage:        1 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    1
  2943 ;; This function calls:
  2944 ;;		_i2c_Wait
  2945 ;; This function is called by:
  2946 ;;		_I2C_LCD_Busy
  2947 ;;		_I2C_LCD_Init
  2948 ;;		_I2C_LCD_Pos
  2949 ;;		_I2C_LCD_SWrite
  2950 ;;		_I2C_LCD_Command
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           
  2955                           ;psect for function _i2c_Write
  2956  0278                     _i2c_Write:	
  2957                           
  2958                           ;incstack = 0
  2959                           ; Regs used in _i2c_Write: [wreg+status,2+status,0+pclath+cstack]
  2960                           ;i2c_Write@data stored from wreg
  2961  0278  00F0               	movwf	i2c_Write@data
  2962                           
  2963                           ;i2c_LCD.h: 56: i2c_Wait();
  2964  0279  3182  227F         	fcall	_i2c_Wait
  2965                           
  2966                           ;i2c_LCD.h: 57: SSP1BUF = data;
  2967  027B  0870               	movf	i2c_Write@data,w
  2968  027C  0024               	movlb	4	; select bank4
  2969  027D  0091               	movwf	17	;volatile
  2970  027E  0008               	return
  2971  027F                     __end_of_i2c_Write:	
  2972                           
  2973                           	psect	text15
  2974  026D                     __ptext15:	
  2975 ;; *************** function _i2c_Stop *****************
  2976 ;; Defined at:
  2977 ;;		line 47 in file "i2c_LCD.h"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0, pclath, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    1
  2998 ;; This function calls:
  2999 ;;		_i2c_Wait
  3000 ;; This function is called by:
  3001 ;;		_I2C_LCD_Busy
  3002 ;;		_I2C_LCD_Init
  3003 ;;		_I2C_LCD_Pos
  3004 ;;		_I2C_LCD_SWrite
  3005 ;;		_I2C_LCD_Command
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           
  3010                           ;psect for function _i2c_Stop
  3011  026D                     _i2c_Stop:	
  3012                           
  3013                           ;i2c_LCD.h: 49: i2c_Wait();
  3014                           
  3015                           ;incstack = 0
  3016                           ; Regs used in _i2c_Stop: [wreg+status,2+status,0+pclath+cstack]
  3017  026D  3182  227F         	fcall	_i2c_Wait
  3018                           
  3019                           ;i2c_LCD.h: 50: SSP1CON2bits.PEN=1;
  3020  026F  0024               	movlb	4	; select bank4
  3021  0270  1516               	bsf	22,2	;volatile
  3022  0271  0008               	return
  3023  0272                     __end_of_i2c_Stop:	
  3024                           
  3025                           	psect	text16
  3026  0268                     __ptext16:	
  3027 ;; *************** function _i2c_Start *****************
  3028 ;; Defined at:
  3029 ;;		line 34 in file "i2c_LCD.h"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0, pclath, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3047 ;;Total ram usage:        0 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    1
  3050 ;; This function calls:
  3051 ;;		_i2c_Wait
  3052 ;; This function is called by:
  3053 ;;		_I2C_LCD_Busy
  3054 ;;		_I2C_LCD_Init
  3055 ;;		_I2C_LCD_Pos
  3056 ;;		_I2C_LCD_SWrite
  3057 ;;		_I2C_LCD_Command
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           
  3062                           ;psect for function _i2c_Start
  3063  0268                     _i2c_Start:	
  3064                           
  3065                           ;i2c_LCD.h: 36: i2c_Wait();
  3066                           
  3067                           ;incstack = 0
  3068                           ; Regs used in _i2c_Start: [wreg+status,2+status,0+pclath+cstack]
  3069  0268  3182  227F         	fcall	_i2c_Wait
  3070                           
  3071                           ;i2c_LCD.h: 37: SSP1CON2bits.SEN=1;
  3072  026A  0024               	movlb	4	; select bank4
  3073  026B  1416               	bsf	22,0	;volatile
  3074  026C  0008               	return
  3075  026D                     __end_of_i2c_Start:	
  3076                           
  3077                           	psect	text17
  3078  0263                     __ptext17:	
  3079 ;; *************** function _i2c_Restart *****************
  3080 ;; Defined at:
  3081 ;;		line 41 in file "i2c_LCD.h"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;		None
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2, status,0, pclath, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3099 ;;Total ram usage:        0 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; Hardware stack levels required when called:    1
  3102 ;; This function calls:
  3103 ;;		_i2c_Wait
  3104 ;; This function is called by:
  3105 ;;		_I2C_LCD_Busy
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           
  3110                           ;psect for function _i2c_Restart
  3111  0263                     _i2c_Restart:	
  3112                           
  3113                           ;i2c_LCD.h: 42: i2c_Wait();
  3114                           
  3115                           ;incstack = 0
  3116                           ; Regs used in _i2c_Restart: [wreg+status,2+status,0+pclath+cstack]
  3117  0263  3182  227F         	fcall	_i2c_Wait
  3118                           
  3119                           ;i2c_LCD.h: 43: SSP1CON2bits.RSEN=1;
  3120  0265  0024               	movlb	4	; select bank4
  3121  0266  1496               	bsf	22,1	;volatile
  3122  0267  0008               	return
  3123  0268                     __end_of_i2c_Restart:	
  3124                           
  3125                           	psect	text18
  3126  02B6                     __ptext18:	
  3127 ;; *************** function _i2c_Read *****************
  3128 ;; Defined at:
  3129 ;;		line 73 in file "i2c_LCD.h"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  ack             1    wreg     unsigned char 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  ack             1    1[COMMON] unsigned char 
  3134 ;;  i2cReadData     1    2[COMMON] unsigned char 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      unsigned char 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0, pclath, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3145 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3146 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3147 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3148 ;;Total ram usage:        3 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    1
  3151 ;; This function calls:
  3152 ;;		_i2c_Wait
  3153 ;; This function is called by:
  3154 ;;		_I2C_LCD_Busy
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           
  3159                           ;psect for function _i2c_Read
  3160  02B6                     _i2c_Read:	
  3161                           
  3162                           ;incstack = 0
  3163                           ; Regs used in _i2c_Read: [wreg+status,2+status,0+pclath+cstack]
  3164                           ;i2c_Read@ack stored from wreg
  3165  02B6  00F1               	movwf	i2c_Read@ack
  3166                           
  3167                           ;i2c_LCD.h: 78: unsigned char i2cReadData;
  3168                           ;i2c_LCD.h: 80: i2c_Wait();
  3169  02B7  3182  227F  3182   	fcall	_i2c_Wait
  3170                           
  3171                           ;i2c_LCD.h: 81: SSP1CON2bits.RCEN=1;
  3172  02BA  0024               	movlb	4	; select bank4
  3173  02BB  1596               	bsf	22,3	;volatile
  3174                           
  3175                           ;i2c_LCD.h: 82: i2c_Wait();
  3176  02BC  3182  227F  3182   	fcall	_i2c_Wait
  3177                           
  3178                           ;i2c_LCD.h: 83: i2cReadData = SSP1BUF;
  3179  02BF  0024               	movlb	4	; select bank4
  3180  02C0  0811               	movf	17,w	;volatile
  3181  02C1  00F0               	movwf	??_i2c_Read
  3182  02C2  0870               	movf	??_i2c_Read,w
  3183  02C3  00F2               	movwf	i2c_Read@i2cReadData
  3184                           
  3185                           ;i2c_LCD.h: 84: i2c_Wait();
  3186  02C4  3182  227F  3182   	fcall	_i2c_Wait
  3187                           
  3188                           ;i2c_LCD.h: 85: if ( ack ) SSP1CON2bits.ACKDT=0;
  3189  02C7  0871               	movf	i2c_Read@ack,w
  3190  02C8  1903               	btfsc	3,2
  3191  02C9  2ACD               	goto	l73
  3192  02CA  0024               	movlb	4	; select bank4
  3193  02CB  1296               	bcf	22,5	;volatile
  3194  02CC  2ACF               	goto	l74
  3195  02CD                     l73:	
  3196                           
  3197                           ;i2c_LCD.h: 86: else SSP1CON2bits.ACKDT=1;
  3198  02CD  0024               	movlb	4	; select bank4
  3199  02CE  1696               	bsf	22,5	;volatile
  3200  02CF                     l74:	
  3201                           
  3202                           ;i2c_LCD.h: 87: SSP1CON2bits.ACKEN=1;
  3203  02CF  1616               	bsf	22,4	;volatile
  3204                           
  3205                           ;i2c_LCD.h: 89: return( i2cReadData );
  3206  02D0  0872               	movf	i2c_Read@i2cReadData,w
  3207  02D1  0008               	return
  3208  02D2                     __end_of_i2c_Read:	
  3209                           
  3210                           	psect	text19
  3211  0293                     __ptext19:	
  3212 ;; *************** function _i2c_Address *****************
  3213 ;; Defined at:
  3214 ;;		line 62 in file "i2c_LCD.h"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  address         1    wreg     unsigned char 
  3217 ;;  mode            1    0[COMMON] unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  address         1    2[COMMON] unsigned char 
  3220 ;;  l_address       1    3[COMMON] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3230 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;Total ram usage:        4 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    1
  3237 ;; This function calls:
  3238 ;;		_i2c_Wait
  3239 ;; This function is called by:
  3240 ;;		_I2C_LCD_Busy
  3241 ;;		_I2C_LCD_Init
  3242 ;;		_I2C_LCD_Pos
  3243 ;;		_I2C_LCD_SWrite
  3244 ;;		_I2C_LCD_Command
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           
  3249                           ;psect for function _i2c_Address
  3250  0293                     _i2c_Address:	
  3251                           
  3252                           ;incstack = 0
  3253                           ; Regs used in _i2c_Address: [wreg+status,2+status,0+pclath+cstack]
  3254                           ;i2c_Address@address stored from wreg
  3255  0293  00F2               	movwf	i2c_Address@address
  3256                           
  3257                           ;i2c_LCD.h: 64: unsigned char l_address;
  3258                           ;i2c_LCD.h: 66: l_address=address<<1;
  3259  0294  3572               	lslf	i2c_Address@address,w
  3260  0295  00F1               	movwf	??_i2c_Address
  3261  0296  0871               	movf	??_i2c_Address,w
  3262  0297  00F3               	movwf	i2c_Address@l_address
  3263                           
  3264                           ;i2c_LCD.h: 67: l_address+=mode;
  3265  0298  0870               	movf	i2c_Address@mode,w
  3266  0299  00F1               	movwf	??_i2c_Address
  3267  029A  0871               	movf	??_i2c_Address,w
  3268  029B  07F3               	addwf	i2c_Address@l_address,f
  3269                           
  3270                           ;i2c_LCD.h: 68: i2c_Wait();
  3271  029C  3182  227F         	fcall	_i2c_Wait
  3272                           
  3273                           ;i2c_LCD.h: 69: SSP1BUF = l_address;
  3274  029E  0873               	movf	i2c_Address@l_address,w
  3275  029F  0024               	movlb	4	; select bank4
  3276  02A0  0091               	movwf	17	;volatile
  3277  02A1  0008               	return
  3278  02A2                     __end_of_i2c_Address:	
  3279                           
  3280                           	psect	text20
  3281  027F                     __ptext20:	
  3282 ;; *************** function _i2c_Wait *****************
  3283 ;; Defined at:
  3284 ;;		line 29 in file "i2c_LCD.h"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;		None
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;		None
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3302 ;;Total ram usage:        0 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_i2c_Start
  3308 ;;		_i2c_Restart
  3309 ;;		_i2c_Stop
  3310 ;;		_i2c_Write
  3311 ;;		_i2c_Address
  3312 ;;		_i2c_Read
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           
  3317                           ;psect for function _i2c_Wait
  3318  027F                     _i2c_Wait:	
  3319  027F                     l1056:	
  3320                           ;i2c_LCD.h: 30: while ( ( SSP1CON2 & 0x1F ) || ( SSP1STAT & 0x04 ) );
  3321                           
  3322                           ;incstack = 0
  3323                           ; Regs used in _i2c_Wait: [wreg+status,2]
  3324                           
  3325  027F  0024               	movlb	4	; select bank4
  3326  0280  0816               	movf	22,w	;volatile
  3327  0281  391F               	andlw	31
  3328  0282  1D03               	btfss	3,2
  3329  0283  2A7F               	goto	l1056
  3330  0284  1D14               	btfss	20,2	;volatile
  3331  0285  0008               	return
  3332  0286  2A7F               	goto	l1056
  3333  0287                     __end_of_i2c_Wait:	
  3334                           
  3335                           	psect	text21
  3336  02A2                     __ptext21:	
  3337 ;; *************** function _ADC_Read *****************
  3338 ;; Defined at:
  3339 ;;		line 55 in file "main.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;		None
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;		None
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  2    0[COMMON] unsigned int 
  3346 ;; Registers used:
  3347 ;;		wreg
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3357 ;;Total ram usage:        3 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _ADC_Read
  3368  02A2                     _ADC_Read:	
  3369                           
  3370                           ;main.c: 57: ADCON0 = 0b00101101;
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in _ADC_Read: [wreg]
  3374  02A2  302D               	movlw	45
  3375  02A3  0021               	movlb	1	; select bank1
  3376  02A4  009D               	movwf	29	;volatile
  3377                           
  3378                           ;main.c: 59: _delay((unsigned long)((2)*(8000000/4000.0)));
  3379  02A5  3006               	movlw	6
  3380  02A6  00F2               	movwf	??_ADC_Read
  3381  02A7  3030               	movlw	48
  3382  02A8                     u1307:	
  3383  02A8  0B89               	decfsz	9,f
  3384  02A9  2AA8               	goto	u1307
  3385  02AA  0BF2               	decfsz	??_ADC_Read,f
  3386  02AB  2AA8               	goto	u1307
  3387  02AC  3200               	nop2
  3388                           
  3389                           ;main.c: 60: GO_nDONE = 1;
  3390  02AD  0021               	movlb	1	; select bank1
  3391  02AE  149D               	bsf	29,1	;volatile
  3392  02AF                     l102:	
  3393                           ;main.c: 61: while(GO_nDONE);
  3394                           
  3395  02AF  189D               	btfsc	29,1	;volatile
  3396  02B0  2AAF               	goto	l102
  3397                           
  3398                           ;main.c: 62: return ((ADRESH<<8)+ADRESL);
  3399  02B1  081C               	movf	28,w	;volatile
  3400  02B2  00F1               	movwf	?_ADC_Read+1
  3401  02B3  081B               	movf	27,w	;volatile
  3402  02B4  00F0               	movwf	?_ADC_Read
  3403  02B5  0008               	return
  3404  02B6                     __end_of_ADC_Read:	
  3405                           
  3406                           	psect	text22
  3407  0272                     __ptext22:	
  3408 ;; *************** function _ADC_Initialize *****************
  3409 ;; Defined at:
  3410 ;;		line 49 in file "main.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3428 ;;Total ram usage:        0 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function _ADC_Initialize
  3439  0272                     _ADC_Initialize:	
  3440                           
  3441                           ;main.c: 51: ADCON0 = 0b00101101;
  3442                           
  3443                           ;incstack = 0
  3444                           ; Regs used in _ADC_Initialize: [wreg]
  3445  0272  302D               	movlw	45
  3446  0273  0021               	movlb	1	; select bank1
  3447  0274  009D               	movwf	29	;volatile
  3448                           
  3449                           ;main.c: 52: ADCON1 = 0b11000000;
  3450  0275  30C0               	movlw	192
  3451  0276  009E               	movwf	30	;volatile
  3452  0277  0008               	return
  3453  0278                     __end_of_ADC_Initialize:	
  3454  007E                     btemp	set	126	;btemp
  3455  007E                     wtemp0	set	126


Data Sizes:
    Strings     43
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     57      57
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[1]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@Sout(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    main@Sptr	PTR unsigned char  size(1) Largest target is 20
		 -> main@Sout(BANK0[20]), 

    I2C_LCD_SWrite@Data	PTR unsigned char  size(1) Largest target is 20
		 -> main@Sout(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_I2C_LCD_Command
    _main->_I2C_LCD_Pos
    _main->___awtoft
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _I2C_LCD_SWrite->_I2C_LCD_Busy
    _I2C_LCD_Pos->_I2C_LCD_Busy
    _I2C_LCD_Init->_I2C_LCD_Busy
    _I2C_LCD_Command->_I2C_LCD_Busy
    _I2C_LCD_Busy->_i2c_Address

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   11766
                                             30 BANK0     27    27      0
                     _ADC_Initialize
                           _ADC_Read
                    _I2C_LCD_Command
                       _I2C_LCD_Init
                        _I2C_LCD_Pos
                     _I2C_LCD_SWrite
                           ___awtoft
                            ___ftdiv
                            ___fttol
                           _i2c_Init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    19      4    1330
                                              0 BANK0     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2015
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1773
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SWrite                                      12    10      2    1796
                                              8 COMMON     5     3      2
                                              0 BANK0      5     5      0
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Pos                                          6     5      1    1442
                                              8 COMMON     6     5      1
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Init                                         3     3      0    1255
                                              8 COMMON     3     3      0
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Command                                      6     5      1    1547
                                              8 COMMON     6     5      1
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Busy                                         4     4      0     696
                                              4 COMMON     4     4      0
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          4     3      1     492
                                              0 COMMON     4     3      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2       0
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _I2C_LCD_Command
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _I2C_LCD_Init
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _I2C_LCD_Pos
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _I2C_LCD_SWrite
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _i2c_Init
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     39      39       5       71.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 20 18:11:35 2023

             __CFG_CP$OFF 0000             ??_i2c_Address 0071                        l73 02CD  
                      l74 02CF               __CFG_LVP$ON 0000               i2c_Read@ack 0071  
                     l102 02AF                       l111 0773                       l112 0774  
                     l113 077E                       l391 04E4                       l482 0583  
                     l398 04F7                       l399 04FF                       _RA1 0061  
                     _RA4 0064                       _RC0 0070              __CFG_CPD$OFF 0000  
                     u705 04C6                       u725 04DF                       u815 035D  
                     u745 04EC                       u905 030A                       u835 0367  
                     u915 0311                       u845 0371                       u935 038F  
                     u855 0379                       u945 0485                       u785 0506  
                     u955 046E                       u965 0327                       u885 02FB  
            __CFG_BORV$LO 0000                       wreg 0009             ??_i2c_Restart 0070  
            _I2C_LCD_Busy 0400              _I2C_LCD_Init 03BD         ??_I2C_LCD_Command 0079  
            ___ftdiv@cntr 002A              ___ftdiv@sign 002F                      l1100 041A  
                    l1202 0310                      l1140 04CB                      l1300 066E  
                    l1150 04F1                      l1142 04D0                      l1134 04BA  
                    l1206 0319                      l1056 027F                      l1138 04C1  
                    l1410 052F                      l1322 06A2                      l1306 0686  
                    l1260 04AA                      l1148 04E9                      l1180 0378  
                    l1172 035A                      l1316 069C                      l1430 056D  
                    l1174 0366                      l1342 06D4                      l1334 06D0  
                    l1184 0381                      l1328 06C1                      l1344 064C  
                    l1258 0465                      l1442 0594                      l1346 070E  
                    l1436 057A                      l1428 055F                      l1196 02F8  
                    l1358 02DC                      l1374 05CA                      l1438 0586  
                    l1198 0304                      l1368 05B4                      l1396 0624  
                    l1388 060B                      l1468 0762                      STR_1 0829  
                    STR_2 0819                      STR_3 080A                      STR_4 081A  
                    u1015 06B7                      u1105 05EC                      u1115 060C  
                    u1125 061B                      u1135 0625                      u1225 057B  
                    u1307 02A8                      u1165 0536                      u1095 05DC  
                    u1195 0560                      u1277 074C                      u1287 0776  
                    u1297 07F1              __CFG_WRT$OFF 0000                      _main 0713  
            ___ftpack@arg 0070              ___ftpack@exp 0073                      fsr0h 0005  
                    fsr1h 0007                      indf0 0000                      fsr0l 0004  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
        __end_of_ADC_Read 02B6                      start 0002             __CFG_IESO$OFF 0000  
           __CFG_MCLRE$ON 0000              ___fttol@exp1 003D              ___fttol@lval 0039  
                   ?_main 0070             __CFG_WDTE$OFF 0000           __end_of___ftdiv 0646  
         __end_of___fttol 059D           __end_of___lwdiv 0386           __end_of___lwmod 031E  
                   _TMR1H 0017                     _TMR1L 0016                     _TRISA 008C  
                   _TRISC 008E       __end_of_i2c_Address 02A2            __CFG_FCMEN$OFF 0000  
           ___awtoft@sign 007D           __end_of_dpowers 080A             ___ftpack@sign 0074  
                   main@a 0057            __CFG_BOREN$OFF 0000       __end_of_i2c_Restart 0268  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0713  
           main@adc_value 0055           __initialization 07FD              __end_of_main 07FD  
        __end_of_i2c_Init 0293          __end_of_i2c_Read 02D2          __end_of_i2c_Wait 0287  
        __end_of_i2c_Stop 0272            _I2C_LCD_SWrite 0457                    ??_main 003E  
           ___fttol@sign1 0038            __CFG_PLLEN$OFF 0000                    _ADCON0 009D  
                  _ADCON1 009E                    _ADRESH 009C                    _ADRESL 009B  
      I2C_LCD_Command@Cmd 0078          __end_of___awtoft 02F2          __end_of___ftpack 0516  
      __size_of_i2c_Start 0005        __size_of_i2c_Write 0007                    _TMR1ON 00C0  
                  _TRISB4 046C                    _TRISB6 046E            __CFG_PWRTE$OFF 0000  
  __end_of_I2C_LCD_SWrite 04B2            __CFG_STVREN$ON 0000                 ??___ftdiv 0026  
               ??___fttol 0034                 ??___lwdiv 0074                 ??___lwmod 007C  
             _i2c_Address 0293             i2c_Write@data 0070                 ?_ADC_Read 0070  
             _i2c_Restart 0263                 ??_sprintf 0024   __end_of__initialization 07FD  
              ___ftdiv@f1 0023                ___ftdiv@f2 0020                ___ftdiv@f3 002B  
              ___awtoft@c 0078        I2C_LCD_SWrite@Data 0078                ___fttol@f1 0030  
          __pcstackCOMMON 0070           ?_I2C_LCD_SWrite 0078         __end_of_i2c_Start 026D  
       __end_of_i2c_Write 027F           _I2C_LCD_Command 031E                ??_ADC_Read 0072  
      I2C_LCD_Pos@HiBytex 007C        I2C_LCD_Pos@LoBytex 007D                 ?_i2c_Init 0070  
               ?_i2c_Read 0070                 ?_i2c_Wait 0070                 ?_i2c_Stop 0070  
           ??_I2C_LCD_Pos 0079          I2C_LCD_Pos@Slave 007B                __pmaintext 0713  
               ?___awtoft 0078                 ?___ftpack 0070   __size_of_ADC_Initialize 0006  
      i2c_Address@address 0072                   _SSP1ADD 0212                   _SSP1BUF 0211  
              ??_i2c_Init 0070                ??_i2c_Read 0070                ??_i2c_Wait 0070  
              ??_i2c_Stop 0070   __end_of_I2C_LCD_Command 0352       __end_of_I2C_LCD_Pos 03BD  
                 ___ftdiv 059D                   ___fttol 0516                   ___lwdiv 0352  
                 ___lwmod 02F2                ??___awtoft 007B                ??___ftpack 0075  
                 __ptext1 0646                   __ptext2 02F2                   __ptext3 0352  
                 __ptext4 0287                   __ptext5 0516                   __ptext6 059D  
                 __ptext7 02D2                   __ptext8 04B2                   __ptext9 0457  
                 _dpowers 0800                   _sprintf 0646      end_of_initialization 07FD  
    i2c_Address@l_address 0073              ?_i2c_Address 0070          __CFG_FOSC$INTOSC 0000  
            ?_i2c_Restart 0070         __size_of_ADC_Read 0014               _I2C_LCD_Pos 0386  
             ___ftdiv@exp 002E          ??_I2C_LCD_SWrite 007A       I2C_LCD_SWrite@Slave 0020  
        ?_I2C_LCD_Command 0078            _ADC_Initialize 0272                 _i2c_Start 0268  
               _i2c_Write 0278       start_initialization 07FD             ?_I2C_LCD_Busy 0070  
           ?_I2C_LCD_Init 0070         __size_of_i2c_Init 000C         __size_of_i2c_Read 001C  
       __size_of_i2c_Wait 0008         __size_of_i2c_Stop 0005         I2C_LCD_Busy@Temp1 0075  
  __end_of_ADC_Initialize 0278         I2C_LCD_Busy@Slave 0077         I2C_LCD_Init@Slave 007A  
       I2C_LCD_Init@Tvar1 0079         __size_of___awtoft 0020         __size_of___ftpack 0064  
              ?_i2c_Start 0070                ?_i2c_Write 0070            ??_I2C_LCD_Busy 0074  
               ___latbits 0002            ??_I2C_LCD_Init 0078             __pcstackBANK0 0020  
       I2C_LCD_SWrite@Max 0079               sprintf@flag 0029               sprintf@prec 002A  
         I2C_LCD_SWrite@H 0021           I2C_LCD_SWrite@L 0022           I2C_LCD_SWrite@j 0023  
        ___lwdiv@dividend 0072                  ?___ftdiv 0020                  ?___fttol 0030  
                ?___lwdiv 0070                  ?___lwmod 0078           ?_ADC_Initialize 0070  
    __size_of_i2c_Address 000F                  _ADC_Read 02A2      I2C_LCD_Command@Slave 007B  
        ___lwdiv@quotient 0075                  ?_sprintf 0020      __size_of_i2c_Restart 0005  
                _GO_nDONE 04E9                  _SSP1CON1 0215                  _SSP1CON2 0216  
                _SSP1STAT 0214               ??_i2c_Start 0070               ??_i2c_Write 0070  
                _i2c_Init 0287                  _i2c_Read 02B6                  _i2c_Wait 027F  
                _i2c_Stop 026D              ?_I2C_LCD_Pos 0078    I2C_LCD_Command@HiBytex 007C  
  I2C_LCD_Command@LoBytex 007D      __end_of_I2C_LCD_Busy 0457      __end_of_I2C_LCD_Init 0400  
        __size_of___ftdiv 00A9          __size_of___fttol 0087          __size_of___lwdiv 0034  
        __size_of___lwmod 002C                  ___awtoft 02D2                  ___ftpack 04B2  
              sprintf@val 002B            I2C_LCD_Pos@Pos 0078           ___lwdiv@divisor 0070  
         ___lwdiv@counter 0077                  __ptext10 0386                  __ptext11 03BD  
                __ptext20 027F                  __ptext12 031E                  __ptext21 02A2  
                __ptext13 0400                  __ptext22 0272                  __ptext14 0278  
                __ptext15 026D                  __ptext16 0268                  __ptext17 0263  
                __ptext18 02B6                  __ptext19 0293              _SSP1CON2bits 0216  
        __size_of_sprintf 00CD             __size_of_main 00EA     I2C_LCD_Busy@read_byte 0076  
                main@Sptr 0054                  main@Sout 0040  __size_of_I2C_LCD_Command 0034  
               sprintf@ap 0028                 sprintf@sp 002D          ___lwmod@dividend 007A  
         i2c_Address@mode 0070         __CFG_CLKOUTEN$OFF 0000          ??_ADC_Initialize 0070  
 __size_of_I2C_LCD_SWrite 005B             __pstringtext1 0800             __pstringtext2 081A  
           __pstringtext3 0829             __pstringtext4 0000                  sprintf@c 002E  
                sprintf@f 0020           ___lwmod@divisor 0078           ___lwmod@counter 007D  
     i2c_Read@i2cReadData 0072     __size_of_I2C_LCD_Busy 0057     __size_of_I2C_LCD_Init 0043  
    __size_of_I2C_LCD_Pos 0037  
