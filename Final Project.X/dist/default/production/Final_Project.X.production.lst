

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 19 01:14:16 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1829 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011B                     	;# 
   132  011D                     	;# 
   133  011E                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  018E                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0194                     	;# 
   144  0195                     	;# 
   145  0196                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019D                     	;# 
   152  019E                     	;# 
   153  019F                     	;# 
   154  020C                     	;# 
   155  020D                     	;# 
   156  020E                     	;# 
   157  0211                     	;# 
   158  0211                     	;# 
   159  0212                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0213                     	;# 
   163  0214                     	;# 
   164  0214                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0216                     	;# 
   169  0216                     	;# 
   170  0217                     	;# 
   171  0217                     	;# 
   172  0219                     	;# 
   173  021A                     	;# 
   174  021B                     	;# 
   175  021C                     	;# 
   176  021D                     	;# 
   177  021E                     	;# 
   178  021F                     	;# 
   179  0291                     	;# 
   180  0291                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0294                     	;# 
   184  0295                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0298                     	;# 
   188  0298                     	;# 
   189  0299                     	;# 
   190  029A                     	;# 
   191  029B                     	;# 
   192  029C                     	;# 
   193  029D                     	;# 
   194  029E                     	;# 
   195  0311                     	;# 
   196  0311                     	;# 
   197  0312                     	;# 
   198  0313                     	;# 
   199  0318                     	;# 
   200  0318                     	;# 
   201  0319                     	;# 
   202  031A                     	;# 
   203  038C                     	;# 
   204  038D                     	;# 
   205  038E                     	;# 
   206  0391                     	;# 
   207  0392                     	;# 
   208  0393                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  039A                     	;# 
   213  039C                     	;# 
   214  039D                     	;# 
   215  039E                     	;# 
   216  039F                     	;# 
   217  0415                     	;# 
   218  0416                     	;# 
   219  0417                     	;# 
   220  041C                     	;# 
   221  041D                     	;# 
   222  041E                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE9                     	;# 
   229  0FEA                     	;# 
   230  0FEB                     	;# 
   231  0FED                     	;# 
   232  0FEE                     	;# 
   233  0FEF                     	;# 
   234                           
   235                           	psect	stringtext1
   236  0800                     __pstringtext1:	
   237  0800                     _dpowers:	
   238  0800  3401               	retlw	1
   239  0801  3400               	retlw	0
   240  0802  340A               	retlw	10
   241  0803  3400               	retlw	0
   242  0804  3464               	retlw	100
   243  0805  3400               	retlw	0
   244  0806  34E8               	retlw	232
   245  0807  3403               	retlw	3
   246  0808  3410               	retlw	16
   247  0809  3427               	retlw	39
   248  080A                     __end_of_dpowers:	
   249  0016                     _TMR1L	set	22
   250  0017                     _TMR1H	set	23
   251  00C0                     _TMR1ON	set	192
   252  0061                     _RA1	set	97
   253  0070                     _RC0	set	112
   254  0064                     _RA4	set	100
   255  008E                     _TRISC	set	142
   256  008C                     _TRISA	set	140
   257  009B                     _ADRESL	set	155
   258  009C                     _ADRESH	set	156
   259  009E                     _ADCON1	set	158
   260  009D                     _ADCON0	set	157
   261  04E9                     _GO_nDONE	set	1257
   262  046E                     _TRISB6	set	1134
   263  046C                     _TRISB4	set	1132
   264  0211                     _SSP1BUF	set	529
   265  0216                     _SSP1CON2bits	set	534
   266  0214                     _SSP1STAT	set	532
   267  0212                     _SSP1ADD	set	530
   268  0216                     _SSP1CON2	set	534
   269  0215                     _SSP1CON1	set	533
   270  080A                     STR_3:	
   271  080A  344C               	retlw	76	;'L'
   272  080B  3469               	retlw	105	;'i'
   273  080C  3467               	retlw	103	;'g'
   274  080D  3468               	retlw	104	;'h'
   275  080E  3474               	retlw	116	;'t'
   276  080F  3456               	retlw	86	;'V'
   277  0810  3461               	retlw	97	;'a'
   278  0811  346C               	retlw	108	;'l'
   279  0812  3475               	retlw	117	;'u'
   280  0813  3465               	retlw	101	;'e'
   281  0814  3420               	retlw	32	;' '
   282  0815  343D               	retlw	61	;'='
   283  0816  3420               	retlw	32	;' '
   284  0817  3425               	retlw	37	;'%'
   285  0818  3464               	retlw	100	;'d'
   286  0819  3400               	retlw	0
   287                           
   288                           	psect	stringtext2
   289  081A                     __pstringtext2:	
   290  081A                     STR_4:	
   291  081A  3444               	retlw	68	;'D'
   292  081B  3469               	retlw	105	;'i'
   293  081C  3473               	retlw	115	;'s'
   294  081D  3474               	retlw	116	;'t'
   295  081E  3456               	retlw	86	;'V'
   296  081F  3461               	retlw	97	;'a'
   297  0820  346C               	retlw	108	;'l'
   298  0821  3475               	retlw	117	;'u'
   299  0822  3465               	retlw	101	;'e'
   300  0823  3420               	retlw	32	;' '
   301  0824  343D               	retlw	61	;'='
   302  0825  3420               	retlw	32	;' '
   303  0826  3425               	retlw	37	;'%'
   304  0827  3464               	retlw	100	;'d'
   305  0828  3400               	retlw	0
   306                           
   307                           	psect	stringtext3
   308  0829                     __pstringtext3:	
   309  0829                     STR_1:	
   310  0829  3448               	retlw	72	;'H'
   311  082A  3465               	retlw	101	;'e'
   312  082B  346C               	retlw	108	;'l'
   313  082C  346C               	retlw	108	;'l'
   314  082D  346F               	retlw	111	;'o'
   315  082E  3420               	retlw	32	;' '
   316  082F  3457               	retlw	87	;'W'
   317  0830  346F               	retlw	111	;'o'
   318  0831  3472               	retlw	114	;'r'
   319  0832  346C               	retlw	108	;'l'
   320  0833  3464               	retlw	100	;'d'
   321  0834  3400               	retlw	0
   322                           
   323                           	psect	stringtext4
   324  0000                     __pstringtext4:	
   325  0819                     
   326                           ; #config settings
   327  0000                     
   328                           	psect	cinit
   329  07FD                     start_initialization:	
   330  07FD                     __initialization:	
   331  07FD                     end_of_initialization:	
   332                           ;End of C runtime variable initialization code
   333                           
   334  07FD                     __end_of__initialization:	
   335  07FD  0020               	movlb	0
   336  07FE  3187  2F11         	ljmp	_main	;jump to C main() function
   337                           
   338                           	psect	cstackCOMMON
   339  0070                     __pcstackCOMMON:	
   340  0070                     ?_i2c_Init:	
   341  0070                     ??_i2c_Init:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_i2c_Wait:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_i2c_Wait:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_i2c_Start:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ??_i2c_Start:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_i2c_Restart:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ??_i2c_Restart:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_i2c_Stop:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ??_i2c_Stop:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_i2c_Write:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ??_i2c_Write:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_i2c_Address:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_i2c_Read:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_i2c_Read:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_I2C_LCD_Busy:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_I2C_LCD_Init:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_ADC_Initialize:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ??_ADC_Initialize:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_main:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_ADC_Read:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?___lwdiv:	
   402                           ; 2 bytes @ 0x0
   403                           
   404  0070                     ?___ftpack:	
   405                           ; 2 bytes @ 0x0
   406                           
   407  0070                     i2c_Write@data:	
   408                           ; 3 bytes @ 0x0
   409                           
   410  0070                     i2c_Address@mode:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ___lwdiv@divisor:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ___ftpack@arg:	
   417                           ; 2 bytes @ 0x0
   418                           
   419                           
   420                           ; 3 bytes @ 0x0
   421  0070                     	ds	1
   422  0071                     ??_i2c_Address:	
   423  0071                     i2c_Read@ack:	
   424                           ; 1 bytes @ 0x1
   425                           
   426                           
   427                           ; 1 bytes @ 0x1
   428  0071                     	ds	1
   429  0072                     ??_ADC_Read:	
   430  0072                     i2c_Address@address:	
   431                           ; 1 bytes @ 0x2
   432                           
   433  0072                     i2c_Read@i2cReadData:	
   434                           ; 1 bytes @ 0x2
   435                           
   436  0072                     ___lwdiv@dividend:	
   437                           ; 1 bytes @ 0x2
   438                           
   439                           
   440                           ; 2 bytes @ 0x2
   441  0072                     	ds	1
   442  0073                     i2c_Address@l_address:	
   443  0073                     ___ftpack@exp:	
   444                           ; 1 bytes @ 0x3
   445                           
   446                           
   447                           ; 1 bytes @ 0x3
   448  0073                     	ds	1
   449  0074                     ??_I2C_LCD_Busy:	
   450  0074                     ??___lwdiv:	
   451                           ; 1 bytes @ 0x4
   452                           
   453  0074                     ___ftpack@sign:	
   454                           ; 1 bytes @ 0x4
   455                           
   456                           
   457                           ; 1 bytes @ 0x4
   458  0074                     	ds	1
   459  0075                     ??___ftpack:	
   460  0075                     I2C_LCD_Busy@Temp1:	
   461                           ; 1 bytes @ 0x5
   462                           
   463  0075                     ___lwdiv@quotient:	
   464                           ; 1 bytes @ 0x5
   465                           
   466                           
   467                           ; 2 bytes @ 0x5
   468  0075                     	ds	1
   469  0076                     I2C_LCD_Busy@read_byte:	
   470                           
   471                           ; 1 bytes @ 0x6
   472  0076                     	ds	1
   473  0077                     I2C_LCD_Busy@Slave:	
   474  0077                     ___lwdiv@counter:	
   475                           ; 1 bytes @ 0x7
   476                           
   477                           
   478                           ; 1 bytes @ 0x7
   479  0077                     	ds	1
   480  0078                     ??_I2C_LCD_Init:	
   481  0078                     ?_I2C_LCD_Pos:	
   482                           ; 1 bytes @ 0x8
   483                           
   484  0078                     ?_I2C_LCD_SWrite:	
   485                           ; 1 bytes @ 0x8
   486                           
   487  0078                     ?_I2C_LCD_Command:	
   488                           ; 1 bytes @ 0x8
   489                           
   490  0078                     ?___lwmod:	
   491                           ; 1 bytes @ 0x8
   492                           
   493  0078                     ?___awtoft:	
   494                           ; 2 bytes @ 0x8
   495                           
   496  0078                     I2C_LCD_Pos@Pos:	
   497                           ; 3 bytes @ 0x8
   498                           
   499  0078                     I2C_LCD_SWrite@Data:	
   500                           ; 1 bytes @ 0x8
   501                           
   502  0078                     I2C_LCD_Command@Cmd:	
   503                           ; 1 bytes @ 0x8
   504                           
   505  0078                     ___awtoft@c:	
   506                           ; 1 bytes @ 0x8
   507                           
   508  0078                     ___lwmod@divisor:	
   509                           ; 2 bytes @ 0x8
   510                           
   511                           
   512                           ; 2 bytes @ 0x8
   513  0078                     	ds	1
   514  0079                     ??_I2C_LCD_Pos:	
   515  0079                     ??_I2C_LCD_Command:	
   516                           ; 1 bytes @ 0x9
   517                           
   518  0079                     I2C_LCD_Init@Tvar1:	
   519                           ; 1 bytes @ 0x9
   520                           
   521  0079                     I2C_LCD_SWrite@Max:	
   522                           ; 1 bytes @ 0x9
   523                           
   524                           
   525                           ; 1 bytes @ 0x9
   526  0079                     	ds	1
   527  007A                     ??_I2C_LCD_SWrite:	
   528  007A                     I2C_LCD_Init@Slave:	
   529                           ; 1 bytes @ 0xA
   530                           
   531  007A                     ___lwmod@dividend:	
   532                           ; 1 bytes @ 0xA
   533                           
   534                           
   535                           ; 2 bytes @ 0xA
   536  007A                     	ds	1
   537  007B                     ??___awtoft:	
   538  007B                     I2C_LCD_Pos@Slave:	
   539                           ; 1 bytes @ 0xB
   540                           
   541  007B                     I2C_LCD_Command@Slave:	
   542                           ; 1 bytes @ 0xB
   543                           
   544                           
   545                           ; 1 bytes @ 0xB
   546  007B                     	ds	1
   547  007C                     ??___lwmod:	
   548  007C                     I2C_LCD_Pos@HiBytex:	
   549                           ; 1 bytes @ 0xC
   550                           
   551  007C                     I2C_LCD_Command@HiBytex:	
   552                           ; 1 bytes @ 0xC
   553                           
   554                           
   555                           ; 1 bytes @ 0xC
   556  007C                     	ds	1
   557  007D                     I2C_LCD_Pos@LoBytex:	
   558  007D                     I2C_LCD_Command@LoBytex:	
   559                           ; 1 bytes @ 0xD
   560                           
   561  007D                     ___awtoft@sign:	
   562                           ; 1 bytes @ 0xD
   563                           
   564  007D                     ___lwmod@counter:	
   565                           ; 1 bytes @ 0xD
   566                           
   567                           
   568                           ; 1 bytes @ 0xD
   569  007D                     	ds	1
   570                           
   571                           	psect	cstackBANK0
   572  0020                     __pcstackBANK0:	
   573  0020                     ?_sprintf:	
   574  0020                     ?___ftdiv:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0020                     I2C_LCD_SWrite@Slave:	
   578                           ; 3 bytes @ 0x0
   579                           
   580  0020                     sprintf@f:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0020                     ___ftdiv@f2:	
   584                           ; 2 bytes @ 0x0
   585                           
   586                           
   587                           ; 3 bytes @ 0x0
   588  0020                     	ds	1
   589  0021                     I2C_LCD_SWrite@H:	
   590                           
   591                           ; 1 bytes @ 0x1
   592  0021                     	ds	1
   593  0022                     I2C_LCD_SWrite@L:	
   594                           
   595                           ; 1 bytes @ 0x2
   596  0022                     	ds	1
   597  0023                     I2C_LCD_SWrite@j:	
   598  0023                     ___ftdiv@f1:	
   599                           ; 2 bytes @ 0x3
   600                           
   601                           
   602                           ; 3 bytes @ 0x3
   603  0023                     	ds	1
   604  0024                     ??_sprintf:	
   605                           
   606                           ; 1 bytes @ 0x4
   607  0024                     	ds	2
   608  0026                     ??___ftdiv:	
   609                           
   610                           ; 1 bytes @ 0x6
   611  0026                     	ds	2
   612  0028                     sprintf@ap:	
   613                           
   614                           ; 1 bytes @ 0x8
   615  0028                     	ds	1
   616  0029                     sprintf@flag:	
   617                           
   618                           ; 1 bytes @ 0x9
   619  0029                     	ds	1
   620  002A                     sprintf@prec:	
   621  002A                     ___ftdiv@cntr:	
   622                           ; 1 bytes @ 0xA
   623                           
   624                           
   625                           ; 1 bytes @ 0xA
   626  002A                     	ds	1
   627  002B                     sprintf@val:	
   628  002B                     ___ftdiv@f3:	
   629                           ; 2 bytes @ 0xB
   630                           
   631                           
   632                           ; 3 bytes @ 0xB
   633  002B                     	ds	2
   634  002D                     sprintf@sp:	
   635                           
   636                           ; 1 bytes @ 0xD
   637  002D                     	ds	1
   638  002E                     sprintf@c:	
   639  002E                     ___ftdiv@exp:	
   640                           ; 1 bytes @ 0xE
   641                           
   642                           
   643                           ; 1 bytes @ 0xE
   644  002E                     	ds	1
   645  002F                     ___ftdiv@sign:	
   646                           
   647                           ; 1 bytes @ 0xF
   648  002F                     	ds	1
   649  0030                     ?___fttol:	
   650  0030                     ___fttol@f1:	
   651                           ; 4 bytes @ 0x10
   652                           
   653                           
   654                           ; 3 bytes @ 0x10
   655  0030                     	ds	4
   656  0034                     ??___fttol:	
   657                           
   658                           ; 1 bytes @ 0x14
   659  0034                     	ds	4
   660  0038                     ___fttol@sign1:	
   661                           
   662                           ; 1 bytes @ 0x18
   663  0038                     	ds	1
   664  0039                     ___fttol@lval:	
   665                           
   666                           ; 4 bytes @ 0x19
   667  0039                     	ds	4
   668  003D                     ___fttol@exp1:	
   669                           
   670                           ; 1 bytes @ 0x1D
   671  003D                     	ds	1
   672  003E                     ??_main:	
   673                           
   674                           ; 1 bytes @ 0x1E
   675  003E                     	ds	2
   676  0040                     main@Sout:	
   677                           
   678                           ; 20 bytes @ 0x20
   679  0040                     	ds	20
   680  0054                     main@Sptr:	
   681                           
   682                           ; 1 bytes @ 0x34
   683  0054                     	ds	1
   684  0055                     main@adc_value:	
   685                           
   686                           ; 2 bytes @ 0x35
   687  0055                     	ds	2
   688  0057                     main@a:	
   689                           
   690                           ; 2 bytes @ 0x37
   691  0057                     	ds	2
   692                           
   693                           	psect	maintext
   694  0711                     __pmaintext:	
   695 ;;
   696 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   697 ;;
   698 ;; *************** function _main *****************
   699 ;; Defined at:
   700 ;;		line 65 in file "main.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  a               2   55[BANK0 ] int 
   705 ;;  Sout           20   32[BANK0 ] unsigned char [20]
   706 ;;  adc_value       2   53[BANK0 ] unsigned int 
   707 ;;  z               2    0        int 
   708 ;;  Sptr            1   52[BANK0 ] PTR unsigned char 
   709 ;;		 -> main@Sout(20), 
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : B1F/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   720 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
   721 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   722 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
   723 ;;Total ram usage:       27 bytes
   724 ;; Hardware stack levels required when called:    4
   725 ;; This function calls:
   726 ;;		_ADC_Initialize
   727 ;;		_ADC_Read
   728 ;;		_I2C_LCD_Command
   729 ;;		_I2C_LCD_Init
   730 ;;		_I2C_LCD_Pos
   731 ;;		_I2C_LCD_SWrite
   732 ;;		___awtoft
   733 ;;		___ftdiv
   734 ;;		___fttol
   735 ;;		_i2c_Init
   736 ;;		_sprintf
   737 ;; This function is called by:
   738 ;;		Startup code after reset
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function _main
   744  0711                     _main:	
   745                           
   746                           ;main.c: 67: TMR1H = TMR1L = 0;
   747                           
   748                           ;incstack = 0
   749                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   750  0711  0020               	movlb	0	; select bank0
   751  0712  0196               	clrf	22	;volatile
   752  0713  0197               	clrf	23	;volatile
   753                           
   754                           ;main.c: 69: unsigned int adc_value = 0;
   755  0714  01D5               	clrf	main@adc_value
   756  0715  01D6               	clrf	main@adc_value+1
   757                           
   758                           ;main.c: 71: TRISA = 0x00;
   759  0716  0021               	movlb	1	; select bank1
   760  0717  018C               	clrf	12	;volatile
   761                           
   762                           ;main.c: 73: TRISA = ((1u << 1u));
   763  0718  3002               	movlw	2
   764  0719  008C               	movwf	12	;volatile
   765                           
   766                           ;main.c: 75: TRISC = 0x00;
   767  071A  018E               	clrf	14	;volatile
   768                           
   769                           ;main.c: 77: ADC_Initialize();
   770  071B  3182  2270  3187   	fcall	_ADC_Initialize
   771                           
   772                           ;main.c: 80: unsigned char Sout[20];
   773                           ;main.c: 81: unsigned char * Sptr;
   774                           ;main.c: 82: int z;
   775                           ;main.c: 83: Sptr = Sout;
   776  071E  3040               	movlw	(low (main@Sout| 0))& (0+255)
   777  071F  0020               	movlb	0	; select bank0
   778  0720  00BE               	movwf	??_main
   779  0721  083E               	movf	??_main,w
   780  0722  00D4               	movwf	main@Sptr
   781                           
   782                           ;main.c: 85: i2c_Init();
   783  0723  3182  2285  3187   	fcall	_i2c_Init
   784                           
   785                           ;main.c: 86: I2C_LCD_Init(0x27);
   786  0726  3027               	movlw	39
   787  0727  3183  23BB  3187   	fcall	_I2C_LCD_Init
   788                           
   789                           ;main.c: 88: I2C_LCD_Command(0x27, 0x01);
   790  072A  01F8               	clrf	I2C_LCD_Command@Cmd
   791  072B  0AF8               	incf	I2C_LCD_Command@Cmd,f
   792  072C  3027               	movlw	39
   793  072D  3183  231C  3187   	fcall	_I2C_LCD_Command
   794                           
   795                           ;main.c: 90: sprintf(Sout, "Hello World");
   796  0730  3029               	movlw	low (STR_1| (0+32768))
   797  0731  0020               	movlb	0	; select bank0
   798  0732  00A0               	movwf	sprintf@f
   799  0733  3088               	movlw	high (STR_1| (0+32768))
   800  0734  00A1               	movwf	sprintf@f+1
   801  0735  3040               	movlw	(low (main@Sout| 0))& (0+255)
   802  0736  3186  2644  3187   	fcall	_sprintf
   803                           
   804                           ;main.c: 92: I2C_LCD_SWrite(0x27, Sout, 11);
   805  0739  3040               	movlw	(low (main@Sout| 0))& (0+255)
   806  073A  0020               	movlb	0	; select bank0
   807  073B  00BE               	movwf	??_main
   808  073C  083E               	movf	??_main,w
   809  073D  00F8               	movwf	I2C_LCD_SWrite@Data
   810  073E  300B               	movlw	11
   811  073F  00BF               	movwf	??_main+1
   812  0740  083F               	movf	??_main+1,w
   813  0741  00F9               	movwf	I2C_LCD_SWrite@Max
   814  0742  3027               	movlw	39
   815  0743  3184  2455  3187   	fcall	_I2C_LCD_SWrite
   816                           
   817                           ;main.c: 94: _delay((unsigned long)((50)*(8000000/4000.0)));
   818  0746  3082               	movlw	130
   819  0747  0020               	movlb	0	; select bank0
   820  0748  00BE               	movwf	??_main
   821  0749  30DD               	movlw	221
   822  074A                     u1297:	
   823  074A  0B89               	decfsz	9,f
   824  074B  2F4A               	goto	u1297
   825  074C  0BBE               	decfsz	??_main,f
   826  074D  2F4A               	goto	u1297
   827  074E  3200               	nop2
   828                           
   829                           ;main.c: 96: I2C_LCD_Command(0x27, 0x01);
   830  074F  01F8               	clrf	I2C_LCD_Command@Cmd
   831  0750  0AF8               	incf	I2C_LCD_Command@Cmd,f
   832  0751  3027               	movlw	39
   833  0752  3183  231C  3187   	fcall	_I2C_LCD_Command
   834                           
   835                           ;main.c: 97: sprintf(Sout, "");
   836  0755  3019               	movlw	low ((STR_3+15)| (0+32768))
   837  0756  0020               	movlb	0	; select bank0
   838  0757  00A0               	movwf	sprintf@f
   839  0758  3088               	movlw	high ((STR_3+15)| (0+32768))
   840  0759  00A1               	movwf	sprintf@f+1
   841  075A  3040               	movlw	(low (main@Sout| 0))& (0+255)
   842  075B  3186  2644  3187   	fcall	_sprintf
   843                           
   844                           ;main.c: 99: RA4 = 0;
   845  075E  0020               	movlb	0	; select bank0
   846  075F  120C               	bcf	12,4	;volatile
   847  0760                     l1469:	
   848                           ;main.c: 101: while(1) {
   849                           
   850                           
   851                           ;main.c: 103: adc_value = ADC_Read();
   852  0760  3182  22A0  3187   	fcall	_ADC_Read
   853  0763  0871               	movf	?_ADC_Read+1,w
   854  0764  0020               	movlb	0	; select bank0
   855  0765  00D6               	movwf	main@adc_value+1
   856  0766  0870               	movf	?_ADC_Read,w
   857  0767  00D5               	movwf	main@adc_value
   858                           
   859                           ;main.c: 106: if (adc_value < 712) RA4 = 1;
   860  0768  3002               	movlw	2
   861  0769  0256               	subwf	main@adc_value+1,w
   862  076A  30C8               	movlw	200
   863  076B  1903               	skipnz
   864  076C  0255               	subwf	main@adc_value,w
   865  076D  1803               	skipnc
   866  076E  2F71               	goto	l111
   867  076F  160C               	bsf	12,4	;volatile
   868  0770  2F72               	goto	l112
   869  0771                     l111:	
   870                           
   871                           ;main.c: 107: else RA4 = 0;
   872  0771  120C               	bcf	12,4	;volatile
   873  0772                     l112:	
   874                           
   875                           ;main.c: 109: RC0 = 1;
   876  0772  140E               	bsf	14,0	;volatile
   877                           
   878                           ;main.c: 110: _delay((unsigned long)((10)*(8000000/4000000.0)));
   879  0773  3006               	movlw	6
   880  0774                     u1307:	
   881  0774  0B89               	decfsz	9,f
   882  0775  2F74               	goto	u1307
   883  0776  3200               	nop2
   884                           
   885                           ;main.c: 111: RC0 = 0;
   886  0777  0020               	movlb	0	; select bank0
   887  0778  100E               	bcf	14,0	;volatile
   888                           
   889                           ;main.c: 112: int a = 0;
   890  0779  01D7               	clrf	main@a
   891  077A  01D8               	clrf	main@a+1
   892  077B                     l113:	
   893                           ;main.c: 113: while(!RA1);
   894                           
   895  077B  1C8C               	btfss	12,1	;volatile
   896  077C  2F7B               	goto	l113
   897                           
   898                           ;main.c: 114: TMR1ON = 1;
   899  077D  1418               	bsf	24,0	;volatile
   900  077E                     l116:	
   901                           ;main.c: 115: while(RA1);
   902                           
   903  077E  188C               	btfsc	12,1	;volatile
   904  077F  2F7E               	goto	l116
   905                           
   906                           ;main.c: 116: TMR1ON = 0;
   907  0780  1018               	bcf	24,0	;volatile
   908                           
   909                           ;main.c: 118: a = (TMR1L | (TMR1H<<8));
   910  0781  0817               	movf	23,w	;volatile
   911  0782  00D8               	movwf	main@a+1
   912  0783  0816               	movf	22,w	;volatile
   913  0784  00D7               	movwf	main@a
   914                           
   915                           ;main.c: 119: a = a/58.82;
   916  0785  0858               	movf	main@a+1,w
   917  0786  00F9               	movwf	___awtoft@c+1
   918  0787  0857               	movf	main@a,w
   919  0788  00F8               	movwf	___awtoft@c
   920  0789  3182  22D0  3187   	fcall	___awtoft
   921  078C  0878               	movf	?___awtoft,w
   922  078D  0020               	movlb	0	; select bank0
   923  078E  00A3               	movwf	___ftdiv@f1
   924  078F  0879               	movf	?___awtoft+1,w
   925  0790  00A4               	movwf	___ftdiv@f1+1
   926  0791  087A               	movf	?___awtoft+2,w
   927  0792  00A5               	movwf	___ftdiv@f1+2
   928  0793  3048               	movlw	72
   929  0794  00A0               	movwf	___ftdiv@f2
   930  0795  306B               	movlw	107
   931  0796  00A1               	movwf	___ftdiv@f2+1
   932  0797  3042               	movlw	66
   933  0798  00A2               	movwf	___ftdiv@f2+2
   934  0799  3185  259B  3187   	fcall	___ftdiv
   935  079C  0020               	movlb	0	; select bank0
   936  079D  0820               	movf	?___ftdiv,w
   937  079E  00B0               	movwf	___fttol@f1
   938  079F  0821               	movf	?___ftdiv+1,w
   939  07A0  00B1               	movwf	___fttol@f1+1
   940  07A1  0822               	movf	?___ftdiv+2,w
   941  07A2  00B2               	movwf	___fttol@f1+2
   942  07A3  3185  2514  3187   	fcall	___fttol
   943  07A6  0020               	movlb	0	; select bank0
   944  07A7  0831               	movf	?___fttol+1,w
   945  07A8  00D8               	movwf	main@a+1
   946  07A9  0830               	movf	?___fttol,w
   947  07AA  00D7               	movwf	main@a
   948                           
   949                           ;main.c: 120: a = a + 1;
   950  07AB  0857               	movf	main@a,w
   951  07AC  3E01               	addlw	1
   952  07AD  00D7               	movwf	main@a
   953  07AE  3000               	movlw	0
   954  07AF  3D58               	addwfc	main@a+1,w
   955  07B0  00D8               	movwf	main@a+1
   956                           
   957                           ;main.c: 122: sprintf(Sout, "LightValue = %d", adc_value);
   958  07B1  300A               	movlw	low (STR_3| (0+32768))
   959  07B2  00A0               	movwf	sprintf@f
   960  07B3  3088               	movlw	high (STR_3| (0+32768))
   961  07B4  00A1               	movwf	sprintf@f+1
   962  07B5  0856               	movf	main@adc_value+1,w
   963  07B6  00A3               	movwf	?_sprintf+3
   964  07B7  0855               	movf	main@adc_value,w
   965  07B8  00A2               	movwf	?_sprintf+2
   966  07B9  3040               	movlw	(low (main@Sout| 0))& (0+255)
   967  07BA  3186  2644  3187   	fcall	_sprintf
   968                           
   969                           ;main.c: 124: I2C_LCD_SWrite(0x27, Sout, 16);
   970  07BD  3040               	movlw	(low (main@Sout| 0))& (0+255)
   971  07BE  0020               	movlb	0	; select bank0
   972  07BF  00BE               	movwf	??_main
   973  07C0  083E               	movf	??_main,w
   974  07C1  00F8               	movwf	I2C_LCD_SWrite@Data
   975  07C2  3010               	movlw	16
   976  07C3  00BF               	movwf	??_main+1
   977  07C4  083F               	movf	??_main+1,w
   978  07C5  00F9               	movwf	I2C_LCD_SWrite@Max
   979  07C6  3027               	movlw	39
   980  07C7  3184  2455  3187   	fcall	_I2C_LCD_SWrite
   981                           
   982                           ;main.c: 126: I2C_LCD_Pos(0x27, 0x40);
   983  07CA  3040               	movlw	64
   984  07CB  0020               	movlb	0	; select bank0
   985  07CC  00BE               	movwf	??_main
   986  07CD  083E               	movf	??_main,w
   987  07CE  00F8               	movwf	I2C_LCD_Pos@Pos
   988  07CF  3027               	movlw	39
   989  07D0  3183  2384  3187   	fcall	_I2C_LCD_Pos
   990                           
   991                           ;main.c: 128: sprintf(Sout, "DistValue = %d", a);
   992  07D3  301A               	movlw	low (STR_4| (0+32768))
   993  07D4  0020               	movlb	0	; select bank0
   994  07D5  00A0               	movwf	sprintf@f
   995  07D6  3088               	movlw	high (STR_4| (0+32768))
   996  07D7  00A1               	movwf	sprintf@f+1
   997  07D8  0858               	movf	main@a+1,w
   998  07D9  00A3               	movwf	?_sprintf+3
   999  07DA  0857               	movf	main@a,w
  1000  07DB  00A2               	movwf	?_sprintf+2
  1001  07DC  3040               	movlw	(low (main@Sout| 0))& (0+255)
  1002  07DD  3186  2644  3187   	fcall	_sprintf
  1003                           
  1004                           ;main.c: 130: I2C_LCD_SWrite(0x27, Sout, 16);
  1005  07E0  3040               	movlw	(low (main@Sout| 0))& (0+255)
  1006  07E1  0020               	movlb	0	; select bank0
  1007  07E2  00BE               	movwf	??_main
  1008  07E3  083E               	movf	??_main,w
  1009  07E4  00F8               	movwf	I2C_LCD_SWrite@Data
  1010  07E5  3010               	movlw	16
  1011  07E6  00BF               	movwf	??_main+1
  1012  07E7  083F               	movf	??_main+1,w
  1013  07E8  00F9               	movwf	I2C_LCD_SWrite@Max
  1014  07E9  3027               	movlw	39
  1015  07EA  3184  2455  3187   	fcall	_I2C_LCD_SWrite
  1016                           
  1017                           ;main.c: 133: _delay((unsigned long)((50)*(8000000/4000.0)));
  1018  07ED  3082               	movlw	130
  1019  07EE  0020               	movlb	0	; select bank0
  1020  07EF  00BE               	movwf	??_main
  1021  07F0  30DD               	movlw	221
  1022  07F1                     u1317:	
  1023  07F1  0B89               	decfsz	9,f
  1024  07F2  2FF1               	goto	u1317
  1025  07F3  0BBE               	decfsz	??_main,f
  1026  07F4  2FF1               	goto	u1317
  1027  07F5  3200               	nop2
  1028                           
  1029                           ;main.c: 135: I2C_LCD_Command(0x27, 0x01);
  1030  07F6  01F8               	clrf	I2C_LCD_Command@Cmd
  1031  07F7  0AF8               	incf	I2C_LCD_Command@Cmd,f
  1032  07F8  3027               	movlw	39
  1033  07F9  3183  231C  3187   	fcall	_I2C_LCD_Command
  1034  07FC  2F60               	goto	l1469
  1035  07FD                     __end_of_main:	
  1036                           
  1037                           	psect	text1
  1038  0644                     __ptext1:	
  1039 ;; *************** function _sprintf *****************
  1040 ;; Defined at:
  1041 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  sp              1    wreg     PTR unsigned char 
  1044 ;;		 -> main@Sout(20), 
  1045 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  1046 ;;		 -> STR_4(15), STR_3(16), STR_2(1), STR_1(12), 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  1049 ;;		 -> main@Sout(20), 
  1050 ;;  tmpval          4    0        struct .
  1051 ;;  val             2   11[BANK0 ] unsigned int 
  1052 ;;  cp              2    0        PTR const unsigned char 
  1053 ;;  len             2    0        unsigned int 
  1054 ;;  c               1   14[BANK0 ] char 
  1055 ;;  prec            1   10[BANK0 ] char 
  1056 ;;  flag            1    9[BANK0 ] unsigned char 
  1057 ;;  ap              1    8[BANK0 ] PTR void [1]
  1058 ;;		 -> ?_sprintf(2), 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  2    0[BANK0 ] int 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1068 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1069 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1070 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1071 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1072 ;;Total ram usage:       15 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    1
  1075 ;; This function calls:
  1076 ;;		___lwdiv
  1077 ;;		___lwmod
  1078 ;; This function is called by:
  1079 ;;		_main
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           
  1084                           ;psect for function _sprintf
  1085  0644                     _sprintf:	
  1086                           
  1087                           ;incstack = 0
  1088                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1089                           ;sprintf@sp stored from wreg
  1090  0644  0020               	movlb	0	; select bank0
  1091  0645  00AD               	movwf	sprintf@sp
  1092                           
  1093                           ;doprnt.c: 494: va_list ap;
  1094                           ;doprnt.c: 499: signed char c;
  1095                           ;doprnt.c: 506: signed char prec;
  1096                           ;doprnt.c: 508: unsigned char flag;
  1097                           ;doprnt.c: 523: union {
  1098                           ;doprnt.c: 524: unsigned long vd;
  1099                           ;doprnt.c: 525: double integ;
  1100                           ;doprnt.c: 526: } tmpval;
  1101                           ;doprnt.c: 528: unsigned int val;
  1102                           ;doprnt.c: 529: unsigned len;
  1103                           ;doprnt.c: 530: const char * cp;
  1104                           ;doprnt.c: 533: *ap = __va_start();
  1105  0646  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1106  0647  00A4               	movwf	??_sprintf
  1107  0648  0824               	movf	??_sprintf,w
  1108  0649  00A8               	movwf	sprintf@ap
  1109  064A                     l1345:	
  1110                           ;doprnt.c: 536: while(c = *f++) {
  1111                           
  1112  064A  0821               	movf	sprintf@f+1,w
  1113  064B  00A5               	movwf	??_sprintf+1
  1114  064C  0820               	movf	sprintf@f,w
  1115  064D  00A4               	movwf	??_sprintf
  1116  064E  0AA0               	incf	sprintf@f,f
  1117  064F  1903               	skipnz
  1118  0650  0AA1               	incf	sprintf@f+1,f
  1119  0651  0824               	movf	??_sprintf,w
  1120  0652  0084               	movwf	4
  1121  0653  0825               	movf	??_sprintf+1,w
  1122  0654  0085               	movwf	5
  1123  0655  0800               	movf	0,w	;code access
  1124  0656  00A6               	movwf	??_sprintf+2
  1125  0657  0826               	movf	??_sprintf+2,w
  1126  0658  00AE               	movwf	sprintf@c
  1127  0659  082E               	movf	sprintf@c,w
  1128  065A  1903               	btfsc	3,2
  1129  065B  2F0C               	goto	l1347
  1130                           
  1131                           ;doprnt.c: 538: if(c != '%')
  1132  065C  3025               	movlw	37
  1133  065D  062E               	xorwf	sprintf@c,w
  1134  065E  1903               	btfsc	3,2
  1135  065F  2E6C               	goto	l1301
  1136                           
  1137                           ;doprnt.c: 540: {
  1138                           ;doprnt.c: 541: ((*sp++ = (c)));
  1139  0660  082E               	movf	sprintf@c,w
  1140  0661  00A4               	movwf	??_sprintf
  1141  0662  082D               	movf	sprintf@sp,w
  1142  0663  0086               	movwf	6
  1143  0664  0187               	clrf	7
  1144  0665  0824               	movf	??_sprintf,w
  1145  0666  0081               	movwf	1
  1146  0667  3001               	movlw	1
  1147  0668  00A4               	movwf	??_sprintf
  1148  0669  0824               	movf	??_sprintf,w
  1149  066A  07AD               	addwf	sprintf@sp,f
  1150                           
  1151                           ;doprnt.c: 542: continue;
  1152  066B  2E4A               	goto	l1345
  1153  066C                     l1301:	
  1154                           
  1155                           ;doprnt.c: 543: }
  1156                           ;doprnt.c: 548: flag = 0;
  1157  066C  01A9               	clrf	sprintf@flag
  1158                           
  1159                           ;doprnt.c: 822: }
  1160                           
  1161                           ;doprnt.c: 813: continue;
  1162                           
  1163                           ;doprnt.c: 802: default:
  1164                           
  1165                           ;doprnt.c: 698: case 'i':
  1166                           ;doprnt.c: 699: break;
  1167                           
  1168                           ;doprnt.c: 697: case 'd':
  1169                           
  1170                           ;doprnt.c: 638: goto alldone;
  1171                           
  1172                           ;doprnt.c: 637: case 0:
  1173                           
  1174                           ;doprnt.c: 635: switch(c = *f++) {
  1175  066D  0821               	movf	sprintf@f+1,w
  1176  066E  00A5               	movwf	??_sprintf+1
  1177  066F  0820               	movf	sprintf@f,w
  1178  0670  00A4               	movwf	??_sprintf
  1179  0671  0AA0               	incf	sprintf@f,f
  1180  0672  1903               	skipnz
  1181  0673  0AA1               	incf	sprintf@f+1,f
  1182  0674  0824               	movf	??_sprintf,w
  1183  0675  0084               	movwf	4
  1184  0676  0825               	movf	??_sprintf+1,w
  1185  0677  0085               	movwf	5
  1186  0678  0800               	movf	0,w	;code access
  1187  0679  00AE               	movwf	sprintf@c
  1188                           
  1189                           ; Switch size 1, requested type "space"
  1190                           ; Number of cases is 3, Range of values is 0 to 105
  1191                           ; switch strategies available:
  1192                           ; Name         Instructions Cycles
  1193                           ; simple_byte           10     6 (average)
  1194                           ; direct_byte          218     6 (fixed)
  1195                           ; jumptable            260     6 (fixed)
  1196                           ;	Chosen strategy is simple_byte
  1197  067A  3A00               	xorlw	0	; case 0
  1198  067B  1903               	skipnz
  1199  067C  2F0C               	goto	l1347
  1200  067D  3A64               	xorlw	100	; case 100
  1201  067E  1903               	skipnz
  1202  067F  2E84               	goto	l1307
  1203  0680  3A0D               	xorlw	13	; case 105
  1204  0681  1903               	skipnz
  1205  0682  2E84               	goto	l1307
  1206  0683  2E4A               	goto	l1345
  1207  0684                     l1307:	
  1208                           
  1209                           ;doprnt.c: 1253: {
  1210                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1211  0684  0828               	movf	sprintf@ap,w
  1212  0685  0086               	movwf	6
  1213  0686  0187               	clrf	7
  1214  0687  3F40               	moviw [0]fsr1
  1215  0688  00AB               	movwf	sprintf@val
  1216  0689  3F41               	moviw [1]fsr1
  1217  068A  00AC               	movwf	sprintf@val+1
  1218  068B  3002               	movlw	2
  1219  068C  00A4               	movwf	??_sprintf
  1220  068D  0824               	movf	??_sprintf,w
  1221  068E  07A8               	addwf	sprintf@ap,f
  1222                           
  1223                           ;doprnt.c: 1261: if((int)val < 0) {
  1224  068F  1FAC               	btfss	sprintf@val+1,7
  1225  0690  2E9A               	goto	l1317
  1226                           
  1227                           ;doprnt.c: 1262: flag |= 0x03;
  1228  0691  3003               	movlw	3
  1229  0692  00A4               	movwf	??_sprintf
  1230  0693  0824               	movf	??_sprintf,w
  1231  0694  04A9               	iorwf	sprintf@flag,f
  1232                           
  1233                           ;doprnt.c: 1263: val = -val;
  1234  0695  09AB               	comf	sprintf@val,f
  1235  0696  09AC               	comf	sprintf@val+1,f
  1236  0697  0AAB               	incf	sprintf@val,f
  1237  0698  1903               	skipnz
  1238  0699  0AAC               	incf	sprintf@val+1,f
  1239  069A                     l1317:	
  1240                           
  1241                           ;doprnt.c: 1264: }
  1242                           ;doprnt.c: 1266: }
  1243                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1244  069A  01AE               	clrf	sprintf@c
  1245  069B  0AAE               	incf	sprintf@c,f
  1246  069C  3005               	movlw	5
  1247  069D  062E               	xorwf	sprintf@c,w
  1248  069E  1903               	btfsc	3,2
  1249  069F  2EBF               	goto	l1329
  1250  06A0                     l1323:	
  1251                           
  1252                           ;doprnt.c: 1306: if(val < dpowers[c])
  1253  06A0  082E               	movf	sprintf@c,w
  1254  06A1  00A4               	movwf	??_sprintf
  1255  06A2  01A5               	clrf	??_sprintf+1
  1256  06A3  35A4               	lslf	??_sprintf,f
  1257  06A4  0DA5               	rlf	??_sprintf+1,f
  1258  06A5  3000               	movlw	low (_dpowers| (0+32768))
  1259  06A6  0724               	addwf	??_sprintf,w
  1260  06A7  0084               	movwf	4
  1261  06A8  3088               	movlw	high (_dpowers| (0+32768))
  1262  06A9  3D25               	addwfc	??_sprintf+1,w
  1263  06AA  0085               	movwf	5
  1264  06AB  3F00               	moviw [0]fsr0
  1265  06AC  00A6               	movwf	??_sprintf+2
  1266  06AD  3F01               	moviw [1]fsr0
  1267  06AE  00A7               	movwf	??_sprintf+3
  1268  06AF  0827               	movf	??_sprintf+3,w
  1269  06B0  022C               	subwf	sprintf@val+1,w
  1270  06B1  1D03               	skipz
  1271  06B2  2EB5               	goto	u1025
  1272  06B3  0826               	movf	??_sprintf+2,w
  1273  06B4  022B               	subwf	sprintf@val,w
  1274  06B5                     u1025:	
  1275  06B5  1C03               	btfss	3,0
  1276  06B6  2EBF               	goto	l1329
  1277                           
  1278                           ;doprnt.c: 1307: break;
  1279  06B7  3001               	movlw	1
  1280  06B8  00A4               	movwf	??_sprintf
  1281  06B9  0824               	movf	??_sprintf,w
  1282  06BA  07AE               	addwf	sprintf@c,f
  1283  06BB  3005               	movlw	5
  1284  06BC  062E               	xorwf	sprintf@c,w
  1285  06BD  1D03               	btfss	3,2
  1286  06BE  2EA0               	goto	l1323
  1287  06BF                     l1329:	
  1288                           
  1289                           ;doprnt.c: 1422: {
  1290                           ;doprnt.c: 1438: if(flag & 0x03)
  1291  06BF  0829               	movf	sprintf@flag,w
  1292  06C0  3903               	andlw	3
  1293  06C1  1903               	btfsc	3,2
  1294  06C2  2ECE               	goto	l1335
  1295                           
  1296                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1297  06C3  302D               	movlw	45
  1298  06C4  00A4               	movwf	??_sprintf
  1299  06C5  082D               	movf	sprintf@sp,w
  1300  06C6  0086               	movwf	6
  1301  06C7  0187               	clrf	7
  1302  06C8  0824               	movf	??_sprintf,w
  1303  06C9  0081               	movwf	1
  1304  06CA  3001               	movlw	1
  1305  06CB  00A4               	movwf	??_sprintf
  1306  06CC  0824               	movf	??_sprintf,w
  1307  06CD  07AD               	addwf	sprintf@sp,f
  1308  06CE                     l1335:	
  1309                           
  1310                           ;doprnt.c: 1469: }
  1311                           ;doprnt.c: 1472: prec = c;
  1312  06CE  082E               	movf	sprintf@c,w
  1313  06CF  00A4               	movwf	??_sprintf
  1314  06D0  0824               	movf	??_sprintf,w
  1315  06D1  00AA               	movwf	sprintf@prec
  1316  06D2                     l1343:	
  1317                           ;doprnt.c: 1474: while(prec--) {
  1318                           
  1319  06D2  30FF               	movlw	255
  1320  06D3  00A4               	movwf	??_sprintf
  1321  06D4  0824               	movf	??_sprintf,w
  1322  06D5  07AA               	addwf	sprintf@prec,f
  1323  06D6  0A2A               	incf	sprintf@prec,w
  1324  06D7  1903               	btfsc	3,2
  1325  06D8  2E4A               	goto	l1345
  1326                           
  1327                           ;doprnt.c: 1478: {
  1328                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1329  06D9  300A               	movlw	10
  1330  06DA  00F8               	movwf	___lwmod@divisor
  1331  06DB  3000               	movlw	0
  1332  06DC  00F9               	movwf	___lwmod@divisor+1
  1333  06DD  082A               	movf	sprintf@prec,w
  1334  06DE  00A4               	movwf	??_sprintf
  1335  06DF  01A5               	clrf	??_sprintf+1
  1336  06E0  35A4               	lslf	??_sprintf,f
  1337  06E1  0DA5               	rlf	??_sprintf+1,f
  1338  06E2  3000               	movlw	low (_dpowers| (0+32768))
  1339  06E3  0724               	addwf	??_sprintf,w
  1340  06E4  0084               	movwf	4
  1341  06E5  3088               	movlw	high (_dpowers| (0+32768))
  1342  06E6  3D25               	addwfc	??_sprintf+1,w
  1343  06E7  0085               	movwf	5
  1344  06E8  3F00               	moviw [0]fsr0
  1345  06E9  00F0               	movwf	___lwdiv@divisor
  1346  06EA  3F01               	moviw [1]fsr0
  1347  06EB  00F1               	movwf	___lwdiv@divisor+1
  1348  06EC  082C               	movf	sprintf@val+1,w
  1349  06ED  00F3               	movwf	___lwdiv@dividend+1
  1350  06EE  082B               	movf	sprintf@val,w
  1351  06EF  00F2               	movwf	___lwdiv@dividend
  1352  06F0  3183  2350  3186   	fcall	___lwdiv
  1353  06F3  0871               	movf	?___lwdiv+1,w
  1354  06F4  00FB               	movwf	___lwmod@dividend+1
  1355  06F5  0870               	movf	?___lwdiv,w
  1356  06F6  00FA               	movwf	___lwmod@dividend
  1357  06F7  3182  22F0  3186   	fcall	___lwmod
  1358  06FA  0878               	movf	?___lwmod,w
  1359  06FB  3E30               	addlw	48
  1360  06FC  0020               	movlb	0	; select bank0
  1361  06FD  00A6               	movwf	??_sprintf+2
  1362  06FE  0826               	movf	??_sprintf+2,w
  1363  06FF  00AE               	movwf	sprintf@c
  1364                           
  1365                           ;doprnt.c: 1523: }
  1366                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1367  0700  082E               	movf	sprintf@c,w
  1368  0701  00A4               	movwf	??_sprintf
  1369  0702  082D               	movf	sprintf@sp,w
  1370  0703  0086               	movwf	6
  1371  0704  0187               	clrf	7
  1372  0705  0824               	movf	??_sprintf,w
  1373  0706  0081               	movwf	1
  1374  0707  3001               	movlw	1
  1375  0708  00A4               	movwf	??_sprintf
  1376  0709  0824               	movf	??_sprintf,w
  1377  070A  07AD               	addwf	sprintf@sp,f
  1378  070B  2ED2               	goto	l1343
  1379  070C                     l1347:	
  1380                           ;doprnt.c: 1525: }
  1381                           ;doprnt.c: 1533: }
  1382                           ;doprnt.c: 1535: alldone:
  1383                           
  1384                           
  1385                           ;doprnt.c: 1538: *sp = 0;
  1386  070C  082D               	movf	sprintf@sp,w
  1387  070D  0086               	movwf	6
  1388  070E  0187               	clrf	7
  1389  070F  0181               	clrf	1
  1390  0710  0008               	return
  1391  0711                     __end_of_sprintf:	
  1392                           ;doprnt.c: 1540: return 0;
  1393                           ;	Return value of _sprintf is never used
  1394                           
  1395                           
  1396                           	psect	text2
  1397  02F0                     __ptext2:	
  1398 ;; *************** function ___lwmod *****************
  1399 ;; Defined at:
  1400 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  divisor         2    8[COMMON] unsigned int 
  1403 ;;  dividend        2   10[COMMON] unsigned int 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  counter         1   13[COMMON] unsigned char 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  2    8[COMMON] unsigned int 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1418 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1419 ;;Total ram usage:        6 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_sprintf
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function ___lwmod
  1430  02F0                     ___lwmod:	
  1431                           
  1432                           ;incstack = 0
  1433                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1434  02F0  0878               	movf	___lwmod@divisor,w
  1435  02F1  0479               	iorwf	___lwmod@divisor+1,w
  1436  02F2  1903               	btfsc	3,2
  1437  02F3  2B17               	goto	l1207
  1438  02F4  01FD               	clrf	___lwmod@counter
  1439  02F5  0AFD               	incf	___lwmod@counter,f
  1440  02F6                     l1197:	
  1441  02F6  1BF9               	btfsc	___lwmod@divisor+1,7
  1442  02F7  2B02               	goto	l1199
  1443  02F8  3001               	movlw	1
  1444  02F9                     u895:	
  1445  02F9  35F8               	lslf	___lwmod@divisor,f
  1446  02FA  0DF9               	rlf	___lwmod@divisor+1,f
  1447  02FB  0B89               	decfsz	9,f
  1448  02FC  2AF9               	goto	u895
  1449  02FD  3001               	movlw	1
  1450  02FE  00FC               	movwf	??___lwmod
  1451  02FF  087C               	movf	??___lwmod,w
  1452  0300  07FD               	addwf	___lwmod@counter,f
  1453  0301  2AF6               	goto	l1197
  1454  0302                     l1199:	
  1455  0302  0879               	movf	___lwmod@divisor+1,w
  1456  0303  027B               	subwf	___lwmod@dividend+1,w
  1457  0304  1D03               	skipz
  1458  0305  2B08               	goto	u915
  1459  0306  0878               	movf	___lwmod@divisor,w
  1460  0307  027A               	subwf	___lwmod@dividend,w
  1461  0308                     u915:	
  1462  0308  1C03               	skipc
  1463  0309  2B0E               	goto	l1203
  1464  030A  0878               	movf	___lwmod@divisor,w
  1465  030B  02FA               	subwf	___lwmod@dividend,f
  1466  030C  0879               	movf	___lwmod@divisor+1,w
  1467  030D  3BFB               	subwfb	___lwmod@dividend+1,f
  1468  030E                     l1203:	
  1469  030E  3001               	movlw	1
  1470  030F                     u925:	
  1471  030F  36F9               	lsrf	___lwmod@divisor+1,f
  1472  0310  0CF8               	rrf	___lwmod@divisor,f
  1473  0311  0B89               	decfsz	9,f
  1474  0312  2B0F               	goto	u925
  1475  0313  3001               	movlw	1
  1476  0314  02FD               	subwf	___lwmod@counter,f
  1477  0315  1D03               	btfss	3,2
  1478  0316  2B02               	goto	l1199
  1479  0317                     l1207:	
  1480  0317  087B               	movf	___lwmod@dividend+1,w
  1481  0318  00F9               	movwf	?___lwmod+1
  1482  0319  087A               	movf	___lwmod@dividend,w
  1483  031A  00F8               	movwf	?___lwmod
  1484  031B  0008               	return
  1485  031C                     __end_of___lwmod:	
  1486                           
  1487                           	psect	text3
  1488  0350                     __ptext3:	
  1489 ;; *************** function ___lwdiv *****************
  1490 ;; Defined at:
  1491 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  divisor         2    0[COMMON] unsigned int 
  1494 ;;  dividend        2    2[COMMON] unsigned int 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  quotient        2    5[COMMON] unsigned int 
  1497 ;;  counter         1    7[COMMON] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  2    0[COMMON] unsigned int 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1508 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1510 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1511 ;;Total ram usage:        8 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_sprintf
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           
  1521                           ;psect for function ___lwdiv
  1522  0350                     ___lwdiv:	
  1523                           
  1524                           ;incstack = 0
  1525                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1526  0350  01F5               	clrf	___lwdiv@quotient
  1527  0351  01F6               	clrf	___lwdiv@quotient+1
  1528  0352  0870               	movf	___lwdiv@divisor,w
  1529  0353  0471               	iorwf	___lwdiv@divisor+1,w
  1530  0354  1903               	btfsc	3,2
  1531  0355  2B7F               	goto	l1185
  1532  0356  01F7               	clrf	___lwdiv@counter
  1533  0357  0AF7               	incf	___lwdiv@counter,f
  1534  0358                     l1173:	
  1535  0358  1BF1               	btfsc	___lwdiv@divisor+1,7
  1536  0359  2B64               	goto	l1175
  1537  035A  3001               	movlw	1
  1538  035B                     u825:	
  1539  035B  35F0               	lslf	___lwdiv@divisor,f
  1540  035C  0DF1               	rlf	___lwdiv@divisor+1,f
  1541  035D  0B89               	decfsz	9,f
  1542  035E  2B5B               	goto	u825
  1543  035F  3001               	movlw	1
  1544  0360  00F4               	movwf	??___lwdiv
  1545  0361  0874               	movf	??___lwdiv,w
  1546  0362  07F7               	addwf	___lwdiv@counter,f
  1547  0363  2B58               	goto	l1173
  1548  0364                     l1175:	
  1549  0364  3001               	movlw	1
  1550  0365                     u845:	
  1551  0365  35F5               	lslf	___lwdiv@quotient,f
  1552  0366  0DF6               	rlf	___lwdiv@quotient+1,f
  1553  0367  0B89               	decfsz	9,f
  1554  0368  2B65               	goto	u845
  1555  0369  0871               	movf	___lwdiv@divisor+1,w
  1556  036A  0273               	subwf	___lwdiv@dividend+1,w
  1557  036B  1D03               	skipz
  1558  036C  2B6F               	goto	u855
  1559  036D  0870               	movf	___lwdiv@divisor,w
  1560  036E  0272               	subwf	___lwdiv@dividend,w
  1561  036F                     u855:	
  1562  036F  1C03               	skipc
  1563  0370  2B76               	goto	l1181
  1564  0371  0870               	movf	___lwdiv@divisor,w
  1565  0372  02F2               	subwf	___lwdiv@dividend,f
  1566  0373  0871               	movf	___lwdiv@divisor+1,w
  1567  0374  3BF3               	subwfb	___lwdiv@dividend+1,f
  1568  0375  1475               	bsf	___lwdiv@quotient,0
  1569  0376                     l1181:	
  1570  0376  3001               	movlw	1
  1571  0377                     u865:	
  1572  0377  36F1               	lsrf	___lwdiv@divisor+1,f
  1573  0378  0CF0               	rrf	___lwdiv@divisor,f
  1574  0379  0B89               	decfsz	9,f
  1575  037A  2B77               	goto	u865
  1576  037B  3001               	movlw	1
  1577  037C  02F7               	subwf	___lwdiv@counter,f
  1578  037D  1D03               	btfss	3,2
  1579  037E  2B64               	goto	l1175
  1580  037F                     l1185:	
  1581  037F  0876               	movf	___lwdiv@quotient+1,w
  1582  0380  00F1               	movwf	?___lwdiv+1
  1583  0381  0875               	movf	___lwdiv@quotient,w
  1584  0382  00F0               	movwf	?___lwdiv
  1585  0383  0008               	return
  1586  0384                     __end_of___lwdiv:	
  1587                           
  1588                           	psect	text4
  1589  0285                     __ptext4:	
  1590 ;; *************** function _i2c_Init *****************
  1591 ;; Defined at:
  1592 ;;		line 12 in file "i2c_LCD.h"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1610 ;;Total ram usage:        0 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           
  1620                           ;psect for function _i2c_Init
  1621  0285                     _i2c_Init:	
  1622                           
  1623                           ;i2c_LCD.h: 16: TRISB4=1;
  1624                           
  1625                           ;incstack = 0
  1626                           ; Regs used in _i2c_Init: [wreg+status,2]
  1627  0285  0021               	movlb	1	; select bank1
  1628  0286  160D               	bsf	13,4	;volatile
  1629                           
  1630                           ;i2c_LCD.h: 17: TRISB6=1;
  1631  0287  170D               	bsf	13,6	;volatile
  1632                           
  1633                           ;i2c_LCD.h: 19: SSP1CON1 = 0b00101000;
  1634  0288  3028               	movlw	40
  1635  0289  0024               	movlb	4	; select bank4
  1636  028A  0095               	movwf	21	;volatile
  1637                           
  1638                           ;i2c_LCD.h: 20: SSP1CON2 = 0x00;
  1639  028B  0196               	clrf	22	;volatile
  1640                           
  1641                           ;i2c_LCD.h: 22: SSP1ADD = 9;
  1642  028C  3009               	movlw	9
  1643  028D  0092               	movwf	18	;volatile
  1644                           
  1645                           ;i2c_LCD.h: 24: SSP1STAT = 0b11000000;
  1646  028E  30C0               	movlw	192
  1647  028F  0094               	movwf	20	;volatile
  1648  0290  0008               	return
  1649  0291                     __end_of_i2c_Init:	
  1650                           
  1651                           	psect	text5
  1652  0514                     __ptext5:	
  1653 ;; *************** function ___fttol *****************
  1654 ;; Defined at:
  1655 ;;		line 44 in file "/opt/microchip/xc8/v1.45/sources/common/fttol.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  f1              3   16[BANK0 ] float 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  lval            4   25[BANK0 ] unsigned long 
  1660 ;;  exp1            1   29[BANK0 ] unsigned char 
  1661 ;;  sign1           1   24[BANK0 ] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  4   16[BANK0 ] long 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1671 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1672 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1673 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1674 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;Total ram usage:       14 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function ___fttol
  1686  0514                     ___fttol:	
  1687                           
  1688                           ;incstack = 0
  1689                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1690  0514  0020               	movlb	0	; select bank0
  1691  0515  0830               	movf	___fttol@f1,w
  1692  0516  00B4               	movwf	??___fttol
  1693  0517  0831               	movf	___fttol@f1+1,w
  1694  0518  00B5               	movwf	??___fttol+1
  1695  0519  0832               	movf	___fttol@f1+2,w
  1696  051A  00B6               	movwf	??___fttol+2
  1697  051B  1003               	clrc
  1698  051C  0D35               	rlf	??___fttol+1,w
  1699  051D  0D36               	rlf	??___fttol+2,w
  1700  051E  00B7               	movwf	??___fttol+3
  1701  051F  0837               	movf	??___fttol+3,w
  1702  0520  00BD               	movwf	___fttol@exp1
  1703  0521  083D               	movf	___fttol@exp1,w
  1704  0522  1D03               	btfss	3,2
  1705  0523  2D2D               	goto	l1411
  1706  0524  3000               	movlw	0
  1707  0525  00B3               	movwf	?___fttol+3
  1708  0526  3000               	movlw	0
  1709  0527  00B2               	movwf	?___fttol+2
  1710  0528  3000               	movlw	0
  1711  0529  00B1               	movwf	?___fttol+1
  1712  052A  3000               	movlw	0
  1713  052B  00B0               	movwf	?___fttol
  1714  052C  0008               	return
  1715  052D                     l1411:	
  1716  052D  0830               	movf	___fttol@f1,w
  1717  052E  00B4               	movwf	??___fttol
  1718  052F  0831               	movf	___fttol@f1+1,w
  1719  0530  00B5               	movwf	??___fttol+1
  1720  0531  0832               	movf	___fttol@f1+2,w
  1721  0532  00B6               	movwf	??___fttol+2
  1722  0533  3017               	movlw	23
  1723  0534                     u1175:	
  1724  0534  36B6               	lsrf	??___fttol+2,f
  1725  0535  0CB5               	rrf	??___fttol+1,f
  1726  0536  0CB4               	rrf	??___fttol,f
  1727  0537  0B89               	decfsz	9,f
  1728  0538  2D34               	goto	u1175
  1729  0539  0834               	movf	??___fttol,w
  1730  053A  00B7               	movwf	??___fttol+3
  1731  053B  0837               	movf	??___fttol+3,w
  1732  053C  00B8               	movwf	___fttol@sign1
  1733  053D  17B1               	bsf	___fttol@f1+1,7
  1734  053E  30FF               	movlw	255
  1735  053F  05B0               	andwf	___fttol@f1,f
  1736  0540  30FF               	movlw	255
  1737  0541  05B1               	andwf	___fttol@f1+1,f
  1738  0542  3000               	movlw	0
  1739  0543  05B2               	andwf	___fttol@f1+2,f
  1740  0544  0830               	movf	___fttol@f1,w
  1741  0545  00B9               	movwf	___fttol@lval
  1742  0546  0831               	movf	___fttol@f1+1,w
  1743  0547  00BA               	movwf	___fttol@lval+1
  1744  0548  0832               	movf	___fttol@f1+2,w
  1745  0549  00BB               	movwf	___fttol@lval+2
  1746  054A  01BC               	clrf	___fttol@lval+3
  1747  054B  308E               	movlw	142
  1748  054C  02BD               	subwf	___fttol@exp1,f
  1749  054D  1FBD               	btfss	___fttol@exp1,7
  1750  054E  2D6B               	goto	l1431
  1751  054F  083D               	movf	___fttol@exp1,w
  1752  0550  3A80               	xorlw	128
  1753  0551  3E8F               	addlw	143
  1754  0552  1803               	skipnc
  1755  0553  2D5D               	goto	l1429
  1756  0554  3000               	movlw	0
  1757  0555  00B3               	movwf	?___fttol+3
  1758  0556  3000               	movlw	0
  1759  0557  00B2               	movwf	?___fttol+2
  1760  0558  3000               	movlw	0
  1761  0559  00B1               	movwf	?___fttol+1
  1762  055A  3000               	movlw	0
  1763  055B  00B0               	movwf	?___fttol
  1764  055C  0008               	return
  1765  055D                     l1429:	
  1766  055D  3001               	movlw	1
  1767  055E                     u1205:	
  1768  055E  36BC               	lsrf	___fttol@lval+3,f
  1769  055F  0CBB               	rrf	___fttol@lval+2,f
  1770  0560  0CBA               	rrf	___fttol@lval+1,f
  1771  0561  0CB9               	rrf	___fttol@lval,f
  1772  0562  0B89               	decfsz	9,f
  1773  0563  2D5E               	goto	u1205
  1774  0564  3001               	movlw	1
  1775  0565  00B4               	movwf	??___fttol
  1776  0566  0834               	movf	??___fttol,w
  1777  0567  07BD               	addwf	___fttol@exp1,f
  1778  0568  1903               	btfsc	3,2
  1779  0569  2D84               	goto	l1439
  1780  056A  2D5D               	goto	l1429
  1781  056B                     l1431:	
  1782  056B  3018               	movlw	24
  1783  056C  023D               	subwf	___fttol@exp1,w
  1784  056D  1C03               	skipc
  1785  056E  2D81               	goto	l485
  1786  056F  3000               	movlw	0
  1787  0570  00B3               	movwf	?___fttol+3
  1788  0571  3000               	movlw	0
  1789  0572  00B2               	movwf	?___fttol+2
  1790  0573  3000               	movlw	0
  1791  0574  00B1               	movwf	?___fttol+1
  1792  0575  3000               	movlw	0
  1793  0576  00B0               	movwf	?___fttol
  1794  0577  0008               	return
  1795  0578                     l1437:	
  1796  0578  3001               	movlw	1
  1797  0579                     u1235:	
  1798  0579  35B9               	lslf	___fttol@lval,f
  1799  057A  0DBA               	rlf	___fttol@lval+1,f
  1800  057B  0DBB               	rlf	___fttol@lval+2,f
  1801  057C  0DBC               	rlf	___fttol@lval+3,f
  1802  057D  0B89               	decfsz	9,f
  1803  057E  2D79               	goto	u1235
  1804  057F  3001               	movlw	1
  1805  0580  02BD               	subwf	___fttol@exp1,f
  1806  0581                     l485:	
  1807  0581  083D               	movf	___fttol@exp1,w
  1808  0582  1D03               	btfss	3,2
  1809  0583  2D78               	goto	l1437
  1810  0584                     l1439:	
  1811  0584  0838               	movf	___fttol@sign1,w
  1812  0585  1903               	btfsc	3,2
  1813  0586  2D92               	goto	l1443
  1814  0587  09B9               	comf	___fttol@lval,f
  1815  0588  09BA               	comf	___fttol@lval+1,f
  1816  0589  09BB               	comf	___fttol@lval+2,f
  1817  058A  09BC               	comf	___fttol@lval+3,f
  1818  058B  0AB9               	incf	___fttol@lval,f
  1819  058C  1903               	skipnz
  1820  058D  0ABA               	incf	___fttol@lval+1,f
  1821  058E  1903               	skipnz
  1822  058F  0ABB               	incf	___fttol@lval+2,f
  1823  0590  1903               	skipnz
  1824  0591  0ABC               	incf	___fttol@lval+3,f
  1825  0592                     l1443:	
  1826  0592  083C               	movf	___fttol@lval+3,w
  1827  0593  00B3               	movwf	?___fttol+3
  1828  0594  083B               	movf	___fttol@lval+2,w
  1829  0595  00B2               	movwf	?___fttol+2
  1830  0596  083A               	movf	___fttol@lval+1,w
  1831  0597  00B1               	movwf	?___fttol+1
  1832  0598  0839               	movf	___fttol@lval,w
  1833  0599  00B0               	movwf	?___fttol
  1834  059A  0008               	return
  1835  059B                     __end_of___fttol:	
  1836                           
  1837                           	psect	text6
  1838  059B                     __ptext6:	
  1839 ;; *************** function ___ftdiv *****************
  1840 ;; Defined at:
  1841 ;;		line 56 in file "/opt/microchip/xc8/v1.45/sources/common/ftdiv.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  f2              3    0[BANK0 ] float 
  1844 ;;  f1              3    3[BANK0 ] float 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  f3              3   11[BANK0 ] float 
  1847 ;;  sign            1   15[BANK0 ] unsigned char 
  1848 ;;  exp             1   14[BANK0 ] unsigned char 
  1849 ;;  cntr            1   10[BANK0 ] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  3    0[BANK0 ] float 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0, pclath, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1859 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1860 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1861 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1863 ;;Total ram usage:       16 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    1
  1866 ;; This function calls:
  1867 ;;		___ftpack
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           
  1874                           ;psect for function ___ftdiv
  1875  059B                     ___ftdiv:	
  1876                           
  1877                           ;incstack = 0
  1878                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1879  059B  0020               	movlb	0	; select bank0
  1880  059C  0823               	movf	___ftdiv@f1,w
  1881  059D  00A6               	movwf	??___ftdiv
  1882  059E  0824               	movf	___ftdiv@f1+1,w
  1883  059F  00A7               	movwf	??___ftdiv+1
  1884  05A0  0825               	movf	___ftdiv@f1+2,w
  1885  05A1  00A8               	movwf	??___ftdiv+2
  1886  05A2  1003               	clrc
  1887  05A3  0D27               	rlf	??___ftdiv+1,w
  1888  05A4  0D28               	rlf	??___ftdiv+2,w
  1889  05A5  00A9               	movwf	??___ftdiv+3
  1890  05A6  0829               	movf	??___ftdiv+3,w
  1891  05A7  00AE               	movwf	___ftdiv@exp
  1892  05A8  082E               	movf	___ftdiv@exp,w
  1893  05A9  1D03               	btfss	3,2
  1894  05AA  2DB2               	goto	l1369
  1895  05AB  3000               	movlw	0
  1896  05AC  00A0               	movwf	?___ftdiv
  1897  05AD  3000               	movlw	0
  1898  05AE  00A1               	movwf	?___ftdiv+1
  1899  05AF  3000               	movlw	0
  1900  05B0  00A2               	movwf	?___ftdiv+2
  1901  05B1  0008               	return
  1902  05B2                     l1369:	
  1903  05B2  0820               	movf	___ftdiv@f2,w
  1904  05B3  00A6               	movwf	??___ftdiv
  1905  05B4  0821               	movf	___ftdiv@f2+1,w
  1906  05B5  00A7               	movwf	??___ftdiv+1
  1907  05B6  0822               	movf	___ftdiv@f2+2,w
  1908  05B7  00A8               	movwf	??___ftdiv+2
  1909  05B8  1003               	clrc
  1910  05B9  0D27               	rlf	??___ftdiv+1,w
  1911  05BA  0D28               	rlf	??___ftdiv+2,w
  1912  05BB  00A9               	movwf	??___ftdiv+3
  1913  05BC  0829               	movf	??___ftdiv+3,w
  1914  05BD  00AF               	movwf	___ftdiv@sign
  1915  05BE  082F               	movf	___ftdiv@sign,w
  1916  05BF  1D03               	btfss	3,2
  1917  05C0  2DC8               	goto	l1375
  1918  05C1  3000               	movlw	0
  1919  05C2  00A0               	movwf	?___ftdiv
  1920  05C3  3000               	movlw	0
  1921  05C4  00A1               	movwf	?___ftdiv+1
  1922  05C5  3000               	movlw	0
  1923  05C6  00A2               	movwf	?___ftdiv+2
  1924  05C7  0008               	return
  1925  05C8                     l1375:	
  1926  05C8  3000               	movlw	0
  1927  05C9  00AB               	movwf	___ftdiv@f3
  1928  05CA  3000               	movlw	0
  1929  05CB  00AC               	movwf	___ftdiv@f3+1
  1930  05CC  3000               	movlw	0
  1931  05CD  00AD               	movwf	___ftdiv@f3+2
  1932  05CE  3089               	movlw	137
  1933  05CF  072F               	addwf	___ftdiv@sign,w
  1934  05D0  00A6               	movwf	??___ftdiv
  1935  05D1  0826               	movf	??___ftdiv,w
  1936  05D2  02AE               	subwf	___ftdiv@exp,f
  1937  05D3  0823               	movf	___ftdiv@f1,w
  1938  05D4  00A6               	movwf	??___ftdiv
  1939  05D5  0824               	movf	___ftdiv@f1+1,w
  1940  05D6  00A7               	movwf	??___ftdiv+1
  1941  05D7  0825               	movf	___ftdiv@f1+2,w
  1942  05D8  00A8               	movwf	??___ftdiv+2
  1943  05D9  3010               	movlw	16
  1944  05DA                     u1105:	
  1945  05DA  36A8               	lsrf	??___ftdiv+2,f
  1946  05DB  0CA7               	rrf	??___ftdiv+1,f
  1947  05DC  0CA6               	rrf	??___ftdiv,f
  1948  05DD  0B89               	decfsz	9,f
  1949  05DE  2DDA               	goto	u1105
  1950  05DF  0826               	movf	??___ftdiv,w
  1951  05E0  00A9               	movwf	??___ftdiv+3
  1952  05E1  0829               	movf	??___ftdiv+3,w
  1953  05E2  00AF               	movwf	___ftdiv@sign
  1954  05E3  0820               	movf	___ftdiv@f2,w
  1955  05E4  00A6               	movwf	??___ftdiv
  1956  05E5  0821               	movf	___ftdiv@f2+1,w
  1957  05E6  00A7               	movwf	??___ftdiv+1
  1958  05E7  0822               	movf	___ftdiv@f2+2,w
  1959  05E8  00A8               	movwf	??___ftdiv+2
  1960  05E9  3010               	movlw	16
  1961  05EA                     u1115:	
  1962  05EA  36A8               	lsrf	??___ftdiv+2,f
  1963  05EB  0CA7               	rrf	??___ftdiv+1,f
  1964  05EC  0CA6               	rrf	??___ftdiv,f
  1965  05ED  0B89               	decfsz	9,f
  1966  05EE  2DEA               	goto	u1115
  1967  05EF  0826               	movf	??___ftdiv,w
  1968  05F0  00A9               	movwf	??___ftdiv+3
  1969  05F1  0829               	movf	??___ftdiv+3,w
  1970  05F2  06AF               	xorwf	___ftdiv@sign,f
  1971  05F3  3080               	movlw	128
  1972  05F4  00A6               	movwf	??___ftdiv
  1973  05F5  0826               	movf	??___ftdiv,w
  1974  05F6  05AF               	andwf	___ftdiv@sign,f
  1975  05F7  17A4               	bsf	___ftdiv@f1+1,7
  1976  05F8  30FF               	movlw	255
  1977  05F9  05A3               	andwf	___ftdiv@f1,f
  1978  05FA  30FF               	movlw	255
  1979  05FB  05A4               	andwf	___ftdiv@f1+1,f
  1980  05FC  3000               	movlw	0
  1981  05FD  05A5               	andwf	___ftdiv@f1+2,f
  1982  05FE  17A1               	bsf	___ftdiv@f2+1,7
  1983  05FF  30FF               	movlw	255
  1984  0600  05A0               	andwf	___ftdiv@f2,f
  1985  0601  30FF               	movlw	255
  1986  0602  05A1               	andwf	___ftdiv@f2+1,f
  1987  0603  3000               	movlw	0
  1988  0604  05A2               	andwf	___ftdiv@f2+2,f
  1989  0605  3018               	movlw	24
  1990  0606  00A6               	movwf	??___ftdiv
  1991  0607  0826               	movf	??___ftdiv,w
  1992  0608  00AA               	movwf	___ftdiv@cntr
  1993  0609                     l1389:	
  1994  0609  3001               	movlw	1
  1995  060A                     u1125:	
  1996  060A  35AB               	lslf	___ftdiv@f3,f
  1997  060B  0DAC               	rlf	___ftdiv@f3+1,f
  1998  060C  0DAD               	rlf	___ftdiv@f3+2,f
  1999  060D  0B89               	decfsz	9,f
  2000  060E  2E0A               	goto	u1125
  2001  060F  0822               	movf	___ftdiv@f2+2,w
  2002  0610  0225               	subwf	___ftdiv@f1+2,w
  2003  0611  1D03               	skipz
  2004  0612  2E19               	goto	u1135
  2005  0613  0821               	movf	___ftdiv@f2+1,w
  2006  0614  0224               	subwf	___ftdiv@f1+1,w
  2007  0615  1D03               	skipz
  2008  0616  2E19               	goto	u1135
  2009  0617  0820               	movf	___ftdiv@f2,w
  2010  0618  0223               	subwf	___ftdiv@f1,w
  2011  0619                     u1135:	
  2012  0619  1C03               	skipc
  2013  061A  2E22               	goto	l1397
  2014  061B  0820               	movf	___ftdiv@f2,w
  2015  061C  02A3               	subwf	___ftdiv@f1,f
  2016  061D  0821               	movf	___ftdiv@f2+1,w
  2017  061E  3BA4               	subwfb	___ftdiv@f1+1,f
  2018  061F  0822               	movf	___ftdiv@f2+2,w
  2019  0620  3BA5               	subwfb	___ftdiv@f1+2,f
  2020  0621  142B               	bsf	___ftdiv@f3,0
  2021  0622                     l1397:	
  2022  0622  3001               	movlw	1
  2023  0623                     u1145:	
  2024  0623  35A3               	lslf	___ftdiv@f1,f
  2025  0624  0DA4               	rlf	___ftdiv@f1+1,f
  2026  0625  0DA5               	rlf	___ftdiv@f1+2,f
  2027  0626  0B89               	decfsz	9,f
  2028  0627  2E23               	goto	u1145
  2029  0628  3001               	movlw	1
  2030  0629  02AA               	subwf	___ftdiv@cntr,f
  2031  062A  1D03               	btfss	3,2
  2032  062B  2E09               	goto	l1389
  2033  062C  082B               	movf	___ftdiv@f3,w
  2034  062D  00F0               	movwf	___ftpack@arg
  2035  062E  082C               	movf	___ftdiv@f3+1,w
  2036  062F  00F1               	movwf	___ftpack@arg+1
  2037  0630  082D               	movf	___ftdiv@f3+2,w
  2038  0631  00F2               	movwf	___ftpack@arg+2
  2039  0632  082E               	movf	___ftdiv@exp,w
  2040  0633  00A6               	movwf	??___ftdiv
  2041  0634  0826               	movf	??___ftdiv,w
  2042  0635  00F3               	movwf	___ftpack@exp
  2043  0636  082F               	movf	___ftdiv@sign,w
  2044  0637  00A7               	movwf	??___ftdiv+1
  2045  0638  0827               	movf	??___ftdiv+1,w
  2046  0639  00F4               	movwf	___ftpack@sign
  2047  063A  3184  24B0         	fcall	___ftpack
  2048  063C  0870               	movf	?___ftpack,w
  2049  063D  0020               	movlb	0	; select bank0
  2050  063E  00A0               	movwf	?___ftdiv
  2051  063F  0871               	movf	?___ftpack+1,w
  2052  0640  00A1               	movwf	?___ftdiv+1
  2053  0641  0872               	movf	?___ftpack+2,w
  2054  0642  00A2               	movwf	?___ftdiv+2
  2055  0643  0008               	return
  2056  0644                     __end_of___ftdiv:	
  2057                           
  2058                           	psect	text7
  2059  02D0                     __ptext7:	
  2060 ;; *************** function ___awtoft *****************
  2061 ;; Defined at:
  2062 ;;		line 32 in file "/opt/microchip/xc8/v1.45/sources/common/awtoft.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  c               2    8[COMMON] int 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  sign            1   13[COMMON] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  3    8[COMMON] float 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0, pclath, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2076 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2078 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2079 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2080 ;;Total ram usage:        6 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    1
  2083 ;; This function calls:
  2084 ;;		___ftpack
  2085 ;; This function is called by:
  2086 ;;		_main
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function ___awtoft
  2092  02D0                     ___awtoft:	
  2093                           
  2094                           ;incstack = 0
  2095                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2096  02D0  01FD               	clrf	___awtoft@sign
  2097  02D1  1FF9               	btfss	___awtoft@c+1,7
  2098  02D2  2ADA               	goto	l1359
  2099  02D3  09F8               	comf	___awtoft@c,f
  2100  02D4  09F9               	comf	___awtoft@c+1,f
  2101  02D5  0AF8               	incf	___awtoft@c,f
  2102  02D6  1903               	skipnz
  2103  02D7  0AF9               	incf	___awtoft@c+1,f
  2104  02D8  01FD               	clrf	___awtoft@sign
  2105  02D9  0AFD               	incf	___awtoft@sign,f
  2106  02DA                     l1359:	
  2107  02DA  0878               	movf	___awtoft@c,w
  2108  02DB  00F0               	movwf	___ftpack@arg
  2109  02DC  0879               	movf	___awtoft@c+1,w
  2110  02DD  00F1               	movwf	___ftpack@arg+1
  2111  02DE  01F2               	clrf	___ftpack@arg+2
  2112  02DF  308E               	movlw	142
  2113  02E0  00FB               	movwf	??___awtoft
  2114  02E1  087B               	movf	??___awtoft,w
  2115  02E2  00F3               	movwf	___ftpack@exp
  2116  02E3  087D               	movf	___awtoft@sign,w
  2117  02E4  00FC               	movwf	??___awtoft+1
  2118  02E5  087C               	movf	??___awtoft+1,w
  2119  02E6  00F4               	movwf	___ftpack@sign
  2120  02E7  3184  24B0         	fcall	___ftpack
  2121  02E9  0870               	movf	?___ftpack,w
  2122  02EA  00F8               	movwf	?___awtoft
  2123  02EB  0871               	movf	?___ftpack+1,w
  2124  02EC  00F9               	movwf	?___awtoft+1
  2125  02ED  0872               	movf	?___ftpack+2,w
  2126  02EE  00FA               	movwf	?___awtoft+2
  2127  02EF  0008               	return
  2128  02F0                     __end_of___awtoft:	
  2129                           
  2130                           	psect	text8
  2131  04B0                     __ptext8:	
  2132 ;; *************** function ___ftpack *****************
  2133 ;; Defined at:
  2134 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/float.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  arg             3    0[COMMON] unsigned um
  2137 ;;  exp             1    3[COMMON] unsigned char 
  2138 ;;  sign            1    4[COMMON] unsigned char 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  3    0[COMMON] float 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2150 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2152 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2153 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2154 ;;Total ram usage:        8 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		___awtoft
  2160 ;;		___ftdiv
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           
  2165                           ;psect for function ___ftpack
  2166  04B0                     ___ftpack:	
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2170  04B0  0873               	movf	___ftpack@exp,w
  2171  04B1  1903               	btfsc	3,2
  2172  04B2  2CB8               	goto	l1135
  2173  04B3  0872               	movf	___ftpack@arg+2,w
  2174  04B4  0471               	iorwf	___ftpack@arg+1,w
  2175  04B5  0470               	iorwf	___ftpack@arg,w
  2176  04B6  1D03               	skipz
  2177  04B7  2CC9               	goto	l1141
  2178  04B8                     l1135:	
  2179  04B8  3000               	movlw	0
  2180  04B9  00F0               	movwf	?___ftpack
  2181  04BA  3000               	movlw	0
  2182  04BB  00F1               	movwf	?___ftpack+1
  2183  04BC  3000               	movlw	0
  2184  04BD  00F2               	movwf	?___ftpack+2
  2185  04BE  0008               	return
  2186  04BF                     l1139:	
  2187  04BF  3001               	movlw	1
  2188  04C0  00F5               	movwf	??___ftpack
  2189  04C1  0875               	movf	??___ftpack,w
  2190  04C2  07F3               	addwf	___ftpack@exp,f
  2191  04C3  3001               	movlw	1
  2192  04C4                     u715:	
  2193  04C4  36F2               	lsrf	___ftpack@arg+2,f
  2194  04C5  0CF1               	rrf	___ftpack@arg+1,f
  2195  04C6  0CF0               	rrf	___ftpack@arg,f
  2196  04C7  0B89               	decfsz	9,f
  2197  04C8  2CC4               	goto	u715
  2198  04C9                     l1141:	
  2199  04C9  30FE               	movlw	254
  2200  04CA  0572               	andwf	___ftpack@arg+2,w
  2201  04CB  1903               	btfsc	3,2
  2202  04CC  2CE2               	goto	l394
  2203  04CD  2CBF               	goto	l1139
  2204  04CE                     l1143:	
  2205  04CE  3001               	movlw	1
  2206  04CF  00F5               	movwf	??___ftpack
  2207  04D0  0875               	movf	??___ftpack,w
  2208  04D1  07F3               	addwf	___ftpack@exp,f
  2209  04D2  3001               	movlw	1
  2210  04D3  07F0               	addwf	___ftpack@arg,f
  2211  04D4  3000               	movlw	0
  2212  04D5  1803               	skipnc
  2213  04D6  3001               	movlw	1
  2214  04D7  07F1               	addwf	___ftpack@arg+1,f
  2215  04D8  3000               	movlw	0
  2216  04D9  1803               	skipnc
  2217  04DA  3001               	movlw	1
  2218  04DB  07F2               	addwf	___ftpack@arg+2,f
  2219  04DC  3001               	movlw	1
  2220  04DD                     u735:	
  2221  04DD  36F2               	lsrf	___ftpack@arg+2,f
  2222  04DE  0CF1               	rrf	___ftpack@arg+1,f
  2223  04DF  0CF0               	rrf	___ftpack@arg,f
  2224  04E0  0B89               	decfsz	9,f
  2225  04E1  2CDD               	goto	u735
  2226  04E2                     l394:	
  2227  04E2  30FF               	movlw	255
  2228  04E3  0572               	andwf	___ftpack@arg+2,w
  2229  04E4  1903               	btfsc	3,2
  2230  04E5  2CEF               	goto	l1151
  2231  04E6  2CCE               	goto	l1143
  2232  04E7                     l1149:	
  2233  04E7  3001               	movlw	1
  2234  04E8  02F3               	subwf	___ftpack@exp,f
  2235  04E9  3001               	movlw	1
  2236  04EA                     u755:	
  2237  04EA  35F0               	lslf	___ftpack@arg,f
  2238  04EB  0DF1               	rlf	___ftpack@arg+1,f
  2239  04EC  0DF2               	rlf	___ftpack@arg+2,f
  2240  04ED  0B89               	decfsz	9,f
  2241  04EE  2CEA               	goto	u755
  2242  04EF                     l1151:	
  2243  04EF  1BF1               	btfsc	___ftpack@arg+1,7
  2244  04F0  2CF5               	goto	l401
  2245  04F1  3002               	movlw	2
  2246  04F2  0273               	subwf	___ftpack@exp,w
  2247  04F3  1803               	skipnc
  2248  04F4  2CE7               	goto	l1149
  2249  04F5                     l401:	
  2250  04F5  1873               	btfsc	___ftpack@exp,0
  2251  04F6  2CFD               	goto	l402
  2252  04F7  30FF               	movlw	255
  2253  04F8  05F0               	andwf	___ftpack@arg,f
  2254  04F9  307F               	movlw	127
  2255  04FA  05F1               	andwf	___ftpack@arg+1,f
  2256  04FB  30FF               	movlw	255
  2257  04FC  05F2               	andwf	___ftpack@arg+2,f
  2258  04FD                     l402:	
  2259  04FD  1003               	clrc
  2260  04FE  0CF3               	rrf	___ftpack@exp,f
  2261  04FF  0873               	movf	___ftpack@exp,w
  2262  0500  00F5               	movwf	??___ftpack
  2263  0501  01F6               	clrf	??___ftpack+1
  2264  0502  01F7               	clrf	??___ftpack+2
  2265  0503  3010               	movlw	16
  2266  0504                     u795:	
  2267  0504  35F5               	lslf	??___ftpack,f
  2268  0505  0DF6               	rlf	??___ftpack+1,f
  2269  0506  0DF7               	rlf	??___ftpack+2,f
  2270  0507  0B89               	decfsz	9,f
  2271  0508  2D04               	goto	u795
  2272  0509  0875               	movf	??___ftpack,w
  2273  050A  04F0               	iorwf	___ftpack@arg,f
  2274  050B  0876               	movf	??___ftpack+1,w
  2275  050C  04F1               	iorwf	___ftpack@arg+1,f
  2276  050D  0877               	movf	??___ftpack+2,w
  2277  050E  04F2               	iorwf	___ftpack@arg+2,f
  2278  050F  0874               	movf	___ftpack@sign,w
  2279  0510  1903               	btfsc	3,2
  2280  0511  0008               	return
  2281  0512  17F2               	bsf	___ftpack@arg+2,7
  2282  0513  0008               	return
  2283  0514                     __end_of___ftpack:	
  2284                           
  2285                           	psect	text9
  2286  0455                     __ptext9:	
  2287 ;; *************** function _I2C_LCD_SWrite *****************
  2288 ;; Defined at:
  2289 ;;		line 76 in file "i2c.h"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  Slave           1    wreg     unsigned char 
  2292 ;;  Data            1    8[COMMON] PTR unsigned char 
  2293 ;;		 -> main@Sout(20), 
  2294 ;;  Max             1    9[COMMON] unsigned char 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  Slave           1    0[BANK0 ] unsigned char 
  2297 ;;  j               2    3[BANK0 ] int 
  2298 ;;  k               2    0        int 
  2299 ;;  L               1    2[BANK0 ] unsigned char 
  2300 ;;  H               1    1[BANK0 ] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2311 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2312 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2313 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2314 ;;Total ram usage:       10 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    3
  2317 ;; This function calls:
  2318 ;;		_I2C_LCD_Busy
  2319 ;;		_i2c_Address
  2320 ;;		_i2c_Start
  2321 ;;		_i2c_Stop
  2322 ;;		_i2c_Write
  2323 ;; This function is called by:
  2324 ;;		_main
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           
  2329                           ;psect for function _I2C_LCD_SWrite
  2330  0455                     _I2C_LCD_SWrite:	
  2331                           
  2332                           ;incstack = 0
  2333                           ; Regs used in _I2C_LCD_SWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2334                           ;I2C_LCD_SWrite@Slave stored from wreg
  2335  0455  0020               	movlb	0	; select bank0
  2336  0456  00A0               	movwf	I2C_LCD_SWrite@Slave
  2337                           
  2338                           ;i2c.h: 77: int j, k;
  2339                           ;i2c.h: 78: unsigned char H, L;
  2340                           ;i2c.h: 79: i2c_Start();
  2341  0457  3182  2266  3184   	fcall	_i2c_Start
  2342                           
  2343                           ;i2c.h: 80: i2c_Address(Slave, 0);
  2344  045A  01F0               	clrf	i2c_Address@mode
  2345  045B  0020               	movlb	0	; select bank0
  2346  045C  0820               	movf	I2C_LCD_SWrite@Slave,w
  2347  045D  3182  2291  3184   	fcall	_i2c_Address
  2348                           
  2349                           ;i2c.h: 82: for (j=0; j<Max; j++){
  2350  0460  0020               	movlb	0	; select bank0
  2351  0461  01A3               	clrf	I2C_LCD_SWrite@j
  2352  0462  01A4               	clrf	I2C_LCD_SWrite@j+1
  2353  0463                     l1259:	
  2354  0463  0824               	movf	I2C_LCD_SWrite@j+1,w
  2355  0464  3A80               	xorlw	128
  2356  0465  00FA               	movwf	??_I2C_LCD_SWrite
  2357  0466  3080               	movlw	128
  2358  0467  027A               	subwf	??_I2C_LCD_SWrite,w
  2359  0468  1D03               	skipz
  2360  0469  2C6C               	goto	u965
  2361  046A  0879               	movf	I2C_LCD_SWrite@Max,w
  2362  046B  0223               	subwf	I2C_LCD_SWrite@j,w
  2363  046C                     u965:	
  2364  046C  1803               	btfsc	3,0
  2365  046D  2CA8               	goto	l1261
  2366                           
  2367                           ;i2c.h: 84: H = Data[j] & 0xF0;
  2368  046E  0020               	movlb	0	; select bank0
  2369  046F  0823               	movf	I2C_LCD_SWrite@j,w
  2370  0470  0778               	addwf	I2C_LCD_SWrite@Data,w
  2371  0471  00FA               	movwf	??_I2C_LCD_SWrite
  2372  0472  087A               	movf	??_I2C_LCD_SWrite,w
  2373  0473  0086               	movwf	6
  2374  0474  0187               	clrf	7
  2375  0475  0801               	movf	1,w
  2376  0476  39F0               	andlw	240
  2377  0477  00FB               	movwf	??_I2C_LCD_SWrite+1
  2378  0478  087B               	movf	??_I2C_LCD_SWrite+1,w
  2379  0479  00A1               	movwf	I2C_LCD_SWrite@H
  2380                           
  2381                           ;i2c.h: 85: L = Data[j] << 4 ;
  2382  047A  0823               	movf	I2C_LCD_SWrite@j,w
  2383  047B  0778               	addwf	I2C_LCD_SWrite@Data,w
  2384  047C  00FA               	movwf	??_I2C_LCD_SWrite
  2385  047D  087A               	movf	??_I2C_LCD_SWrite,w
  2386  047E  0086               	movwf	6
  2387  047F  0187               	clrf	7
  2388  0480  0801               	movf	1,w
  2389  0481  00FB               	movwf	??_I2C_LCD_SWrite+1
  2390  0482  3003               	movlw	3
  2391  0483                     u955:	
  2392  0483  35FB               	lslf	??_I2C_LCD_SWrite+1,f
  2393  0484  3EFF               	addlw	-1
  2394  0485  1D03               	skipz
  2395  0486  2C83               	goto	u955
  2396  0487  357B               	lslf	??_I2C_LCD_SWrite+1,w
  2397  0488  00FC               	movwf	??_I2C_LCD_SWrite+2
  2398  0489  087C               	movf	??_I2C_LCD_SWrite+2,w
  2399  048A  00A2               	movwf	I2C_LCD_SWrite@L
  2400                           
  2401                           ;i2c.h: 87: i2c_Write(H | 0x0D);
  2402  048B  0821               	movf	I2C_LCD_SWrite@H,w
  2403  048C  380D               	iorlw	13
  2404  048D  3182  2276  3184   	fcall	_i2c_Write
  2405                           
  2406                           ;i2c.h: 88: i2c_Write(H | 0x09);
  2407  0490  0020               	movlb	0	; select bank0
  2408  0491  0821               	movf	I2C_LCD_SWrite@H,w
  2409  0492  3809               	iorlw	9
  2410  0493  3182  2276  3184   	fcall	_i2c_Write
  2411                           
  2412                           ;i2c.h: 89: i2c_Write(L | 0x0D);
  2413  0496  0020               	movlb	0	; select bank0
  2414  0497  0822               	movf	I2C_LCD_SWrite@L,w
  2415  0498  380D               	iorlw	13
  2416  0499  3182  2276  3184   	fcall	_i2c_Write
  2417                           
  2418                           ;i2c.h: 90: i2c_Write(L | 0x09);
  2419  049C  0020               	movlb	0	; select bank0
  2420  049D  0822               	movf	I2C_LCD_SWrite@L,w
  2421  049E  3809               	iorlw	9
  2422  049F  3182  2276  3184   	fcall	_i2c_Write
  2423  04A2  3001               	movlw	1
  2424  04A3  0020               	movlb	0	; select bank0
  2425  04A4  07A3               	addwf	I2C_LCD_SWrite@j,f
  2426  04A5  3000               	movlw	0
  2427  04A6  3DA4               	addwfc	I2C_LCD_SWrite@j+1,f
  2428  04A7  2C63               	goto	l1259
  2429  04A8                     l1261:	
  2430                           
  2431                           ;i2c.h: 92: }
  2432                           ;i2c.h: 93: I2C_LCD_Busy(Slave);
  2433  04A8  0020               	movlb	0	; select bank0
  2434  04A9  0820               	movf	I2C_LCD_SWrite@Slave,w
  2435  04AA  3183  23FE  3184   	fcall	_I2C_LCD_Busy
  2436                           
  2437                           ;i2c.h: 94: i2c_Stop();
  2438  04AD  3182  226B         	fcall	_i2c_Stop
  2439  04AF  0008               	return
  2440  04B0                     __end_of_I2C_LCD_SWrite:	
  2441                           
  2442                           	psect	text10
  2443  0384                     __ptext10:	
  2444 ;; *************** function _I2C_LCD_Pos *****************
  2445 ;; Defined at:
  2446 ;;		line 61 in file "i2c.h"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  Slave           1    wreg     unsigned char 
  2449 ;;  Pos             1    8[COMMON] unsigned char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  Slave           1   11[COMMON] unsigned char 
  2452 ;;  LoBytex         1   13[COMMON] unsigned char 
  2453 ;;  HiBytex         1   12[COMMON] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0, pclath, cstack
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2463 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2466 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2467 ;;Total ram usage:        6 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    3
  2470 ;; This function calls:
  2471 ;;		_I2C_LCD_Busy
  2472 ;;		_i2c_Address
  2473 ;;		_i2c_Start
  2474 ;;		_i2c_Stop
  2475 ;;		_i2c_Write
  2476 ;; This function is called by:
  2477 ;;		_main
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           
  2482                           ;psect for function _I2C_LCD_Pos
  2483  0384                     _I2C_LCD_Pos:	
  2484                           
  2485                           ;incstack = 0
  2486                           ; Regs used in _I2C_LCD_Pos: [wreg+status,2+status,0+pclath+cstack]
  2487                           ;I2C_LCD_Pos@Slave stored from wreg
  2488  0384  00FB               	movwf	I2C_LCD_Pos@Slave
  2489                           
  2490                           ;i2c.h: 62: unsigned char HiBytex, LoBytex;
  2491                           ;i2c.h: 63: HiBytex = Pos & 0x70;
  2492  0385  0878               	movf	I2C_LCD_Pos@Pos,w
  2493  0386  3970               	andlw	112
  2494  0387  00F9               	movwf	??_I2C_LCD_Pos
  2495  0388  0879               	movf	??_I2C_LCD_Pos,w
  2496  0389  00FC               	movwf	I2C_LCD_Pos@HiBytex
  2497                           
  2498                           ;i2c.h: 64: LoBytex = Pos << 4;
  2499  038A  0878               	movf	I2C_LCD_Pos@Pos,w
  2500  038B  00F9               	movwf	??_I2C_LCD_Pos
  2501  038C  3003               	movlw	3
  2502  038D                     u945:	
  2503  038D  35F9               	lslf	??_I2C_LCD_Pos,f
  2504  038E  3EFF               	addlw	-1
  2505  038F  1D03               	skipz
  2506  0390  2B8D               	goto	u945
  2507  0391  3579               	lslf	??_I2C_LCD_Pos,w
  2508  0392  00FA               	movwf	??_I2C_LCD_Pos+1
  2509  0393  087A               	movf	??_I2C_LCD_Pos+1,w
  2510  0394  00FD               	movwf	I2C_LCD_Pos@LoBytex
  2511                           
  2512                           ;i2c.h: 65: i2c_Start();
  2513  0395  3182  2266  3183   	fcall	_i2c_Start
  2514                           
  2515                           ;i2c.h: 66: i2c_Address(Slave, 0);
  2516  0398  01F0               	clrf	i2c_Address@mode
  2517  0399  087B               	movf	I2C_LCD_Pos@Slave,w
  2518  039A  3182  2291  3183   	fcall	_i2c_Address
  2519                           
  2520                           ;i2c.h: 67: i2c_Write(HiBytex | 0x8C);
  2521  039D  087C               	movf	I2C_LCD_Pos@HiBytex,w
  2522  039E  388C               	iorlw	140
  2523  039F  3182  2276  3183   	fcall	_i2c_Write
  2524                           
  2525                           ;i2c.h: 68: i2c_Write(HiBytex | 0x88);
  2526  03A2  087C               	movf	I2C_LCD_Pos@HiBytex,w
  2527  03A3  3888               	iorlw	136
  2528  03A4  3182  2276  3183   	fcall	_i2c_Write
  2529                           
  2530                           ;i2c.h: 69: i2c_Write(LoBytex | 0x0C);
  2531  03A7  087D               	movf	I2C_LCD_Pos@LoBytex,w
  2532  03A8  380C               	iorlw	12
  2533  03A9  3182  2276  3183   	fcall	_i2c_Write
  2534                           
  2535                           ;i2c.h: 70: i2c_Write(LoBytex | 0x08);
  2536  03AC  087D               	movf	I2C_LCD_Pos@LoBytex,w
  2537  03AD  3808               	iorlw	8
  2538  03AE  3182  2276  3183   	fcall	_i2c_Write
  2539                           
  2540                           ;i2c.h: 71: Pos =I2C_LCD_Busy(Slave);
  2541  03B1  087B               	movf	I2C_LCD_Pos@Slave,w
  2542  03B2  3183  23FE  3183   	fcall	_I2C_LCD_Busy
  2543  03B5  00F9               	movwf	??_I2C_LCD_Pos
  2544  03B6  0879               	movf	??_I2C_LCD_Pos,w
  2545  03B7  00F8               	movwf	I2C_LCD_Pos@Pos
  2546                           
  2547                           ;i2c.h: 72: i2c_Stop();
  2548  03B8  3182  226B         	fcall	_i2c_Stop
  2549  03BA  0008               	return
  2550  03BB                     __end_of_I2C_LCD_Pos:	
  2551                           
  2552                           	psect	text11
  2553  03BB                     __ptext11:	
  2554 ;; *************** function _I2C_LCD_Init *****************
  2555 ;; Defined at:
  2556 ;;		line 40 in file "i2c.h"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  Slave           1    wreg     unsigned char 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  Slave           1   10[COMMON] unsigned char 
  2561 ;;  Tvar1           1    9[COMMON] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0, pclath, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2572 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2574 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2575 ;;Total ram usage:        3 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    3
  2578 ;; This function calls:
  2579 ;;		_I2C_LCD_Busy
  2580 ;;		_i2c_Address
  2581 ;;		_i2c_Start
  2582 ;;		_i2c_Stop
  2583 ;;		_i2c_Write
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           
  2590                           ;psect for function _I2C_LCD_Init
  2591  03BB                     _I2C_LCD_Init:	
  2592                           
  2593                           ;incstack = 0
  2594                           ; Regs used in _I2C_LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2595                           ;I2C_LCD_Init@Slave stored from wreg
  2596  03BB  00FA               	movwf	I2C_LCD_Init@Slave
  2597                           
  2598                           ;i2c.h: 41: unsigned char Tvar1;
  2599                           ;i2c.h: 42: i2c_Start();
  2600  03BC  3182  2266  3183   	fcall	_i2c_Start
  2601                           
  2602                           ;i2c.h: 43: i2c_Address(Slave, 0);
  2603  03BF  01F0               	clrf	i2c_Address@mode
  2604  03C0  087A               	movf	I2C_LCD_Init@Slave,w
  2605  03C1  3182  2291  3183   	fcall	_i2c_Address
  2606                           
  2607                           ;i2c.h: 44: i2c_Write(0x3C);
  2608  03C4  303C               	movlw	60
  2609  03C5  3182  2276  3183   	fcall	_i2c_Write
  2610                           
  2611                           ;i2c.h: 45: i2c_Write(0x38);
  2612  03C8  3038               	movlw	56
  2613  03C9  3182  2276  3183   	fcall	_i2c_Write
  2614                           
  2615                           ;i2c.h: 46: i2c_Write(0x3C);
  2616  03CC  303C               	movlw	60
  2617  03CD  3182  2276  3183   	fcall	_i2c_Write
  2618                           
  2619                           ;i2c.h: 47: i2c_Write(0x38);
  2620  03D0  3038               	movlw	56
  2621  03D1  3182  2276  3183   	fcall	_i2c_Write
  2622                           
  2623                           ;i2c.h: 48: i2c_Write(0x3C);
  2624  03D4  303C               	movlw	60
  2625  03D5  3182  2276  3183   	fcall	_i2c_Write
  2626                           
  2627                           ;i2c.h: 49: i2c_Write(0x38);
  2628  03D8  3038               	movlw	56
  2629  03D9  3182  2276  3183   	fcall	_i2c_Write
  2630                           
  2631                           ;i2c.h: 50: i2c_Write(0x2C);
  2632  03DC  302C               	movlw	44
  2633  03DD  3182  2276  3183   	fcall	_i2c_Write
  2634                           
  2635                           ;i2c.h: 51: i2c_Write(0x28);
  2636  03E0  3028               	movlw	40
  2637  03E1  3182  2276  3183   	fcall	_i2c_Write
  2638                           
  2639                           ;i2c.h: 52: i2c_Write(0x0C);
  2640  03E4  300C               	movlw	12
  2641  03E5  3182  2276  3183   	fcall	_i2c_Write
  2642                           
  2643                           ;i2c.h: 53: i2c_Write(0x08);
  2644  03E8  3008               	movlw	8
  2645  03E9  3182  2276  3183   	fcall	_i2c_Write
  2646                           
  2647                           ;i2c.h: 54: i2c_Write(0xFC);
  2648  03EC  30FC               	movlw	252
  2649  03ED  3182  2276  3183   	fcall	_i2c_Write
  2650                           
  2651                           ;i2c.h: 55: i2c_Write(0xF8);
  2652  03F0  30F8               	movlw	248
  2653  03F1  3182  2276  3183   	fcall	_i2c_Write
  2654                           
  2655                           ;i2c.h: 56: Tvar1=I2C_LCD_Busy(Slave);
  2656  03F4  087A               	movf	I2C_LCD_Init@Slave,w
  2657  03F5  3183  23FE  3183   	fcall	_I2C_LCD_Busy
  2658  03F8  00F8               	movwf	??_I2C_LCD_Init
  2659  03F9  0878               	movf	??_I2C_LCD_Init,w
  2660  03FA  00F9               	movwf	I2C_LCD_Init@Tvar1
  2661                           
  2662                           ;i2c.h: 57: i2c_Stop();
  2663  03FB  3182  226B         	fcall	_i2c_Stop
  2664  03FD  0008               	return
  2665  03FE                     __end_of_I2C_LCD_Init:	
  2666                           
  2667                           	psect	text12
  2668  031C                     __ptext12:	
  2669 ;; *************** function _I2C_LCD_Command *****************
  2670 ;; Defined at:
  2671 ;;		line 98 in file "i2c.h"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  Slave           1    wreg     unsigned char 
  2674 ;;  Cmd             1    8[COMMON] unsigned char 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  Slave           1   11[COMMON] unsigned char 
  2677 ;;  LoBytex         1   13[COMMON] unsigned char 
  2678 ;;  HiBytex         1   12[COMMON] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, pclath, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2688 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2689 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2690 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2691 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2692 ;;Total ram usage:        6 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    3
  2695 ;; This function calls:
  2696 ;;		_I2C_LCD_Busy
  2697 ;;		_i2c_Address
  2698 ;;		_i2c_Start
  2699 ;;		_i2c_Stop
  2700 ;;		_i2c_Write
  2701 ;; This function is called by:
  2702 ;;		_main
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           
  2707                           ;psect for function _I2C_LCD_Command
  2708  031C                     _I2C_LCD_Command:	
  2709                           
  2710                           ;incstack = 0
  2711                           ; Regs used in _I2C_LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  2712                           ;I2C_LCD_Command@Slave stored from wreg
  2713  031C  00FB               	movwf	I2C_LCD_Command@Slave
  2714                           
  2715                           ;i2c.h: 100: unsigned char HiBytex, LoBytex;
  2716                           ;i2c.h: 101: HiBytex = Cmd & 0xF0;
  2717  031D  0878               	movf	I2C_LCD_Command@Cmd,w
  2718  031E  39F0               	andlw	240
  2719  031F  00F9               	movwf	??_I2C_LCD_Command
  2720  0320  0879               	movf	??_I2C_LCD_Command,w
  2721  0321  00FC               	movwf	I2C_LCD_Command@HiBytex
  2722                           
  2723                           ;i2c.h: 102: LoBytex = Cmd << 4;
  2724  0322  0878               	movf	I2C_LCD_Command@Cmd,w
  2725  0323  00F9               	movwf	??_I2C_LCD_Command
  2726  0324  3003               	movlw	3
  2727  0325                     u975:	
  2728  0325  35F9               	lslf	??_I2C_LCD_Command,f
  2729  0326  3EFF               	addlw	-1
  2730  0327  1D03               	skipz
  2731  0328  2B25               	goto	u975
  2732  0329  3579               	lslf	??_I2C_LCD_Command,w
  2733  032A  00FA               	movwf	??_I2C_LCD_Command+1
  2734  032B  087A               	movf	??_I2C_LCD_Command+1,w
  2735  032C  00FD               	movwf	I2C_LCD_Command@LoBytex
  2736                           
  2737                           ;i2c.h: 103: i2c_Start();
  2738  032D  3182  2266  3183   	fcall	_i2c_Start
  2739                           
  2740                           ;i2c.h: 104: i2c_Address(Slave, 0);
  2741  0330  01F0               	clrf	i2c_Address@mode
  2742  0331  087B               	movf	I2C_LCD_Command@Slave,w
  2743  0332  3182  2291  3183   	fcall	_i2c_Address
  2744                           
  2745                           ;i2c.h: 105: i2c_Write(HiBytex | 0x0C);
  2746  0335  087C               	movf	I2C_LCD_Command@HiBytex,w
  2747  0336  380C               	iorlw	12
  2748  0337  3182  2276  3183   	fcall	_i2c_Write
  2749                           
  2750                           ;i2c.h: 106: i2c_Write(HiBytex | 0x08);
  2751  033A  087C               	movf	I2C_LCD_Command@HiBytex,w
  2752  033B  3808               	iorlw	8
  2753  033C  3182  2276  3183   	fcall	_i2c_Write
  2754                           
  2755                           ;i2c.h: 107: i2c_Write(LoBytex | 0x0C);
  2756  033F  087D               	movf	I2C_LCD_Command@LoBytex,w
  2757  0340  380C               	iorlw	12
  2758  0341  3182  2276  3183   	fcall	_i2c_Write
  2759                           
  2760                           ;i2c.h: 108: i2c_Write(LoBytex | 0x08);
  2761  0344  087D               	movf	I2C_LCD_Command@LoBytex,w
  2762  0345  3808               	iorlw	8
  2763  0346  3182  2276  3183   	fcall	_i2c_Write
  2764                           
  2765                           ;i2c.h: 109: I2C_LCD_Busy(Slave);
  2766  0349  087B               	movf	I2C_LCD_Command@Slave,w
  2767  034A  3183  23FE  3183   	fcall	_I2C_LCD_Busy
  2768                           
  2769                           ;i2c.h: 110: i2c_Stop();
  2770  034D  3182  226B         	fcall	_i2c_Stop
  2771  034F  0008               	return
  2772  0350                     __end_of_I2C_LCD_Command:	
  2773                           
  2774                           	psect	text13
  2775  03FE                     __ptext13:	
  2776 ;; *************** function _I2C_LCD_Busy *****************
  2777 ;; Defined at:
  2778 ;;		line 11 in file "i2c.h"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  Slave           1    wreg     unsigned char 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  Slave           1    7[COMMON] unsigned char 
  2783 ;;  read_byte       1    6[COMMON] unsigned char 
  2784 ;;  Temp1           1    5[COMMON] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      unsigned char 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0, pclath, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2795 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2797 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2798 ;;Total ram usage:        4 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    2
  2801 ;; This function calls:
  2802 ;;		_i2c_Address
  2803 ;;		_i2c_Read
  2804 ;;		_i2c_Restart
  2805 ;;		_i2c_Start
  2806 ;;		_i2c_Stop
  2807 ;;		_i2c_Write
  2808 ;; This function is called by:
  2809 ;;		_I2C_LCD_Init
  2810 ;;		_I2C_LCD_Pos
  2811 ;;		_I2C_LCD_SWrite
  2812 ;;		_I2C_LCD_Command
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           
  2817                           ;psect for function _I2C_LCD_Busy
  2818  03FE                     _I2C_LCD_Busy:	
  2819                           
  2820                           ;incstack = 0
  2821                           ; Regs used in _I2C_LCD_Busy: [wreg+status,2+status,0+pclath+cstack]
  2822                           ;I2C_LCD_Busy@Slave stored from wreg
  2823  03FE  00F7               	movwf	I2C_LCD_Busy@Slave
  2824                           
  2825                           ;i2c.h: 13: unsigned char read_byte, Temp1;
  2826                           ;i2c.h: 14: i2c_Start();
  2827  03FF  3182  2266  3183   	fcall	_i2c_Start
  2828                           
  2829                           ;i2c.h: 15: i2c_Address(Slave, 0);
  2830  0402  01F0               	clrf	i2c_Address@mode
  2831  0403  0877               	movf	I2C_LCD_Busy@Slave,w
  2832  0404  3182  2291  3183   	fcall	_i2c_Address
  2833                           
  2834                           ;i2c.h: 16: i2c_Write(0xFA);
  2835  0407  30FA               	movlw	250
  2836  0408  3182  2276  3183   	fcall	_i2c_Write
  2837                           
  2838                           ;i2c.h: 17: i2c_Write(0xFE);
  2839  040B  30FE               	movlw	254
  2840  040C  3182  2276  3183   	fcall	_i2c_Write
  2841                           
  2842                           ;i2c.h: 18: i2c_Restart();
  2843  040F  3182  2261  3183   	fcall	_i2c_Restart
  2844                           
  2845                           ;i2c.h: 19: i2c_Address(Slave, 1);
  2846  0412  01F0               	clrf	i2c_Address@mode
  2847  0413  0AF0               	incf	i2c_Address@mode,f
  2848  0414  0877               	movf	I2C_LCD_Busy@Slave,w
  2849  0415  3182  2291  3183   	fcall	_i2c_Address
  2850  0418                     l1101:	
  2851                           ;i2c.h: 20: while((i2c_Read(1))& 0x80);
  2852                           
  2853  0418  3001               	movlw	1
  2854  0419  3182  22B4  3183   	fcall	_i2c_Read
  2855  041C  3980               	andlw	128
  2856  041D  1D03               	btfss	3,2
  2857  041E  2C18               	goto	l1101
  2858                           
  2859                           ;i2c.h: 21: Temp1 = i2c_Read(0);
  2860  041F  3000               	movlw	0
  2861  0420  3182  22B4  3183   	fcall	_i2c_Read
  2862  0423  00F4               	movwf	??_I2C_LCD_Busy
  2863  0424  0874               	movf	??_I2C_LCD_Busy,w
  2864  0425  00F5               	movwf	I2C_LCD_Busy@Temp1
  2865                           
  2866                           ;i2c.h: 22: Temp1 &= 0x70;
  2867  0426  3070               	movlw	112
  2868  0427  00F4               	movwf	??_I2C_LCD_Busy
  2869  0428  0874               	movf	??_I2C_LCD_Busy,w
  2870  0429  05F5               	andwf	I2C_LCD_Busy@Temp1,f
  2871                           
  2872                           ;i2c.h: 23: i2c_Restart();
  2873  042A  3182  2261  3183   	fcall	_i2c_Restart
  2874                           
  2875                           ;i2c.h: 24: i2c_Address(Slave, 0);
  2876  042D  01F0               	clrf	i2c_Address@mode
  2877  042E  0877               	movf	I2C_LCD_Busy@Slave,w
  2878  042F  3182  2291  3183   	fcall	_i2c_Address
  2879                           
  2880                           ;i2c.h: 25: i2c_Write(0xFA);
  2881  0432  30FA               	movlw	250
  2882  0433  3182  2276  3183   	fcall	_i2c_Write
  2883                           
  2884                           ;i2c.h: 26: i2c_Write(0xFE);
  2885  0436  30FE               	movlw	254
  2886  0437  3182  2276  3183   	fcall	_i2c_Write
  2887                           
  2888                           ;i2c.h: 27: i2c_Restart();
  2889  043A  3182  2261  3183   	fcall	_i2c_Restart
  2890                           
  2891                           ;i2c.h: 28: i2c_Address(Slave, 1);
  2892  043D  01F0               	clrf	i2c_Address@mode
  2893  043E  0AF0               	incf	i2c_Address@mode,f
  2894  043F  0877               	movf	I2C_LCD_Busy@Slave,w
  2895  0440  3182  2291  3183   	fcall	_i2c_Address
  2896                           
  2897                           ;i2c.h: 29: read_byte = i2c_Read(0);
  2898  0443  3000               	movlw	0
  2899  0444  3182  22B4  3183   	fcall	_i2c_Read
  2900  0447  00F4               	movwf	??_I2C_LCD_Busy
  2901  0448  0874               	movf	??_I2C_LCD_Busy,w
  2902  0449  00F6               	movwf	I2C_LCD_Busy@read_byte
  2903                           
  2904                           ;i2c.h: 30: read_byte >>= 4;
  2905  044A  0EF6               	swapf	I2C_LCD_Busy@read_byte,f
  2906  044B  300F               	movlw	15
  2907  044C  05F6               	andwf	I2C_LCD_Busy@read_byte,f
  2908                           
  2909                           ;i2c.h: 31: read_byte += Temp1;
  2910  044D  0875               	movf	I2C_LCD_Busy@Temp1,w
  2911  044E  00F4               	movwf	??_I2C_LCD_Busy
  2912  044F  0874               	movf	??_I2C_LCD_Busy,w
  2913  0450  07F6               	addwf	I2C_LCD_Busy@read_byte,f
  2914                           
  2915                           ;i2c.h: 32: i2c_Stop();
  2916  0451  3182  226B         	fcall	_i2c_Stop
  2917                           
  2918                           ;i2c.h: 33: return read_byte;
  2919  0453  0876               	movf	I2C_LCD_Busy@read_byte,w
  2920  0454  0008               	return
  2921  0455                     __end_of_I2C_LCD_Busy:	
  2922                           
  2923                           	psect	text14
  2924  0276                     __ptext14:	
  2925 ;; *************** function _i2c_Write *****************
  2926 ;; Defined at:
  2927 ;;		line 54 in file "i2c_LCD.h"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  data            1    wreg     unsigned char 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  data            1    0[COMMON] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2945 ;;Total ram usage:        1 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    1
  2948 ;; This function calls:
  2949 ;;		_i2c_Wait
  2950 ;; This function is called by:
  2951 ;;		_I2C_LCD_Busy
  2952 ;;		_I2C_LCD_Init
  2953 ;;		_I2C_LCD_Pos
  2954 ;;		_I2C_LCD_SWrite
  2955 ;;		_I2C_LCD_Command
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function _i2c_Write
  2961  0276                     _i2c_Write:	
  2962                           
  2963                           ;incstack = 0
  2964                           ; Regs used in _i2c_Write: [wreg+status,2+status,0+pclath+cstack]
  2965                           ;i2c_Write@data stored from wreg
  2966  0276  00F0               	movwf	i2c_Write@data
  2967                           
  2968                           ;i2c_LCD.h: 56: i2c_Wait();
  2969  0277  3182  227D         	fcall	_i2c_Wait
  2970                           
  2971                           ;i2c_LCD.h: 57: SSP1BUF = data;
  2972  0279  0870               	movf	i2c_Write@data,w
  2973  027A  0024               	movlb	4	; select bank4
  2974  027B  0091               	movwf	17	;volatile
  2975  027C  0008               	return
  2976  027D                     __end_of_i2c_Write:	
  2977                           
  2978                           	psect	text15
  2979  026B                     __ptext15:	
  2980 ;; *************** function _i2c_Stop *****************
  2981 ;; Defined at:
  2982 ;;		line 47 in file "i2c_LCD.h"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0, pclath, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    1
  3003 ;; This function calls:
  3004 ;;		_i2c_Wait
  3005 ;; This function is called by:
  3006 ;;		_I2C_LCD_Busy
  3007 ;;		_I2C_LCD_Init
  3008 ;;		_I2C_LCD_Pos
  3009 ;;		_I2C_LCD_SWrite
  3010 ;;		_I2C_LCD_Command
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function _i2c_Stop
  3016  026B                     _i2c_Stop:	
  3017                           
  3018                           ;i2c_LCD.h: 49: i2c_Wait();
  3019                           
  3020                           ;incstack = 0
  3021                           ; Regs used in _i2c_Stop: [wreg+status,2+status,0+pclath+cstack]
  3022  026B  3182  227D         	fcall	_i2c_Wait
  3023                           
  3024                           ;i2c_LCD.h: 50: SSP1CON2bits.PEN=1;
  3025  026D  0024               	movlb	4	; select bank4
  3026  026E  1516               	bsf	22,2	;volatile
  3027  026F  0008               	return
  3028  0270                     __end_of_i2c_Stop:	
  3029                           
  3030                           	psect	text16
  3031  0266                     __ptext16:	
  3032 ;; *************** function _i2c_Start *****************
  3033 ;; Defined at:
  3034 ;;		line 34 in file "i2c_LCD.h"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;Total ram usage:        0 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    1
  3055 ;; This function calls:
  3056 ;;		_i2c_Wait
  3057 ;; This function is called by:
  3058 ;;		_I2C_LCD_Busy
  3059 ;;		_I2C_LCD_Init
  3060 ;;		_I2C_LCD_Pos
  3061 ;;		_I2C_LCD_SWrite
  3062 ;;		_I2C_LCD_Command
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           
  3067                           ;psect for function _i2c_Start
  3068  0266                     _i2c_Start:	
  3069                           
  3070                           ;i2c_LCD.h: 36: i2c_Wait();
  3071                           
  3072                           ;incstack = 0
  3073                           ; Regs used in _i2c_Start: [wreg+status,2+status,0+pclath+cstack]
  3074  0266  3182  227D         	fcall	_i2c_Wait
  3075                           
  3076                           ;i2c_LCD.h: 37: SSP1CON2bits.SEN=1;
  3077  0268  0024               	movlb	4	; select bank4
  3078  0269  1416               	bsf	22,0	;volatile
  3079  026A  0008               	return
  3080  026B                     __end_of_i2c_Start:	
  3081                           
  3082                           	psect	text17
  3083  0261                     __ptext17:	
  3084 ;; *************** function _i2c_Restart *****************
  3085 ;; Defined at:
  3086 ;;		line 41 in file "i2c_LCD.h"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3104 ;;Total ram usage:        0 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    1
  3107 ;; This function calls:
  3108 ;;		_i2c_Wait
  3109 ;; This function is called by:
  3110 ;;		_I2C_LCD_Busy
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function _i2c_Restart
  3116  0261                     _i2c_Restart:	
  3117                           
  3118                           ;i2c_LCD.h: 42: i2c_Wait();
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _i2c_Restart: [wreg+status,2+status,0+pclath+cstack]
  3122  0261  3182  227D         	fcall	_i2c_Wait
  3123                           
  3124                           ;i2c_LCD.h: 43: SSP1CON2bits.RSEN=1;
  3125  0263  0024               	movlb	4	; select bank4
  3126  0264  1496               	bsf	22,1	;volatile
  3127  0265  0008               	return
  3128  0266                     __end_of_i2c_Restart:	
  3129                           
  3130                           	psect	text18
  3131  02B4                     __ptext18:	
  3132 ;; *************** function _i2c_Read *****************
  3133 ;; Defined at:
  3134 ;;		line 73 in file "i2c_LCD.h"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  ack             1    wreg     unsigned char 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  ack             1    1[COMMON] unsigned char 
  3139 ;;  i2cReadData     1    2[COMMON] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      unsigned char 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;Total ram usage:        3 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    1
  3156 ;; This function calls:
  3157 ;;		_i2c_Wait
  3158 ;; This function is called by:
  3159 ;;		_I2C_LCD_Busy
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           
  3164                           ;psect for function _i2c_Read
  3165  02B4                     _i2c_Read:	
  3166                           
  3167                           ;incstack = 0
  3168                           ; Regs used in _i2c_Read: [wreg+status,2+status,0+pclath+cstack]
  3169                           ;i2c_Read@ack stored from wreg
  3170  02B4  00F1               	movwf	i2c_Read@ack
  3171                           
  3172                           ;i2c_LCD.h: 78: unsigned char i2cReadData;
  3173                           ;i2c_LCD.h: 80: i2c_Wait();
  3174  02B5  3182  227D  3182   	fcall	_i2c_Wait
  3175                           
  3176                           ;i2c_LCD.h: 81: SSP1CON2bits.RCEN=1;
  3177  02B8  0024               	movlb	4	; select bank4
  3178  02B9  1596               	bsf	22,3	;volatile
  3179                           
  3180                           ;i2c_LCD.h: 82: i2c_Wait();
  3181  02BA  3182  227D  3182   	fcall	_i2c_Wait
  3182                           
  3183                           ;i2c_LCD.h: 83: i2cReadData = SSP1BUF;
  3184  02BD  0024               	movlb	4	; select bank4
  3185  02BE  0811               	movf	17,w	;volatile
  3186  02BF  00F0               	movwf	??_i2c_Read
  3187  02C0  0870               	movf	??_i2c_Read,w
  3188  02C1  00F2               	movwf	i2c_Read@i2cReadData
  3189                           
  3190                           ;i2c_LCD.h: 84: i2c_Wait();
  3191  02C2  3182  227D  3182   	fcall	_i2c_Wait
  3192                           
  3193                           ;i2c_LCD.h: 85: if ( ack ) SSP1CON2bits.ACKDT=0;
  3194  02C5  0871               	movf	i2c_Read@ack,w
  3195  02C6  1903               	btfsc	3,2
  3196  02C7  2ACB               	goto	l73
  3197  02C8  0024               	movlb	4	; select bank4
  3198  02C9  1296               	bcf	22,5	;volatile
  3199  02CA  2ACD               	goto	l74
  3200  02CB                     l73:	
  3201                           
  3202                           ;i2c_LCD.h: 86: else SSP1CON2bits.ACKDT=1;
  3203  02CB  0024               	movlb	4	; select bank4
  3204  02CC  1696               	bsf	22,5	;volatile
  3205  02CD                     l74:	
  3206                           
  3207                           ;i2c_LCD.h: 87: SSP1CON2bits.ACKEN=1;
  3208  02CD  1616               	bsf	22,4	;volatile
  3209                           
  3210                           ;i2c_LCD.h: 89: return( i2cReadData );
  3211  02CE  0872               	movf	i2c_Read@i2cReadData,w
  3212  02CF  0008               	return
  3213  02D0                     __end_of_i2c_Read:	
  3214                           
  3215                           	psect	text19
  3216  0291                     __ptext19:	
  3217 ;; *************** function _i2c_Address *****************
  3218 ;; Defined at:
  3219 ;;		line 62 in file "i2c_LCD.h"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  address         1    wreg     unsigned char 
  3222 ;;  mode            1    0[COMMON] unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  address         1    2[COMMON] unsigned char 
  3225 ;;  l_address       1    3[COMMON] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0, pclath, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3235 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3237 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3238 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3239 ;;Total ram usage:        4 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    1
  3242 ;; This function calls:
  3243 ;;		_i2c_Wait
  3244 ;; This function is called by:
  3245 ;;		_I2C_LCD_Busy
  3246 ;;		_I2C_LCD_Init
  3247 ;;		_I2C_LCD_Pos
  3248 ;;		_I2C_LCD_SWrite
  3249 ;;		_I2C_LCD_Command
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           
  3254                           ;psect for function _i2c_Address
  3255  0291                     _i2c_Address:	
  3256                           
  3257                           ;incstack = 0
  3258                           ; Regs used in _i2c_Address: [wreg+status,2+status,0+pclath+cstack]
  3259                           ;i2c_Address@address stored from wreg
  3260  0291  00F2               	movwf	i2c_Address@address
  3261                           
  3262                           ;i2c_LCD.h: 64: unsigned char l_address;
  3263                           ;i2c_LCD.h: 66: l_address=address<<1;
  3264  0292  3572               	lslf	i2c_Address@address,w
  3265  0293  00F1               	movwf	??_i2c_Address
  3266  0294  0871               	movf	??_i2c_Address,w
  3267  0295  00F3               	movwf	i2c_Address@l_address
  3268                           
  3269                           ;i2c_LCD.h: 67: l_address+=mode;
  3270  0296  0870               	movf	i2c_Address@mode,w
  3271  0297  00F1               	movwf	??_i2c_Address
  3272  0298  0871               	movf	??_i2c_Address,w
  3273  0299  07F3               	addwf	i2c_Address@l_address,f
  3274                           
  3275                           ;i2c_LCD.h: 68: i2c_Wait();
  3276  029A  3182  227D         	fcall	_i2c_Wait
  3277                           
  3278                           ;i2c_LCD.h: 69: SSP1BUF = l_address;
  3279  029C  0873               	movf	i2c_Address@l_address,w
  3280  029D  0024               	movlb	4	; select bank4
  3281  029E  0091               	movwf	17	;volatile
  3282  029F  0008               	return
  3283  02A0                     __end_of_i2c_Address:	
  3284                           
  3285                           	psect	text20
  3286  027D                     __ptext20:	
  3287 ;; *************** function _i2c_Wait *****************
  3288 ;; Defined at:
  3289 ;;		line 29 in file "i2c_LCD.h"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_i2c_Start
  3313 ;;		_i2c_Restart
  3314 ;;		_i2c_Stop
  3315 ;;		_i2c_Write
  3316 ;;		_i2c_Address
  3317 ;;		_i2c_Read
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           
  3322                           ;psect for function _i2c_Wait
  3323  027D                     _i2c_Wait:	
  3324  027D                     l1057:	
  3325                           ;i2c_LCD.h: 30: while ( ( SSP1CON2 & 0x1F ) || ( SSP1STAT & 0x04 ) );
  3326                           
  3327                           ;incstack = 0
  3328                           ; Regs used in _i2c_Wait: [wreg+status,2]
  3329                           
  3330  027D  0024               	movlb	4	; select bank4
  3331  027E  0816               	movf	22,w	;volatile
  3332  027F  391F               	andlw	31
  3333  0280  1D03               	btfss	3,2
  3334  0281  2A7D               	goto	l1057
  3335  0282  1D14               	btfss	20,2	;volatile
  3336  0283  0008               	return
  3337  0284  2A7D               	goto	l1057
  3338  0285                     __end_of_i2c_Wait:	
  3339                           
  3340                           	psect	text21
  3341  02A0                     __ptext21:	
  3342 ;; *************** function _ADC_Read *****************
  3343 ;; Defined at:
  3344 ;;		line 55 in file "main.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  2    0[COMMON] unsigned int 
  3351 ;; Registers used:
  3352 ;;		wreg
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3361 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3362 ;;Total ram usage:        3 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_main
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           
  3372                           ;psect for function _ADC_Read
  3373  02A0                     _ADC_Read:	
  3374                           
  3375                           ;main.c: 57: ADCON0 = 0b00101101;
  3376                           
  3377                           ;incstack = 0
  3378                           ; Regs used in _ADC_Read: [wreg]
  3379  02A0  302D               	movlw	45
  3380  02A1  0021               	movlb	1	; select bank1
  3381  02A2  009D               	movwf	29	;volatile
  3382                           
  3383                           ;main.c: 59: _delay((unsigned long)((2)*(8000000/4000.0)));
  3384  02A3  3006               	movlw	6
  3385  02A4  00F2               	movwf	??_ADC_Read
  3386  02A5  3030               	movlw	48
  3387  02A6                     u1327:	
  3388  02A6  0B89               	decfsz	9,f
  3389  02A7  2AA6               	goto	u1327
  3390  02A8  0BF2               	decfsz	??_ADC_Read,f
  3391  02A9  2AA6               	goto	u1327
  3392  02AA  3200               	nop2
  3393                           
  3394                           ;main.c: 60: GO_nDONE = 1;
  3395  02AB  0021               	movlb	1	; select bank1
  3396  02AC  149D               	bsf	29,1	;volatile
  3397  02AD                     l102:	
  3398                           ;main.c: 61: while(GO_nDONE);
  3399                           
  3400  02AD  189D               	btfsc	29,1	;volatile
  3401  02AE  2AAD               	goto	l102
  3402                           
  3403                           ;main.c: 62: return ((ADRESH<<8)+ADRESL);
  3404  02AF  081C               	movf	28,w	;volatile
  3405  02B0  00F1               	movwf	?_ADC_Read+1
  3406  02B1  081B               	movf	27,w	;volatile
  3407  02B2  00F0               	movwf	?_ADC_Read
  3408  02B3  0008               	return
  3409  02B4                     __end_of_ADC_Read:	
  3410                           
  3411                           	psect	text22
  3412  0270                     __ptext22:	
  3413 ;; *************** function _ADC_Initialize *****************
  3414 ;; Defined at:
  3415 ;;		line 49 in file "main.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;		None
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;Total ram usage:        0 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_main
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function _ADC_Initialize
  3444  0270                     _ADC_Initialize:	
  3445                           
  3446                           ;main.c: 51: ADCON0 = 0b00101101;
  3447                           
  3448                           ;incstack = 0
  3449                           ; Regs used in _ADC_Initialize: [wreg]
  3450  0270  302D               	movlw	45
  3451  0271  0021               	movlb	1	; select bank1
  3452  0272  009D               	movwf	29	;volatile
  3453                           
  3454                           ;main.c: 52: ADCON1 = 0b11000000;
  3455  0273  30C0               	movlw	192
  3456  0274  009E               	movwf	30	;volatile
  3457  0275  0008               	return
  3458  0276                     __end_of_ADC_Initialize:	
  3459  007E                     btemp	set	126	;btemp
  3460  007E                     wtemp0	set	126


Data Sizes:
    Strings     43
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     57      57
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[1]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@Sout(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    main@Sptr	PTR unsigned char  size(1) Largest target is 20
		 -> main@Sout(BANK0[20]), 

    I2C_LCD_SWrite@Data	PTR unsigned char  size(1) Largest target is 20
		 -> main@Sout(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_I2C_LCD_Command
    _main->_I2C_LCD_Pos
    _main->___awtoft
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _I2C_LCD_SWrite->_I2C_LCD_Busy
    _I2C_LCD_Pos->_I2C_LCD_Busy
    _I2C_LCD_Init->_I2C_LCD_Busy
    _I2C_LCD_Command->_I2C_LCD_Busy
    _I2C_LCD_Busy->_i2c_Address

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   11766
                                             30 BANK0     27    27      0
                     _ADC_Initialize
                           _ADC_Read
                    _I2C_LCD_Command
                       _I2C_LCD_Init
                        _I2C_LCD_Pos
                     _I2C_LCD_SWrite
                           ___awtoft
                            ___ftdiv
                            ___fttol
                           _i2c_Init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    19      4    1330
                                              0 BANK0     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2015
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1773
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SWrite                                      12    10      2    1796
                                              8 COMMON     5     3      2
                                              0 BANK0      5     5      0
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Pos                                          6     5      1    1442
                                              8 COMMON     6     5      1
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Init                                         3     3      0    1255
                                              8 COMMON     3     3      0
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Command                                      6     5      1    1547
                                              8 COMMON     6     5      1
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Busy                                         4     4      0     696
                                              4 COMMON     4     4      0
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          4     3      1     492
                                              0 COMMON     4     3      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2       0
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _I2C_LCD_Command
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _I2C_LCD_Init
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _I2C_LCD_Pos
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _I2C_LCD_SWrite
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _i2c_Init
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     39      39       5       71.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 19 01:14:16 2023

             __CFG_CP$OFF 0000             ??_i2c_Address 0071                        l73 02CB  
                      l74 02CD               __CFG_LVP$ON 0000               i2c_Read@ack 0071  
                     l102 02AD                       l111 0771                       l112 0772  
                     l113 077B                       l116 077E                       l401 04F5  
                     l402 04FD                       l394 04E2                       l485 0581  
                     _RA1 0061                       _RA4 0064                       _RC0 0070  
            __CFG_CPD$OFF 0000                       u715 04C4                       u735 04DD  
                     u825 035B                       u755 04EA                       u915 0308  
                     u845 0365                       u925 030F                       u855 036F  
                     u945 038D                       u865 0377                       u955 0483  
                     u795 0504                       u965 046C                       u975 0325  
                     u895 02F9              __CFG_BORV$LO 0000                       wreg 0009  
           ??_i2c_Restart 0070              _I2C_LCD_Busy 03FE              _I2C_LCD_Init 03BB  
       ??_I2C_LCD_Command 0079              ___ftdiv@cntr 002A              ___ftdiv@sign 002F  
                    l1101 0418                      l1203 030E                      l1141 04C9  
                    l1301 066C                      l1151 04EF                      l1143 04CE  
                    l1135 04B8                      l1207 0317                      l1057 027D  
                    l1139 04BF                      l1411 052D                      l1323 06A0  
                    l1307 0684                      l1261 04A8                      l1149 04E7  
                    l1181 0376                      l1173 0358                      l1317 069A  
                    l1431 056B                      l1175 0364                      l1343 06D2  
                    l1335 06CE                      l1185 037F                      l1329 06BF  
                    l1345 064A                      l1259 0463                      l1443 0592  
                    l1347 070C                      l1437 0578                      l1429 055D  
                    l1197 02F6                      l1359 02DA                      l1375 05C8  
                    l1439 0584                      l1199 0302                      l1369 05B2  
                    l1397 0622                      l1389 0609                      l1469 0760  
                    STR_1 0829                      STR_2 0819                      STR_3 080A  
                    STR_4 081A                      u1105 05DA                      u1025 06B5  
                    u1115 05EA                      u1125 060A                      u1205 055E  
                    u1135 0619                      u1145 0623                      u1235 0579  
                    u1307 0774                      u1317 07F1                      u1327 02A6  
                    u1175 0534                      u1297 074A              __CFG_WRT$OFF 0000  
                    _main 0711              ___ftpack@arg 0070              ___ftpack@exp 0073  
                    fsr0h 0005                      fsr1h 0007                      indf0 0000  
                    fsr0l 0004                      indf1 0001                      fsr1l 0006  
                    btemp 007E          __end_of_ADC_Read 02B4                      start 0002  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000              ___fttol@exp1 003D  
            ___fttol@lval 0039                     ?_main 0070             __CFG_WDTE$OFF 0000  
         __end_of___ftdiv 0644           __end_of___fttol 059B           __end_of___lwdiv 0384  
         __end_of___lwmod 031C                     _TMR1H 0017                     _TMR1L 0016  
                   _TRISA 008C                     _TRISC 008E       __end_of_i2c_Address 02A0  
          __CFG_FCMEN$OFF 0000             ___awtoft@sign 007D           __end_of_dpowers 080A  
           ___ftpack@sign 0074                     main@a 0057            __CFG_BOREN$OFF 0000  
     __end_of_i2c_Restart 0266                     status 0003                     wtemp0 007E  
         __end_of_sprintf 0711             main@adc_value 0055           __initialization 07FD  
            __end_of_main 07FD          __end_of_i2c_Init 0291          __end_of_i2c_Read 02D0  
        __end_of_i2c_Wait 0285          __end_of_i2c_Stop 0270            _I2C_LCD_SWrite 0455  
                  ??_main 003E             ___fttol@sign1 0038            __CFG_PLLEN$OFF 0000  
                  _ADCON0 009D                    _ADCON1 009E                    _ADRESH 009C  
                  _ADRESL 009B        I2C_LCD_Command@Cmd 0078          __end_of___awtoft 02F0  
        __end_of___ftpack 0514        __size_of_i2c_Start 0005        __size_of_i2c_Write 0007  
                  _TMR1ON 00C0                    _TRISB4 046C                    _TRISB6 046E  
          __CFG_PWRTE$OFF 0000    __end_of_I2C_LCD_SWrite 04B0            __CFG_STVREN$ON 0000  
               ??___ftdiv 0026                 ??___fttol 0034                 ??___lwdiv 0074  
               ??___lwmod 007C               _i2c_Address 0291             i2c_Write@data 0070  
               ?_ADC_Read 0070               _i2c_Restart 0261                 ??_sprintf 0024  
 __end_of__initialization 07FD                ___ftdiv@f1 0023                ___ftdiv@f2 0020  
              ___ftdiv@f3 002B                ___awtoft@c 0078        I2C_LCD_SWrite@Data 0078  
              ___fttol@f1 0030            __pcstackCOMMON 0070           ?_I2C_LCD_SWrite 0078  
       __end_of_i2c_Start 026B         __end_of_i2c_Write 027D           _I2C_LCD_Command 031C  
              ??_ADC_Read 0072        I2C_LCD_Pos@HiBytex 007C        I2C_LCD_Pos@LoBytex 007D  
               ?_i2c_Init 0070                 ?_i2c_Read 0070                 ?_i2c_Wait 0070  
               ?_i2c_Stop 0070             ??_I2C_LCD_Pos 0079          I2C_LCD_Pos@Slave 007B  
              __pmaintext 0711                 ?___awtoft 0078                 ?___ftpack 0070  
 __size_of_ADC_Initialize 0006        i2c_Address@address 0072                   _SSP1ADD 0212  
                 _SSP1BUF 0211                ??_i2c_Init 0070                ??_i2c_Read 0070  
              ??_i2c_Wait 0070                ??_i2c_Stop 0070   __end_of_I2C_LCD_Command 0350  
     __end_of_I2C_LCD_Pos 03BB                   ___ftdiv 059B                   ___fttol 0514  
                 ___lwdiv 0350                   ___lwmod 02F0                ??___awtoft 007B  
              ??___ftpack 0075                   __ptext1 0644                   __ptext2 02F0  
                 __ptext3 0350                   __ptext4 0285                   __ptext5 0514  
                 __ptext6 059B                   __ptext7 02D0                   __ptext8 04B0  
                 __ptext9 0455                   _dpowers 0800                   _sprintf 0644  
    end_of_initialization 07FD      i2c_Address@l_address 0073              ?_i2c_Address 0070  
        __CFG_FOSC$INTOSC 0000              ?_i2c_Restart 0070         __size_of_ADC_Read 0014  
             _I2C_LCD_Pos 0384               ___ftdiv@exp 002E          ??_I2C_LCD_SWrite 007A  
     I2C_LCD_SWrite@Slave 0020          ?_I2C_LCD_Command 0078            _ADC_Initialize 0270  
               _i2c_Start 0266                 _i2c_Write 0276       start_initialization 07FD  
           ?_I2C_LCD_Busy 0070             ?_I2C_LCD_Init 0070         __size_of_i2c_Init 000C  
       __size_of_i2c_Read 001C         __size_of_i2c_Wait 0008         __size_of_i2c_Stop 0005  
       I2C_LCD_Busy@Temp1 0075    __end_of_ADC_Initialize 0276         I2C_LCD_Busy@Slave 0077  
       I2C_LCD_Init@Slave 007A         I2C_LCD_Init@Tvar1 0079         __size_of___awtoft 0020  
       __size_of___ftpack 0064                ?_i2c_Start 0070                ?_i2c_Write 0070  
          ??_I2C_LCD_Busy 0074                 ___latbits 0002            ??_I2C_LCD_Init 0078  
           __pcstackBANK0 0020         I2C_LCD_SWrite@Max 0079               sprintf@flag 0029  
             sprintf@prec 002A           I2C_LCD_SWrite@H 0021           I2C_LCD_SWrite@L 0022  
         I2C_LCD_SWrite@j 0023          ___lwdiv@dividend 0072                  ?___ftdiv 0020  
                ?___fttol 0030                  ?___lwdiv 0070                  ?___lwmod 0078  
         ?_ADC_Initialize 0070      __size_of_i2c_Address 000F                  _ADC_Read 02A0  
    I2C_LCD_Command@Slave 007B          ___lwdiv@quotient 0075                  ?_sprintf 0020  
    __size_of_i2c_Restart 0005                  _GO_nDONE 04E9                  _SSP1CON1 0215  
                _SSP1CON2 0216                  _SSP1STAT 0214               ??_i2c_Start 0070  
             ??_i2c_Write 0070                  _i2c_Init 0285                  _i2c_Read 02B4  
                _i2c_Wait 027D                  _i2c_Stop 026B              ?_I2C_LCD_Pos 0078  
  I2C_LCD_Command@HiBytex 007C    I2C_LCD_Command@LoBytex 007D      __end_of_I2C_LCD_Busy 0455  
    __end_of_I2C_LCD_Init 03FE          __size_of___ftdiv 00A9          __size_of___fttol 0087  
        __size_of___lwdiv 0034          __size_of___lwmod 002C                  ___awtoft 02D0  
                ___ftpack 04B0                sprintf@val 002B            I2C_LCD_Pos@Pos 0078  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 0384  
                __ptext11 03BB                  __ptext20 027D                  __ptext12 031C  
                __ptext21 02A0                  __ptext13 03FE                  __ptext22 0270  
                __ptext14 0276                  __ptext15 026B                  __ptext16 0266  
                __ptext17 0261                  __ptext18 02B4                  __ptext19 0291  
            _SSP1CON2bits 0216          __size_of_sprintf 00CD             __size_of_main 00EC  
   I2C_LCD_Busy@read_byte 0076                  main@Sptr 0054                  main@Sout 0040  
__size_of_I2C_LCD_Command 0034                 sprintf@ap 0028                 sprintf@sp 002D  
        ___lwmod@dividend 007A           i2c_Address@mode 0070         __CFG_CLKOUTEN$OFF 0000  
        ??_ADC_Initialize 0070   __size_of_I2C_LCD_SWrite 005B             __pstringtext1 0800  
           __pstringtext2 081A             __pstringtext3 0829             __pstringtext4 0000  
                sprintf@c 002E                  sprintf@f 0020           ___lwmod@divisor 0078  
         ___lwmod@counter 007D       i2c_Read@i2cReadData 0072     __size_of_I2C_LCD_Busy 0057  
   __size_of_I2C_LCD_Init 0043      __size_of_I2C_LCD_Pos 0037  
