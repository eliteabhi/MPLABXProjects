

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 19 00:39:43 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 1.45
    35                           ; Generated 16/11/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F1829 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011B                     	;# 
   130  011D                     	;# 
   131  011E                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  018E                     	;# 
   135  0191                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0194                     	;# 
   142  0195                     	;# 
   143  0196                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  020E                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0216                     	;# 
   167  0216                     	;# 
   168  0217                     	;# 
   169  0217                     	;# 
   170  0219                     	;# 
   171  021A                     	;# 
   172  021B                     	;# 
   173  021C                     	;# 
   174  021D                     	;# 
   175  021E                     	;# 
   176  021F                     	;# 
   177  0291                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0293                     	;# 
   181  0294                     	;# 
   182  0295                     	;# 
   183  0295                     	;# 
   184  0296                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  029B                     	;# 
   190  029C                     	;# 
   191  029D                     	;# 
   192  029E                     	;# 
   193  0311                     	;# 
   194  0311                     	;# 
   195  0312                     	;# 
   196  0313                     	;# 
   197  0318                     	;# 
   198  0318                     	;# 
   199  0319                     	;# 
   200  031A                     	;# 
   201  038C                     	;# 
   202  038D                     	;# 
   203  038E                     	;# 
   204  0391                     	;# 
   205  0392                     	;# 
   206  0393                     	;# 
   207  0394                     	;# 
   208  0395                     	;# 
   209  0396                     	;# 
   210  039A                     	;# 
   211  039C                     	;# 
   212  039D                     	;# 
   213  039E                     	;# 
   214  039F                     	;# 
   215  0415                     	;# 
   216  0416                     	;# 
   217  0417                     	;# 
   218  041C                     	;# 
   219  041D                     	;# 
   220  041E                     	;# 
   221  0FE4                     	;# 
   222  0FE5                     	;# 
   223  0FE6                     	;# 
   224  0FE7                     	;# 
   225  0FE8                     	;# 
   226  0FE9                     	;# 
   227  0FEA                     	;# 
   228  0FEB                     	;# 
   229  0FED                     	;# 
   230  0FEE                     	;# 
   231  0FEF                     	;# 
   232                           
   233                           	psect	stringtext1
   234  0800                     __pstringtext1:	
   235  0800                     _dpowers:	
   236  0800  3401               	retlw	1
   237  0801  3400               	retlw	0
   238  0802  340A               	retlw	10
   239  0803  3400               	retlw	0
   240  0804  3464               	retlw	100
   241  0805  3400               	retlw	0
   242  0806  34E8               	retlw	232
   243  0807  3403               	retlw	3
   244  0808  3410               	retlw	16
   245  0809  3427               	retlw	39
   246  080A                     __end_of_dpowers:	
   247  0016                     _TMR1L	set	22
   248  0017                     _TMR1H	set	23
   249  0062                     _RA2	set	98
   250  00C0                     _TMR1ON	set	192
   251  0071                     _RC1	set	113
   252  0064                     _RA4	set	100
   253  008C                     _TRISA	set	140
   254  009B                     _ADRESL	set	155
   255  009C                     _ADRESH	set	156
   256  009E                     _ADCON1	set	158
   257  009D                     _ADCON0	set	157
   258  04E9                     _GO_nDONE	set	1257
   259  046E                     _TRISB6	set	1134
   260  046C                     _TRISB4	set	1132
   261  0211                     _SSP1BUF	set	529
   262  0216                     _SSP1CON2bits	set	534
   263  0214                     _SSP1STAT	set	532
   264  0212                     _SSP1ADD	set	530
   265  0216                     _SSP1CON2	set	534
   266  0215                     _SSP1CON1	set	533
   267  080A                     STR_3:	
   268  080A  346C               	retlw	108	;'l'
   269  080B  3469               	retlw	105	;'i'
   270  080C  3467               	retlw	103	;'g'
   271  080D  3468               	retlw	104	;'h'
   272  080E  3474               	retlw	116	;'t'
   273  080F  3456               	retlw	86	;'V'
   274  0810  3461               	retlw	97	;'a'
   275  0811  346C               	retlw	108	;'l'
   276  0812  3475               	retlw	117	;'u'
   277  0813  3465               	retlw	101	;'e'
   278  0814  3420               	retlw	32	;' '
   279  0815  343D               	retlw	61	;'='
   280  0816  3420               	retlw	32	;' '
   281  0817  3425               	retlw	37	;'%'
   282  0818  3464               	retlw	100	;'d'
   283  0819  3400               	retlw	0
   284                           
   285                           	psect	stringtext2
   286  081A                     __pstringtext2:	
   287  081A                     STR_1:	
   288  081A  3448               	retlw	72	;'H'
   289  081B  3465               	retlw	101	;'e'
   290  081C  346C               	retlw	108	;'l'
   291  081D  346C               	retlw	108	;'l'
   292  081E  346F               	retlw	111	;'o'
   293  081F  3420               	retlw	32	;' '
   294  0820  3457               	retlw	87	;'W'
   295  0821  346F               	retlw	111	;'o'
   296  0822  3472               	retlw	114	;'r'
   297  0823  346C               	retlw	108	;'l'
   298  0824  3464               	retlw	100	;'d'
   299  0825  3400               	retlw	0
   300                           
   301                           	psect	stringtext3
   302  0000                     __pstringtext3:	
   303  0819                     
   304                           ; #config settings
   305  0000                     
   306                           	psect	cinit
   307  07FD                     start_initialization:	
   308  07FD                     __initialization:	
   309  07FD                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312  07FD                     __end_of__initialization:	
   313  07FD  0020               	movlb	0
   314  07FE  3187  2F2D         	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	cstackCOMMON
   317  0070                     __pcstackCOMMON:	
   318  0070                     ?_i2c_Init:	
   319  0070                     ??_i2c_Init:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_i2c_Wait:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ??_i2c_Wait:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_i2c_Start:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ??_i2c_Start:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_i2c_Restart:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ??_i2c_Restart:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_i2c_Stop:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ??_i2c_Stop:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_i2c_Write:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ??_i2c_Write:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_i2c_Address:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_i2c_Read:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ??_i2c_Read:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_I2C_LCD_Busy:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_I2C_LCD_Init:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_ADC_Initialize:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ??_ADC_Initialize:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_main:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_ADC_Read:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?___lwdiv:	
   380                           ; 2 bytes @ 0x0
   381                           
   382  0070                     ?___ftpack:	
   383                           ; 2 bytes @ 0x0
   384                           
   385  0070                     i2c_Write@data:	
   386                           ; 3 bytes @ 0x0
   387                           
   388  0070                     i2c_Address@mode:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ___lwdiv@divisor:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ___ftpack@arg:	
   395                           ; 2 bytes @ 0x0
   396                           
   397                           
   398                           ; 3 bytes @ 0x0
   399  0070                     	ds	1
   400  0071                     ??_i2c_Address:	
   401  0071                     i2c_Read@ack:	
   402                           ; 1 bytes @ 0x1
   403                           
   404                           
   405                           ; 1 bytes @ 0x1
   406  0071                     	ds	1
   407  0072                     ??_ADC_Read:	
   408  0072                     i2c_Address@address:	
   409                           ; 1 bytes @ 0x2
   410                           
   411  0072                     i2c_Read@i2cReadData:	
   412                           ; 1 bytes @ 0x2
   413                           
   414  0072                     ___lwdiv@dividend:	
   415                           ; 1 bytes @ 0x2
   416                           
   417                           
   418                           ; 2 bytes @ 0x2
   419  0072                     	ds	1
   420  0073                     i2c_Address@l_address:	
   421  0073                     ___ftpack@exp:	
   422                           ; 1 bytes @ 0x3
   423                           
   424                           
   425                           ; 1 bytes @ 0x3
   426  0073                     	ds	1
   427  0074                     ??_I2C_LCD_Busy:	
   428  0074                     ??___lwdiv:	
   429                           ; 1 bytes @ 0x4
   430                           
   431  0074                     ___ftpack@sign:	
   432                           ; 1 bytes @ 0x4
   433                           
   434                           
   435                           ; 1 bytes @ 0x4
   436  0074                     	ds	1
   437  0075                     ??___ftpack:	
   438  0075                     I2C_LCD_Busy@Temp1:	
   439                           ; 1 bytes @ 0x5
   440                           
   441  0075                     ___lwdiv@quotient:	
   442                           ; 1 bytes @ 0x5
   443                           
   444                           
   445                           ; 2 bytes @ 0x5
   446  0075                     	ds	1
   447  0076                     I2C_LCD_Busy@read_byte:	
   448                           
   449                           ; 1 bytes @ 0x6
   450  0076                     	ds	1
   451  0077                     I2C_LCD_Busy@Slave:	
   452  0077                     ___lwdiv@counter:	
   453                           ; 1 bytes @ 0x7
   454                           
   455                           
   456                           ; 1 bytes @ 0x7
   457  0077                     	ds	1
   458  0078                     ??_I2C_LCD_Init:	
   459  0078                     ?_I2C_LCD_SWrite:	
   460                           ; 1 bytes @ 0x8
   461                           
   462  0078                     ?_I2C_LCD_Command:	
   463                           ; 1 bytes @ 0x8
   464                           
   465  0078                     ?___lwmod:	
   466                           ; 1 bytes @ 0x8
   467                           
   468  0078                     ?___awtoft:	
   469                           ; 2 bytes @ 0x8
   470                           
   471  0078                     I2C_LCD_SWrite@Data:	
   472                           ; 3 bytes @ 0x8
   473                           
   474  0078                     I2C_LCD_Command@Cmd:	
   475                           ; 1 bytes @ 0x8
   476                           
   477  0078                     ___awtoft@c:	
   478                           ; 1 bytes @ 0x8
   479                           
   480  0078                     ___lwmod@divisor:	
   481                           ; 2 bytes @ 0x8
   482                           
   483                           
   484                           ; 2 bytes @ 0x8
   485  0078                     	ds	1
   486  0079                     ??_I2C_LCD_Command:	
   487  0079                     I2C_LCD_Init@Tvar1:	
   488                           ; 1 bytes @ 0x9
   489                           
   490  0079                     I2C_LCD_SWrite@Max:	
   491                           ; 1 bytes @ 0x9
   492                           
   493                           
   494                           ; 1 bytes @ 0x9
   495  0079                     	ds	1
   496  007A                     ??_I2C_LCD_SWrite:	
   497  007A                     I2C_LCD_Init@Slave:	
   498                           ; 1 bytes @ 0xA
   499                           
   500  007A                     ___lwmod@dividend:	
   501                           ; 1 bytes @ 0xA
   502                           
   503                           
   504                           ; 2 bytes @ 0xA
   505  007A                     	ds	1
   506  007B                     ??___awtoft:	
   507  007B                     I2C_LCD_Command@Slave:	
   508                           ; 1 bytes @ 0xB
   509                           
   510                           
   511                           ; 1 bytes @ 0xB
   512  007B                     	ds	1
   513  007C                     ??___lwmod:	
   514  007C                     I2C_LCD_Command@HiBytex:	
   515                           ; 1 bytes @ 0xC
   516                           
   517                           
   518                           ; 1 bytes @ 0xC
   519  007C                     	ds	1
   520  007D                     I2C_LCD_Command@LoBytex:	
   521  007D                     ___awtoft@sign:	
   522                           ; 1 bytes @ 0xD
   523                           
   524  007D                     ___lwmod@counter:	
   525                           ; 1 bytes @ 0xD
   526                           
   527                           
   528                           ; 1 bytes @ 0xD
   529  007D                     	ds	1
   530                           
   531                           	psect	cstackBANK0
   532  0020                     __pcstackBANK0:	
   533  0020                     ?_sprintf:	
   534  0020                     ?___ftdiv:	
   535                           ; 2 bytes @ 0x0
   536                           
   537  0020                     I2C_LCD_SWrite@Slave:	
   538                           ; 3 bytes @ 0x0
   539                           
   540  0020                     sprintf@f:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0020                     ___ftdiv@f2:	
   544                           ; 2 bytes @ 0x0
   545                           
   546                           
   547                           ; 3 bytes @ 0x0
   548  0020                     	ds	1
   549  0021                     I2C_LCD_SWrite@H:	
   550                           
   551                           ; 1 bytes @ 0x1
   552  0021                     	ds	1
   553  0022                     I2C_LCD_SWrite@L:	
   554                           
   555                           ; 1 bytes @ 0x2
   556  0022                     	ds	1
   557  0023                     I2C_LCD_SWrite@j:	
   558  0023                     ___ftdiv@f1:	
   559                           ; 2 bytes @ 0x3
   560                           
   561                           
   562                           ; 3 bytes @ 0x3
   563  0023                     	ds	1
   564  0024                     ??_sprintf:	
   565                           
   566                           ; 1 bytes @ 0x4
   567  0024                     	ds	2
   568  0026                     ??___ftdiv:	
   569                           
   570                           ; 1 bytes @ 0x6
   571  0026                     	ds	2
   572  0028                     sprintf@ap:	
   573                           
   574                           ; 1 bytes @ 0x8
   575  0028                     	ds	1
   576  0029                     sprintf@flag:	
   577                           
   578                           ; 1 bytes @ 0x9
   579  0029                     	ds	1
   580  002A                     sprintf@prec:	
   581  002A                     ___ftdiv@cntr:	
   582                           ; 1 bytes @ 0xA
   583                           
   584                           
   585                           ; 1 bytes @ 0xA
   586  002A                     	ds	1
   587  002B                     sprintf@val:	
   588  002B                     ___ftdiv@f3:	
   589                           ; 2 bytes @ 0xB
   590                           
   591                           
   592                           ; 3 bytes @ 0xB
   593  002B                     	ds	2
   594  002D                     sprintf@sp:	
   595                           
   596                           ; 1 bytes @ 0xD
   597  002D                     	ds	1
   598  002E                     sprintf@c:	
   599  002E                     ___ftdiv@exp:	
   600                           ; 1 bytes @ 0xE
   601                           
   602                           
   603                           ; 1 bytes @ 0xE
   604  002E                     	ds	1
   605  002F                     ___ftdiv@sign:	
   606                           
   607                           ; 1 bytes @ 0xF
   608  002F                     	ds	1
   609  0030                     ?___fttol:	
   610  0030                     ___fttol@f1:	
   611                           ; 4 bytes @ 0x10
   612                           
   613                           
   614                           ; 3 bytes @ 0x10
   615  0030                     	ds	4
   616  0034                     ??___fttol:	
   617                           
   618                           ; 1 bytes @ 0x14
   619  0034                     	ds	4
   620  0038                     ___fttol@sign1:	
   621                           
   622                           ; 1 bytes @ 0x18
   623  0038                     	ds	1
   624  0039                     ___fttol@lval:	
   625                           
   626                           ; 4 bytes @ 0x19
   627  0039                     	ds	4
   628  003D                     ___fttol@exp1:	
   629                           
   630                           ; 1 bytes @ 0x1D
   631  003D                     	ds	1
   632  003E                     ??_main:	
   633                           
   634                           ; 1 bytes @ 0x1E
   635  003E                     	ds	2
   636  0040                     main@Sout:	
   637                           
   638                           ; 20 bytes @ 0x20
   639  0040                     	ds	20
   640  0054                     main@Sptr:	
   641                           
   642                           ; 1 bytes @ 0x34
   643  0054                     	ds	1
   644  0055                     main@adc_value:	
   645                           
   646                           ; 2 bytes @ 0x35
   647  0055                     	ds	2
   648  0057                     main@a:	
   649                           
   650                           ; 2 bytes @ 0x37
   651  0057                     	ds	2
   652                           
   653                           	psect	maintext
   654  072D                     __pmaintext:	
   655 ;;
   656 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   657 ;;
   658 ;; *************** function _main *****************
   659 ;; Defined at:
   660 ;;		line 65 in file "main.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  a               2   55[BANK0 ] int 
   665 ;;  Sout           20   32[BANK0 ] unsigned char [20]
   666 ;;  adc_value       2   53[BANK0 ] unsigned int 
   667 ;;  z               2    0        int 
   668 ;;  Sptr            1   52[BANK0 ] PTR unsigned char 
   669 ;;		 -> main@Sout(20), 
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : B1F/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   680 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
   681 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   682 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
   683 ;;Total ram usage:       27 bytes
   684 ;; Hardware stack levels required when called:    4
   685 ;; This function calls:
   686 ;;		_ADC_Initialize
   687 ;;		_ADC_Read
   688 ;;		_I2C_LCD_Command
   689 ;;		_I2C_LCD_Init
   690 ;;		_I2C_LCD_SWrite
   691 ;;		___awtoft
   692 ;;		___ftdiv
   693 ;;		___fttol
   694 ;;		_i2c_Init
   695 ;;		_sprintf
   696 ;; This function is called by:
   697 ;;		Startup code after reset
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _main
   703  072D                     _main:	
   704                           
   705                           ;main.c: 67: TMR1H = TMR1L = 0;
   706                           
   707                           ;incstack = 0
   708                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   709  072D  0020               	movlb	0	; select bank0
   710  072E  0196               	clrf	22	;volatile
   711  072F  0197               	clrf	23	;volatile
   712                           
   713                           ;main.c: 69: unsigned int adc_value = 0;
   714  0730  01D5               	clrf	main@adc_value
   715  0731  01D6               	clrf	main@adc_value+1
   716                           
   717                           ;main.c: 71: TRISA = 0x00;
   718  0732  0021               	movlb	1	; select bank1
   719  0733  018C               	clrf	12	;volatile
   720                           
   721                           ;main.c: 73: TRISA = ((1u << 2u));
   722  0734  3004               	movlw	4
   723  0735  008C               	movwf	12	;volatile
   724                           
   725                           ;main.c: 75: ADC_Initialize();
   726  0736  3182  22C3  3187   	fcall	_ADC_Initialize
   727                           
   728                           ;main.c: 78: unsigned char Sout[20];
   729                           ;main.c: 79: unsigned char * Sptr;
   730                           ;main.c: 80: int z;
   731                           ;main.c: 81: Sptr = Sout;
   732  0739  3040               	movlw	(low (main@Sout| 0))& (0+255)
   733  073A  0020               	movlb	0	; select bank0
   734  073B  00BE               	movwf	??_main
   735  073C  083E               	movf	??_main,w
   736  073D  00D4               	movwf	main@Sptr
   737                           
   738                           ;main.c: 83: i2c_Init();
   739  073E  3182  22D8  3187   	fcall	_i2c_Init
   740                           
   741                           ;main.c: 84: I2C_LCD_Init(0x27);
   742  0741  3027               	movlw	39
   743  0742  3183  23D7  3187   	fcall	_I2C_LCD_Init
   744                           
   745                           ;main.c: 86: I2C_LCD_Command(0x27, 0x01);
   746  0745  01F8               	clrf	I2C_LCD_Command@Cmd
   747  0746  0AF8               	incf	I2C_LCD_Command@Cmd,f
   748  0747  3027               	movlw	39
   749  0748  3183  236F  3187   	fcall	_I2C_LCD_Command
   750                           
   751                           ;main.c: 88: sprintf(Sout, "Hello World");
   752  074B  301A               	movlw	low (STR_1| (0+32768))
   753  074C  0020               	movlb	0	; select bank0
   754  074D  00A0               	movwf	sprintf@f
   755  074E  3088               	movlw	high (STR_1| (0+32768))
   756  074F  00A1               	movwf	sprintf@f+1
   757  0750  3040               	movlw	(low (main@Sout| 0))& (0+255)
   758  0751  3186  2660  3187   	fcall	_sprintf
   759                           
   760                           ;main.c: 90: I2C_LCD_SWrite(0x27, Sout, 11);
   761  0754  3040               	movlw	(low (main@Sout| 0))& (0+255)
   762  0755  0020               	movlb	0	; select bank0
   763  0756  00BE               	movwf	??_main
   764  0757  083E               	movf	??_main,w
   765  0758  00F8               	movwf	I2C_LCD_SWrite@Data
   766  0759  300B               	movlw	11
   767  075A  00BF               	movwf	??_main+1
   768  075B  083F               	movf	??_main+1,w
   769  075C  00F9               	movwf	I2C_LCD_SWrite@Max
   770  075D  3027               	movlw	39
   771  075E  3184  2471  3187   	fcall	_I2C_LCD_SWrite
   772                           
   773                           ;main.c: 92: _delay((unsigned long)((50)*(16000000/4000.0)));
   774  0761  3002               	movlw	2
   775  0762  0020               	movlb	0	; select bank0
   776  0763  00BF               	movwf	??_main+1
   777  0764  3004               	movlw	4
   778  0765  00BE               	movwf	??_main
   779  0766  30BA               	movlw	186
   780  0767                     u1277:	
   781  0767  0B89               	decfsz	9,f
   782  0768  2F67               	goto	u1277
   783  0769  0BBE               	decfsz	??_main,f
   784  076A  2F67               	goto	u1277
   785  076B  0BBF               	decfsz	??_main+1,f
   786  076C  2F67               	goto	u1277
   787  076D  0000               	nop
   788                           
   789                           ;main.c: 94: I2C_LCD_Command(0x27, 0x01);
   790  076E  01F8               	clrf	I2C_LCD_Command@Cmd
   791  076F  0AF8               	incf	I2C_LCD_Command@Cmd,f
   792  0770  3027               	movlw	39
   793  0771  3183  236F  3187   	fcall	_I2C_LCD_Command
   794                           
   795                           ;main.c: 95: sprintf(Sout, "");
   796  0774  3019               	movlw	low ((STR_3+15)| (0+32768))
   797  0775  0020               	movlb	0	; select bank0
   798  0776  00A0               	movwf	sprintf@f
   799  0777  3088               	movlw	high ((STR_3+15)| (0+32768))
   800  0778  00A1               	movwf	sprintf@f+1
   801  0779  3040               	movlw	(low (main@Sout| 0))& (0+255)
   802  077A  3186  2660  3187   	fcall	_sprintf
   803                           
   804                           ;main.c: 97: RA4 = 0;
   805  077D  0020               	movlb	0	; select bank0
   806  077E  120C               	bcf	12,4	;volatile
   807  077F                     l1470:	
   808                           ;main.c: 99: while(1) {
   809                           
   810                           
   811                           ;main.c: 101: adc_value = ADC_Read();
   812  077F  3182  22F3  3187   	fcall	_ADC_Read
   813  0782  0871               	movf	?_ADC_Read+1,w
   814  0783  0020               	movlb	0	; select bank0
   815  0784  00D6               	movwf	main@adc_value+1
   816  0785  0870               	movf	?_ADC_Read,w
   817  0786  00D5               	movwf	main@adc_value
   818                           
   819                           ;main.c: 103: sprintf(Sout, "lightValue = %d", adc_value);
   820  0787  300A               	movlw	low (STR_3| (0+32768))
   821  0788  00A0               	movwf	sprintf@f
   822  0789  3088               	movlw	high (STR_3| (0+32768))
   823  078A  00A1               	movwf	sprintf@f+1
   824  078B  0856               	movf	main@adc_value+1,w
   825  078C  00A3               	movwf	?_sprintf+3
   826  078D  0855               	movf	main@adc_value,w
   827  078E  00A2               	movwf	?_sprintf+2
   828  078F  3040               	movlw	(low (main@Sout| 0))& (0+255)
   829  0790  3186  2660  3187   	fcall	_sprintf
   830                           
   831                           ;main.c: 105: I2C_LCD_SWrite(0x27, Sout, 16);
   832  0793  3040               	movlw	(low (main@Sout| 0))& (0+255)
   833  0794  0020               	movlb	0	; select bank0
   834  0795  00BE               	movwf	??_main
   835  0796  083E               	movf	??_main,w
   836  0797  00F8               	movwf	I2C_LCD_SWrite@Data
   837  0798  3010               	movlw	16
   838  0799  00BF               	movwf	??_main+1
   839  079A  083F               	movf	??_main+1,w
   840  079B  00F9               	movwf	I2C_LCD_SWrite@Max
   841  079C  3027               	movlw	39
   842  079D  3184  2471  3187   	fcall	_I2C_LCD_SWrite
   843                           
   844                           ;main.c: 107: if (adc_value < 712) RA4 = 1;
   845  07A0  3002               	movlw	2
   846  07A1  0020               	movlb	0	; select bank0
   847  07A2  0256               	subwf	main@adc_value+1,w
   848  07A3  30C8               	movlw	200
   849  07A4  1903               	skipnz
   850  07A5  0255               	subwf	main@adc_value,w
   851  07A6  1803               	skipnc
   852  07A7  2FAA               	goto	l109
   853  07A8  160C               	bsf	12,4	;volatile
   854  07A9  2FAB               	goto	l1480
   855  07AA                     l109:	
   856                           
   857                           ;main.c: 108: else RA4 = 0;
   858  07AA  120C               	bcf	12,4	;volatile
   859  07AB                     l1480:	
   860                           
   861                           ;main.c: 110: _delay((unsigned long)((50)*(16000000/4000.0)));
   862  07AB  3002               	movlw	2
   863  07AC  0020               	movlb	0	; select bank0
   864  07AD  00BF               	movwf	??_main+1
   865  07AE  3004               	movlw	4
   866  07AF  00BE               	movwf	??_main
   867  07B0  30BA               	movlw	186
   868  07B1                     u1287:	
   869  07B1  0B89               	decfsz	9,f
   870  07B2  2FB1               	goto	u1287
   871  07B3  0BBE               	decfsz	??_main,f
   872  07B4  2FB1               	goto	u1287
   873  07B5  0BBF               	decfsz	??_main+1,f
   874  07B6  2FB1               	goto	u1287
   875  07B7  0000               	nop
   876                           
   877                           ;main.c: 112: I2C_LCD_Command(0x27, 0x01);
   878  07B8  01F8               	clrf	I2C_LCD_Command@Cmd
   879  07B9  0AF8               	incf	I2C_LCD_Command@Cmd,f
   880  07BA  3027               	movlw	39
   881  07BB  3183  236F  3187   	fcall	_I2C_LCD_Command
   882                           
   883                           ;main.c: 114: RC1 = 1;
   884  07BE  0020               	movlb	0	; select bank0
   885  07BF  148E               	bsf	14,1	;volatile
   886                           
   887                           ;main.c: 115: _delay((unsigned long)((50)*(16000000/4000000.0)));
   888  07C0  3042               	movlw	66
   889  07C1                     u1297:	
   890  07C1  0B89               	decfsz	9,f
   891  07C2  2FC1               	goto	u1297
   892  07C3  3200               	nop2
   893                           
   894                           ;main.c: 116: RC1 = 0;
   895  07C4  0020               	movlb	0	; select bank0
   896  07C5  108E               	bcf	14,1	;volatile
   897                           
   898                           ;main.c: 117: int a = 0;
   899  07C6  01D7               	clrf	main@a
   900  07C7  01D8               	clrf	main@a+1
   901                           
   902                           ;main.c: 119: TMR1ON = 1;
   903  07C8  1418               	bsf	24,0	;volatile
   904  07C9                     l111:	
   905                           ;main.c: 120: while(RA2);
   906                           
   907  07C9  190C               	btfsc	12,2	;volatile
   908  07CA  2FC9               	goto	l111
   909                           
   910                           ;main.c: 121: TMR1ON = 0;
   911  07CB  1018               	bcf	24,0	;volatile
   912                           
   913                           ;main.c: 123: a = (TMR1L | (TMR1H<<8));
   914  07CC  0817               	movf	23,w	;volatile
   915  07CD  00D8               	movwf	main@a+1
   916  07CE  0816               	movf	22,w	;volatile
   917  07CF  00D7               	movwf	main@a
   918                           
   919                           ;main.c: 124: a = a/58.82;
   920  07D0  0858               	movf	main@a+1,w
   921  07D1  00F9               	movwf	___awtoft@c+1
   922  07D2  0857               	movf	main@a,w
   923  07D3  00F8               	movwf	___awtoft@c
   924  07D4  3183  2323  3187   	fcall	___awtoft
   925  07D7  0878               	movf	?___awtoft,w
   926  07D8  0020               	movlb	0	; select bank0
   927  07D9  00A3               	movwf	___ftdiv@f1
   928  07DA  0879               	movf	?___awtoft+1,w
   929  07DB  00A4               	movwf	___ftdiv@f1+1
   930  07DC  087A               	movf	?___awtoft+2,w
   931  07DD  00A5               	movwf	___ftdiv@f1+2
   932  07DE  3048               	movlw	72
   933  07DF  00A0               	movwf	___ftdiv@f2
   934  07E0  306B               	movlw	107
   935  07E1  00A1               	movwf	___ftdiv@f2+1
   936  07E2  3042               	movlw	66
   937  07E3  00A2               	movwf	___ftdiv@f2+2
   938  07E4  3185  25B7  3187   	fcall	___ftdiv
   939  07E7  0020               	movlb	0	; select bank0
   940  07E8  0820               	movf	?___ftdiv,w
   941  07E9  00B0               	movwf	___fttol@f1
   942  07EA  0821               	movf	?___ftdiv+1,w
   943  07EB  00B1               	movwf	___fttol@f1+1
   944  07EC  0822               	movf	?___ftdiv+2,w
   945  07ED  00B2               	movwf	___fttol@f1+2
   946  07EE  3185  2530  3187   	fcall	___fttol
   947  07F1  0020               	movlb	0	; select bank0
   948  07F2  0831               	movf	?___fttol+1,w
   949  07F3  00D8               	movwf	main@a+1
   950  07F4  0830               	movf	?___fttol,w
   951  07F5  00D7               	movwf	main@a
   952                           
   953                           ;main.c: 125: a = a + 1;
   954  07F6  0857               	movf	main@a,w
   955  07F7  3E01               	addlw	1
   956  07F8  00D7               	movwf	main@a
   957  07F9  3000               	movlw	0
   958  07FA  3D58               	addwfc	main@a+1,w
   959  07FB  00D8               	movwf	main@a+1
   960  07FC  2F7F               	goto	l1470
   961  07FD                     __end_of_main:	
   962                           
   963                           	psect	text1
   964  0660                     __ptext1:	
   965 ;; *************** function _sprintf *****************
   966 ;; Defined at:
   967 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  sp              1    wreg     PTR unsigned char 
   970 ;;		 -> main@Sout(20), 
   971 ;;  f               2    0[BANK0 ] PTR const unsigned char 
   972 ;;		 -> STR_3(16), STR_2(1), STR_1(12), 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  sp              1   13[BANK0 ] PTR unsigned char 
   975 ;;		 -> main@Sout(20), 
   976 ;;  tmpval          4    0        struct .
   977 ;;  val             2   11[BANK0 ] unsigned int 
   978 ;;  cp              2    0        PTR const unsigned char 
   979 ;;  len             2    0        unsigned int 
   980 ;;  c               1   14[BANK0 ] char 
   981 ;;  prec            1   10[BANK0 ] char 
   982 ;;  flag            1    9[BANK0 ] unsigned char 
   983 ;;  ap              1    8[BANK0 ] PTR void [1]
   984 ;;		 -> ?_sprintf(2), 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  2    0[BANK0 ] int 
   987 ;; Registers used:
   988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   994 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   995 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
   996 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   997 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
   998 ;;Total ram usage:       15 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    1
  1001 ;; This function calls:
  1002 ;;		___lwdiv
  1003 ;;		___lwmod
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           
  1010                           ;psect for function _sprintf
  1011  0660                     _sprintf:	
  1012                           
  1013                           ;incstack = 0
  1014                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1015                           ;sprintf@sp stored from wreg
  1016  0660  0020               	movlb	0	; select bank0
  1017  0661  00AD               	movwf	sprintf@sp
  1018                           
  1019                           ;doprnt.c: 494: va_list ap;
  1020                           ;doprnt.c: 499: signed char c;
  1021                           ;doprnt.c: 506: signed char prec;
  1022                           ;doprnt.c: 508: unsigned char flag;
  1023                           ;doprnt.c: 523: union {
  1024                           ;doprnt.c: 524: unsigned long vd;
  1025                           ;doprnt.c: 525: double integ;
  1026                           ;doprnt.c: 526: } tmpval;
  1027                           ;doprnt.c: 528: unsigned int val;
  1028                           ;doprnt.c: 529: unsigned len;
  1029                           ;doprnt.c: 530: const char * cp;
  1030                           ;doprnt.c: 533: *ap = __va_start();
  1031  0662  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1032  0663  00A4               	movwf	??_sprintf
  1033  0664  0824               	movf	??_sprintf,w
  1034  0665  00A8               	movwf	sprintf@ap
  1035  0666                     l1322:	
  1036                           ;doprnt.c: 536: while(c = *f++) {
  1037                           
  1038  0666  0821               	movf	sprintf@f+1,w
  1039  0667  00A5               	movwf	??_sprintf+1
  1040  0668  0820               	movf	sprintf@f,w
  1041  0669  00A4               	movwf	??_sprintf
  1042  066A  0AA0               	incf	sprintf@f,f
  1043  066B  1903               	skipnz
  1044  066C  0AA1               	incf	sprintf@f+1,f
  1045  066D  0824               	movf	??_sprintf,w
  1046  066E  0084               	movwf	4
  1047  066F  0825               	movf	??_sprintf+1,w
  1048  0670  0085               	movwf	5
  1049  0671  0800               	movf	0,w	;code access
  1050  0672  00A6               	movwf	??_sprintf+2
  1051  0673  0826               	movf	??_sprintf+2,w
  1052  0674  00AE               	movwf	sprintf@c
  1053  0675  082E               	movf	sprintf@c,w
  1054  0676  1903               	btfsc	3,2
  1055  0677  2F28               	goto	l1324
  1056                           
  1057                           ;doprnt.c: 538: if(c != '%')
  1058  0678  3025               	movlw	37
  1059  0679  062E               	xorwf	sprintf@c,w
  1060  067A  1903               	btfsc	3,2
  1061  067B  2E88               	goto	l1278
  1062                           
  1063                           ;doprnt.c: 540: {
  1064                           ;doprnt.c: 541: ((*sp++ = (c)));
  1065  067C  082E               	movf	sprintf@c,w
  1066  067D  00A4               	movwf	??_sprintf
  1067  067E  082D               	movf	sprintf@sp,w
  1068  067F  0086               	movwf	6
  1069  0680  0187               	clrf	7
  1070  0681  0824               	movf	??_sprintf,w
  1071  0682  0081               	movwf	1
  1072  0683  3001               	movlw	1
  1073  0684  00A4               	movwf	??_sprintf
  1074  0685  0824               	movf	??_sprintf,w
  1075  0686  07AD               	addwf	sprintf@sp,f
  1076                           
  1077                           ;doprnt.c: 542: continue;
  1078  0687  2E66               	goto	l1322
  1079  0688                     l1278:	
  1080                           
  1081                           ;doprnt.c: 543: }
  1082                           ;doprnt.c: 548: flag = 0;
  1083  0688  01A9               	clrf	sprintf@flag
  1084                           
  1085                           ;doprnt.c: 822: }
  1086                           
  1087                           ;doprnt.c: 813: continue;
  1088                           
  1089                           ;doprnt.c: 802: default:
  1090                           
  1091                           ;doprnt.c: 698: case 'i':
  1092                           ;doprnt.c: 699: break;
  1093                           
  1094                           ;doprnt.c: 697: case 'd':
  1095                           
  1096                           ;doprnt.c: 638: goto alldone;
  1097                           
  1098                           ;doprnt.c: 637: case 0:
  1099                           
  1100                           ;doprnt.c: 635: switch(c = *f++) {
  1101  0689  0821               	movf	sprintf@f+1,w
  1102  068A  00A5               	movwf	??_sprintf+1
  1103  068B  0820               	movf	sprintf@f,w
  1104  068C  00A4               	movwf	??_sprintf
  1105  068D  0AA0               	incf	sprintf@f,f
  1106  068E  1903               	skipnz
  1107  068F  0AA1               	incf	sprintf@f+1,f
  1108  0690  0824               	movf	??_sprintf,w
  1109  0691  0084               	movwf	4
  1110  0692  0825               	movf	??_sprintf+1,w
  1111  0693  0085               	movwf	5
  1112  0694  0800               	movf	0,w	;code access
  1113  0695  00AE               	movwf	sprintf@c
  1114                           
  1115                           ; Switch size 1, requested type "space"
  1116                           ; Number of cases is 3, Range of values is 0 to 105
  1117                           ; switch strategies available:
  1118                           ; Name         Instructions Cycles
  1119                           ; simple_byte           10     6 (average)
  1120                           ; direct_byte          218     6 (fixed)
  1121                           ; jumptable            260     6 (fixed)
  1122                           ;	Chosen strategy is simple_byte
  1123  0696  3A00               	xorlw	0	; case 0
  1124  0697  1903               	skipnz
  1125  0698  2F28               	goto	l1324
  1126  0699  3A64               	xorlw	100	; case 100
  1127  069A  1903               	skipnz
  1128  069B  2EA0               	goto	l1284
  1129  069C  3A0D               	xorlw	13	; case 105
  1130  069D  1903               	skipnz
  1131  069E  2EA0               	goto	l1284
  1132  069F  2E66               	goto	l1322
  1133  06A0                     l1284:	
  1134                           
  1135                           ;doprnt.c: 1253: {
  1136                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1137  06A0  0828               	movf	sprintf@ap,w
  1138  06A1  0086               	movwf	6
  1139  06A2  0187               	clrf	7
  1140  06A3  3F40               	moviw [0]fsr1
  1141  06A4  00AB               	movwf	sprintf@val
  1142  06A5  3F41               	moviw [1]fsr1
  1143  06A6  00AC               	movwf	sprintf@val+1
  1144  06A7  3002               	movlw	2
  1145  06A8  00A4               	movwf	??_sprintf
  1146  06A9  0824               	movf	??_sprintf,w
  1147  06AA  07A8               	addwf	sprintf@ap,f
  1148                           
  1149                           ;doprnt.c: 1261: if((int)val < 0) {
  1150  06AB  1FAC               	btfss	sprintf@val+1,7
  1151  06AC  2EB6               	goto	l1294
  1152                           
  1153                           ;doprnt.c: 1262: flag |= 0x03;
  1154  06AD  3003               	movlw	3
  1155  06AE  00A4               	movwf	??_sprintf
  1156  06AF  0824               	movf	??_sprintf,w
  1157  06B0  04A9               	iorwf	sprintf@flag,f
  1158                           
  1159                           ;doprnt.c: 1263: val = -val;
  1160  06B1  09AB               	comf	sprintf@val,f
  1161  06B2  09AC               	comf	sprintf@val+1,f
  1162  06B3  0AAB               	incf	sprintf@val,f
  1163  06B4  1903               	skipnz
  1164  06B5  0AAC               	incf	sprintf@val+1,f
  1165  06B6                     l1294:	
  1166                           
  1167                           ;doprnt.c: 1264: }
  1168                           ;doprnt.c: 1266: }
  1169                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1170  06B6  01AE               	clrf	sprintf@c
  1171  06B7  0AAE               	incf	sprintf@c,f
  1172  06B8  3005               	movlw	5
  1173  06B9  062E               	xorwf	sprintf@c,w
  1174  06BA  1903               	btfsc	3,2
  1175  06BB  2EDB               	goto	l1306
  1176  06BC                     l1300:	
  1177                           
  1178                           ;doprnt.c: 1306: if(val < dpowers[c])
  1179  06BC  082E               	movf	sprintf@c,w
  1180  06BD  00A4               	movwf	??_sprintf
  1181  06BE  01A5               	clrf	??_sprintf+1
  1182  06BF  35A4               	lslf	??_sprintf,f
  1183  06C0  0DA5               	rlf	??_sprintf+1,f
  1184  06C1  3000               	movlw	low (_dpowers| (0+32768))
  1185  06C2  0724               	addwf	??_sprintf,w
  1186  06C3  0084               	movwf	4
  1187  06C4  3088               	movlw	high (_dpowers| (0+32768))
  1188  06C5  3D25               	addwfc	??_sprintf+1,w
  1189  06C6  0085               	movwf	5
  1190  06C7  3F00               	moviw [0]fsr0
  1191  06C8  00A6               	movwf	??_sprintf+2
  1192  06C9  3F01               	moviw [1]fsr0
  1193  06CA  00A7               	movwf	??_sprintf+3
  1194  06CB  0827               	movf	??_sprintf+3,w
  1195  06CC  022C               	subwf	sprintf@val+1,w
  1196  06CD  1D03               	skipz
  1197  06CE  2ED1               	goto	u1005
  1198  06CF  0826               	movf	??_sprintf+2,w
  1199  06D0  022B               	subwf	sprintf@val,w
  1200  06D1                     u1005:	
  1201  06D1  1C03               	btfss	3,0
  1202  06D2  2EDB               	goto	l1306
  1203                           
  1204                           ;doprnt.c: 1307: break;
  1205  06D3  3001               	movlw	1
  1206  06D4  00A4               	movwf	??_sprintf
  1207  06D5  0824               	movf	??_sprintf,w
  1208  06D6  07AE               	addwf	sprintf@c,f
  1209  06D7  3005               	movlw	5
  1210  06D8  062E               	xorwf	sprintf@c,w
  1211  06D9  1D03               	btfss	3,2
  1212  06DA  2EBC               	goto	l1300
  1213  06DB                     l1306:	
  1214                           
  1215                           ;doprnt.c: 1422: {
  1216                           ;doprnt.c: 1438: if(flag & 0x03)
  1217  06DB  0829               	movf	sprintf@flag,w
  1218  06DC  3903               	andlw	3
  1219  06DD  1903               	btfsc	3,2
  1220  06DE  2EEA               	goto	l1312
  1221                           
  1222                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1223  06DF  302D               	movlw	45
  1224  06E0  00A4               	movwf	??_sprintf
  1225  06E1  082D               	movf	sprintf@sp,w
  1226  06E2  0086               	movwf	6
  1227  06E3  0187               	clrf	7
  1228  06E4  0824               	movf	??_sprintf,w
  1229  06E5  0081               	movwf	1
  1230  06E6  3001               	movlw	1
  1231  06E7  00A4               	movwf	??_sprintf
  1232  06E8  0824               	movf	??_sprintf,w
  1233  06E9  07AD               	addwf	sprintf@sp,f
  1234  06EA                     l1312:	
  1235                           
  1236                           ;doprnt.c: 1469: }
  1237                           ;doprnt.c: 1472: prec = c;
  1238  06EA  082E               	movf	sprintf@c,w
  1239  06EB  00A4               	movwf	??_sprintf
  1240  06EC  0824               	movf	??_sprintf,w
  1241  06ED  00AA               	movwf	sprintf@prec
  1242  06EE                     l1320:	
  1243                           ;doprnt.c: 1474: while(prec--) {
  1244                           
  1245  06EE  30FF               	movlw	255
  1246  06EF  00A4               	movwf	??_sprintf
  1247  06F0  0824               	movf	??_sprintf,w
  1248  06F1  07AA               	addwf	sprintf@prec,f
  1249  06F2  0A2A               	incf	sprintf@prec,w
  1250  06F3  1903               	btfsc	3,2
  1251  06F4  2E66               	goto	l1322
  1252                           
  1253                           ;doprnt.c: 1478: {
  1254                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1255  06F5  300A               	movlw	10
  1256  06F6  00F8               	movwf	___lwmod@divisor
  1257  06F7  3000               	movlw	0
  1258  06F8  00F9               	movwf	___lwmod@divisor+1
  1259  06F9  082A               	movf	sprintf@prec,w
  1260  06FA  00A4               	movwf	??_sprintf
  1261  06FB  01A5               	clrf	??_sprintf+1
  1262  06FC  35A4               	lslf	??_sprintf,f
  1263  06FD  0DA5               	rlf	??_sprintf+1,f
  1264  06FE  3000               	movlw	low (_dpowers| (0+32768))
  1265  06FF  0724               	addwf	??_sprintf,w
  1266  0700  0084               	movwf	4
  1267  0701  3088               	movlw	high (_dpowers| (0+32768))
  1268  0702  3D25               	addwfc	??_sprintf+1,w
  1269  0703  0085               	movwf	5
  1270  0704  3F00               	moviw [0]fsr0
  1271  0705  00F0               	movwf	___lwdiv@divisor
  1272  0706  3F01               	moviw [1]fsr0
  1273  0707  00F1               	movwf	___lwdiv@divisor+1
  1274  0708  082C               	movf	sprintf@val+1,w
  1275  0709  00F3               	movwf	___lwdiv@dividend+1
  1276  070A  082B               	movf	sprintf@val,w
  1277  070B  00F2               	movwf	___lwdiv@dividend
  1278  070C  3183  23A3  3186   	fcall	___lwdiv
  1279  070F  0871               	movf	?___lwdiv+1,w
  1280  0710  00FB               	movwf	___lwmod@dividend+1
  1281  0711  0870               	movf	?___lwdiv,w
  1282  0712  00FA               	movwf	___lwmod@dividend
  1283  0713  3183  2343  3186   	fcall	___lwmod
  1284  0716  0878               	movf	?___lwmod,w
  1285  0717  3E30               	addlw	48
  1286  0718  0020               	movlb	0	; select bank0
  1287  0719  00A6               	movwf	??_sprintf+2
  1288  071A  0826               	movf	??_sprintf+2,w
  1289  071B  00AE               	movwf	sprintf@c
  1290                           
  1291                           ;doprnt.c: 1523: }
  1292                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1293  071C  082E               	movf	sprintf@c,w
  1294  071D  00A4               	movwf	??_sprintf
  1295  071E  082D               	movf	sprintf@sp,w
  1296  071F  0086               	movwf	6
  1297  0720  0187               	clrf	7
  1298  0721  0824               	movf	??_sprintf,w
  1299  0722  0081               	movwf	1
  1300  0723  3001               	movlw	1
  1301  0724  00A4               	movwf	??_sprintf
  1302  0725  0824               	movf	??_sprintf,w
  1303  0726  07AD               	addwf	sprintf@sp,f
  1304  0727  2EEE               	goto	l1320
  1305  0728                     l1324:	
  1306                           ;doprnt.c: 1525: }
  1307                           ;doprnt.c: 1533: }
  1308                           ;doprnt.c: 1535: alldone:
  1309                           
  1310                           
  1311                           ;doprnt.c: 1538: *sp = 0;
  1312  0728  082D               	movf	sprintf@sp,w
  1313  0729  0086               	movwf	6
  1314  072A  0187               	clrf	7
  1315  072B  0181               	clrf	1
  1316  072C  0008               	return
  1317  072D                     __end_of_sprintf:	
  1318                           ;doprnt.c: 1540: return 0;
  1319                           ;	Return value of _sprintf is never used
  1320                           
  1321                           
  1322                           	psect	text2
  1323  0343                     __ptext2:	
  1324 ;; *************** function ___lwmod *****************
  1325 ;; Defined at:
  1326 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  divisor         2    8[COMMON] unsigned int 
  1329 ;;  dividend        2   10[COMMON] unsigned int 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  counter         1   13[COMMON] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  2    8[COMMON] unsigned int 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1341 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1343 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1344 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1345 ;;Total ram usage:        6 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_sprintf
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           
  1355                           ;psect for function ___lwmod
  1356  0343                     ___lwmod:	
  1357                           
  1358                           ;incstack = 0
  1359                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1360  0343  0878               	movf	___lwmod@divisor,w
  1361  0344  0479               	iorwf	___lwmod@divisor+1,w
  1362  0345  1903               	btfsc	3,2
  1363  0346  2B6A               	goto	l1204
  1364  0347  01FD               	clrf	___lwmod@counter
  1365  0348  0AFD               	incf	___lwmod@counter,f
  1366  0349                     l1194:	
  1367  0349  1BF9               	btfsc	___lwmod@divisor+1,7
  1368  034A  2B55               	goto	l1196
  1369  034B  3001               	movlw	1
  1370  034C                     u885:	
  1371  034C  35F8               	lslf	___lwmod@divisor,f
  1372  034D  0DF9               	rlf	___lwmod@divisor+1,f
  1373  034E  0B89               	decfsz	9,f
  1374  034F  2B4C               	goto	u885
  1375  0350  3001               	movlw	1
  1376  0351  00FC               	movwf	??___lwmod
  1377  0352  087C               	movf	??___lwmod,w
  1378  0353  07FD               	addwf	___lwmod@counter,f
  1379  0354  2B49               	goto	l1194
  1380  0355                     l1196:	
  1381  0355  0879               	movf	___lwmod@divisor+1,w
  1382  0356  027B               	subwf	___lwmod@dividend+1,w
  1383  0357  1D03               	skipz
  1384  0358  2B5B               	goto	u905
  1385  0359  0878               	movf	___lwmod@divisor,w
  1386  035A  027A               	subwf	___lwmod@dividend,w
  1387  035B                     u905:	
  1388  035B  1C03               	skipc
  1389  035C  2B61               	goto	l1200
  1390  035D  0878               	movf	___lwmod@divisor,w
  1391  035E  02FA               	subwf	___lwmod@dividend,f
  1392  035F  0879               	movf	___lwmod@divisor+1,w
  1393  0360  3BFB               	subwfb	___lwmod@dividend+1,f
  1394  0361                     l1200:	
  1395  0361  3001               	movlw	1
  1396  0362                     u915:	
  1397  0362  36F9               	lsrf	___lwmod@divisor+1,f
  1398  0363  0CF8               	rrf	___lwmod@divisor,f
  1399  0364  0B89               	decfsz	9,f
  1400  0365  2B62               	goto	u915
  1401  0366  3001               	movlw	1
  1402  0367  02FD               	subwf	___lwmod@counter,f
  1403  0368  1D03               	btfss	3,2
  1404  0369  2B55               	goto	l1196
  1405  036A                     l1204:	
  1406  036A  087B               	movf	___lwmod@dividend+1,w
  1407  036B  00F9               	movwf	?___lwmod+1
  1408  036C  087A               	movf	___lwmod@dividend,w
  1409  036D  00F8               	movwf	?___lwmod
  1410  036E  0008               	return
  1411  036F                     __end_of___lwmod:	
  1412                           
  1413                           	psect	text3
  1414  03A3                     __ptext3:	
  1415 ;; *************** function ___lwdiv *****************
  1416 ;; Defined at:
  1417 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  divisor         2    0[COMMON] unsigned int 
  1420 ;;  dividend        2    2[COMMON] unsigned int 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  quotient        2    5[COMMON] unsigned int 
  1423 ;;  counter         1    7[COMMON] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  2    0[COMMON] unsigned int 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1434 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1435 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1436 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1437 ;;Total ram usage:        8 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_sprintf
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function ___lwdiv
  1448  03A3                     ___lwdiv:	
  1449                           
  1450                           ;incstack = 0
  1451                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1452  03A3  01F5               	clrf	___lwdiv@quotient
  1453  03A4  01F6               	clrf	___lwdiv@quotient+1
  1454  03A5  0870               	movf	___lwdiv@divisor,w
  1455  03A6  0471               	iorwf	___lwdiv@divisor+1,w
  1456  03A7  1903               	btfsc	3,2
  1457  03A8  2BD2               	goto	l1182
  1458  03A9  01F7               	clrf	___lwdiv@counter
  1459  03AA  0AF7               	incf	___lwdiv@counter,f
  1460  03AB                     l1170:	
  1461  03AB  1BF1               	btfsc	___lwdiv@divisor+1,7
  1462  03AC  2BB7               	goto	l1172
  1463  03AD  3001               	movlw	1
  1464  03AE                     u815:	
  1465  03AE  35F0               	lslf	___lwdiv@divisor,f
  1466  03AF  0DF1               	rlf	___lwdiv@divisor+1,f
  1467  03B0  0B89               	decfsz	9,f
  1468  03B1  2BAE               	goto	u815
  1469  03B2  3001               	movlw	1
  1470  03B3  00F4               	movwf	??___lwdiv
  1471  03B4  0874               	movf	??___lwdiv,w
  1472  03B5  07F7               	addwf	___lwdiv@counter,f
  1473  03B6  2BAB               	goto	l1170
  1474  03B7                     l1172:	
  1475  03B7  3001               	movlw	1
  1476  03B8                     u835:	
  1477  03B8  35F5               	lslf	___lwdiv@quotient,f
  1478  03B9  0DF6               	rlf	___lwdiv@quotient+1,f
  1479  03BA  0B89               	decfsz	9,f
  1480  03BB  2BB8               	goto	u835
  1481  03BC  0871               	movf	___lwdiv@divisor+1,w
  1482  03BD  0273               	subwf	___lwdiv@dividend+1,w
  1483  03BE  1D03               	skipz
  1484  03BF  2BC2               	goto	u845
  1485  03C0  0870               	movf	___lwdiv@divisor,w
  1486  03C1  0272               	subwf	___lwdiv@dividend,w
  1487  03C2                     u845:	
  1488  03C2  1C03               	skipc
  1489  03C3  2BC9               	goto	l1178
  1490  03C4  0870               	movf	___lwdiv@divisor,w
  1491  03C5  02F2               	subwf	___lwdiv@dividend,f
  1492  03C6  0871               	movf	___lwdiv@divisor+1,w
  1493  03C7  3BF3               	subwfb	___lwdiv@dividend+1,f
  1494  03C8  1475               	bsf	___lwdiv@quotient,0
  1495  03C9                     l1178:	
  1496  03C9  3001               	movlw	1
  1497  03CA                     u855:	
  1498  03CA  36F1               	lsrf	___lwdiv@divisor+1,f
  1499  03CB  0CF0               	rrf	___lwdiv@divisor,f
  1500  03CC  0B89               	decfsz	9,f
  1501  03CD  2BCA               	goto	u855
  1502  03CE  3001               	movlw	1
  1503  03CF  02F7               	subwf	___lwdiv@counter,f
  1504  03D0  1D03               	btfss	3,2
  1505  03D1  2BB7               	goto	l1172
  1506  03D2                     l1182:	
  1507  03D2  0876               	movf	___lwdiv@quotient+1,w
  1508  03D3  00F1               	movwf	?___lwdiv+1
  1509  03D4  0875               	movf	___lwdiv@quotient,w
  1510  03D5  00F0               	movwf	?___lwdiv
  1511  03D6  0008               	return
  1512  03D7                     __end_of___lwdiv:	
  1513                           
  1514                           	psect	text4
  1515  02D8                     __ptext4:	
  1516 ;; *************** function _i2c_Init *****************
  1517 ;; Defined at:
  1518 ;;		line 12 in file "i2c_LCD.h"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1536 ;;Total ram usage:        0 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; This function calls:
  1539 ;;		Nothing
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           
  1546                           ;psect for function _i2c_Init
  1547  02D8                     _i2c_Init:	
  1548                           
  1549                           ;i2c_LCD.h: 16: TRISB4=1;
  1550                           
  1551                           ;incstack = 0
  1552                           ; Regs used in _i2c_Init: [wreg+status,2]
  1553  02D8  0021               	movlb	1	; select bank1
  1554  02D9  160D               	bsf	13,4	;volatile
  1555                           
  1556                           ;i2c_LCD.h: 17: TRISB6=1;
  1557  02DA  170D               	bsf	13,6	;volatile
  1558                           
  1559                           ;i2c_LCD.h: 19: SSP1CON1 = 0b00101000;
  1560  02DB  3028               	movlw	40
  1561  02DC  0024               	movlb	4	; select bank4
  1562  02DD  0095               	movwf	21	;volatile
  1563                           
  1564                           ;i2c_LCD.h: 20: SSP1CON2 = 0x00;
  1565  02DE  0196               	clrf	22	;volatile
  1566                           
  1567                           ;i2c_LCD.h: 22: SSP1ADD = 9;
  1568  02DF  3009               	movlw	9
  1569  02E0  0092               	movwf	18	;volatile
  1570                           
  1571                           ;i2c_LCD.h: 24: SSP1STAT = 0b11000000;
  1572  02E1  30C0               	movlw	192
  1573  02E2  0094               	movwf	20	;volatile
  1574  02E3  0008               	return
  1575  02E4                     __end_of_i2c_Init:	
  1576                           
  1577                           	psect	text5
  1578  0530                     __ptext5:	
  1579 ;; *************** function ___fttol *****************
  1580 ;; Defined at:
  1581 ;;		line 44 in file "/opt/microchip/xc8/v1.45/sources/common/fttol.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  f1              3   16[BANK0 ] float 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  lval            4   25[BANK0 ] unsigned long 
  1586 ;;  exp1            1   29[BANK0 ] unsigned char 
  1587 ;;  sign1           1   24[BANK0 ] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  4   16[BANK0 ] long 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1597 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1598 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1599 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1600 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1601 ;;Total ram usage:       14 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function ___fttol
  1612  0530                     ___fttol:	
  1613                           
  1614                           ;incstack = 0
  1615                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1616  0530  0020               	movlb	0	; select bank0
  1617  0531  0830               	movf	___fttol@f1,w
  1618  0532  00B4               	movwf	??___fttol
  1619  0533  0831               	movf	___fttol@f1+1,w
  1620  0534  00B5               	movwf	??___fttol+1
  1621  0535  0832               	movf	___fttol@f1+2,w
  1622  0536  00B6               	movwf	??___fttol+2
  1623  0537  1003               	clrc
  1624  0538  0D35               	rlf	??___fttol+1,w
  1625  0539  0D36               	rlf	??___fttol+2,w
  1626  053A  00B7               	movwf	??___fttol+3
  1627  053B  0837               	movf	??___fttol+3,w
  1628  053C  00BD               	movwf	___fttol@exp1
  1629  053D  083D               	movf	___fttol@exp1,w
  1630  053E  1D03               	btfss	3,2
  1631  053F  2D49               	goto	l1388
  1632  0540  3000               	movlw	0
  1633  0541  00B3               	movwf	?___fttol+3
  1634  0542  3000               	movlw	0
  1635  0543  00B2               	movwf	?___fttol+2
  1636  0544  3000               	movlw	0
  1637  0545  00B1               	movwf	?___fttol+1
  1638  0546  3000               	movlw	0
  1639  0547  00B0               	movwf	?___fttol
  1640  0548  0008               	return
  1641  0549                     l1388:	
  1642  0549  0830               	movf	___fttol@f1,w
  1643  054A  00B4               	movwf	??___fttol
  1644  054B  0831               	movf	___fttol@f1+1,w
  1645  054C  00B5               	movwf	??___fttol+1
  1646  054D  0832               	movf	___fttol@f1+2,w
  1647  054E  00B6               	movwf	??___fttol+2
  1648  054F  3017               	movlw	23
  1649  0550                     u1155:	
  1650  0550  36B6               	lsrf	??___fttol+2,f
  1651  0551  0CB5               	rrf	??___fttol+1,f
  1652  0552  0CB4               	rrf	??___fttol,f
  1653  0553  0B89               	decfsz	9,f
  1654  0554  2D50               	goto	u1155
  1655  0555  0834               	movf	??___fttol,w
  1656  0556  00B7               	movwf	??___fttol+3
  1657  0557  0837               	movf	??___fttol+3,w
  1658  0558  00B8               	movwf	___fttol@sign1
  1659  0559  17B1               	bsf	___fttol@f1+1,7
  1660  055A  30FF               	movlw	255
  1661  055B  05B0               	andwf	___fttol@f1,f
  1662  055C  30FF               	movlw	255
  1663  055D  05B1               	andwf	___fttol@f1+1,f
  1664  055E  3000               	movlw	0
  1665  055F  05B2               	andwf	___fttol@f1+2,f
  1666  0560  0830               	movf	___fttol@f1,w
  1667  0561  00B9               	movwf	___fttol@lval
  1668  0562  0831               	movf	___fttol@f1+1,w
  1669  0563  00BA               	movwf	___fttol@lval+1
  1670  0564  0832               	movf	___fttol@f1+2,w
  1671  0565  00BB               	movwf	___fttol@lval+2
  1672  0566  01BC               	clrf	___fttol@lval+3
  1673  0567  308E               	movlw	142
  1674  0568  02BD               	subwf	___fttol@exp1,f
  1675  0569  1FBD               	btfss	___fttol@exp1,7
  1676  056A  2D87               	goto	l1408
  1677  056B  083D               	movf	___fttol@exp1,w
  1678  056C  3A80               	xorlw	128
  1679  056D  3E8F               	addlw	143
  1680  056E  1803               	skipnc
  1681  056F  2D79               	goto	l1406
  1682  0570  3000               	movlw	0
  1683  0571  00B3               	movwf	?___fttol+3
  1684  0572  3000               	movlw	0
  1685  0573  00B2               	movwf	?___fttol+2
  1686  0574  3000               	movlw	0
  1687  0575  00B1               	movwf	?___fttol+1
  1688  0576  3000               	movlw	0
  1689  0577  00B0               	movwf	?___fttol
  1690  0578  0008               	return
  1691  0579                     l1406:	
  1692  0579  3001               	movlw	1
  1693  057A                     u1185:	
  1694  057A  36BC               	lsrf	___fttol@lval+3,f
  1695  057B  0CBB               	rrf	___fttol@lval+2,f
  1696  057C  0CBA               	rrf	___fttol@lval+1,f
  1697  057D  0CB9               	rrf	___fttol@lval,f
  1698  057E  0B89               	decfsz	9,f
  1699  057F  2D7A               	goto	u1185
  1700  0580  3001               	movlw	1
  1701  0581  00B4               	movwf	??___fttol
  1702  0582  0834               	movf	??___fttol,w
  1703  0583  07BD               	addwf	___fttol@exp1,f
  1704  0584  1903               	btfsc	3,2
  1705  0585  2DA0               	goto	l1416
  1706  0586  2D79               	goto	l1406
  1707  0587                     l1408:	
  1708  0587  3018               	movlw	24
  1709  0588  023D               	subwf	___fttol@exp1,w
  1710  0589  1C03               	skipc
  1711  058A  2D9D               	goto	l480
  1712  058B  3000               	movlw	0
  1713  058C  00B3               	movwf	?___fttol+3
  1714  058D  3000               	movlw	0
  1715  058E  00B2               	movwf	?___fttol+2
  1716  058F  3000               	movlw	0
  1717  0590  00B1               	movwf	?___fttol+1
  1718  0591  3000               	movlw	0
  1719  0592  00B0               	movwf	?___fttol
  1720  0593  0008               	return
  1721  0594                     l1414:	
  1722  0594  3001               	movlw	1
  1723  0595                     u1215:	
  1724  0595  35B9               	lslf	___fttol@lval,f
  1725  0596  0DBA               	rlf	___fttol@lval+1,f
  1726  0597  0DBB               	rlf	___fttol@lval+2,f
  1727  0598  0DBC               	rlf	___fttol@lval+3,f
  1728  0599  0B89               	decfsz	9,f
  1729  059A  2D95               	goto	u1215
  1730  059B  3001               	movlw	1
  1731  059C  02BD               	subwf	___fttol@exp1,f
  1732  059D                     l480:	
  1733  059D  083D               	movf	___fttol@exp1,w
  1734  059E  1D03               	btfss	3,2
  1735  059F  2D94               	goto	l1414
  1736  05A0                     l1416:	
  1737  05A0  0838               	movf	___fttol@sign1,w
  1738  05A1  1903               	btfsc	3,2
  1739  05A2  2DAE               	goto	l1420
  1740  05A3  09B9               	comf	___fttol@lval,f
  1741  05A4  09BA               	comf	___fttol@lval+1,f
  1742  05A5  09BB               	comf	___fttol@lval+2,f
  1743  05A6  09BC               	comf	___fttol@lval+3,f
  1744  05A7  0AB9               	incf	___fttol@lval,f
  1745  05A8  1903               	skipnz
  1746  05A9  0ABA               	incf	___fttol@lval+1,f
  1747  05AA  1903               	skipnz
  1748  05AB  0ABB               	incf	___fttol@lval+2,f
  1749  05AC  1903               	skipnz
  1750  05AD  0ABC               	incf	___fttol@lval+3,f
  1751  05AE                     l1420:	
  1752  05AE  083C               	movf	___fttol@lval+3,w
  1753  05AF  00B3               	movwf	?___fttol+3
  1754  05B0  083B               	movf	___fttol@lval+2,w
  1755  05B1  00B2               	movwf	?___fttol+2
  1756  05B2  083A               	movf	___fttol@lval+1,w
  1757  05B3  00B1               	movwf	?___fttol+1
  1758  05B4  0839               	movf	___fttol@lval,w
  1759  05B5  00B0               	movwf	?___fttol
  1760  05B6  0008               	return
  1761  05B7                     __end_of___fttol:	
  1762                           
  1763                           	psect	text6
  1764  05B7                     __ptext6:	
  1765 ;; *************** function ___ftdiv *****************
  1766 ;; Defined at:
  1767 ;;		line 56 in file "/opt/microchip/xc8/v1.45/sources/common/ftdiv.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  f2              3    0[BANK0 ] float 
  1770 ;;  f1              3    3[BANK0 ] float 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  f3              3   11[BANK0 ] float 
  1773 ;;  sign            1   15[BANK0 ] unsigned char 
  1774 ;;  exp             1   14[BANK0 ] unsigned char 
  1775 ;;  cntr            1   10[BANK0 ] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  3    0[BANK0 ] float 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0, pclath, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1785 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1786 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1788 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1789 ;;Total ram usage:       16 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    1
  1792 ;; This function calls:
  1793 ;;		___ftpack
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           
  1800                           ;psect for function ___ftdiv
  1801  05B7                     ___ftdiv:	
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1805  05B7  0020               	movlb	0	; select bank0
  1806  05B8  0823               	movf	___ftdiv@f1,w
  1807  05B9  00A6               	movwf	??___ftdiv
  1808  05BA  0824               	movf	___ftdiv@f1+1,w
  1809  05BB  00A7               	movwf	??___ftdiv+1
  1810  05BC  0825               	movf	___ftdiv@f1+2,w
  1811  05BD  00A8               	movwf	??___ftdiv+2
  1812  05BE  1003               	clrc
  1813  05BF  0D27               	rlf	??___ftdiv+1,w
  1814  05C0  0D28               	rlf	??___ftdiv+2,w
  1815  05C1  00A9               	movwf	??___ftdiv+3
  1816  05C2  0829               	movf	??___ftdiv+3,w
  1817  05C3  00AE               	movwf	___ftdiv@exp
  1818  05C4  082E               	movf	___ftdiv@exp,w
  1819  05C5  1D03               	btfss	3,2
  1820  05C6  2DCE               	goto	l1346
  1821  05C7  3000               	movlw	0
  1822  05C8  00A0               	movwf	?___ftdiv
  1823  05C9  3000               	movlw	0
  1824  05CA  00A1               	movwf	?___ftdiv+1
  1825  05CB  3000               	movlw	0
  1826  05CC  00A2               	movwf	?___ftdiv+2
  1827  05CD  0008               	return
  1828  05CE                     l1346:	
  1829  05CE  0820               	movf	___ftdiv@f2,w
  1830  05CF  00A6               	movwf	??___ftdiv
  1831  05D0  0821               	movf	___ftdiv@f2+1,w
  1832  05D1  00A7               	movwf	??___ftdiv+1
  1833  05D2  0822               	movf	___ftdiv@f2+2,w
  1834  05D3  00A8               	movwf	??___ftdiv+2
  1835  05D4  1003               	clrc
  1836  05D5  0D27               	rlf	??___ftdiv+1,w
  1837  05D6  0D28               	rlf	??___ftdiv+2,w
  1838  05D7  00A9               	movwf	??___ftdiv+3
  1839  05D8  0829               	movf	??___ftdiv+3,w
  1840  05D9  00AF               	movwf	___ftdiv@sign
  1841  05DA  082F               	movf	___ftdiv@sign,w
  1842  05DB  1D03               	btfss	3,2
  1843  05DC  2DE4               	goto	l1352
  1844  05DD  3000               	movlw	0
  1845  05DE  00A0               	movwf	?___ftdiv
  1846  05DF  3000               	movlw	0
  1847  05E0  00A1               	movwf	?___ftdiv+1
  1848  05E1  3000               	movlw	0
  1849  05E2  00A2               	movwf	?___ftdiv+2
  1850  05E3  0008               	return
  1851  05E4                     l1352:	
  1852  05E4  3000               	movlw	0
  1853  05E5  00AB               	movwf	___ftdiv@f3
  1854  05E6  3000               	movlw	0
  1855  05E7  00AC               	movwf	___ftdiv@f3+1
  1856  05E8  3000               	movlw	0
  1857  05E9  00AD               	movwf	___ftdiv@f3+2
  1858  05EA  3089               	movlw	137
  1859  05EB  072F               	addwf	___ftdiv@sign,w
  1860  05EC  00A6               	movwf	??___ftdiv
  1861  05ED  0826               	movf	??___ftdiv,w
  1862  05EE  02AE               	subwf	___ftdiv@exp,f
  1863  05EF  0823               	movf	___ftdiv@f1,w
  1864  05F0  00A6               	movwf	??___ftdiv
  1865  05F1  0824               	movf	___ftdiv@f1+1,w
  1866  05F2  00A7               	movwf	??___ftdiv+1
  1867  05F3  0825               	movf	___ftdiv@f1+2,w
  1868  05F4  00A8               	movwf	??___ftdiv+2
  1869  05F5  3010               	movlw	16
  1870  05F6                     u1085:	
  1871  05F6  36A8               	lsrf	??___ftdiv+2,f
  1872  05F7  0CA7               	rrf	??___ftdiv+1,f
  1873  05F8  0CA6               	rrf	??___ftdiv,f
  1874  05F9  0B89               	decfsz	9,f
  1875  05FA  2DF6               	goto	u1085
  1876  05FB  0826               	movf	??___ftdiv,w
  1877  05FC  00A9               	movwf	??___ftdiv+3
  1878  05FD  0829               	movf	??___ftdiv+3,w
  1879  05FE  00AF               	movwf	___ftdiv@sign
  1880  05FF  0820               	movf	___ftdiv@f2,w
  1881  0600  00A6               	movwf	??___ftdiv
  1882  0601  0821               	movf	___ftdiv@f2+1,w
  1883  0602  00A7               	movwf	??___ftdiv+1
  1884  0603  0822               	movf	___ftdiv@f2+2,w
  1885  0604  00A8               	movwf	??___ftdiv+2
  1886  0605  3010               	movlw	16
  1887  0606                     u1095:	
  1888  0606  36A8               	lsrf	??___ftdiv+2,f
  1889  0607  0CA7               	rrf	??___ftdiv+1,f
  1890  0608  0CA6               	rrf	??___ftdiv,f
  1891  0609  0B89               	decfsz	9,f
  1892  060A  2E06               	goto	u1095
  1893  060B  0826               	movf	??___ftdiv,w
  1894  060C  00A9               	movwf	??___ftdiv+3
  1895  060D  0829               	movf	??___ftdiv+3,w
  1896  060E  06AF               	xorwf	___ftdiv@sign,f
  1897  060F  3080               	movlw	128
  1898  0610  00A6               	movwf	??___ftdiv
  1899  0611  0826               	movf	??___ftdiv,w
  1900  0612  05AF               	andwf	___ftdiv@sign,f
  1901  0613  17A4               	bsf	___ftdiv@f1+1,7
  1902  0614  30FF               	movlw	255
  1903  0615  05A3               	andwf	___ftdiv@f1,f
  1904  0616  30FF               	movlw	255
  1905  0617  05A4               	andwf	___ftdiv@f1+1,f
  1906  0618  3000               	movlw	0
  1907  0619  05A5               	andwf	___ftdiv@f1+2,f
  1908  061A  17A1               	bsf	___ftdiv@f2+1,7
  1909  061B  30FF               	movlw	255
  1910  061C  05A0               	andwf	___ftdiv@f2,f
  1911  061D  30FF               	movlw	255
  1912  061E  05A1               	andwf	___ftdiv@f2+1,f
  1913  061F  3000               	movlw	0
  1914  0620  05A2               	andwf	___ftdiv@f2+2,f
  1915  0621  3018               	movlw	24
  1916  0622  00A6               	movwf	??___ftdiv
  1917  0623  0826               	movf	??___ftdiv,w
  1918  0624  00AA               	movwf	___ftdiv@cntr
  1919  0625                     l1366:	
  1920  0625  3001               	movlw	1
  1921  0626                     u1105:	
  1922  0626  35AB               	lslf	___ftdiv@f3,f
  1923  0627  0DAC               	rlf	___ftdiv@f3+1,f
  1924  0628  0DAD               	rlf	___ftdiv@f3+2,f
  1925  0629  0B89               	decfsz	9,f
  1926  062A  2E26               	goto	u1105
  1927  062B  0822               	movf	___ftdiv@f2+2,w
  1928  062C  0225               	subwf	___ftdiv@f1+2,w
  1929  062D  1D03               	skipz
  1930  062E  2E35               	goto	u1115
  1931  062F  0821               	movf	___ftdiv@f2+1,w
  1932  0630  0224               	subwf	___ftdiv@f1+1,w
  1933  0631  1D03               	skipz
  1934  0632  2E35               	goto	u1115
  1935  0633  0820               	movf	___ftdiv@f2,w
  1936  0634  0223               	subwf	___ftdiv@f1,w
  1937  0635                     u1115:	
  1938  0635  1C03               	skipc
  1939  0636  2E3E               	goto	l1374
  1940  0637  0820               	movf	___ftdiv@f2,w
  1941  0638  02A3               	subwf	___ftdiv@f1,f
  1942  0639  0821               	movf	___ftdiv@f2+1,w
  1943  063A  3BA4               	subwfb	___ftdiv@f1+1,f
  1944  063B  0822               	movf	___ftdiv@f2+2,w
  1945  063C  3BA5               	subwfb	___ftdiv@f1+2,f
  1946  063D  142B               	bsf	___ftdiv@f3,0
  1947  063E                     l1374:	
  1948  063E  3001               	movlw	1
  1949  063F                     u1125:	
  1950  063F  35A3               	lslf	___ftdiv@f1,f
  1951  0640  0DA4               	rlf	___ftdiv@f1+1,f
  1952  0641  0DA5               	rlf	___ftdiv@f1+2,f
  1953  0642  0B89               	decfsz	9,f
  1954  0643  2E3F               	goto	u1125
  1955  0644  3001               	movlw	1
  1956  0645  02AA               	subwf	___ftdiv@cntr,f
  1957  0646  1D03               	btfss	3,2
  1958  0647  2E25               	goto	l1366
  1959  0648  082B               	movf	___ftdiv@f3,w
  1960  0649  00F0               	movwf	___ftpack@arg
  1961  064A  082C               	movf	___ftdiv@f3+1,w
  1962  064B  00F1               	movwf	___ftpack@arg+1
  1963  064C  082D               	movf	___ftdiv@f3+2,w
  1964  064D  00F2               	movwf	___ftpack@arg+2
  1965  064E  082E               	movf	___ftdiv@exp,w
  1966  064F  00A6               	movwf	??___ftdiv
  1967  0650  0826               	movf	??___ftdiv,w
  1968  0651  00F3               	movwf	___ftpack@exp
  1969  0652  082F               	movf	___ftdiv@sign,w
  1970  0653  00A7               	movwf	??___ftdiv+1
  1971  0654  0827               	movf	??___ftdiv+1,w
  1972  0655  00F4               	movwf	___ftpack@sign
  1973  0656  3184  24CC         	fcall	___ftpack
  1974  0658  0870               	movf	?___ftpack,w
  1975  0659  0020               	movlb	0	; select bank0
  1976  065A  00A0               	movwf	?___ftdiv
  1977  065B  0871               	movf	?___ftpack+1,w
  1978  065C  00A1               	movwf	?___ftdiv+1
  1979  065D  0872               	movf	?___ftpack+2,w
  1980  065E  00A2               	movwf	?___ftdiv+2
  1981  065F  0008               	return
  1982  0660                     __end_of___ftdiv:	
  1983                           
  1984                           	psect	text7
  1985  0323                     __ptext7:	
  1986 ;; *************** function ___awtoft *****************
  1987 ;; Defined at:
  1988 ;;		line 32 in file "/opt/microchip/xc8/v1.45/sources/common/awtoft.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  c               2    8[COMMON] int 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  sign            1   13[COMMON] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  3    8[COMMON] float 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, pclath, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2002 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2003 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2004 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2005 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2006 ;;Total ram usage:        6 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    1
  2009 ;; This function calls:
  2010 ;;		___ftpack
  2011 ;; This function is called by:
  2012 ;;		_main
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function ___awtoft
  2018  0323                     ___awtoft:	
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2022  0323  01FD               	clrf	___awtoft@sign
  2023  0324  1FF9               	btfss	___awtoft@c+1,7
  2024  0325  2B2D               	goto	l1336
  2025  0326  09F8               	comf	___awtoft@c,f
  2026  0327  09F9               	comf	___awtoft@c+1,f
  2027  0328  0AF8               	incf	___awtoft@c,f
  2028  0329  1903               	skipnz
  2029  032A  0AF9               	incf	___awtoft@c+1,f
  2030  032B  01FD               	clrf	___awtoft@sign
  2031  032C  0AFD               	incf	___awtoft@sign,f
  2032  032D                     l1336:	
  2033  032D  0878               	movf	___awtoft@c,w
  2034  032E  00F0               	movwf	___ftpack@arg
  2035  032F  0879               	movf	___awtoft@c+1,w
  2036  0330  00F1               	movwf	___ftpack@arg+1
  2037  0331  01F2               	clrf	___ftpack@arg+2
  2038  0332  308E               	movlw	142
  2039  0333  00FB               	movwf	??___awtoft
  2040  0334  087B               	movf	??___awtoft,w
  2041  0335  00F3               	movwf	___ftpack@exp
  2042  0336  087D               	movf	___awtoft@sign,w
  2043  0337  00FC               	movwf	??___awtoft+1
  2044  0338  087C               	movf	??___awtoft+1,w
  2045  0339  00F4               	movwf	___ftpack@sign
  2046  033A  3184  24CC         	fcall	___ftpack
  2047  033C  0870               	movf	?___ftpack,w
  2048  033D  00F8               	movwf	?___awtoft
  2049  033E  0871               	movf	?___ftpack+1,w
  2050  033F  00F9               	movwf	?___awtoft+1
  2051  0340  0872               	movf	?___ftpack+2,w
  2052  0341  00FA               	movwf	?___awtoft+2
  2053  0342  0008               	return
  2054  0343                     __end_of___awtoft:	
  2055                           
  2056                           	psect	text8
  2057  04CC                     __ptext8:	
  2058 ;; *************** function ___ftpack *****************
  2059 ;; Defined at:
  2060 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/float.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  arg             3    0[COMMON] unsigned um
  2063 ;;  exp             1    3[COMMON] unsigned char 
  2064 ;;  sign            1    4[COMMON] unsigned char 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  3    0[COMMON] float 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2076 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2078 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2079 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2080 ;;Total ram usage:        8 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		___awtoft
  2086 ;;		___ftdiv
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function ___ftpack
  2092  04CC                     ___ftpack:	
  2093                           
  2094                           ;incstack = 0
  2095                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2096  04CC  0873               	movf	___ftpack@exp,w
  2097  04CD  1903               	btfsc	3,2
  2098  04CE  2CD4               	goto	l1132
  2099  04CF  0872               	movf	___ftpack@arg+2,w
  2100  04D0  0471               	iorwf	___ftpack@arg+1,w
  2101  04D1  0470               	iorwf	___ftpack@arg,w
  2102  04D2  1D03               	skipz
  2103  04D3  2CE5               	goto	l1138
  2104  04D4                     l1132:	
  2105  04D4  3000               	movlw	0
  2106  04D5  00F0               	movwf	?___ftpack
  2107  04D6  3000               	movlw	0
  2108  04D7  00F1               	movwf	?___ftpack+1
  2109  04D8  3000               	movlw	0
  2110  04D9  00F2               	movwf	?___ftpack+2
  2111  04DA  0008               	return
  2112  04DB                     l1136:	
  2113  04DB  3001               	movlw	1
  2114  04DC  00F5               	movwf	??___ftpack
  2115  04DD  0875               	movf	??___ftpack,w
  2116  04DE  07F3               	addwf	___ftpack@exp,f
  2117  04DF  3001               	movlw	1
  2118  04E0                     u705:	
  2119  04E0  36F2               	lsrf	___ftpack@arg+2,f
  2120  04E1  0CF1               	rrf	___ftpack@arg+1,f
  2121  04E2  0CF0               	rrf	___ftpack@arg,f
  2122  04E3  0B89               	decfsz	9,f
  2123  04E4  2CE0               	goto	u705
  2124  04E5                     l1138:	
  2125  04E5  30FE               	movlw	254
  2126  04E6  0572               	andwf	___ftpack@arg+2,w
  2127  04E7  1903               	btfsc	3,2
  2128  04E8  2CFE               	goto	l389
  2129  04E9  2CDB               	goto	l1136
  2130  04EA                     l1140:	
  2131  04EA  3001               	movlw	1
  2132  04EB  00F5               	movwf	??___ftpack
  2133  04EC  0875               	movf	??___ftpack,w
  2134  04ED  07F3               	addwf	___ftpack@exp,f
  2135  04EE  3001               	movlw	1
  2136  04EF  07F0               	addwf	___ftpack@arg,f
  2137  04F0  3000               	movlw	0
  2138  04F1  1803               	skipnc
  2139  04F2  3001               	movlw	1
  2140  04F3  07F1               	addwf	___ftpack@arg+1,f
  2141  04F4  3000               	movlw	0
  2142  04F5  1803               	skipnc
  2143  04F6  3001               	movlw	1
  2144  04F7  07F2               	addwf	___ftpack@arg+2,f
  2145  04F8  3001               	movlw	1
  2146  04F9                     u725:	
  2147  04F9  36F2               	lsrf	___ftpack@arg+2,f
  2148  04FA  0CF1               	rrf	___ftpack@arg+1,f
  2149  04FB  0CF0               	rrf	___ftpack@arg,f
  2150  04FC  0B89               	decfsz	9,f
  2151  04FD  2CF9               	goto	u725
  2152  04FE                     l389:	
  2153  04FE  30FF               	movlw	255
  2154  04FF  0572               	andwf	___ftpack@arg+2,w
  2155  0500  1903               	btfsc	3,2
  2156  0501  2D0B               	goto	l1148
  2157  0502  2CEA               	goto	l1140
  2158  0503                     l1146:	
  2159  0503  3001               	movlw	1
  2160  0504  02F3               	subwf	___ftpack@exp,f
  2161  0505  3001               	movlw	1
  2162  0506                     u745:	
  2163  0506  35F0               	lslf	___ftpack@arg,f
  2164  0507  0DF1               	rlf	___ftpack@arg+1,f
  2165  0508  0DF2               	rlf	___ftpack@arg+2,f
  2166  0509  0B89               	decfsz	9,f
  2167  050A  2D06               	goto	u745
  2168  050B                     l1148:	
  2169  050B  1BF1               	btfsc	___ftpack@arg+1,7
  2170  050C  2D11               	goto	l396
  2171  050D  3002               	movlw	2
  2172  050E  0273               	subwf	___ftpack@exp,w
  2173  050F  1803               	skipnc
  2174  0510  2D03               	goto	l1146
  2175  0511                     l396:	
  2176  0511  1873               	btfsc	___ftpack@exp,0
  2177  0512  2D19               	goto	l397
  2178  0513  30FF               	movlw	255
  2179  0514  05F0               	andwf	___ftpack@arg,f
  2180  0515  307F               	movlw	127
  2181  0516  05F1               	andwf	___ftpack@arg+1,f
  2182  0517  30FF               	movlw	255
  2183  0518  05F2               	andwf	___ftpack@arg+2,f
  2184  0519                     l397:	
  2185  0519  1003               	clrc
  2186  051A  0CF3               	rrf	___ftpack@exp,f
  2187  051B  0873               	movf	___ftpack@exp,w
  2188  051C  00F5               	movwf	??___ftpack
  2189  051D  01F6               	clrf	??___ftpack+1
  2190  051E  01F7               	clrf	??___ftpack+2
  2191  051F  3010               	movlw	16
  2192  0520                     u785:	
  2193  0520  35F5               	lslf	??___ftpack,f
  2194  0521  0DF6               	rlf	??___ftpack+1,f
  2195  0522  0DF7               	rlf	??___ftpack+2,f
  2196  0523  0B89               	decfsz	9,f
  2197  0524  2D20               	goto	u785
  2198  0525  0875               	movf	??___ftpack,w
  2199  0526  04F0               	iorwf	___ftpack@arg,f
  2200  0527  0876               	movf	??___ftpack+1,w
  2201  0528  04F1               	iorwf	___ftpack@arg+1,f
  2202  0529  0877               	movf	??___ftpack+2,w
  2203  052A  04F2               	iorwf	___ftpack@arg+2,f
  2204  052B  0874               	movf	___ftpack@sign,w
  2205  052C  1903               	btfsc	3,2
  2206  052D  0008               	return
  2207  052E  17F2               	bsf	___ftpack@arg+2,7
  2208  052F  0008               	return
  2209  0530                     __end_of___ftpack:	
  2210                           
  2211                           	psect	text9
  2212  0471                     __ptext9:	
  2213 ;; *************** function _I2C_LCD_SWrite *****************
  2214 ;; Defined at:
  2215 ;;		line 76 in file "i2c.h"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  Slave           1    wreg     unsigned char 
  2218 ;;  Data            1    8[COMMON] PTR unsigned char 
  2219 ;;		 -> main@Sout(20), 
  2220 ;;  Max             1    9[COMMON] unsigned char 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  Slave           1    0[BANK0 ] unsigned char 
  2223 ;;  j               2    3[BANK0 ] int 
  2224 ;;  k               2    0        int 
  2225 ;;  L               1    2[BANK0 ] unsigned char 
  2226 ;;  H               1    1[BANK0 ] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2237 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2238 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2239 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2240 ;;Total ram usage:       10 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    3
  2243 ;; This function calls:
  2244 ;;		_I2C_LCD_Busy
  2245 ;;		_i2c_Address
  2246 ;;		_i2c_Start
  2247 ;;		_i2c_Stop
  2248 ;;		_i2c_Write
  2249 ;; This function is called by:
  2250 ;;		_main
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           
  2255                           ;psect for function _I2C_LCD_SWrite
  2256  0471                     _I2C_LCD_SWrite:	
  2257                           
  2258                           ;incstack = 0
  2259                           ; Regs used in _I2C_LCD_SWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2260                           ;I2C_LCD_SWrite@Slave stored from wreg
  2261  0471  0020               	movlb	0	; select bank0
  2262  0472  00A0               	movwf	I2C_LCD_SWrite@Slave
  2263                           
  2264                           ;i2c.h: 77: int j, k;
  2265                           ;i2c.h: 78: unsigned char H, L;
  2266                           ;i2c.h: 79: i2c_Start();
  2267  0473  3182  22B9  3184   	fcall	_i2c_Start
  2268                           
  2269                           ;i2c.h: 80: i2c_Address(Slave, 0);
  2270  0476  01F0               	clrf	i2c_Address@mode
  2271  0477  0020               	movlb	0	; select bank0
  2272  0478  0820               	movf	I2C_LCD_SWrite@Slave,w
  2273  0479  3182  22E4  3184   	fcall	_i2c_Address
  2274                           
  2275                           ;i2c.h: 82: for (j=0; j<Max; j++){
  2276  047C  0020               	movlb	0	; select bank0
  2277  047D  01A3               	clrf	I2C_LCD_SWrite@j
  2278  047E  01A4               	clrf	I2C_LCD_SWrite@j+1
  2279  047F                     l1236:	
  2280  047F  0824               	movf	I2C_LCD_SWrite@j+1,w
  2281  0480  3A80               	xorlw	128
  2282  0481  00FA               	movwf	??_I2C_LCD_SWrite
  2283  0482  3080               	movlw	128
  2284  0483  027A               	subwf	??_I2C_LCD_SWrite,w
  2285  0484  1D03               	skipz
  2286  0485  2C88               	goto	u945
  2287  0486  0879               	movf	I2C_LCD_SWrite@Max,w
  2288  0487  0223               	subwf	I2C_LCD_SWrite@j,w
  2289  0488                     u945:	
  2290  0488  1803               	btfsc	3,0
  2291  0489  2CC4               	goto	l1238
  2292                           
  2293                           ;i2c.h: 84: H = Data[j] & 0xF0;
  2294  048A  0020               	movlb	0	; select bank0
  2295  048B  0823               	movf	I2C_LCD_SWrite@j,w
  2296  048C  0778               	addwf	I2C_LCD_SWrite@Data,w
  2297  048D  00FA               	movwf	??_I2C_LCD_SWrite
  2298  048E  087A               	movf	??_I2C_LCD_SWrite,w
  2299  048F  0086               	movwf	6
  2300  0490  0187               	clrf	7
  2301  0491  0801               	movf	1,w
  2302  0492  39F0               	andlw	240
  2303  0493  00FB               	movwf	??_I2C_LCD_SWrite+1
  2304  0494  087B               	movf	??_I2C_LCD_SWrite+1,w
  2305  0495  00A1               	movwf	I2C_LCD_SWrite@H
  2306                           
  2307                           ;i2c.h: 85: L = Data[j] << 4 ;
  2308  0496  0823               	movf	I2C_LCD_SWrite@j,w
  2309  0497  0778               	addwf	I2C_LCD_SWrite@Data,w
  2310  0498  00FA               	movwf	??_I2C_LCD_SWrite
  2311  0499  087A               	movf	??_I2C_LCD_SWrite,w
  2312  049A  0086               	movwf	6
  2313  049B  0187               	clrf	7
  2314  049C  0801               	movf	1,w
  2315  049D  00FB               	movwf	??_I2C_LCD_SWrite+1
  2316  049E  3003               	movlw	3
  2317  049F                     u935:	
  2318  049F  35FB               	lslf	??_I2C_LCD_SWrite+1,f
  2319  04A0  3EFF               	addlw	-1
  2320  04A1  1D03               	skipz
  2321  04A2  2C9F               	goto	u935
  2322  04A3  357B               	lslf	??_I2C_LCD_SWrite+1,w
  2323  04A4  00FC               	movwf	??_I2C_LCD_SWrite+2
  2324  04A5  087C               	movf	??_I2C_LCD_SWrite+2,w
  2325  04A6  00A2               	movwf	I2C_LCD_SWrite@L
  2326                           
  2327                           ;i2c.h: 87: i2c_Write(H | 0x0D);
  2328  04A7  0821               	movf	I2C_LCD_SWrite@H,w
  2329  04A8  380D               	iorlw	13
  2330  04A9  3182  22C9  3184   	fcall	_i2c_Write
  2331                           
  2332                           ;i2c.h: 88: i2c_Write(H | 0x09);
  2333  04AC  0020               	movlb	0	; select bank0
  2334  04AD  0821               	movf	I2C_LCD_SWrite@H,w
  2335  04AE  3809               	iorlw	9
  2336  04AF  3182  22C9  3184   	fcall	_i2c_Write
  2337                           
  2338                           ;i2c.h: 89: i2c_Write(L | 0x0D);
  2339  04B2  0020               	movlb	0	; select bank0
  2340  04B3  0822               	movf	I2C_LCD_SWrite@L,w
  2341  04B4  380D               	iorlw	13
  2342  04B5  3182  22C9  3184   	fcall	_i2c_Write
  2343                           
  2344                           ;i2c.h: 90: i2c_Write(L | 0x09);
  2345  04B8  0020               	movlb	0	; select bank0
  2346  04B9  0822               	movf	I2C_LCD_SWrite@L,w
  2347  04BA  3809               	iorlw	9
  2348  04BB  3182  22C9  3184   	fcall	_i2c_Write
  2349  04BE  3001               	movlw	1
  2350  04BF  0020               	movlb	0	; select bank0
  2351  04C0  07A3               	addwf	I2C_LCD_SWrite@j,f
  2352  04C1  3000               	movlw	0
  2353  04C2  3DA4               	addwfc	I2C_LCD_SWrite@j+1,f
  2354  04C3  2C7F               	goto	l1236
  2355  04C4                     l1238:	
  2356                           
  2357                           ;i2c.h: 92: }
  2358                           ;i2c.h: 93: I2C_LCD_Busy(Slave);
  2359  04C4  0020               	movlb	0	; select bank0
  2360  04C5  0820               	movf	I2C_LCD_SWrite@Slave,w
  2361  04C6  3184  241A  3184   	fcall	_I2C_LCD_Busy
  2362                           
  2363                           ;i2c.h: 94: i2c_Stop();
  2364  04C9  3182  22BE         	fcall	_i2c_Stop
  2365  04CB  0008               	return
  2366  04CC                     __end_of_I2C_LCD_SWrite:	
  2367                           
  2368                           	psect	text10
  2369  03D7                     __ptext10:	
  2370 ;; *************** function _I2C_LCD_Init *****************
  2371 ;; Defined at:
  2372 ;;		line 40 in file "i2c.h"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  Slave           1    wreg     unsigned char 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  Slave           1   10[COMMON] unsigned char 
  2377 ;;  Tvar1           1    9[COMMON] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2, status,0, pclath, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2391 ;;Total ram usage:        3 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    3
  2394 ;; This function calls:
  2395 ;;		_I2C_LCD_Busy
  2396 ;;		_i2c_Address
  2397 ;;		_i2c_Start
  2398 ;;		_i2c_Stop
  2399 ;;		_i2c_Write
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           
  2406                           ;psect for function _I2C_LCD_Init
  2407  03D7                     _I2C_LCD_Init:	
  2408                           
  2409                           ;incstack = 0
  2410                           ; Regs used in _I2C_LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2411                           ;I2C_LCD_Init@Slave stored from wreg
  2412  03D7  00FA               	movwf	I2C_LCD_Init@Slave
  2413                           
  2414                           ;i2c.h: 41: unsigned char Tvar1;
  2415                           ;i2c.h: 42: i2c_Start();
  2416  03D8  3182  22B9  3183   	fcall	_i2c_Start
  2417                           
  2418                           ;i2c.h: 43: i2c_Address(Slave, 0);
  2419  03DB  01F0               	clrf	i2c_Address@mode
  2420  03DC  087A               	movf	I2C_LCD_Init@Slave,w
  2421  03DD  3182  22E4  3183   	fcall	_i2c_Address
  2422                           
  2423                           ;i2c.h: 44: i2c_Write(0x3C);
  2424  03E0  303C               	movlw	60
  2425  03E1  3182  22C9  3183   	fcall	_i2c_Write
  2426                           
  2427                           ;i2c.h: 45: i2c_Write(0x38);
  2428  03E4  3038               	movlw	56
  2429  03E5  3182  22C9  3183   	fcall	_i2c_Write
  2430                           
  2431                           ;i2c.h: 46: i2c_Write(0x3C);
  2432  03E8  303C               	movlw	60
  2433  03E9  3182  22C9  3183   	fcall	_i2c_Write
  2434                           
  2435                           ;i2c.h: 47: i2c_Write(0x38);
  2436  03EC  3038               	movlw	56
  2437  03ED  3182  22C9  3183   	fcall	_i2c_Write
  2438                           
  2439                           ;i2c.h: 48: i2c_Write(0x3C);
  2440  03F0  303C               	movlw	60
  2441  03F1  3182  22C9  3183   	fcall	_i2c_Write
  2442                           
  2443                           ;i2c.h: 49: i2c_Write(0x38);
  2444  03F4  3038               	movlw	56
  2445  03F5  3182  22C9  3183   	fcall	_i2c_Write
  2446                           
  2447                           ;i2c.h: 50: i2c_Write(0x2C);
  2448  03F8  302C               	movlw	44
  2449  03F9  3182  22C9  3183   	fcall	_i2c_Write
  2450                           
  2451                           ;i2c.h: 51: i2c_Write(0x28);
  2452  03FC  3028               	movlw	40
  2453  03FD  3182  22C9  3183   	fcall	_i2c_Write
  2454                           
  2455                           ;i2c.h: 52: i2c_Write(0x0C);
  2456  0400  300C               	movlw	12
  2457  0401  3182  22C9  3183   	fcall	_i2c_Write
  2458                           
  2459                           ;i2c.h: 53: i2c_Write(0x08);
  2460  0404  3008               	movlw	8
  2461  0405  3182  22C9  3183   	fcall	_i2c_Write
  2462                           
  2463                           ;i2c.h: 54: i2c_Write(0xFC);
  2464  0408  30FC               	movlw	252
  2465  0409  3182  22C9  3183   	fcall	_i2c_Write
  2466                           
  2467                           ;i2c.h: 55: i2c_Write(0xF8);
  2468  040C  30F8               	movlw	248
  2469  040D  3182  22C9  3183   	fcall	_i2c_Write
  2470                           
  2471                           ;i2c.h: 56: Tvar1=I2C_LCD_Busy(Slave);
  2472  0410  087A               	movf	I2C_LCD_Init@Slave,w
  2473  0411  3184  241A  3183   	fcall	_I2C_LCD_Busy
  2474  0414  00F8               	movwf	??_I2C_LCD_Init
  2475  0415  0878               	movf	??_I2C_LCD_Init,w
  2476  0416  00F9               	movwf	I2C_LCD_Init@Tvar1
  2477                           
  2478                           ;i2c.h: 57: i2c_Stop();
  2479  0417  3182  22BE         	fcall	_i2c_Stop
  2480  0419  0008               	return
  2481  041A                     __end_of_I2C_LCD_Init:	
  2482                           
  2483                           	psect	text11
  2484  036F                     __ptext11:	
  2485 ;; *************** function _I2C_LCD_Command *****************
  2486 ;; Defined at:
  2487 ;;		line 98 in file "i2c.h"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  Slave           1    wreg     unsigned char 
  2490 ;;  Cmd             1    8[COMMON] unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  Slave           1   11[COMMON] unsigned char 
  2493 ;;  LoBytex         1   13[COMMON] unsigned char 
  2494 ;;  HiBytex         1   12[COMMON] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0, pclath, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2504 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2505 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2506 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2507 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2508 ;;Total ram usage:        6 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    3
  2511 ;; This function calls:
  2512 ;;		_I2C_LCD_Busy
  2513 ;;		_i2c_Address
  2514 ;;		_i2c_Start
  2515 ;;		_i2c_Stop
  2516 ;;		_i2c_Write
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function _I2C_LCD_Command
  2524  036F                     _I2C_LCD_Command:	
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in _I2C_LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  2528                           ;I2C_LCD_Command@Slave stored from wreg
  2529  036F  00FB               	movwf	I2C_LCD_Command@Slave
  2530                           
  2531                           ;i2c.h: 100: unsigned char HiBytex, LoBytex;
  2532                           ;i2c.h: 101: HiBytex = Cmd & 0xF0;
  2533  0370  0878               	movf	I2C_LCD_Command@Cmd,w
  2534  0371  39F0               	andlw	240
  2535  0372  00F9               	movwf	??_I2C_LCD_Command
  2536  0373  0879               	movf	??_I2C_LCD_Command,w
  2537  0374  00FC               	movwf	I2C_LCD_Command@HiBytex
  2538                           
  2539                           ;i2c.h: 102: LoBytex = Cmd << 4;
  2540  0375  0878               	movf	I2C_LCD_Command@Cmd,w
  2541  0376  00F9               	movwf	??_I2C_LCD_Command
  2542  0377  3003               	movlw	3
  2543  0378                     u955:	
  2544  0378  35F9               	lslf	??_I2C_LCD_Command,f
  2545  0379  3EFF               	addlw	-1
  2546  037A  1D03               	skipz
  2547  037B  2B78               	goto	u955
  2548  037C  3579               	lslf	??_I2C_LCD_Command,w
  2549  037D  00FA               	movwf	??_I2C_LCD_Command+1
  2550  037E  087A               	movf	??_I2C_LCD_Command+1,w
  2551  037F  00FD               	movwf	I2C_LCD_Command@LoBytex
  2552                           
  2553                           ;i2c.h: 103: i2c_Start();
  2554  0380  3182  22B9  3183   	fcall	_i2c_Start
  2555                           
  2556                           ;i2c.h: 104: i2c_Address(Slave, 0);
  2557  0383  01F0               	clrf	i2c_Address@mode
  2558  0384  087B               	movf	I2C_LCD_Command@Slave,w
  2559  0385  3182  22E4  3183   	fcall	_i2c_Address
  2560                           
  2561                           ;i2c.h: 105: i2c_Write(HiBytex | 0x0C);
  2562  0388  087C               	movf	I2C_LCD_Command@HiBytex,w
  2563  0389  380C               	iorlw	12
  2564  038A  3182  22C9  3183   	fcall	_i2c_Write
  2565                           
  2566                           ;i2c.h: 106: i2c_Write(HiBytex | 0x08);
  2567  038D  087C               	movf	I2C_LCD_Command@HiBytex,w
  2568  038E  3808               	iorlw	8
  2569  038F  3182  22C9  3183   	fcall	_i2c_Write
  2570                           
  2571                           ;i2c.h: 107: i2c_Write(LoBytex | 0x0C);
  2572  0392  087D               	movf	I2C_LCD_Command@LoBytex,w
  2573  0393  380C               	iorlw	12
  2574  0394  3182  22C9  3183   	fcall	_i2c_Write
  2575                           
  2576                           ;i2c.h: 108: i2c_Write(LoBytex | 0x08);
  2577  0397  087D               	movf	I2C_LCD_Command@LoBytex,w
  2578  0398  3808               	iorlw	8
  2579  0399  3182  22C9  3183   	fcall	_i2c_Write
  2580                           
  2581                           ;i2c.h: 109: I2C_LCD_Busy(Slave);
  2582  039C  087B               	movf	I2C_LCD_Command@Slave,w
  2583  039D  3184  241A  3183   	fcall	_I2C_LCD_Busy
  2584                           
  2585                           ;i2c.h: 110: i2c_Stop();
  2586  03A0  3182  22BE         	fcall	_i2c_Stop
  2587  03A2  0008               	return
  2588  03A3                     __end_of_I2C_LCD_Command:	
  2589                           
  2590                           	psect	text12
  2591  041A                     __ptext12:	
  2592 ;; *************** function _I2C_LCD_Busy *****************
  2593 ;; Defined at:
  2594 ;;		line 11 in file "i2c.h"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  Slave           1    wreg     unsigned char 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  Slave           1    7[COMMON] unsigned char 
  2599 ;;  read_byte       1    6[COMMON] unsigned char 
  2600 ;;  Temp1           1    5[COMMON] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      unsigned char 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0, pclath, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;Total ram usage:        4 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    2
  2617 ;; This function calls:
  2618 ;;		_i2c_Address
  2619 ;;		_i2c_Read
  2620 ;;		_i2c_Restart
  2621 ;;		_i2c_Start
  2622 ;;		_i2c_Stop
  2623 ;;		_i2c_Write
  2624 ;; This function is called by:
  2625 ;;		_I2C_LCD_Init
  2626 ;;		_I2C_LCD_SWrite
  2627 ;;		_I2C_LCD_Command
  2628 ;;		_I2C_LCD_Pos
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function _I2C_LCD_Busy
  2634  041A                     _I2C_LCD_Busy:	
  2635                           
  2636                           ;incstack = 0
  2637                           ; Regs used in _I2C_LCD_Busy: [wreg+status,2+status,0+pclath+cstack]
  2638                           ;I2C_LCD_Busy@Slave stored from wreg
  2639  041A  00F7               	movwf	I2C_LCD_Busy@Slave
  2640                           
  2641                           ;i2c.h: 13: unsigned char read_byte, Temp1;
  2642                           ;i2c.h: 14: i2c_Start();
  2643  041B  3182  22B9  3184   	fcall	_i2c_Start
  2644                           
  2645                           ;i2c.h: 15: i2c_Address(Slave, 0);
  2646  041E  01F0               	clrf	i2c_Address@mode
  2647  041F  0877               	movf	I2C_LCD_Busy@Slave,w
  2648  0420  3182  22E4  3184   	fcall	_i2c_Address
  2649                           
  2650                           ;i2c.h: 16: i2c_Write(0xFA);
  2651  0423  30FA               	movlw	250
  2652  0424  3182  22C9  3184   	fcall	_i2c_Write
  2653                           
  2654                           ;i2c.h: 17: i2c_Write(0xFE);
  2655  0427  30FE               	movlw	254
  2656  0428  3182  22C9  3184   	fcall	_i2c_Write
  2657                           
  2658                           ;i2c.h: 18: i2c_Restart();
  2659  042B  3182  22B4  3184   	fcall	_i2c_Restart
  2660                           
  2661                           ;i2c.h: 19: i2c_Address(Slave, 1);
  2662  042E  01F0               	clrf	i2c_Address@mode
  2663  042F  0AF0               	incf	i2c_Address@mode,f
  2664  0430  0877               	movf	I2C_LCD_Busy@Slave,w
  2665  0431  3182  22E4  3184   	fcall	_i2c_Address
  2666  0434                     l1098:	
  2667                           ;i2c.h: 20: while((i2c_Read(1))& 0x80);
  2668                           
  2669  0434  3001               	movlw	1
  2670  0435  3183  2307  3184   	fcall	_i2c_Read
  2671  0438  3980               	andlw	128
  2672  0439  1D03               	btfss	3,2
  2673  043A  2C34               	goto	l1098
  2674                           
  2675                           ;i2c.h: 21: Temp1 = i2c_Read(0);
  2676  043B  3000               	movlw	0
  2677  043C  3183  2307  3184   	fcall	_i2c_Read
  2678  043F  00F4               	movwf	??_I2C_LCD_Busy
  2679  0440  0874               	movf	??_I2C_LCD_Busy,w
  2680  0441  00F5               	movwf	I2C_LCD_Busy@Temp1
  2681                           
  2682                           ;i2c.h: 22: Temp1 &= 0x70;
  2683  0442  3070               	movlw	112
  2684  0443  00F4               	movwf	??_I2C_LCD_Busy
  2685  0444  0874               	movf	??_I2C_LCD_Busy,w
  2686  0445  05F5               	andwf	I2C_LCD_Busy@Temp1,f
  2687                           
  2688                           ;i2c.h: 23: i2c_Restart();
  2689  0446  3182  22B4  3184   	fcall	_i2c_Restart
  2690                           
  2691                           ;i2c.h: 24: i2c_Address(Slave, 0);
  2692  0449  01F0               	clrf	i2c_Address@mode
  2693  044A  0877               	movf	I2C_LCD_Busy@Slave,w
  2694  044B  3182  22E4  3184   	fcall	_i2c_Address
  2695                           
  2696                           ;i2c.h: 25: i2c_Write(0xFA);
  2697  044E  30FA               	movlw	250
  2698  044F  3182  22C9  3184   	fcall	_i2c_Write
  2699                           
  2700                           ;i2c.h: 26: i2c_Write(0xFE);
  2701  0452  30FE               	movlw	254
  2702  0453  3182  22C9  3184   	fcall	_i2c_Write
  2703                           
  2704                           ;i2c.h: 27: i2c_Restart();
  2705  0456  3182  22B4  3184   	fcall	_i2c_Restart
  2706                           
  2707                           ;i2c.h: 28: i2c_Address(Slave, 1);
  2708  0459  01F0               	clrf	i2c_Address@mode
  2709  045A  0AF0               	incf	i2c_Address@mode,f
  2710  045B  0877               	movf	I2C_LCD_Busy@Slave,w
  2711  045C  3182  22E4  3184   	fcall	_i2c_Address
  2712                           
  2713                           ;i2c.h: 29: read_byte = i2c_Read(0);
  2714  045F  3000               	movlw	0
  2715  0460  3183  2307  3184   	fcall	_i2c_Read
  2716  0463  00F4               	movwf	??_I2C_LCD_Busy
  2717  0464  0874               	movf	??_I2C_LCD_Busy,w
  2718  0465  00F6               	movwf	I2C_LCD_Busy@read_byte
  2719                           
  2720                           ;i2c.h: 30: read_byte >>= 4;
  2721  0466  0EF6               	swapf	I2C_LCD_Busy@read_byte,f
  2722  0467  300F               	movlw	15
  2723  0468  05F6               	andwf	I2C_LCD_Busy@read_byte,f
  2724                           
  2725                           ;i2c.h: 31: read_byte += Temp1;
  2726  0469  0875               	movf	I2C_LCD_Busy@Temp1,w
  2727  046A  00F4               	movwf	??_I2C_LCD_Busy
  2728  046B  0874               	movf	??_I2C_LCD_Busy,w
  2729  046C  07F6               	addwf	I2C_LCD_Busy@read_byte,f
  2730                           
  2731                           ;i2c.h: 32: i2c_Stop();
  2732  046D  3182  22BE         	fcall	_i2c_Stop
  2733                           
  2734                           ;i2c.h: 33: return read_byte;
  2735  046F  0876               	movf	I2C_LCD_Busy@read_byte,w
  2736  0470  0008               	return
  2737  0471                     __end_of_I2C_LCD_Busy:	
  2738                           
  2739                           	psect	text13
  2740  02C9                     __ptext13:	
  2741 ;; *************** function _i2c_Write *****************
  2742 ;; Defined at:
  2743 ;;		line 54 in file "i2c_LCD.h"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  data            1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  data            1    0[COMMON] unsigned char 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg, status,2, status,0, pclath, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2761 ;;Total ram usage:        1 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    1
  2764 ;; This function calls:
  2765 ;;		_i2c_Wait
  2766 ;; This function is called by:
  2767 ;;		_I2C_LCD_Busy
  2768 ;;		_I2C_LCD_Init
  2769 ;;		_I2C_LCD_SWrite
  2770 ;;		_I2C_LCD_Command
  2771 ;;		_I2C_LCD_Pos
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function _i2c_Write
  2777  02C9                     _i2c_Write:	
  2778                           
  2779                           ;incstack = 0
  2780                           ; Regs used in _i2c_Write: [wreg+status,2+status,0+pclath+cstack]
  2781                           ;i2c_Write@data stored from wreg
  2782  02C9  00F0               	movwf	i2c_Write@data
  2783                           
  2784                           ;i2c_LCD.h: 56: i2c_Wait();
  2785  02CA  3182  22D0         	fcall	_i2c_Wait
  2786                           
  2787                           ;i2c_LCD.h: 57: SSP1BUF = data;
  2788  02CC  0870               	movf	i2c_Write@data,w
  2789  02CD  0024               	movlb	4	; select bank4
  2790  02CE  0091               	movwf	17	;volatile
  2791  02CF  0008               	return
  2792  02D0                     __end_of_i2c_Write:	
  2793                           
  2794                           	psect	text14
  2795  02BE                     __ptext14:	
  2796 ;; *************** function _i2c_Stop *****************
  2797 ;; Defined at:
  2798 ;;		line 47 in file "i2c_LCD.h"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0, pclath, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2816 ;;Total ram usage:        0 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    1
  2819 ;; This function calls:
  2820 ;;		_i2c_Wait
  2821 ;; This function is called by:
  2822 ;;		_I2C_LCD_Busy
  2823 ;;		_I2C_LCD_Init
  2824 ;;		_I2C_LCD_SWrite
  2825 ;;		_I2C_LCD_Command
  2826 ;;		_I2C_LCD_Pos
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function _i2c_Stop
  2832  02BE                     _i2c_Stop:	
  2833                           
  2834                           ;i2c_LCD.h: 49: i2c_Wait();
  2835                           
  2836                           ;incstack = 0
  2837                           ; Regs used in _i2c_Stop: [wreg+status,2+status,0+pclath+cstack]
  2838  02BE  3182  22D0         	fcall	_i2c_Wait
  2839                           
  2840                           ;i2c_LCD.h: 50: SSP1CON2bits.PEN=1;
  2841  02C0  0024               	movlb	4	; select bank4
  2842  02C1  1516               	bsf	22,2	;volatile
  2843  02C2  0008               	return
  2844  02C3                     __end_of_i2c_Stop:	
  2845                           
  2846                           	psect	text15
  2847  02B9                     __ptext15:	
  2848 ;; *************** function _i2c_Start *****************
  2849 ;; Defined at:
  2850 ;;		line 34 in file "i2c_LCD.h"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, pclath, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    1
  2871 ;; This function calls:
  2872 ;;		_i2c_Wait
  2873 ;; This function is called by:
  2874 ;;		_I2C_LCD_Busy
  2875 ;;		_I2C_LCD_Init
  2876 ;;		_I2C_LCD_SWrite
  2877 ;;		_I2C_LCD_Command
  2878 ;;		_I2C_LCD_Pos
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function _i2c_Start
  2884  02B9                     _i2c_Start:	
  2885                           
  2886                           ;i2c_LCD.h: 36: i2c_Wait();
  2887                           
  2888                           ;incstack = 0
  2889                           ; Regs used in _i2c_Start: [wreg+status,2+status,0+pclath+cstack]
  2890  02B9  3182  22D0         	fcall	_i2c_Wait
  2891                           
  2892                           ;i2c_LCD.h: 37: SSP1CON2bits.SEN=1;
  2893  02BB  0024               	movlb	4	; select bank4
  2894  02BC  1416               	bsf	22,0	;volatile
  2895  02BD  0008               	return
  2896  02BE                     __end_of_i2c_Start:	
  2897                           
  2898                           	psect	text16
  2899  02B4                     __ptext16:	
  2900 ;; *************** function _i2c_Restart *****************
  2901 ;; Defined at:
  2902 ;;		line 41 in file "i2c_LCD.h"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0, pclath, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2920 ;;Total ram usage:        0 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    1
  2923 ;; This function calls:
  2924 ;;		_i2c_Wait
  2925 ;; This function is called by:
  2926 ;;		_I2C_LCD_Busy
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           
  2931                           ;psect for function _i2c_Restart
  2932  02B4                     _i2c_Restart:	
  2933                           
  2934                           ;i2c_LCD.h: 42: i2c_Wait();
  2935                           
  2936                           ;incstack = 0
  2937                           ; Regs used in _i2c_Restart: [wreg+status,2+status,0+pclath+cstack]
  2938  02B4  3182  22D0         	fcall	_i2c_Wait
  2939                           
  2940                           ;i2c_LCD.h: 43: SSP1CON2bits.RSEN=1;
  2941  02B6  0024               	movlb	4	; select bank4
  2942  02B7  1496               	bsf	22,1	;volatile
  2943  02B8  0008               	return
  2944  02B9                     __end_of_i2c_Restart:	
  2945                           
  2946                           	psect	text17
  2947  0307                     __ptext17:	
  2948 ;; *************** function _i2c_Read *****************
  2949 ;; Defined at:
  2950 ;;		line 73 in file "i2c_LCD.h"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  ack             1    wreg     unsigned char 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  ack             1    1[COMMON] unsigned char 
  2955 ;;  i2cReadData     1    2[COMMON] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      unsigned char 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0, pclath, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2968 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2969 ;;Total ram usage:        3 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    1
  2972 ;; This function calls:
  2973 ;;		_i2c_Wait
  2974 ;; This function is called by:
  2975 ;;		_I2C_LCD_Busy
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           
  2980                           ;psect for function _i2c_Read
  2981  0307                     _i2c_Read:	
  2982                           
  2983                           ;incstack = 0
  2984                           ; Regs used in _i2c_Read: [wreg+status,2+status,0+pclath+cstack]
  2985                           ;i2c_Read@ack stored from wreg
  2986  0307  00F1               	movwf	i2c_Read@ack
  2987                           
  2988                           ;i2c_LCD.h: 78: unsigned char i2cReadData;
  2989                           ;i2c_LCD.h: 80: i2c_Wait();
  2990  0308  3182  22D0  3183   	fcall	_i2c_Wait
  2991                           
  2992                           ;i2c_LCD.h: 81: SSP1CON2bits.RCEN=1;
  2993  030B  0024               	movlb	4	; select bank4
  2994  030C  1596               	bsf	22,3	;volatile
  2995                           
  2996                           ;i2c_LCD.h: 82: i2c_Wait();
  2997  030D  3182  22D0  3183   	fcall	_i2c_Wait
  2998                           
  2999                           ;i2c_LCD.h: 83: i2cReadData = SSP1BUF;
  3000  0310  0024               	movlb	4	; select bank4
  3001  0311  0811               	movf	17,w	;volatile
  3002  0312  00F0               	movwf	??_i2c_Read
  3003  0313  0870               	movf	??_i2c_Read,w
  3004  0314  00F2               	movwf	i2c_Read@i2cReadData
  3005                           
  3006                           ;i2c_LCD.h: 84: i2c_Wait();
  3007  0315  3182  22D0  3183   	fcall	_i2c_Wait
  3008                           
  3009                           ;i2c_LCD.h: 85: if ( ack ) SSP1CON2bits.ACKDT=0;
  3010  0318  0871               	movf	i2c_Read@ack,w
  3011  0319  1903               	btfsc	3,2
  3012  031A  2B1E               	goto	l71
  3013  031B  0024               	movlb	4	; select bank4
  3014  031C  1296               	bcf	22,5	;volatile
  3015  031D  2B20               	goto	l72
  3016  031E                     l71:	
  3017                           
  3018                           ;i2c_LCD.h: 86: else SSP1CON2bits.ACKDT=1;
  3019  031E  0024               	movlb	4	; select bank4
  3020  031F  1696               	bsf	22,5	;volatile
  3021  0320                     l72:	
  3022                           
  3023                           ;i2c_LCD.h: 87: SSP1CON2bits.ACKEN=1;
  3024  0320  1616               	bsf	22,4	;volatile
  3025                           
  3026                           ;i2c_LCD.h: 89: return( i2cReadData );
  3027  0321  0872               	movf	i2c_Read@i2cReadData,w
  3028  0322  0008               	return
  3029  0323                     __end_of_i2c_Read:	
  3030                           
  3031                           	psect	text18
  3032  02E4                     __ptext18:	
  3033 ;; *************** function _i2c_Address *****************
  3034 ;; Defined at:
  3035 ;;		line 62 in file "i2c_LCD.h"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  address         1    wreg     unsigned char 
  3038 ;;  mode            1    0[COMMON] unsigned char 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  address         1    2[COMMON] unsigned char 
  3041 ;;  l_address       1    3[COMMON] unsigned char 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0, pclath, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3051 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;Total ram usage:        4 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    1
  3058 ;; This function calls:
  3059 ;;		_i2c_Wait
  3060 ;; This function is called by:
  3061 ;;		_I2C_LCD_Busy
  3062 ;;		_I2C_LCD_Init
  3063 ;;		_I2C_LCD_SWrite
  3064 ;;		_I2C_LCD_Command
  3065 ;;		_I2C_LCD_Pos
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _i2c_Address
  3071  02E4                     _i2c_Address:	
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _i2c_Address: [wreg+status,2+status,0+pclath+cstack]
  3075                           ;i2c_Address@address stored from wreg
  3076  02E4  00F2               	movwf	i2c_Address@address
  3077                           
  3078                           ;i2c_LCD.h: 64: unsigned char l_address;
  3079                           ;i2c_LCD.h: 66: l_address=address<<1;
  3080  02E5  3572               	lslf	i2c_Address@address,w
  3081  02E6  00F1               	movwf	??_i2c_Address
  3082  02E7  0871               	movf	??_i2c_Address,w
  3083  02E8  00F3               	movwf	i2c_Address@l_address
  3084                           
  3085                           ;i2c_LCD.h: 67: l_address+=mode;
  3086  02E9  0870               	movf	i2c_Address@mode,w
  3087  02EA  00F1               	movwf	??_i2c_Address
  3088  02EB  0871               	movf	??_i2c_Address,w
  3089  02EC  07F3               	addwf	i2c_Address@l_address,f
  3090                           
  3091                           ;i2c_LCD.h: 68: i2c_Wait();
  3092  02ED  3182  22D0         	fcall	_i2c_Wait
  3093                           
  3094                           ;i2c_LCD.h: 69: SSP1BUF = l_address;
  3095  02EF  0873               	movf	i2c_Address@l_address,w
  3096  02F0  0024               	movlb	4	; select bank4
  3097  02F1  0091               	movwf	17	;volatile
  3098  02F2  0008               	return
  3099  02F3                     __end_of_i2c_Address:	
  3100                           
  3101                           	psect	text19
  3102  02D0                     __ptext19:	
  3103 ;; *************** function _i2c_Wait *****************
  3104 ;; Defined at:
  3105 ;;		line 29 in file "i2c_LCD.h"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;Total ram usage:        0 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; This function calls:
  3126 ;;		Nothing
  3127 ;; This function is called by:
  3128 ;;		_i2c_Start
  3129 ;;		_i2c_Restart
  3130 ;;		_i2c_Stop
  3131 ;;		_i2c_Write
  3132 ;;		_i2c_Address
  3133 ;;		_i2c_Read
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function _i2c_Wait
  3139  02D0                     _i2c_Wait:	
  3140  02D0                     l1054:	
  3141                           ;i2c_LCD.h: 30: while ( ( SSP1CON2 & 0x1F ) || ( SSP1STAT & 0x04 ) );
  3142                           
  3143                           ;incstack = 0
  3144                           ; Regs used in _i2c_Wait: [wreg+status,2]
  3145                           
  3146  02D0  0024               	movlb	4	; select bank4
  3147  02D1  0816               	movf	22,w	;volatile
  3148  02D2  391F               	andlw	31
  3149  02D3  1D03               	btfss	3,2
  3150  02D4  2AD0               	goto	l1054
  3151  02D5  1D14               	btfss	20,2	;volatile
  3152  02D6  0008               	return
  3153  02D7  2AD0               	goto	l1054
  3154  02D8                     __end_of_i2c_Wait:	
  3155                           
  3156                           	psect	text20
  3157  02F3                     __ptext20:	
  3158 ;; *************** function _ADC_Read *****************
  3159 ;; Defined at:
  3160 ;;		line 55 in file "main.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  2    0[COMMON] unsigned int 
  3167 ;; Registers used:
  3168 ;;		wreg
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3177 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3178 ;;Total ram usage:        3 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_main
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           
  3188                           ;psect for function _ADC_Read
  3189  02F3                     _ADC_Read:	
  3190                           
  3191                           ;main.c: 57: ADCON0 = 0b00101101;
  3192                           
  3193                           ;incstack = 0
  3194                           ; Regs used in _ADC_Read: [wreg]
  3195  02F3  302D               	movlw	45
  3196  02F4  0021               	movlb	1	; select bank1
  3197  02F5  009D               	movwf	29	;volatile
  3198                           
  3199                           ;main.c: 59: _delay((unsigned long)((2)*(16000000/4000.0)));
  3200  02F6  300B               	movlw	11
  3201  02F7  00F2               	movwf	??_ADC_Read
  3202  02F8  3062               	movlw	98
  3203  02F9                     u1307:	
  3204  02F9  0B89               	decfsz	9,f
  3205  02FA  2AF9               	goto	u1307
  3206  02FB  0BF2               	decfsz	??_ADC_Read,f
  3207  02FC  2AF9               	goto	u1307
  3208  02FD  3200               	nop2
  3209                           
  3210                           ;main.c: 60: GO_nDONE = 1;
  3211  02FE  0021               	movlb	1	; select bank1
  3212  02FF  149D               	bsf	29,1	;volatile
  3213  0300                     l100:	
  3214                           ;main.c: 61: while(GO_nDONE);
  3215                           
  3216  0300  189D               	btfsc	29,1	;volatile
  3217  0301  2B00               	goto	l100
  3218                           
  3219                           ;main.c: 62: return ((ADRESH<<8)+ADRESL);
  3220  0302  081C               	movf	28,w	;volatile
  3221  0303  00F1               	movwf	?_ADC_Read+1
  3222  0304  081B               	movf	27,w	;volatile
  3223  0305  00F0               	movwf	?_ADC_Read
  3224  0306  0008               	return
  3225  0307                     __end_of_ADC_Read:	
  3226                           
  3227                           	psect	text21
  3228  02C3                     __ptext21:	
  3229 ;; *************** function _ADC_Initialize *****************
  3230 ;; Defined at:
  3231 ;;		line 49 in file "main.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3249 ;;Total ram usage:        0 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           
  3259                           ;psect for function _ADC_Initialize
  3260  02C3                     _ADC_Initialize:	
  3261                           
  3262                           ;main.c: 51: ADCON0 = 0b00101101;
  3263                           
  3264                           ;incstack = 0
  3265                           ; Regs used in _ADC_Initialize: [wreg]
  3266  02C3  302D               	movlw	45
  3267  02C4  0021               	movlb	1	; select bank1
  3268  02C5  009D               	movwf	29	;volatile
  3269                           
  3270                           ;main.c: 52: ADCON1 = 0b11000000;
  3271  02C6  30C0               	movlw	192
  3272  02C7  009E               	movwf	30	;volatile
  3273  02C8  0008               	return
  3274  02C9                     __end_of_ADC_Initialize:	
  3275  007E                     btemp	set	126	;btemp
  3276  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     57      57
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_2(CODE[1]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@Sout(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    main@Sptr	PTR unsigned char  size(1) Largest target is 20
		 -> main@Sout(BANK0[20]), 

    I2C_LCD_SWrite@Data	PTR unsigned char  size(1) Largest target is 20
		 -> main@Sout(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_I2C_LCD_Command
    _main->___awtoft
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _I2C_LCD_SWrite->_I2C_LCD_Busy
    _I2C_LCD_Init->_I2C_LCD_Busy
    _I2C_LCD_Command->_I2C_LCD_Busy
    _I2C_LCD_Busy->_i2c_Address

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   10072
                                             30 BANK0     27    27      0
                     _ADC_Initialize
                           _ADC_Read
                    _I2C_LCD_Command
                       _I2C_LCD_Init
                     _I2C_LCD_SWrite
                           ___awtoft
                            ___ftdiv
                            ___fttol
                           _i2c_Init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    19      4    1250
                                              0 BANK0     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2015
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1773
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SWrite                                      12    10      2    1690
                                              8 COMMON     5     3      2
                                              0 BANK0      5     5      0
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Init                                         3     3      0    1255
                                              8 COMMON     3     3      0
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Command                                      6     5      1    1547
                                              8 COMMON     6     5      1
                       _I2C_LCD_Busy
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Busy                                         4     4      0     696
                                              4 COMMON     4     4      0
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          4     3      1     492
                                              0 COMMON     4     3      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2       0
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _I2C_LCD_Command
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _I2C_LCD_Init
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _I2C_LCD_SWrite
     _I2C_LCD_Busy
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _i2c_Init
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     39      39       5       71.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 19 00:39:43 2023

             __CFG_CP$OFF 0000             ??_i2c_Address 0071                        l71 031E  
                      l72 0320               __CFG_LVP$ON 0000               i2c_Read@ack 0071  
                     l100 0300                       l111 07C9                       l109 07AA  
                     l480 059D                       l396 0511                       l397 0519  
                     l389 04FE                       _RA2 0062                       _RA4 0064  
                     _RC1 0071              __CFG_CPD$OFF 0000                       u705 04E0  
                     u725 04F9                       u815 03AE                       u745 0506  
                     u905 035B                       u835 03B8                       u915 0362  
                     u845 03C2                       u935 049F                       u855 03CA  
                     u945 0488                       u785 0520                       u955 0378  
                     u885 034C              __CFG_BORV$LO 0000                       wreg 0009  
           ??_i2c_Restart 0070              _I2C_LCD_Busy 041A              _I2C_LCD_Init 03D7  
       ??_I2C_LCD_Command 0079              ___ftdiv@cntr 002A              ___ftdiv@sign 002F  
                    l1200 0361                      l1140 04EA                      l1132 04D4  
                    l1204 036A                      l1300 06BC                      l1054 02D0  
                    l1136 04DB                      l1320 06EE                      l1312 06EA  
                    l1146 0503                      l1138 04E5                      l1170 03AB  
                    l1306 06DB                      l1322 0666                      l1236 047F  
                    l1148 050B                      l1420 05AE                      l1172 03B7  
                    l1324 0728                      l1238 04C4                      l1414 0594  
                    l1406 0579                      l1182 03D2                      l1336 032D  
                    l1352 05E4                      l1416 05A0                      l1408 0587  
                    l1098 0434                      l1346 05CE                      l1178 03C9  
                    l1194 0349                      l1196 0355                      l1284 06A0  
                    l1374 063E                      l1366 0625                      l1294 06B6  
                    l1278 0688                      l1470 077F                      l1480 07AB  
                    l1388 0549                      STR_1 081A                      STR_2 0819  
                    STR_3 080A                      u1005 06D1                      u1105 0626  
                    u1115 0635                      u1125 063F                      u1215 0595  
                    u1307 02F9                      u1155 0550                      u1085 05F6  
                    u1095 0606                      u1185 057A                      u1277 0767  
                    u1287 07B1                      u1297 07C1              __CFG_WRT$OFF 0000  
                    _main 072D              ___ftpack@arg 0070              ___ftpack@exp 0073  
                    fsr0h 0005                      fsr1h 0007                      indf0 0000  
                    fsr0l 0004                      indf1 0001                      fsr1l 0006  
                    btemp 007E          __end_of_ADC_Read 0307                      start 0002  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000              ___fttol@exp1 003D  
            ___fttol@lval 0039                     ?_main 0070             __CFG_WDTE$OFF 0000  
         __end_of___ftdiv 0660           __end_of___fttol 05B7           __end_of___lwdiv 03D7  
         __end_of___lwmod 036F                     _TMR1H 0017                     _TMR1L 0016  
                   _TRISA 008C       __end_of_i2c_Address 02F3            __CFG_FCMEN$OFF 0000  
           ___awtoft@sign 007D           __end_of_dpowers 080A             ___ftpack@sign 0074  
                   main@a 0057            __CFG_BOREN$OFF 0000       __end_of_i2c_Restart 02B9  
                   status 0003                     wtemp0 007E           __end_of_sprintf 072D  
           main@adc_value 0055           __initialization 07FD              __end_of_main 07FD  
        __end_of_i2c_Init 02E4          __end_of_i2c_Read 0323          __end_of_i2c_Wait 02D8  
        __end_of_i2c_Stop 02C3            _I2C_LCD_SWrite 0471                    ??_main 003E  
           ___fttol@sign1 0038            __CFG_PLLEN$OFF 0000                    _ADCON0 009D  
                  _ADCON1 009E                    _ADRESH 009C                    _ADRESL 009B  
      I2C_LCD_Command@Cmd 0078          __end_of___awtoft 0343          __end_of___ftpack 0530  
      __size_of_i2c_Start 0005        __size_of_i2c_Write 0007                    _TMR1ON 00C0  
                  _TRISB4 046C                    _TRISB6 046E            __CFG_PWRTE$OFF 0000  
  __end_of_I2C_LCD_SWrite 04CC            __CFG_STVREN$ON 0000                 ??___ftdiv 0026  
               ??___fttol 0034                 ??___lwdiv 0074                 ??___lwmod 007C  
             _i2c_Address 02E4             i2c_Write@data 0070                 ?_ADC_Read 0070  
             _i2c_Restart 02B4                 ??_sprintf 0024   __end_of__initialization 07FD  
              ___ftdiv@f1 0023                ___ftdiv@f2 0020                ___ftdiv@f3 002B  
              ___awtoft@c 0078        I2C_LCD_SWrite@Data 0078                ___fttol@f1 0030  
          __pcstackCOMMON 0070           ?_I2C_LCD_SWrite 0078         __end_of_i2c_Start 02BE  
       __end_of_i2c_Write 02D0           _I2C_LCD_Command 036F                ??_ADC_Read 0072  
               ?_i2c_Init 0070                 ?_i2c_Read 0070                 ?_i2c_Wait 0070  
               ?_i2c_Stop 0070                __pmaintext 072D                 ?___awtoft 0078  
               ?___ftpack 0070   __size_of_ADC_Initialize 0006        i2c_Address@address 0072  
                 _SSP1ADD 0212                   _SSP1BUF 0211                ??_i2c_Init 0070  
              ??_i2c_Read 0070                ??_i2c_Wait 0070                ??_i2c_Stop 0070  
 __end_of_I2C_LCD_Command 03A3                   ___ftdiv 05B7                   ___fttol 0530  
                 ___lwdiv 03A3                   ___lwmod 0343                ??___awtoft 007B  
              ??___ftpack 0075                   __ptext1 0660                   __ptext2 0343  
                 __ptext3 03A3                   __ptext4 02D8                   __ptext5 0530  
                 __ptext6 05B7                   __ptext7 0323                   __ptext8 04CC  
                 __ptext9 0471                   _dpowers 0800                   _sprintf 0660  
    end_of_initialization 07FD      i2c_Address@l_address 0073              ?_i2c_Address 0070  
        __CFG_FOSC$INTOSC 0000              ?_i2c_Restart 0070         __size_of_ADC_Read 0014  
             ___ftdiv@exp 002E          ??_I2C_LCD_SWrite 007A       I2C_LCD_SWrite@Slave 0020  
        ?_I2C_LCD_Command 0078            _ADC_Initialize 02C3                 _i2c_Start 02B9  
               _i2c_Write 02C9       start_initialization 07FD             ?_I2C_LCD_Busy 0070  
           ?_I2C_LCD_Init 0070         __size_of_i2c_Init 000C         __size_of_i2c_Read 001C  
       __size_of_i2c_Wait 0008         __size_of_i2c_Stop 0005         I2C_LCD_Busy@Temp1 0075  
  __end_of_ADC_Initialize 02C9         I2C_LCD_Busy@Slave 0077         I2C_LCD_Init@Slave 007A  
       I2C_LCD_Init@Tvar1 0079         __size_of___awtoft 0020         __size_of___ftpack 0064  
              ?_i2c_Start 0070                ?_i2c_Write 0070            ??_I2C_LCD_Busy 0074  
               ___latbits 0002            ??_I2C_LCD_Init 0078             __pcstackBANK0 0020  
       I2C_LCD_SWrite@Max 0079               sprintf@flag 0029               sprintf@prec 002A  
         I2C_LCD_SWrite@H 0021           I2C_LCD_SWrite@L 0022           I2C_LCD_SWrite@j 0023  
        ___lwdiv@dividend 0072                  ?___ftdiv 0020                  ?___fttol 0030  
                ?___lwdiv 0070                  ?___lwmod 0078           ?_ADC_Initialize 0070  
    __size_of_i2c_Address 000F                  _ADC_Read 02F3      I2C_LCD_Command@Slave 007B  
        ___lwdiv@quotient 0075                  ?_sprintf 0020      __size_of_i2c_Restart 0005  
                _GO_nDONE 04E9                  _SSP1CON1 0215                  _SSP1CON2 0216  
                _SSP1STAT 0214               ??_i2c_Start 0070               ??_i2c_Write 0070  
                _i2c_Init 02D8                  _i2c_Read 0307                  _i2c_Wait 02D0  
                _i2c_Stop 02BE    I2C_LCD_Command@HiBytex 007C    I2C_LCD_Command@LoBytex 007D  
    __end_of_I2C_LCD_Busy 0471      __end_of_I2C_LCD_Init 041A          __size_of___ftdiv 00A9  
        __size_of___fttol 0087          __size_of___lwdiv 0034          __size_of___lwmod 002C  
                ___awtoft 0323                  ___ftpack 04CC                sprintf@val 002B  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 03D7  
                __ptext11 036F                  __ptext20 02F3                  __ptext12 041A  
                __ptext21 02C3                  __ptext13 02C9                  __ptext14 02BE  
                __ptext15 02B9                  __ptext16 02B4                  __ptext17 0307  
                __ptext18 02E4                  __ptext19 02D0              _SSP1CON2bits 0216  
        __size_of_sprintf 00CD             __size_of_main 00D0     I2C_LCD_Busy@read_byte 0076  
                main@Sptr 0054                  main@Sout 0040  __size_of_I2C_LCD_Command 0034  
               sprintf@ap 0028                 sprintf@sp 002D          ___lwmod@dividend 007A  
         i2c_Address@mode 0070         __CFG_CLKOUTEN$OFF 0000          ??_ADC_Initialize 0070  
 __size_of_I2C_LCD_SWrite 005B             __pstringtext1 0800             __pstringtext2 081A  
           __pstringtext3 0000                  sprintf@c 002E                  sprintf@f 0020  
         ___lwmod@divisor 0078           ___lwmod@counter 007D       i2c_Read@i2cReadData 0072  
   __size_of_I2C_LCD_Busy 0057     __size_of_I2C_LCD_Init 0043  
