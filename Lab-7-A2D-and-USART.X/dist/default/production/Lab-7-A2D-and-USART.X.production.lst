

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 10 17:42:33 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1829 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  011A                     	;# 
   137  011B                     	;# 
   138  011D                     	;# 
   139  011E                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  018E                     	;# 
   143  0191                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0194                     	;# 
   150  0195                     	;# 
   151  0196                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019F                     	;# 
   160  020C                     	;# 
   161  020D                     	;# 
   162  020E                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  0219                     	;# 
   179  021A                     	;# 
   180  021B                     	;# 
   181  021C                     	;# 
   182  021D                     	;# 
   183  021E                     	;# 
   184  021F                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0294                     	;# 
   190  0295                     	;# 
   191  0295                     	;# 
   192  0296                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  029B                     	;# 
   198  029C                     	;# 
   199  029D                     	;# 
   200  029E                     	;# 
   201  0311                     	;# 
   202  0311                     	;# 
   203  0312                     	;# 
   204  0313                     	;# 
   205  0318                     	;# 
   206  0318                     	;# 
   207  0319                     	;# 
   208  031A                     	;# 
   209  038C                     	;# 
   210  038D                     	;# 
   211  038E                     	;# 
   212  0391                     	;# 
   213  0392                     	;# 
   214  0393                     	;# 
   215  0394                     	;# 
   216  0395                     	;# 
   217  0396                     	;# 
   218  039A                     	;# 
   219  039C                     	;# 
   220  039D                     	;# 
   221  039E                     	;# 
   222  039F                     	;# 
   223  0415                     	;# 
   224  0416                     	;# 
   225  0417                     	;# 
   226  041C                     	;# 
   227  041D                     	;# 
   228  041E                     	;# 
   229  0FE4                     	;# 
   230  0FE5                     	;# 
   231  0FE6                     	;# 
   232  0FE7                     	;# 
   233  0FE8                     	;# 
   234  0FE9                     	;# 
   235  0FEA                     	;# 
   236  0FEB                     	;# 
   237  0FED                     	;# 
   238  0FEE                     	;# 
   239  0FEF                     	;# 
   240                           
   241                           	psect	stringtext1
   242  18C7                     __pstringtext1:	
   243  18C7                     _dpowers:	
   244  18C7  3401               	retlw	1
   245  18C8  3400               	retlw	0
   246  18C9  3400               	retlw	0
   247  18CA  3400               	retlw	0
   248  18CB  340A               	retlw	10
   249  18CC  3400               	retlw	0
   250  18CD  3400               	retlw	0
   251  18CE  3400               	retlw	0
   252  18CF  3464               	retlw	100
   253  18D0  3400               	retlw	0
   254  18D1  3400               	retlw	0
   255  18D2  3400               	retlw	0
   256  18D3  34E8               	retlw	232
   257  18D4  3403               	retlw	3
   258  18D5  3400               	retlw	0
   259  18D6  3400               	retlw	0
   260  18D7  3410               	retlw	16
   261  18D8  3427               	retlw	39
   262  18D9  3400               	retlw	0
   263  18DA  3400               	retlw	0
   264  18DB  34A0               	retlw	160
   265  18DC  3486               	retlw	134
   266  18DD  3401               	retlw	1
   267  18DE  3400               	retlw	0
   268  18DF  3440               	retlw	64
   269  18E0  3442               	retlw	66
   270  18E1  340F               	retlw	15
   271  18E2  3400               	retlw	0
   272  18E3  3480               	retlw	128
   273  18E4  3496               	retlw	150
   274  18E5  3498               	retlw	152
   275  18E6  3400               	retlw	0
   276  18E7  3400               	retlw	0
   277  18E8  34E1               	retlw	225
   278  18E9  34F5               	retlw	245
   279  18EA  3405               	retlw	5
   280  18EB  3400               	retlw	0
   281  18EC  34CA               	retlw	202
   282  18ED  349A               	retlw	154
   283  18EE  343B               	retlw	59
   284  18EF                     __end_of_dpowers:	
   285                           
   286                           	psect	stringtext2
   287  18EF                     __pstringtext2:	
   288  18EF                     __powers_:	
   289  18EF  3400               	retlw	0
   290  18F0  3480               	retlw	128
   291  18F1  343F               	retlw	63
   292  18F2  3400               	retlw	0
   293  18F3  3420               	retlw	32
   294  18F4  3441               	retlw	65
   295  18F5  3400               	retlw	0
   296  18F6  34C8               	retlw	200
   297  18F7  3442               	retlw	66
   298  18F8  3400               	retlw	0
   299  18F9  347A               	retlw	122
   300  18FA  3444               	retlw	68
   301  18FB  3440               	retlw	64
   302  18FC  341C               	retlw	28
   303  18FD  3446               	retlw	70
   304  18FE  3450               	retlw	80
   305  18FF  34C3               	retlw	195
   306  1900  3447               	retlw	71
   307  1901  3424               	retlw	36
   308  1902  3474               	retlw	116
   309  1903  3449               	retlw	73
   310  1904  3497               	retlw	151
   311  1905  3418               	retlw	24
   312  1906  344B               	retlw	75
   313  1907  34BC               	retlw	188
   314  1908  34BE               	retlw	190
   315  1909  344C               	retlw	76
   316  190A  346B               	retlw	107
   317  190B  346E               	retlw	110
   318  190C  344E               	retlw	78
   319  190D  3403               	retlw	3
   320  190E  3415               	retlw	21
   321  190F  3450               	retlw	80
   322  1910  3479               	retlw	121
   323  1911  34AD               	retlw	173
   324  1912  3460               	retlw	96
   325  1913  34F3               	retlw	243
   326  1914  3449               	retlw	73
   327  1915  3471               	retlw	113
   328  1916                     __end_of__powers_:	
   329                           
   330                           	psect	stringtext3
   331  1800                     __pstringtext3:	
   332  1800                     __npowers_:	
   333  1800  3400               	retlw	0
   334  1801  3480               	retlw	128
   335  1802  343F               	retlw	63
   336  1803  34CD               	retlw	205
   337  1804  34CC               	retlw	204
   338  1805  343D               	retlw	61
   339  1806  34D7               	retlw	215
   340  1807  3423               	retlw	35
   341  1808  343C               	retlw	60
   342  1809  3412               	retlw	18
   343  180A  3483               	retlw	131
   344  180B  343A               	retlw	58
   345  180C  34B7               	retlw	183
   346  180D  34D1               	retlw	209
   347  180E  3438               	retlw	56
   348  180F  34C6               	retlw	198
   349  1810  3427               	retlw	39
   350  1811  3437               	retlw	55
   351  1812  3438               	retlw	56
   352  1813  3486               	retlw	134
   353  1814  3435               	retlw	53
   354  1815  34C0               	retlw	192
   355  1816  34D6               	retlw	214
   356  1817  3433               	retlw	51
   357  1818  34CC               	retlw	204
   358  1819  342B               	retlw	43
   359  181A  3432               	retlw	50
   360  181B  3470               	retlw	112
   361  181C  3489               	retlw	137
   362  181D  3430               	retlw	48
   363  181E  34E7               	retlw	231
   364  181F  34DB               	retlw	219
   365  1820  342E               	retlw	46
   366  1821  34E5               	retlw	229
   367  1822  343C               	retlw	60
   368  1823  341E               	retlw	30
   369  1824  3442               	retlw	66
   370  1825  34A2               	retlw	162
   371  1826  340D               	retlw	13
   372  1827                     __end_of__npowers_:	
   373  000B                     _INTCON	set	11
   374  008D                     _RCIF	set	141
   375  008C                     _TXIF	set	140
   376  0062                     _RA2	set	98
   377  0076                     _RC6	set	118
   378  0065                     _RA5	set	101
   379  008D                     _TRISB	set	141
   380  008E                     _TRISC	set	142
   381  008C                     _TRISA	set	140
   382  0099                     _OSCCON	set	153
   383  009B                     _ADRESL	set	155
   384  009C                     _ADRESH	set	156
   385  009D                     _ADCON0	set	157
   386  009E                     _ADCON1	set	158
   387  0474                     _TRISC4	set	1140
   388  0475                     _TRISC5	set	1141
   389  04E9                     _ADGO	set	1257
   390  0117                     _FVRCON	set	279
   391  08BC                     _TSRNG	set	2236
   392  08BD                     _TSEN	set	2237
   393  08EF                     _RXDTSEL	set	2287
   394  08EA                     _TXCKSEL	set	2282
   395  019B                     _SPBRG	set	411
   396  018D                     _ANSELB	set	397
   397  018E                     _ANSELC	set	398
   398  018C                     _ANSELA	set	396
   399  0199                     _RCREG	set	409
   400  019A                     _TXREG	set	410
   401  019E                     _TXSTA	set	414
   402  019D                     _RCSTA	set	413
   403  0CF2                     _BRGH	set	3314
   404  0CEF                     _SPEN	set	3311
   405  0CF4                     _SYNC	set	3316
   406  0CF5                     _TXEN	set	3317
   407  1827                     STR_2:	
   408  1827  3445               	retlw	69	;'E'
   409  1828  3478               	retlw	120	;'x'
   410  1829  3474               	retlw	116	;'t'
   411  182A  3465               	retlw	101	;'e'
   412  182B  3472               	retlw	114	;'r'
   413  182C  346E               	retlw	110	;'n'
   414  182D  3461               	retlw	97	;'a'
   415  182E  346C               	retlw	108	;'l'
   416  182F  3420               	retlw	32	;' '
   417  1830  3452               	retlw	82	;'R'
   418  1831  3461               	retlw	97	;'a'
   419  1832  3477               	retlw	119	;'w'
   420  1833  3420               	retlw	32	;' '
   421  1834  3454               	retlw	84	;'T'
   422  1835  3465               	retlw	101	;'e'
   423  1836  346D               	retlw	109	;'m'
   424  1837  3470               	retlw	112	;'p'
   425  1838  3420               	retlw	32	;' '
   426  1839  3476               	retlw	118	;'v'
   427  183A  3461               	retlw	97	;'a'
   428  183B  346C               	retlw	108	;'l'
   429  183C  3475               	retlw	117	;'u'
   430  183D  3465               	retlw	101	;'e'
   431  183E  3420               	retlw	32	;' '
   432  183F  3469               	retlw	105	;'i'
   433  1840  3473               	retlw	115	;'s'
   434  1841  3420               	retlw	32	;' '
   435  1842  3425               	retlw	37	;'%'
   436  1843  3430               	retlw	48	;'0'
   437  1844  342E               	retlw	46	;'.'
   438  1845  3432               	retlw	50	;'2'
   439  1846  3466               	retlw	102	;'f'
   440  1847  3420               	retlw	32	;' '
   441  1848  3452               	retlw	82	;'R'
   442  1849  3441               	retlw	65	;'A'
   443  184A  3457               	retlw	87	;'W'
   444  184B  3420               	retlw	32	;' '
   445  184C  347C               	retlw	124	;'|'
   446  184D  3420               	retlw	32	;' '
   447  184E  3450               	retlw	80	;'P'
   448  184F  346F               	retlw	111	;'o'
   449  1850  3474               	retlw	116	;'t'
   450  1851  3420               	retlw	32	;' '
   451  1852  3476               	retlw	118	;'v'
   452  1853  3461               	retlw	97	;'a'
   453  1854  346C               	retlw	108	;'l'
   454  1855  3475               	retlw	117	;'u'
   455  1856  3465               	retlw	101	;'e'
   456  1857  3420               	retlw	32	;' '
   457  1858  3469               	retlw	105	;'i'
   458  1859  3473               	retlw	115	;'s'
   459  185A  3420               	retlw	32	;' '
   460  185B  3425               	retlw	37	;'%'
   461  185C  3464               	retlw	100	;'d'
   462  185D  3420               	retlw	32	;' '
   463  185E  347C               	retlw	124	;'|'
   464  185F  3420               	retlw	32	;' '
   465  1860  3456               	retlw	86	;'V'
   466  1861  346F               	retlw	111	;'o'
   467  1862  346C               	retlw	108	;'l'
   468  1863  3474               	retlw	116	;'t'
   469  1864  3461               	retlw	97	;'a'
   470  1865  3467               	retlw	103	;'g'
   471  1866  3465               	retlw	101	;'e'
   472  1867  3420               	retlw	32	;' '
   473  1868  3469               	retlw	105	;'i'
   474  1869  3473               	retlw	115	;'s'
   475  186A  3420               	retlw	32	;' '
   476  186B  3425               	retlw	37	;'%'
   477  186C  3464               	retlw	100	;'d'
   478  186D  3420               	retlw	32	;' '
   479  186E  347C               	retlw	124	;'|'
   480  186F  3420               	retlw	32	;' '
   481  1870  3450               	retlw	80	;'P'
   482  1871  3468               	retlw	104	;'h'
   483  1872  346F               	retlw	111	;'o'
   484  1873  3474               	retlw	116	;'t'
   485  1874  346F               	retlw	111	;'o'
   486  1875  3420               	retlw	32	;' '
   487  1876  3456               	retlw	86	;'V'
   488  1877  3461               	retlw	97	;'a'
   489  1878  346C               	retlw	108	;'l'
   490  1879  3475               	retlw	117	;'u'
   491  187A  3465               	retlw	101	;'e'
   492  187B  3420               	retlw	32	;' '
   493  187C  3425               	retlw	37	;'%'
   494  187D  3464               	retlw	100	;'d'
   495  187E  3420               	retlw	32	;' '
   496  187F  345D               	retlw	93	;']'
   497  1880  340A               	retlw	10
   498  1881  340D               	retlw	13
   499  1882  3400               	retlw	0
   500                           
   501                           	psect	stringtext4
   502  1883                     __pstringtext4:	
   503  1883                     STR_1:	
   504  1883  3452               	retlw	82	;'R'
   505  1884  3461               	retlw	97	;'a'
   506  1885  3477               	retlw	119	;'w'
   507  1886  3420               	retlw	32	;' '
   508  1887  3454               	retlw	84	;'T'
   509  1888  3465               	retlw	101	;'e'
   510  1889  346D               	retlw	109	;'m'
   511  188A  3470               	retlw	112	;'p'
   512  188B  3420               	retlw	32	;' '
   513  188C  3476               	retlw	118	;'v'
   514  188D  3461               	retlw	97	;'a'
   515  188E  346C               	retlw	108	;'l'
   516  188F  3475               	retlw	117	;'u'
   517  1890  3465               	retlw	101	;'e'
   518  1891  3420               	retlw	32	;' '
   519  1892  3469               	retlw	105	;'i'
   520  1893  3473               	retlw	115	;'s'
   521  1894  3420               	retlw	32	;' '
   522  1895  3425               	retlw	37	;'%'
   523  1896  3464               	retlw	100	;'d'
   524  1897  3420               	retlw	32	;' '
   525  1898  3452               	retlw	82	;'R'
   526  1899  3441               	retlw	65	;'A'
   527  189A  3457               	retlw	87	;'W'
   528  189B  3420               	retlw	32	;' '
   529  189C  347C               	retlw	124	;'|'
   530  189D  3420               	retlw	32	;' '
   531  189E  3450               	retlw	80	;'P'
   532  189F  346F               	retlw	111	;'o'
   533  18A0  3474               	retlw	116	;'t'
   534  18A1  3420               	retlw	32	;' '
   535  18A2  3476               	retlw	118	;'v'
   536  18A3  3461               	retlw	97	;'a'
   537  18A4  346C               	retlw	108	;'l'
   538  18A5  3475               	retlw	117	;'u'
   539  18A6  3465               	retlw	101	;'e'
   540  18A7  3420               	retlw	32	;' '
   541  18A8  3469               	retlw	105	;'i'
   542  18A9  3473               	retlw	115	;'s'
   543  18AA  3420               	retlw	32	;' '
   544  18AB  3425               	retlw	37	;'%'
   545  18AC  3464               	retlw	100	;'d'
   546  18AD  3420               	retlw	32	;' '
   547  18AE  347C               	retlw	124	;'|'
   548  18AF  3420               	retlw	32	;' '
   549  18B0  3446               	retlw	70	;'F'
   550  18B1  3469               	retlw	105	;'i'
   551  18B2  3478               	retlw	120	;'x'
   552  18B3  3465               	retlw	101	;'e'
   553  18B4  3464               	retlw	100	;'d'
   554  18B5  3420               	retlw	32	;' '
   555  18B6  3456               	retlw	86	;'V'
   556  18B7  346F               	retlw	111	;'o'
   557  18B8  346C               	retlw	108	;'l'
   558  18B9  3474               	retlw	116	;'t'
   559  18BA  3461               	retlw	97	;'a'
   560  18BB  3467               	retlw	103	;'g'
   561  18BC  3465               	retlw	101	;'e'
   562  18BD  3420               	retlw	32	;' '
   563  18BE  3469               	retlw	105	;'i'
   564  18BF  3473               	retlw	115	;'s'
   565  18C0  3420               	retlw	32	;' '
   566  18C1  3425               	retlw	37	;'%'
   567  18C2  3464               	retlw	100	;'d'
   568  18C3  3420               	retlw	32	;' '
   569  18C4  340A               	retlw	10
   570  18C5  340D               	retlw	13
   571  18C6  3400               	retlw	0
   572                           
   573                           	psect	stringtext5
   574  0000                     __pstringtext5:	
   575                           
   576                           ; #config settings
   577  0000                     
   578                           	psect	cinit
   579  07F6                     start_initialization:	
   580  07F6                     __initialization:	
   581                           
   582                           ; Clear objects allocated to BANK1
   583  07F6  30CA               	movlw	low __pbssBANK1
   584  07F7  0084               	movwf	4
   585  07F8  3000               	movlw	high __pbssBANK1
   586  07F9  0085               	movwf	5
   587  07FA  3011               	movlw	17
   588  07FB  3188  2000         	fcall	clear_ram0
   589  07FD                     end_of_initialization:	
   590                           ;End of C runtime variable initialization code
   591                           
   592  07FD                     __end_of__initialization:	
   593  07FD  0020               	movlb	0
   594  07FE  318B  2BE2         	ljmp	_main	;jump to C main() function
   595                           
   596                           	psect	bssBANK1
   597  00CA                     __pbssBANK1:	
   598  00CA                     _Voltage:	
   599  00CA                     	ds	3
   600  00CD                     _Temperature:	
   601  00CD                     	ds	3
   602  00D0                     _Ctemp:	
   603  00D0                     	ds	3
   604  00D3                     _Photo:	
   605  00D3                     	ds	2
   606  00D5                     _FVval:	
   607  00D5                     	ds	2
   608  00D7                     _Temp:	
   609  00D7                     	ds	2
   610  00D9                     _Pval:	
   611  00D9                     	ds	2
   612                           
   613                           	psect	clrtext
   614  0800                     clear_ram0:	
   615                           ;	Called with FSR0 containing the base address, and
   616                           ;	WREG with the size to clear
   617                           
   618  0800  0064               	clrwdt	;clear the watchdog before getting into this loop
   619  0801                     clrloop0:	
   620  0801  0180               	clrf	0	;clear RAM location pointed to by FSR
   621  0802  3101               	addfsr 0,1
   622  0803  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   623  0804  2801               	goto	clrloop0	;have we reached the end yet?
   624  0805  3400               	retlw	0	;all done for this memory range, return
   625                           
   626                           	psect	cstackBANK1
   627  00A0                     __pcstackBANK1:	
   628  00A0                     ?_printf:	
   629  00A0                     printf@f:	
   630                           ; 2 bytes @ 0x0
   631                           
   632                           
   633                           ; 2 bytes @ 0x0
   634  00A0                     	ds	12
   635  00AC                     _printf$567:	
   636                           
   637                           ; 3 bytes @ 0xC
   638  00AC                     	ds	3
   639  00AF                     printf@ap:	
   640                           
   641                           ; 1 bytes @ 0xF
   642  00AF                     	ds	1
   643  00B0                     printf@tmpval:	
   644                           
   645                           ; 4 bytes @ 0x10
   646  00B0                     	ds	4
   647  00B4                     printf@val:	
   648                           
   649                           ; 4 bytes @ 0x14
   650  00B4                     	ds	4
   651  00B8                     printf@exp:	
   652                           
   653                           ; 2 bytes @ 0x18
   654  00B8                     	ds	2
   655  00BA                     printf@flag:	
   656                           
   657                           ; 2 bytes @ 0x1A
   658  00BA                     	ds	2
   659  00BC                     printf@width:	
   660                           
   661                           ; 2 bytes @ 0x1C
   662  00BC                     	ds	2
   663  00BE                     printf@fval:	
   664                           
   665                           ; 3 bytes @ 0x1E
   666  00BE                     	ds	3
   667  00C1                     printf@prec:	
   668                           
   669                           ; 2 bytes @ 0x21
   670  00C1                     	ds	2
   671  00C3                     printf@c:	
   672                           
   673                           ; 1 bytes @ 0x23
   674  00C3                     	ds	1
   675  00C4                     _main$562:	
   676                           
   677                           ; 3 bytes @ 0x24
   678  00C4                     	ds	3
   679  00C7                     _main$563:	
   680                           
   681                           ; 3 bytes @ 0x27
   682  00C7                     	ds	3
   683                           
   684                           	psect	cstackCOMMON
   685  0070                     __pcstackCOMMON:	
   686  0070                     ?_isdigit:	
   687  0070                     ?___ftge:	
   688                           ; 1 bit 
   689                           
   690  0070                     ?_pinConfig:	
   691                           ; 1 bit 
   692                           
   693  0070                     ??_pinConfig:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_setup_comms:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ??_setup_comms:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ??_isdigit:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_main:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_putch:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ??_putch:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?___awmod:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?___ftpack:	
   718                           ; 2 bytes @ 0x0
   719                           
   720  0070                     ?__tdiv_to_l_:	
   721                           ; 3 bytes @ 0x0
   722                           
   723  0070                     ?__div_to_l_:	
   724                           ; 4 bytes @ 0x0
   725                           
   726  0070                     ?___lldiv:	
   727                           ; 4 bytes @ 0x0
   728                           
   729  0070                     putch@byte:	
   730                           ; 4 bytes @ 0x0
   731                           
   732  0070                     _isdigit$348:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ___awmod@divisor:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     __div_to_l_@f1:	
   739                           ; 2 bytes @ 0x0
   740                           
   741  0070                     ___ftpack@arg:	
   742                           ; 3 bytes @ 0x0
   743                           
   744  0070                     __tdiv_to_l_@f1:	
   745                           ; 3 bytes @ 0x0
   746                           
   747  0070                     ___ftge@ff1:	
   748                           ; 3 bytes @ 0x0
   749                           
   750  0070                     ___lldiv@divisor:	
   751                           ; 3 bytes @ 0x0
   752                           
   753                           
   754                           ; 4 bytes @ 0x0
   755  0070                     	ds	1
   756  0071                     isdigit@c:	
   757                           
   758                           ; 1 bytes @ 0x1
   759  0071                     	ds	1
   760  0072                     ___awmod@dividend:	
   761                           
   762                           ; 2 bytes @ 0x2
   763  0072                     	ds	1
   764  0073                     ___ftpack@exp:	
   765  0073                     __div_to_l_@f2:	
   766                           ; 1 bytes @ 0x3
   767                           
   768  0073                     __tdiv_to_l_@f2:	
   769                           ; 3 bytes @ 0x3
   770                           
   771  0073                     ___ftge@ff2:	
   772                           ; 3 bytes @ 0x3
   773                           
   774                           
   775                           ; 3 bytes @ 0x3
   776  0073                     	ds	1
   777  0074                     ??___awmod:	
   778  0074                     ___ftpack@sign:	
   779                           ; 1 bytes @ 0x4
   780                           
   781  0074                     ___lldiv@dividend:	
   782                           ; 1 bytes @ 0x4
   783                           
   784                           
   785                           ; 4 bytes @ 0x4
   786  0074                     	ds	1
   787  0075                     ??___ftpack:	
   788  0075                     ___awmod@counter:	
   789                           ; 1 bytes @ 0x5
   790                           
   791                           
   792                           ; 1 bytes @ 0x5
   793  0075                     	ds	1
   794  0076                     ??__tdiv_to_l_:	
   795  0076                     ??__div_to_l_:	
   796                           ; 1 bytes @ 0x6
   797                           
   798  0076                     ??___ftge:	
   799                           ; 1 bytes @ 0x6
   800                           
   801  0076                     ___awmod@sign:	
   802                           ; 1 bytes @ 0x6
   803                           
   804                           
   805                           ; 1 bytes @ 0x6
   806  0076                     	ds	1
   807  0077                     ?___awdiv:	
   808  0077                     ___awdiv@divisor:	
   809                           ; 2 bytes @ 0x7
   810                           
   811                           
   812                           ; 2 bytes @ 0x7
   813  0077                     	ds	1
   814  0078                     ??___lldiv:	
   815  0078                     ?___lltoft:	
   816                           ; 1 bytes @ 0x8
   817                           
   818  0078                     ?___lwtoft:	
   819                           ; 3 bytes @ 0x8
   820                           
   821  0078                     ___lwtoft@c:	
   822                           ; 3 bytes @ 0x8
   823                           
   824  0078                     ___lltoft@c:	
   825                           ; 2 bytes @ 0x8
   826                           
   827                           
   828                           ; 4 bytes @ 0x8
   829  0078                     	ds	1
   830  0079                     ___awdiv@dividend:	
   831  0079                     ___lldiv@quotient:	
   832                           ; 2 bytes @ 0x9
   833                           
   834                           
   835                           ; 4 bytes @ 0x9
   836  0079                     	ds	2
   837  007B                     ??___awdiv:	
   838  007B                     ??___lwtoft:	
   839                           ; 1 bytes @ 0xB
   840                           
   841                           
   842                           ; 1 bytes @ 0xB
   843  007B                     	ds	1
   844  007C                     ??___wmul:	
   845  007C                     ??___ftneg:	
   846                           ; 1 bytes @ 0xC
   847                           
   848  007C                     ??___lltoft:	
   849                           ; 1 bytes @ 0xC
   850                           
   851  007C                     ___wmul@product:	
   852                           ; 1 bytes @ 0xC
   853                           
   854                           
   855                           ; 2 bytes @ 0xC
   856  007C                     	ds	1
   857  007D                     ___lldiv@counter:	
   858  007D                     ___lltoft@exp:	
   859                           ; 1 bytes @ 0xD
   860                           
   861                           
   862                           ; 1 bytes @ 0xD
   863  007D                     	ds	1
   864  007E                     ??___ftsub:	
   865                           
   866                           	psect	cstackBANK0
   867  0020                     __pcstackBANK0:	
   868                           ; 1 bytes @ 0xE
   869                           
   870  0020                     ?___ftdiv:	
   871  0020                     ?___llmod:	
   872                           ; 3 bytes @ 0x0
   873                           
   874  0020                     ___awdiv@counter:	
   875                           ; 4 bytes @ 0x0
   876                           
   877  0020                     ___ftdiv@f2:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0020                     __div_to_l_@quot:	
   881                           ; 3 bytes @ 0x0
   882                           
   883  0020                     __tdiv_to_l_@quot:	
   884                           ; 4 bytes @ 0x0
   885                           
   886  0020                     ___llmod@divisor:	
   887                           ; 4 bytes @ 0x0
   888                           
   889                           
   890                           ; 4 bytes @ 0x0
   891  0020                     	ds	1
   892  0021                     ___awdiv@sign:	
   893                           
   894                           ; 1 bytes @ 0x1
   895  0021                     	ds	1
   896  0022                     ___awdiv@quotient:	
   897                           
   898                           ; 2 bytes @ 0x2
   899  0022                     	ds	1
   900  0023                     ___ftdiv@f1:	
   901                           
   902                           ; 3 bytes @ 0x3
   903  0023                     	ds	1
   904  0024                     ?___wmul:	
   905  0024                     __div_to_l_@cntr:	
   906                           ; 2 bytes @ 0x4
   907                           
   908  0024                     __tdiv_to_l_@cntr:	
   909                           ; 1 bytes @ 0x4
   910                           
   911  0024                     ___wmul@multiplier:	
   912                           ; 1 bytes @ 0x4
   913                           
   914  0024                     ___llmod@dividend:	
   915                           ; 2 bytes @ 0x4
   916                           
   917                           
   918                           ; 4 bytes @ 0x4
   919  0024                     	ds	1
   920  0025                     __div_to_l_@exp1:	
   921  0025                     __tdiv_to_l_@exp1:	
   922                           ; 1 bytes @ 0x5
   923                           
   924                           
   925                           ; 1 bytes @ 0x5
   926  0025                     	ds	1
   927  0026                     ??___ftdiv:	
   928  0026                     ___wmul@multiplicand:	
   929                           ; 1 bytes @ 0x6
   930                           
   931                           
   932                           ; 2 bytes @ 0x6
   933  0026                     	ds	2
   934  0028                     ??___llmod:	
   935                           
   936                           ; 1 bytes @ 0x8
   937  0028                     	ds	1
   938  0029                     ___llmod@counter:	
   939                           
   940                           ; 1 bytes @ 0x9
   941  0029                     	ds	1
   942  002A                     ___ftdiv@cntr:	
   943                           
   944                           ; 1 bytes @ 0xA
   945  002A                     	ds	1
   946  002B                     ___ftdiv@f3:	
   947                           
   948                           ; 3 bytes @ 0xB
   949  002B                     	ds	3
   950  002E                     ___ftdiv@exp:	
   951                           
   952                           ; 1 bytes @ 0xE
   953  002E                     	ds	1
   954  002F                     ___ftdiv@sign:	
   955                           
   956                           ; 1 bytes @ 0xF
   957  002F                     	ds	1
   958  0030                     ?___ftneg:	
   959  0030                     ___ftneg@f1:	
   960                           ; 3 bytes @ 0x10
   961                           
   962                           
   963                           ; 3 bytes @ 0x10
   964  0030                     	ds	3
   965  0033                     ?___ftadd:	
   966  0033                     ___ftadd@f1:	
   967                           ; 3 bytes @ 0x13
   968                           
   969                           
   970                           ; 3 bytes @ 0x13
   971  0033                     	ds	3
   972  0036                     ___ftadd@f2:	
   973                           
   974                           ; 3 bytes @ 0x16
   975  0036                     	ds	3
   976  0039                     ??___ftadd:	
   977                           
   978                           ; 1 bytes @ 0x19
   979  0039                     	ds	4
   980  003D                     ___ftadd@sign:	
   981                           
   982                           ; 1 bytes @ 0x1D
   983  003D                     	ds	1
   984  003E                     ___ftadd@exp2:	
   985                           
   986                           ; 1 bytes @ 0x1E
   987  003E                     	ds	1
   988  003F                     ___ftadd@exp1:	
   989                           
   990                           ; 1 bytes @ 0x1F
   991  003F                     	ds	1
   992  0040                     ?___ftmul:	
   993  0040                     ?___ftsub:	
   994                           ; 3 bytes @ 0x20
   995                           
   996  0040                     ___ftmul@f1:	
   997                           ; 3 bytes @ 0x20
   998                           
   999  0040                     ___ftsub@f2:	
  1000                           ; 3 bytes @ 0x20
  1001                           
  1002                           
  1003                           ; 3 bytes @ 0x20
  1004  0040                     	ds	3
  1005  0043                     ___ftmul@f2:	
  1006  0043                     ___ftsub@f1:	
  1007                           ; 3 bytes @ 0x23
  1008                           
  1009                           
  1010                           ; 3 bytes @ 0x23
  1011  0043                     	ds	3
  1012  0046                     ??___ftmul:	
  1013                           
  1014                           ; 1 bytes @ 0x26
  1015  0046                     	ds	4
  1016  004A                     ___ftmul@exp:	
  1017                           
  1018                           ; 1 bytes @ 0x2A
  1019  004A                     	ds	1
  1020  004B                     ___ftmul@f3_as_product:	
  1021                           
  1022                           ; 3 bytes @ 0x2B
  1023  004B                     	ds	3
  1024  004E                     ___ftmul@cntr:	
  1025                           
  1026                           ; 1 bytes @ 0x2E
  1027  004E                     	ds	1
  1028  004F                     ___ftmul@sign:	
  1029                           
  1030                           ; 1 bytes @ 0x2F
  1031  004F                     	ds	1
  1032  0050                     ?_fround:	
  1033  0050                     ?_scale:	
  1034                           ; 3 bytes @ 0x30
  1035                           
  1036                           
  1037                           ; 3 bytes @ 0x30
  1038  0050                     	ds	3
  1039  0053                     ??_fround:	
  1040  0053                     ??_scale:	
  1041                           ; 1 bytes @ 0x33
  1042                           
  1043                           
  1044                           ; 1 bytes @ 0x33
  1045  0053                     	ds	2
  1046  0055                     _scale$566:	
  1047                           
  1048                           ; 3 bytes @ 0x35
  1049  0055                     	ds	2
  1050  0057                     _fround$565:	
  1051                           
  1052                           ; 3 bytes @ 0x37
  1053  0057                     	ds	1
  1054  0058                     scale@scl:	
  1055                           
  1056                           ; 1 bytes @ 0x38
  1057  0058                     	ds	1
  1058  0059                     ?___fttol:	
  1059  0059                     ___fttol@f1:	
  1060                           ; 4 bytes @ 0x39
  1061                           
  1062                           
  1063                           ; 3 bytes @ 0x39
  1064  0059                     	ds	1
  1065  005A                     _fround$564:	
  1066                           
  1067                           ; 3 bytes @ 0x3A
  1068  005A                     	ds	3
  1069  005D                     ??___fttol:	
  1070  005D                     fround@prec:	
  1071                           ; 1 bytes @ 0x3D
  1072                           
  1073                           
  1074                           ; 1 bytes @ 0x3D
  1075  005D                     	ds	4
  1076  0061                     ___fttol@sign1:	
  1077                           
  1078                           ; 1 bytes @ 0x41
  1079  0061                     	ds	1
  1080  0062                     ___fttol@lval:	
  1081                           
  1082                           ; 4 bytes @ 0x42
  1083  0062                     	ds	4
  1084  0066                     ___fttol@exp1:	
  1085                           
  1086                           ; 1 bytes @ 0x46
  1087  0066                     	ds	1
  1088  0067                     ??_printf:	
  1089                           
  1090                           ; 1 bytes @ 0x47
  1091  0067                     	ds	6
  1092  006D                     ??_main:	
  1093                           
  1094                           ; 1 bytes @ 0x4D
  1095  006D                     	ds	2
  1096                           
  1097                           	psect	maintext
  1098  0BE2                     __pmaintext:	
  1099 ;;
  1100 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1101 ;;
  1102 ;; *************** function _main *****************
  1103 ;; Defined at:
  1104 ;;		line 49 in file "main.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : B1F/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1119 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  1120 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1121 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0
  1122 ;;Total ram usage:        8 bytes
  1123 ;; Hardware stack levels required when called:    4
  1124 ;; This function calls:
  1125 ;;		___ftadd
  1126 ;;		___ftdiv
  1127 ;;		___ftmul
  1128 ;;		___ftneg
  1129 ;;		___lwtoft
  1130 ;;		_pinConfig
  1131 ;;		_printf
  1132 ;;		_setup_comms
  1133 ;; This function is called by:
  1134 ;;		Startup code after reset
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function _main
  1140  0BE2                     _main:	
  1141                           
  1142                           ;main.c: 51: pinConfig();
  1143                           
  1144                           ;incstack = 0
  1145                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1146  0BE2  3194  247A  318B   	fcall	_pinConfig
  1147                           
  1148                           ;main.c: 53: setup_comms();
  1149  0BE5  3180  2005  318B   	fcall	_setup_comms
  1150                           
  1151                           ;main.c: 55: FVRCON = 0xA2;
  1152  0BE8  30A2               	movlw	162
  1153  0BE9  0022               	movlb	2	; select bank2
  1154  0BEA  0097               	movwf	23	;volatile
  1155                           
  1156                           ;main.c: 59: ADCON1 = 0xC0;
  1157  0BEB  30C0               	movlw	192
  1158  0BEC  0021               	movlb	1	; select bank1
  1159  0BED  009E               	movwf	30	;volatile
  1160  0BEE                     l2717:	
  1161                           ;main.c: 61: while (1) {
  1162                           
  1163                           
  1164                           ;main.c: 64: ADCON0 = 0x2D;
  1165  0BEE  302D               	movlw	45
  1166  0BEF  0021               	movlb	1	; select bank1
  1167  0BF0  009D               	movwf	29	;volatile
  1168                           
  1169                           ;main.c: 65: _delay((unsigned long)((10)*(4000000.0/4000.0)));
  1170  0BF1  300D               	movlw	13
  1171  0BF2  0020               	movlb	0	; select bank0
  1172  0BF3  00ED               	movwf	??_main
  1173  0BF4  30FB               	movlw	251
  1174  0BF5                     u4147:	
  1175  0BF5  0B89               	decfsz	9,f
  1176  0BF6  2BF5               	goto	u4147
  1177  0BF7  0BED               	decfsz	??_main,f
  1178  0BF8  2BF5               	goto	u4147
  1179  0BF9  3200               	nop2
  1180                           
  1181                           ;main.c: 66: ADGO = 1;
  1182  0BFA  0021               	movlb	1	; select bank1
  1183  0BFB  149D               	bsf	29,1	;volatile
  1184  0BFC                     l96:	
  1185                           ;main.c: 67: while(ADGO)continue;
  1186                           
  1187  0BFC  189D               	btfsc	29,1	;volatile
  1188  0BFD  2BFC               	goto	l96
  1189                           
  1190                           ;main.c: 68: Pval = (unsigned)((ADRESH<<8)+(ADRESL));
  1191  0BFE  081C               	movf	28,w	;volatile
  1192  0BFF  00DA               	movwf	(_Pval+1)^(0+128)
  1193  0C00  081B               	movf	27,w	;volatile
  1194  0C01  00D9               	movwf	_Pval^(0+128)
  1195                           
  1196                           ;main.c: 71: ADCON0 = 0x7D;
  1197  0C02  307D               	movlw	125
  1198  0C03  009D               	movwf	29	;volatile
  1199                           
  1200                           ;main.c: 72: _delay((unsigned long)((10)*(4000000.0/4000.0)));
  1201  0C04  300D               	movlw	13
  1202  0C05  0020               	movlb	0	; select bank0
  1203  0C06  00ED               	movwf	??_main
  1204  0C07  30FB               	movlw	251
  1205  0C08                     u4157:	
  1206  0C08  0B89               	decfsz	9,f
  1207  0C09  2C08               	goto	u4157
  1208  0C0A  0BED               	decfsz	??_main,f
  1209  0C0B  2C08               	goto	u4157
  1210  0C0C  3200               	nop2
  1211                           
  1212                           ;main.c: 73: ADGO = 1;
  1213  0C0D  0021               	movlb	1	; select bank1
  1214  0C0E  149D               	bsf	29,1	;volatile
  1215  0C0F                     l99:	
  1216                           ;main.c: 74: while(ADGO)continue;
  1217                           
  1218  0C0F  189D               	btfsc	29,1	;volatile
  1219  0C10  2C0F               	goto	l99
  1220                           
  1221                           ;main.c: 75: FVval = ((ADRESH<<8)+(ADRESL));
  1222  0C11  081C               	movf	28,w	;volatile
  1223  0C12  00D6               	movwf	(_FVval+1)^(0+128)
  1224  0C13  081B               	movf	27,w	;volatile
  1225  0C14  00D5               	movwf	_FVval^(0+128)
  1226                           
  1227                           ;main.c: 78: ADCON0 = 0x75;
  1228  0C15  3075               	movlw	117
  1229  0C16  009D               	movwf	29	;volatile
  1230                           
  1231                           ;main.c: 79: _delay((unsigned long)((10)*(4000000.0/4000.0)));
  1232  0C17  300D               	movlw	13
  1233  0C18  0020               	movlb	0	; select bank0
  1234  0C19  00ED               	movwf	??_main
  1235  0C1A  30FB               	movlw	251
  1236  0C1B                     u4167:	
  1237  0C1B  0B89               	decfsz	9,f
  1238  0C1C  2C1B               	goto	u4167
  1239  0C1D  0BED               	decfsz	??_main,f
  1240  0C1E  2C1B               	goto	u4167
  1241  0C1F  3200               	nop2
  1242                           
  1243                           ;main.c: 80: ADGO = 1;
  1244  0C20  0021               	movlb	1	; select bank1
  1245  0C21  149D               	bsf	29,1	;volatile
  1246  0C22                     l102:	
  1247                           ;main.c: 81: while(ADGO)continue;
  1248                           
  1249  0C22  189D               	btfsc	29,1	;volatile
  1250  0C23  2C22               	goto	l102
  1251                           
  1252                           ;main.c: 82: Temp = ((ADRESH<<8)+(ADRESL));
  1253  0C24  081C               	movf	28,w	;volatile
  1254  0C25  00D8               	movwf	(_Temp+1)^(0+128)
  1255  0C26  081B               	movf	27,w	;volatile
  1256  0C27  00D7               	movwf	_Temp^(0+128)
  1257                           
  1258                           ;main.c: 86: Ctemp = ((0.659-((1.48)*(1-((float)Temp/1023))))/0.00132)-40;
  1259  0C28  0858               	movf	(_Temp+1)^(0+128),w
  1260  0C29  00F9               	movwf	___lwtoft@c+1
  1261  0C2A  0857               	movf	_Temp^(0+128),w
  1262  0C2B  00F8               	movwf	___lwtoft@c
  1263  0C2C  3194  244B  318B   	fcall	___lwtoft
  1264  0C2F  0878               	movf	?___lwtoft,w
  1265  0C30  0020               	movlb	0	; select bank0
  1266  0C31  00A3               	movwf	___ftdiv@f1
  1267  0C32  0879               	movf	?___lwtoft+1,w
  1268  0C33  00A4               	movwf	___ftdiv@f1+1
  1269  0C34  087A               	movf	?___lwtoft+2,w
  1270  0C35  00A5               	movwf	___ftdiv@f1+2
  1271  0C36  30C0               	movlw	192
  1272  0C37  00A0               	movwf	___ftdiv@f2
  1273  0C38  307F               	movlw	127
  1274  0C39  00A1               	movwf	___ftdiv@f2+1
  1275  0C3A  3044               	movlw	68
  1276  0C3B  00A2               	movwf	___ftdiv@f2+2
  1277  0C3C  3196  26A3  318B   	fcall	___ftdiv
  1278  0C3F  0020               	movlb	0	; select bank0
  1279  0C40  0820               	movf	?___ftdiv,w
  1280  0C41  00B0               	movwf	___ftneg@f1
  1281  0C42  0821               	movf	?___ftdiv+1,w
  1282  0C43  00B1               	movwf	___ftneg@f1+1
  1283  0C44  0822               	movf	?___ftdiv+2,w
  1284  0C45  00B2               	movwf	___ftneg@f1+2
  1285  0C46  3194  2434  318B   	fcall	___ftneg
  1286  0C49  0020               	movlb	0	; select bank0
  1287  0C4A  0830               	movf	?___ftneg,w
  1288  0C4B  00B6               	movwf	___ftadd@f2
  1289  0C4C  0831               	movf	?___ftneg+1,w
  1290  0C4D  00B7               	movwf	___ftadd@f2+1
  1291  0C4E  0832               	movf	?___ftneg+2,w
  1292  0C4F  00B8               	movwf	___ftadd@f2+2
  1293  0C50  3000               	movlw	0
  1294  0C51  00B3               	movwf	___ftadd@f1
  1295  0C52  3080               	movlw	128
  1296  0C53  00B4               	movwf	___ftadd@f1+1
  1297  0C54  303F               	movlw	63
  1298  0C55  00B5               	movwf	___ftadd@f1+2
  1299  0C56  3188  206A  318B   	fcall	___ftadd
  1300  0C59  0020               	movlb	0	; select bank0
  1301  0C5A  0833               	movf	?___ftadd,w
  1302  0C5B  00C3               	movwf	___ftmul@f2
  1303  0C5C  0834               	movf	?___ftadd+1,w
  1304  0C5D  00C4               	movwf	___ftmul@f2+1
  1305  0C5E  0835               	movf	?___ftadd+2,w
  1306  0C5F  00C5               	movwf	___ftmul@f2+2
  1307  0C60  3071               	movlw	113
  1308  0C61  00C0               	movwf	___ftmul@f1
  1309  0C62  30BD               	movlw	189
  1310  0C63  00C1               	movwf	___ftmul@f1+1
  1311  0C64  303F               	movlw	63
  1312  0C65  00C2               	movwf	___ftmul@f1+2
  1313  0C66  3197  274C  318B   	fcall	___ftmul
  1314  0C69  0020               	movlb	0	; select bank0
  1315  0C6A  0840               	movf	?___ftmul,w
  1316  0C6B  0021               	movlb	1	; select bank1
  1317  0C6C  00C4               	movwf	_main$562^(0+128)
  1318  0C6D  0020               	movlb	0	; select bank0
  1319  0C6E  0841               	movf	?___ftmul+1,w
  1320  0C6F  0021               	movlb	1	; select bank1
  1321  0C70  00C5               	movwf	(_main$562+1)^(0+128)
  1322  0C71  0020               	movlb	0	; select bank0
  1323  0C72  0842               	movf	?___ftmul+2,w
  1324  0C73  0021               	movlb	1	; select bank1
  1325  0C74  00C6               	movwf	(_main$562+2)^(0+128)
  1326                           
  1327                           ;main.c: 86: Ctemp = ((0.659-((1.48)*(1-((float)Temp/1023))))/0.00132)-40;
  1328  0C75  3004               	movlw	4
  1329  0C76  0020               	movlb	0	; select bank0
  1330  0C77  00A0               	movwf	___ftdiv@f2
  1331  0C78  30AD               	movlw	173
  1332  0C79  00A1               	movwf	___ftdiv@f2+1
  1333  0C7A  303A               	movlw	58
  1334  0C7B  00A2               	movwf	___ftdiv@f2+2
  1335  0C7C  30B4               	movlw	180
  1336  0C7D  00B3               	movwf	___ftadd@f1
  1337  0C7E  3028               	movlw	40
  1338  0C7F  00B4               	movwf	___ftadd@f1+1
  1339  0C80  303F               	movlw	63
  1340  0C81  00B5               	movwf	___ftadd@f1+2
  1341  0C82  0021               	movlb	1	; select bank1
  1342  0C83  0844               	movf	_main$562^(0+128),w
  1343  0C84  0020               	movlb	0	; select bank0
  1344  0C85  00B0               	movwf	___ftneg@f1
  1345  0C86  0021               	movlb	1	; select bank1
  1346  0C87  0845               	movf	(_main$562+1)^(0+128),w
  1347  0C88  0020               	movlb	0	; select bank0
  1348  0C89  00B1               	movwf	___ftneg@f1+1
  1349  0C8A  0021               	movlb	1	; select bank1
  1350  0C8B  0846               	movf	(_main$562+2)^(0+128),w
  1351  0C8C  0020               	movlb	0	; select bank0
  1352  0C8D  00B2               	movwf	___ftneg@f1+2
  1353  0C8E  3194  2434  318B   	fcall	___ftneg
  1354  0C91  0020               	movlb	0	; select bank0
  1355  0C92  0830               	movf	?___ftneg,w
  1356  0C93  00B6               	movwf	___ftadd@f2
  1357  0C94  0831               	movf	?___ftneg+1,w
  1358  0C95  00B7               	movwf	___ftadd@f2+1
  1359  0C96  0832               	movf	?___ftneg+2,w
  1360  0C97  00B8               	movwf	___ftadd@f2+2
  1361  0C98  3188  206A  318B   	fcall	___ftadd
  1362  0C9B  0020               	movlb	0	; select bank0
  1363  0C9C  0833               	movf	?___ftadd,w
  1364  0C9D  00A3               	movwf	___ftdiv@f1
  1365  0C9E  0834               	movf	?___ftadd+1,w
  1366  0C9F  00A4               	movwf	___ftdiv@f1+1
  1367  0CA0  0835               	movf	?___ftadd+2,w
  1368  0CA1  00A5               	movwf	___ftdiv@f1+2
  1369  0CA2  3196  26A3  318B   	fcall	___ftdiv
  1370  0CA5  0020               	movlb	0	; select bank0
  1371  0CA6  0820               	movf	?___ftdiv,w
  1372  0CA7  0021               	movlb	1	; select bank1
  1373  0CA8  00C7               	movwf	_main$563^(0+128)
  1374  0CA9  0020               	movlb	0	; select bank0
  1375  0CAA  0821               	movf	?___ftdiv+1,w
  1376  0CAB  0021               	movlb	1	; select bank1
  1377  0CAC  00C8               	movwf	(_main$563+1)^(0+128)
  1378  0CAD  0020               	movlb	0	; select bank0
  1379  0CAE  0822               	movf	?___ftdiv+2,w
  1380  0CAF  0021               	movlb	1	; select bank1
  1381  0CB0  00C9               	movwf	(_main$563+2)^(0+128)
  1382                           
  1383                           ;main.c: 86: Ctemp = ((0.659-((1.48)*(1-((float)Temp/1023))))/0.00132)-40;
  1384  0CB1  3000               	movlw	0
  1385  0CB2  0020               	movlb	0	; select bank0
  1386  0CB3  00B3               	movwf	___ftadd@f1
  1387  0CB4  3020               	movlw	32
  1388  0CB5  00B4               	movwf	___ftadd@f1+1
  1389  0CB6  30C2               	movlw	194
  1390  0CB7  00B5               	movwf	___ftadd@f1+2
  1391  0CB8  0021               	movlb	1	; select bank1
  1392  0CB9  0847               	movf	_main$563^(0+128),w
  1393  0CBA  0020               	movlb	0	; select bank0
  1394  0CBB  00B6               	movwf	___ftadd@f2
  1395  0CBC  0021               	movlb	1	; select bank1
  1396  0CBD  0848               	movf	(_main$563+1)^(0+128),w
  1397  0CBE  0020               	movlb	0	; select bank0
  1398  0CBF  00B7               	movwf	___ftadd@f2+1
  1399  0CC0  0021               	movlb	1	; select bank1
  1400  0CC1  0849               	movf	(_main$563+2)^(0+128),w
  1401  0CC2  0020               	movlb	0	; select bank0
  1402  0CC3  00B8               	movwf	___ftadd@f2+2
  1403  0CC4  3188  206A  318B   	fcall	___ftadd
  1404  0CC7  0020               	movlb	0	; select bank0
  1405  0CC8  0833               	movf	?___ftadd,w
  1406  0CC9  0021               	movlb	1	; select bank1
  1407  0CCA  00D0               	movwf	_Ctemp^(0+128)
  1408  0CCB  0020               	movlb	0	; select bank0
  1409  0CCC  0834               	movf	?___ftadd+1,w
  1410  0CCD  0021               	movlb	1	; select bank1
  1411  0CCE  00D1               	movwf	(_Ctemp+1)^(0+128)
  1412  0CCF  0020               	movlb	0	; select bank0
  1413  0CD0  0835               	movf	?___ftadd+2,w
  1414  0CD1  0021               	movlb	1	; select bank1
  1415  0CD2  00D2               	movwf	(_Ctemp+2)^(0+128)
  1416                           
  1417                           ;main.c: 87: printf("Raw Temp value is %d RAW | Pot value is %d | Fixed Voltage is %d \n
      +                          \r", Temp, Pval, FVval);
  1418  0CD3  3083               	movlw	low (STR_1| (0+32768))
  1419  0CD4  00A0               	movwf	printf@f^(0+128)
  1420  0CD5  3098               	movlw	high (STR_1| (0+32768))
  1421  0CD6  00A1               	movwf	(printf@f^(0+128)+1)
  1422  0CD7  0858               	movf	(_Temp+1)^(0+128),w
  1423  0CD8  00A3               	movwf	((?_printf+1)^(0+128)+2)
  1424  0CD9  0857               	movf	_Temp^(0+128),w
  1425  0CDA  00A2               	movwf	(?_printf^(0+128)+2)
  1426  0CDB  085A               	movf	(_Pval+1)^(0+128),w
  1427  0CDC  00A5               	movwf	((?_printf+1)^(0+128)+4)
  1428  0CDD  0859               	movf	_Pval^(0+128),w
  1429  0CDE  00A4               	movwf	(?_printf^(0+128)+4)
  1430  0CDF  0856               	movf	(_FVval+1)^(0+128),w
  1431  0CE0  00A7               	movwf	((?_printf+1)^(0+128)+6)
  1432  0CE1  0855               	movf	_FVval^(0+128),w
  1433  0CE2  00A6               	movwf	(?_printf^(0+128)+6)
  1434  0CE3  3180  20F4  318B   	fcall	_printf
  1435                           
  1436                           ;main.c: 88: _delay((unsigned long)((1000)*(4000000.0/4000.0)));
  1437  0CE6  3006               	movlw	6
  1438  0CE7  0020               	movlb	0	; select bank0
  1439  0CE8  00EE               	movwf	??_main+1
  1440  0CE9  3013               	movlw	19
  1441  0CEA  00ED               	movwf	??_main
  1442  0CEB  30AD               	movlw	173
  1443  0CEC                     u4177:	
  1444  0CEC  0B89               	decfsz	9,f
  1445  0CED  2CEC               	goto	u4177
  1446  0CEE  0BED               	decfsz	??_main,f
  1447  0CEF  2CEC               	goto	u4177
  1448  0CF0  0BEE               	decfsz	??_main+1,f
  1449  0CF1  2CEC               	goto	u4177
  1450  0CF2  3200               	nop2
  1451                           
  1452                           ;main.c: 94: if ( Temp > Pval ) {
  1453  0CF3  0021               	movlb	1	; select bank1
  1454  0CF4  0858               	movf	(_Temp+1)^(0+128),w
  1455  0CF5  025A               	subwf	(_Pval+1)^(0+128),w
  1456  0CF6  1D03               	skipz
  1457  0CF7  2CFA               	goto	u4115
  1458  0CF8  0857               	movf	_Temp^(0+128),w
  1459  0CF9  0259               	subwf	_Pval^(0+128),w
  1460  0CFA                     u4115:	
  1461  0CFA  1803               	skipnc
  1462  0CFB  2D00               	goto	l105
  1463                           
  1464                           ;main.c: 96: RA5 = 0;
  1465  0CFC  0020               	movlb	0	; select bank0
  1466  0CFD  128C               	bcf	12,5	;volatile
  1467                           
  1468                           ;main.c: 97: RC6 = 1;
  1469  0CFE  170E               	bsf	14,6	;volatile
  1470                           
  1471                           ;main.c: 99: }
  1472  0CFF  2D03               	goto	l2747
  1473  0D00                     l105:	
  1474                           
  1475                           ;main.c: 101: else {
  1476                           ;main.c: 103: RA5 = 1;
  1477  0D00  0020               	movlb	0	; select bank0
  1478  0D01  168C               	bsf	12,5	;volatile
  1479                           
  1480                           ;main.c: 104: RC6 = 0;
  1481  0D02  130E               	bcf	14,6	;volatile
  1482  0D03                     l2747:	
  1483                           
  1484                           ;main.c: 106: }
  1485                           ;main.c: 109: ADCON0 = 0x19;
  1486  0D03  3019               	movlw	25
  1487  0D04  0021               	movlb	1	; select bank1
  1488  0D05  009D               	movwf	29	;volatile
  1489                           
  1490                           ;main.c: 110: _delay((unsigned long)((10)*(4000000.0/4000.0)));
  1491  0D06  300D               	movlw	13
  1492  0D07  0020               	movlb	0	; select bank0
  1493  0D08  00ED               	movwf	??_main
  1494  0D09  30FB               	movlw	251
  1495  0D0A                     u4187:	
  1496  0D0A  0B89               	decfsz	9,f
  1497  0D0B  2D0A               	goto	u4187
  1498  0D0C  0BED               	decfsz	??_main,f
  1499  0D0D  2D0A               	goto	u4187
  1500  0D0E  3200               	nop2
  1501                           
  1502                           ;main.c: 111: ADGO = 1;
  1503  0D0F  0021               	movlb	1	; select bank1
  1504  0D10  149D               	bsf	29,1	;volatile
  1505  0D11                     l107:	
  1506                           ;main.c: 112: while(ADGO)continue;
  1507                           
  1508  0D11  189D               	btfsc	29,1	;volatile
  1509  0D12  2D11               	goto	l107
  1510                           
  1511                           ;main.c: 113: Temp = ((ADRESH<<8)+(ADRESL));
  1512  0D13  081C               	movf	28,w	;volatile
  1513  0D14  00D8               	movwf	(_Temp+1)^(0+128)
  1514  0D15  081B               	movf	27,w	;volatile
  1515  0D16  00D7               	movwf	_Temp^(0+128)
  1516                           
  1517                           ;main.c: 115: Voltage = (float)(Temp * 5.0)/1024;
  1518  0D17  3000               	movlw	0
  1519  0D18  0020               	movlb	0	; select bank0
  1520  0D19  00A0               	movwf	___ftdiv@f2
  1521  0D1A  3080               	movlw	128
  1522  0D1B  00A1               	movwf	___ftdiv@f2+1
  1523  0D1C  3044               	movlw	68
  1524  0D1D  00A2               	movwf	___ftdiv@f2+2
  1525  0D1E  3000               	movlw	0
  1526  0D1F  00C0               	movwf	___ftmul@f1
  1527  0D20  30A0               	movlw	160
  1528  0D21  00C1               	movwf	___ftmul@f1+1
  1529  0D22  3040               	movlw	64
  1530  0D23  00C2               	movwf	___ftmul@f1+2
  1531  0D24  0021               	movlb	1	; select bank1
  1532  0D25  0858               	movf	(_Temp+1)^(0+128),w
  1533  0D26  00F9               	movwf	___lwtoft@c+1
  1534  0D27  0857               	movf	_Temp^(0+128),w
  1535  0D28  00F8               	movwf	___lwtoft@c
  1536  0D29  3194  244B  318B   	fcall	___lwtoft
  1537  0D2C  0878               	movf	?___lwtoft,w
  1538  0D2D  0020               	movlb	0	; select bank0
  1539  0D2E  00C3               	movwf	___ftmul@f2
  1540  0D2F  0879               	movf	?___lwtoft+1,w
  1541  0D30  00C4               	movwf	___ftmul@f2+1
  1542  0D31  087A               	movf	?___lwtoft+2,w
  1543  0D32  00C5               	movwf	___ftmul@f2+2
  1544  0D33  3197  274C  318B   	fcall	___ftmul
  1545  0D36  0020               	movlb	0	; select bank0
  1546  0D37  0840               	movf	?___ftmul,w
  1547  0D38  00A3               	movwf	___ftdiv@f1
  1548  0D39  0841               	movf	?___ftmul+1,w
  1549  0D3A  00A4               	movwf	___ftdiv@f1+1
  1550  0D3B  0842               	movf	?___ftmul+2,w
  1551  0D3C  00A5               	movwf	___ftdiv@f1+2
  1552  0D3D  3196  26A3  318B   	fcall	___ftdiv
  1553  0D40  0020               	movlb	0	; select bank0
  1554  0D41  0820               	movf	?___ftdiv,w
  1555  0D42  0021               	movlb	1	; select bank1
  1556  0D43  00CA               	movwf	_Voltage^(0+128)
  1557  0D44  0020               	movlb	0	; select bank0
  1558  0D45  0821               	movf	?___ftdiv+1,w
  1559  0D46  0021               	movlb	1	; select bank1
  1560  0D47  00CB               	movwf	(_Voltage+1)^(0+128)
  1561  0D48  0020               	movlb	0	; select bank0
  1562  0D49  0822               	movf	?___ftdiv+2,w
  1563  0D4A  0021               	movlb	1	; select bank1
  1564  0D4B  00CC               	movwf	(_Voltage+2)^(0+128)
  1565                           
  1566                           ;main.c: 116: Temperature = (Voltage - .5)/ 0.01;
  1567  0D4C  30D7               	movlw	215
  1568  0D4D  0020               	movlb	0	; select bank0
  1569  0D4E  00A0               	movwf	___ftdiv@f2
  1570  0D4F  3023               	movlw	35
  1571  0D50  00A1               	movwf	___ftdiv@f2+1
  1572  0D51  303C               	movlw	60
  1573  0D52  00A2               	movwf	___ftdiv@f2+2
  1574  0D53  3000               	movlw	0
  1575  0D54  00B3               	movwf	___ftadd@f1
  1576  0D55  3000               	movlw	0
  1577  0D56  00B4               	movwf	___ftadd@f1+1
  1578  0D57  30BF               	movlw	191
  1579  0D58  00B5               	movwf	___ftadd@f1+2
  1580  0D59  0021               	movlb	1	; select bank1
  1581  0D5A  084A               	movf	_Voltage^(0+128),w
  1582  0D5B  0020               	movlb	0	; select bank0
  1583  0D5C  00B6               	movwf	___ftadd@f2
  1584  0D5D  0021               	movlb	1	; select bank1
  1585  0D5E  084B               	movf	(_Voltage+1)^(0+128),w
  1586  0D5F  0020               	movlb	0	; select bank0
  1587  0D60  00B7               	movwf	___ftadd@f2+1
  1588  0D61  0021               	movlb	1	; select bank1
  1589  0D62  084C               	movf	(_Voltage+2)^(0+128),w
  1590  0D63  0020               	movlb	0	; select bank0
  1591  0D64  00B8               	movwf	___ftadd@f2+2
  1592  0D65  3188  206A  318B   	fcall	___ftadd
  1593  0D68  0020               	movlb	0	; select bank0
  1594  0D69  0833               	movf	?___ftadd,w
  1595  0D6A  00A3               	movwf	___ftdiv@f1
  1596  0D6B  0834               	movf	?___ftadd+1,w
  1597  0D6C  00A4               	movwf	___ftdiv@f1+1
  1598  0D6D  0835               	movf	?___ftadd+2,w
  1599  0D6E  00A5               	movwf	___ftdiv@f1+2
  1600  0D6F  3196  26A3  318B   	fcall	___ftdiv
  1601  0D72  0020               	movlb	0	; select bank0
  1602  0D73  0820               	movf	?___ftdiv,w
  1603  0D74  0021               	movlb	1	; select bank1
  1604  0D75  00CD               	movwf	_Temperature^(0+128)
  1605  0D76  0020               	movlb	0	; select bank0
  1606  0D77  0821               	movf	?___ftdiv+1,w
  1607  0D78  0021               	movlb	1	; select bank1
  1608  0D79  00CE               	movwf	(_Temperature+1)^(0+128)
  1609  0D7A  0020               	movlb	0	; select bank0
  1610  0D7B  0822               	movf	?___ftdiv+2,w
  1611  0D7C  0021               	movlb	1	; select bank1
  1612  0D7D  00CF               	movwf	(_Temperature+2)^(0+128)
  1613                           
  1614                           ;main.c: 119: ADCON0 = 0x1D;
  1615  0D7E  301D               	movlw	29
  1616  0D7F  009D               	movwf	29	;volatile
  1617                           
  1618                           ;main.c: 120: _delay((unsigned long)((10)*(4000000.0/4000.0)));
  1619  0D80  300D               	movlw	13
  1620  0D81  0020               	movlb	0	; select bank0
  1621  0D82  00ED               	movwf	??_main
  1622  0D83  30FB               	movlw	251
  1623  0D84                     u4197:	
  1624  0D84  0B89               	decfsz	9,f
  1625  0D85  2D84               	goto	u4197
  1626  0D86  0BED               	decfsz	??_main,f
  1627  0D87  2D84               	goto	u4197
  1628  0D88  3200               	nop2
  1629                           
  1630                           ;main.c: 121: ADGO = 1;
  1631  0D89  0021               	movlb	1	; select bank1
  1632  0D8A  149D               	bsf	29,1	;volatile
  1633  0D8B                     l110:	
  1634                           ;main.c: 122: while(ADGO)continue;
  1635                           
  1636  0D8B  189D               	btfsc	29,1	;volatile
  1637  0D8C  2D8B               	goto	l110
  1638                           
  1639                           ;main.c: 123: Photo = ((ADRESH<<8)+(ADRESL));
  1640  0D8D  081C               	movf	28,w	;volatile
  1641  0D8E  00D4               	movwf	(_Photo+1)^(0+128)
  1642  0D8F  081B               	movf	27,w	;volatile
  1643  0D90  00D3               	movwf	_Photo^(0+128)
  1644                           
  1645                           ;main.c: 126: printf("External Raw Temp value is %0.2f RAW | Pot value is %d | Voltage i
      +                          s %d | Photo Value %d ]\n\r", Temperature, Pval, Voltage, Photo);
  1646  0D91  3027               	movlw	low (STR_2| (0+32768))
  1647  0D92  00A0               	movwf	printf@f^(0+128)
  1648  0D93  3098               	movlw	high (STR_2| (0+32768))
  1649  0D94  00A1               	movwf	(printf@f^(0+128)+1)
  1650  0D95  084D               	movf	_Temperature^(0+128),w
  1651  0D96  00A2               	movwf	(?_printf^(0+128)+2)
  1652  0D97  084E               	movf	(_Temperature+1)^(0+128),w
  1653  0D98  00A3               	movwf	((?_printf+1)^(0+128)+2)
  1654  0D99  084F               	movf	(_Temperature+2)^(0+128),w
  1655  0D9A  00A4               	movwf	((?_printf+2)^(0+128)+2)
  1656  0D9B  085A               	movf	(_Pval+1)^(0+128),w
  1657  0D9C  00A6               	movwf	((?_printf+1)^(0+128)+5)
  1658  0D9D  0859               	movf	_Pval^(0+128),w
  1659  0D9E  00A5               	movwf	(?_printf^(0+128)+5)
  1660  0D9F  084A               	movf	_Voltage^(0+128),w
  1661  0DA0  00A7               	movwf	(?_printf^(0+128)+7)
  1662  0DA1  084B               	movf	(_Voltage+1)^(0+128),w
  1663  0DA2  00A8               	movwf	((?_printf+1)^(0+128)+7)
  1664  0DA3  084C               	movf	(_Voltage+2)^(0+128),w
  1665  0DA4  00A9               	movwf	((?_printf+2)^(0+128)+7)
  1666  0DA5  0854               	movf	(_Photo+1)^(0+128),w
  1667  0DA6  00AB               	movwf	((?_printf+1)^(0+128)+10)
  1668  0DA7  0853               	movf	_Photo^(0+128),w
  1669  0DA8  00AA               	movwf	(?_printf^(0+128)+10)
  1670  0DA9  3180  20F4  318B   	fcall	_printf
  1671                           
  1672                           ;main.c: 127: _delay((unsigned long)((1000)*(4000000.0/4000.0)));
  1673  0DAC  3006               	movlw	6
  1674  0DAD  0020               	movlb	0	; select bank0
  1675  0DAE  00EE               	movwf	??_main+1
  1676  0DAF  3013               	movlw	19
  1677  0DB0  00ED               	movwf	??_main
  1678  0DB1  30AD               	movlw	173
  1679  0DB2                     u4207:	
  1680  0DB2  0B89               	decfsz	9,f
  1681  0DB3  2DB2               	goto	u4207
  1682  0DB4  0BED               	decfsz	??_main,f
  1683  0DB5  2DB2               	goto	u4207
  1684  0DB6  0BEE               	decfsz	??_main+1,f
  1685  0DB7  2DB2               	goto	u4207
  1686  0DB8  3200               	nop2
  1687                           
  1688                           ;main.c: 130: else RA2 = 1;
  1689                           
  1690                           ;main.c: 129: if ( Photo < 0 ) RA2 = 0;
  1691  0DB9  0020               	movlb	0	; select bank0
  1692  0DBA  150C               	bsf	12,2	;volatile
  1693  0DBB  2BEE               	goto	l2717
  1694  0DBC                     __end_of_main:	
  1695                           ;main.c: 132: }
  1696                           ;main.c: 133: return;
  1697                           
  1698                           
  1699                           	psect	text1
  1700  0005                     __ptext1:	
  1701 ;; *************** function _setup_comms *****************
  1702 ;; Defined at:
  1703 ;;		line 136 in file "main.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1721 ;;Total ram usage:        0 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           
  1731                           ;psect for function _setup_comms
  1732  0005                     _setup_comms:	
  1733                           
  1734                           ;main.c: 137: TRISC5 = 1;
  1735                           
  1736                           ;incstack = 0
  1737                           ; Regs used in _setup_comms: [wreg]
  1738  0005  0021               	movlb	1	; select bank1
  1739  0006  168E               	bsf	14,5	;volatile
  1740                           
  1741                           ;main.c: 138: TRISC4 = 1;
  1742  0007  160E               	bsf	14,4	;volatile
  1743                           
  1744                           ;main.c: 139: SPBRG = ((int)(4000000L/(16UL * 9600) -1));
  1745  0008  3000               	movlw	0
  1746  0009  0023               	movlb	3	; select bank3
  1747  000A  009C               	movwf	28	;volatile
  1748  000B  3019               	movlw	25
  1749  000C  009B               	movwf	27	;volatile
  1750                           
  1751                           ;main.c: 140: RCSTA = (0 | 0x90);
  1752  000D  3090               	movlw	144
  1753  000E  009D               	movwf	29	;volatile
  1754                           
  1755                           ;main.c: 141: TXSTA = (0x4 | 0 | 0x20);
  1756  000F  3024               	movlw	36
  1757  0010  009E               	movwf	30	;volatile
  1758                           
  1759                           ;main.c: 142: TXEN = 1;
  1760  0011  169E               	bsf	30,5	;volatile
  1761                           
  1762                           ;main.c: 143: SYNC = 0;
  1763  0012  121E               	bcf	30,4	;volatile
  1764                           
  1765                           ;main.c: 144: SPEN = 1;
  1766  0013  179D               	bsf	29,7	;volatile
  1767                           
  1768                           ;main.c: 145: BRGH = 1;
  1769  0014  151E               	bsf	30,2	;volatile
  1770  0015  0008               	return
  1771  0016                     __end_of_setup_comms:	
  1772                           
  1773                           	psect	text2
  1774  00F4                     __ptext2:	
  1775 ;; *************** function _printf *****************
  1776 ;; Defined at:
  1777 ;;		line 464 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  f               2    0[BANK1 ] PTR const unsigned char 
  1780 ;;		 -> STR_2(92), STR_1(68), 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  val             4   20[BANK1 ] unsigned long 
  1783 ;;  tmpval          4   16[BANK1 ] struct .
  1784 ;;  fval            3   30[BANK1 ] struct .
  1785 ;;  prec            2   33[BANK1 ] int 
  1786 ;;  width           2   28[BANK1 ] int 
  1787 ;;  flag            2   26[BANK1 ] unsigned short 
  1788 ;;  exp             2   24[BANK1 ] int 
  1789 ;;  cp              2    0        PTR const unsigned char 
  1790 ;;  len             2    0        unsigned int 
  1791 ;;  c               1   35[BANK1 ] char 
  1792 ;;  ap              1   15[BANK1 ] PTR void [1]
  1793 ;;		 -> ?_printf(2), 
  1794 ;;  d               1    0        unsigned char 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2    0[BANK1 ] int 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1804 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1805 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  1806 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1807 ;;      Totals:         0       6      36       0       0       0       0       0       0       0       0       0       
      +0       0
  1808 ;;Total ram usage:       42 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    3
  1811 ;; This function calls:
  1812 ;;		___awdiv
  1813 ;;		___ftadd
  1814 ;;		___ftge
  1815 ;;		___ftmul
  1816 ;;		___ftneg
  1817 ;;		___ftsub
  1818 ;;		___fttol
  1819 ;;		___lldiv
  1820 ;;		___llmod
  1821 ;;		___lltoft
  1822 ;;		___wmul
  1823 ;;		__div_to_l_
  1824 ;;		__tdiv_to_l_
  1825 ;;		_fround
  1826 ;;		_isdigit
  1827 ;;		_putch
  1828 ;;		_scale
  1829 ;; This function is called by:
  1830 ;;		_main
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           
  1835                           ;psect for function _printf
  1836  00F4                     _printf:	
  1837                           
  1838                           ;doprnt.c: 466: va_list ap;
  1839                           ;doprnt.c: 499: signed char c;
  1840                           ;doprnt.c: 501: int width;
  1841                           ;doprnt.c: 504: int prec;
  1842                           ;doprnt.c: 508: unsigned short flag;
  1843                           ;doprnt.c: 515: char d;
  1844                           ;doprnt.c: 516: double fval;
  1845                           ;doprnt.c: 517: int exp;
  1846                           ;doprnt.c: 523: union {
  1847                           ;doprnt.c: 524: unsigned long vd;
  1848                           ;doprnt.c: 525: double integ;
  1849                           ;doprnt.c: 526: } tmpval;
  1850                           ;doprnt.c: 528: unsigned long val;
  1851                           ;doprnt.c: 529: unsigned len;
  1852                           ;doprnt.c: 530: const char * cp;
  1853                           ;doprnt.c: 533: *ap = __va_start();
  1854                           
  1855                           ;incstack = 0
  1856                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1857  00F4  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1858  00F5  0020               	movlb	0	; select bank0
  1859  00F6  00E7               	movwf	??_printf
  1860  00F7  0867               	movf	??_printf,w
  1861  00F8  0021               	movlb	1	; select bank1
  1862  00F9  00AF               	movwf	printf@ap^(0+128)
  1863  00FA                     l2663:	
  1864                           ;doprnt.c: 536: while(c = *f++) {
  1865                           
  1866  00FA  0021               	movlb	1	; select bank1
  1867  00FB  0821               	movf	(printf@f+1)^(0+128),w
  1868  00FC  0020               	movlb	0	; select bank0
  1869  00FD  00E8               	movwf	??_printf+1
  1870  00FE  0021               	movlb	1	; select bank1
  1871  00FF  0820               	movf	printf@f^(0+128),w
  1872  0100  0020               	movlb	0	; select bank0
  1873  0101  00E7               	movwf	??_printf
  1874  0102  0021               	movlb	1	; select bank1
  1875  0103  0AA0               	incf	printf@f^(0+128),f
  1876  0104  1903               	skipnz
  1877  0105  0AA1               	incf	(printf@f+1)^(0+128),f
  1878  0106  0020               	movlb	0	; select bank0
  1879  0107  0867               	movf	??_printf,w
  1880  0108  0084               	movwf	4
  1881  0109  0868               	movf	??_printf+1,w
  1882  010A  0085               	movwf	5
  1883  010B  0800               	movf	0,w	;code access
  1884  010C  00E9               	movwf	??_printf+2
  1885  010D  0869               	movf	??_printf+2,w
  1886  010E  0021               	movlb	1	; select bank1
  1887  010F  00C3               	movwf	printf@c^(0+128)
  1888  0110  0843               	movf	printf@c^(0+128),w
  1889  0111  1903               	btfsc	3,2
  1890  0112  0008               	return
  1891                           
  1892                           ;doprnt.c: 538: if(c != '%')
  1893  0113  3025               	movlw	37
  1894  0114  0643               	xorwf	printf@c^(0+128),w
  1895  0115  1903               	btfsc	3,2
  1896  0116  291C               	goto	l2383
  1897                           
  1898                           ;doprnt.c: 540: {
  1899                           ;doprnt.c: 541: (putch(c) );
  1900  0117  0843               	movf	printf@c^(0+128),w
  1901  0118  3194  242C  3180   	fcall	_putch
  1902                           
  1903                           ;doprnt.c: 542: continue;
  1904  011B  28FA               	goto	l2663
  1905  011C                     l2383:	
  1906                           
  1907                           ;doprnt.c: 543: }
  1908                           ;doprnt.c: 546: width = 0;
  1909  011C  0021               	movlb	1	; select bank1
  1910  011D  01BC               	clrf	printf@width^(0+128)
  1911  011E  01BD               	clrf	(printf@width+1)^(0+128)
  1912                           
  1913                           ;doprnt.c: 548: flag = 0;
  1914  011F  01BA               	clrf	printf@flag^(0+128)
  1915  0120  01BB               	clrf	(printf@flag+1)^(0+128)
  1916                           
  1917                           ;doprnt.c: 551: switch(*f) {
  1918                           
  1919                           ;doprnt.c: 550: for(;;) {
  1920  0121  2927               	goto	l2389
  1921  0122                     l183:	
  1922                           ;doprnt.c: 579: case '0':
  1923                           
  1924                           
  1925                           ;doprnt.c: 580: flag |= 0x04;
  1926  0122  153A               	bsf	printf@flag^(0+128),2
  1927                           
  1928                           ;doprnt.c: 581: f++;
  1929  0123  3001               	movlw	1
  1930  0124  07A0               	addwf	printf@f^(0+128),f
  1931  0125  3000               	movlw	0
  1932  0126  3DA1               	addwfc	(printf@f+1)^(0+128),f
  1933  0127                     l2389:	
  1934                           ;doprnt.c: 584: }
  1935                           
  1936                           ;doprnt.c: 582: continue;
  1937                           
  1938  0127  0820               	movf	printf@f^(0+128),w
  1939  0128  0084               	movwf	4
  1940  0129  0821               	movf	(printf@f+1)^(0+128),w
  1941  012A  0085               	movwf	5
  1942  012B  0800               	movf	0,w	;code access
  1943                           
  1944                           ; Switch size 1, requested type "space"
  1945                           ; Number of cases is 1, Range of values is 48 to 48
  1946                           ; switch strategies available:
  1947                           ; Name         Instructions Cycles
  1948                           ; simple_byte            4     3 (average)
  1949                           ; direct_byte           11     9 (fixed)
  1950                           ; jumptable            263     9 (fixed)
  1951                           ;	Chosen strategy is simple_byte
  1952  012C  3A30               	xorlw	48	; case 48
  1953  012D  1903               	skipnz
  1954  012E  2922               	goto	l183
  1955  012F  2930               	goto	l2391
  1956  0130                     l2391:	
  1957                           ;doprnt.c: 586: }
  1958                           
  1959                           ;doprnt.c: 585: break;
  1960                           
  1961                           
  1962                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1963  0130  0820               	movf	printf@f^(0+128),w
  1964  0131  0084               	movwf	4
  1965  0132  0821               	movf	(printf@f+1)^(0+128),w
  1966  0133  0085               	movwf	5
  1967  0134  0800               	movf	0,w	;code access
  1968  0135  3194  243D  3180   	fcall	_isdigit
  1969  0138  1C03               	btfss	3,0
  1970  0139  2976               	goto	l2403
  1971                           
  1972                           ;doprnt.c: 598: width = 0;
  1973  013A  0021               	movlb	1	; select bank1
  1974  013B  01BC               	clrf	printf@width^(0+128)
  1975  013C  01BD               	clrf	(printf@width+1)^(0+128)
  1976  013D                     l2395:	
  1977                           ;doprnt.c: 599: do {
  1978                           
  1979                           
  1980                           ;doprnt.c: 600: width *= 10;
  1981  013D  300A               	movlw	10
  1982  013E  0020               	movlb	0	; select bank0
  1983  013F  00A4               	movwf	___wmul@multiplier
  1984  0140  3000               	movlw	0
  1985  0141  00A5               	movwf	___wmul@multiplier+1
  1986  0142  0021               	movlb	1	; select bank1
  1987  0143  083D               	movf	(printf@width+1)^(0+128),w
  1988  0144  0020               	movlb	0	; select bank0
  1989  0145  00A7               	movwf	___wmul@multiplicand+1
  1990  0146  0021               	movlb	1	; select bank1
  1991  0147  083C               	movf	printf@width^(0+128),w
  1992  0148  0020               	movlb	0	; select bank0
  1993  0149  00A6               	movwf	___wmul@multiplicand
  1994  014A  3194  245E  3180   	fcall	___wmul
  1995  014D  0020               	movlb	0	; select bank0
  1996  014E  0825               	movf	?___wmul+1,w
  1997  014F  0021               	movlb	1	; select bank1
  1998  0150  00BD               	movwf	(printf@width+1)^(0+128)
  1999  0151  0020               	movlb	0	; select bank0
  2000  0152  0824               	movf	?___wmul,w
  2001  0153  0021               	movlb	1	; select bank1
  2002  0154  00BC               	movwf	printf@width^(0+128)
  2003                           
  2004                           ;doprnt.c: 601: width += *f++ - '0';
  2005  0155  0820               	movf	printf@f^(0+128),w
  2006  0156  0084               	movwf	4
  2007  0157  0821               	movf	(printf@f+1)^(0+128),w
  2008  0158  0085               	movwf	5
  2009  0159  0800               	movf	0,w	;code access
  2010  015A  3ED0               	addlw	208
  2011  015B  0020               	movlb	0	; select bank0
  2012  015C  00E7               	movwf	??_printf
  2013  015D  30FF               	movlw	255
  2014  015E  1803               	skipnc
  2015  015F  3000               	movlw	0
  2016  0160  00E8               	movwf	??_printf+1
  2017  0161  0867               	movf	??_printf,w
  2018  0162  0021               	movlb	1	; select bank1
  2019  0163  07BC               	addwf	printf@width^(0+128),f
  2020  0164  0020               	movlb	0	; select bank0
  2021  0165  0868               	movf	??_printf+1,w
  2022  0166  0021               	movlb	1	; select bank1
  2023  0167  3DBD               	addwfc	(printf@width+1)^(0+128),f
  2024  0168  3001               	movlw	1
  2025  0169  07A0               	addwf	printf@f^(0+128),f
  2026  016A  3000               	movlw	0
  2027  016B  3DA1               	addwfc	(printf@f+1)^(0+128),f
  2028                           
  2029                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2030  016C  0820               	movf	printf@f^(0+128),w
  2031  016D  0084               	movwf	4
  2032  016E  0821               	movf	(printf@f+1)^(0+128),w
  2033  016F  0085               	movwf	5
  2034  0170  0800               	movf	0,w	;code access
  2035  0171  3194  243D  3180   	fcall	_isdigit
  2036  0174  1803               	btfsc	3,0
  2037  0175  293D               	goto	l2395
  2038  0176                     l2403:	
  2039                           
  2040                           ;doprnt.c: 608: }
  2041                           ;doprnt.c: 611: if(*f == '.') {
  2042  0176  0021               	movlb	1	; select bank1
  2043  0177  0820               	movf	printf@f^(0+128),w
  2044  0178  0084               	movwf	4
  2045  0179  0821               	movf	(printf@f+1)^(0+128),w
  2046  017A  0085               	movwf	5
  2047  017B  0012               	moviw fsr0++
  2048  017C  3A2E               	xorlw	46
  2049  017D  1D03               	btfss	3,2
  2050  017E  29BD               	goto	l2417
  2051                           
  2052                           ;doprnt.c: 612: flag |= 0x4000;
  2053  017F  173B               	bsf	(printf@flag^(0+128)+1),6
  2054                           
  2055                           ;doprnt.c: 613: f++;
  2056  0180  3001               	movlw	1
  2057  0181  07A0               	addwf	printf@f^(0+128),f
  2058  0182  3000               	movlw	0
  2059  0183  3DA1               	addwfc	(printf@f+1)^(0+128),f
  2060                           
  2061                           ;doprnt.c: 620: {
  2062                           ;doprnt.c: 621: prec = 0;
  2063  0184  01C1               	clrf	printf@prec^(0+128)
  2064  0185  01C2               	clrf	(printf@prec+1)^(0+128)
  2065  0186                     l2415:	
  2066                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2067                           
  2068  0186  0820               	movf	printf@f^(0+128),w
  2069  0187  0084               	movwf	4
  2070  0188  0821               	movf	(printf@f+1)^(0+128),w
  2071  0189  0085               	movwf	5
  2072  018A  0800               	movf	0,w	;code access
  2073  018B  3194  243D  3180   	fcall	_isdigit
  2074  018E  1C03               	btfss	3,0
  2075  018F  29C4               	goto	l2423
  2076                           
  2077                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2078  0190  0021               	movlb	1	; select bank1
  2079  0191  0820               	movf	printf@f^(0+128),w
  2080  0192  0084               	movwf	4
  2081  0193  0821               	movf	(printf@f+1)^(0+128),w
  2082  0194  0085               	movwf	5
  2083  0195  0800               	movf	0,w	;code access
  2084  0196  0020               	movlb	0	; select bank0
  2085  0197  00E7               	movwf	??_printf
  2086  0198  01E8               	clrf	??_printf+1
  2087  0199  0021               	movlb	1	; select bank1
  2088  019A  0842               	movf	(printf@prec+1)^(0+128),w
  2089  019B  0020               	movlb	0	; select bank0
  2090  019C  00A5               	movwf	___wmul@multiplier+1
  2091  019D  0021               	movlb	1	; select bank1
  2092  019E  0841               	movf	printf@prec^(0+128),w
  2093  019F  0020               	movlb	0	; select bank0
  2094  01A0  00A4               	movwf	___wmul@multiplier
  2095  01A1  300A               	movlw	10
  2096  01A2  00A6               	movwf	___wmul@multiplicand
  2097  01A3  3000               	movlw	0
  2098  01A4  00A7               	movwf	___wmul@multiplicand+1
  2099  01A5  3194  245E  3180   	fcall	___wmul
  2100  01A8  0020               	movlb	0	; select bank0
  2101  01A9  0867               	movf	??_printf,w
  2102  01AA  0724               	addwf	?___wmul,w
  2103  01AB  00E9               	movwf	??_printf+2
  2104  01AC  0868               	movf	??_printf+1,w
  2105  01AD  3D25               	addwfc	?___wmul+1,w
  2106  01AE  00EA               	movwf	??_printf+3
  2107  01AF  0869               	movf	??_printf+2,w
  2108  01B0  3ED0               	addlw	208
  2109  01B1  0021               	movlb	1	; select bank1
  2110  01B2  00C1               	movwf	printf@prec^(0+128)
  2111  01B3  30FF               	movlw	255
  2112  01B4  0020               	movlb	0	; select bank0
  2113  01B5  3D6A               	addwfc	??_printf+3,w
  2114  01B6  0021               	movlb	1	; select bank1
  2115  01B7  00C2               	movwf	(printf@prec+1)^(0+128)
  2116  01B8  3001               	movlw	1
  2117  01B9  07A0               	addwf	printf@f^(0+128),f
  2118  01BA  3000               	movlw	0
  2119  01BB  3DA1               	addwfc	(printf@f+1)^(0+128),f
  2120  01BC  2986               	goto	l2415
  2121  01BD                     l2417:	
  2122                           ;doprnt.c: 624: }
  2123                           ;doprnt.c: 625: } else {
  2124                           
  2125                           
  2126                           ;doprnt.c: 626: prec = 0;
  2127  01BD  0021               	movlb	1	; select bank1
  2128  01BE  01C1               	clrf	printf@prec^(0+128)
  2129  01BF  01C2               	clrf	(printf@prec+1)^(0+128)
  2130                           
  2131                           ;doprnt.c: 628: flag |= 0x1000;
  2132  01C0  163B               	bsf	(printf@flag^(0+128)+1),4
  2133                           
  2134                           ;doprnt.c: 630: }
  2135                           ;doprnt.c: 635: switch(c = *f++) {
  2136  01C1  29C4               	goto	l2423
  2137  01C2                     l198:	
  2138                           ;doprnt.c: 662: case 'f':
  2139                           
  2140                           ;doprnt.c: 638: goto alldone;
  2141                           
  2142                           ;doprnt.c: 637: case 0:
  2143                           
  2144                           
  2145                           ;doprnt.c: 663: flag |= 0x400;
  2146  01C2  153B               	bsf	(printf@flag^(0+128)+1),2
  2147                           
  2148                           ;doprnt.c: 698: case 'i':
  2149                           ;doprnt.c: 699: break;
  2150                           
  2151                           ;doprnt.c: 697: case 'd':
  2152                           
  2153                           ;doprnt.c: 664: break;
  2154  01C3  29E5               	goto	l2425
  2155  01C4                     l2423:	
  2156                           ;doprnt.c: 822: }
  2157                           
  2158                           ;doprnt.c: 813: continue;
  2159                           
  2160                           ;doprnt.c: 802: default:
  2161                           
  2162  01C4  0021               	movlb	1	; select bank1
  2163  01C5  0821               	movf	(printf@f+1)^(0+128),w
  2164  01C6  0020               	movlb	0	; select bank0
  2165  01C7  00E8               	movwf	??_printf+1
  2166  01C8  0021               	movlb	1	; select bank1
  2167  01C9  0820               	movf	printf@f^(0+128),w
  2168  01CA  0020               	movlb	0	; select bank0
  2169  01CB  00E7               	movwf	??_printf
  2170  01CC  0021               	movlb	1	; select bank1
  2171  01CD  0AA0               	incf	printf@f^(0+128),f
  2172  01CE  1903               	skipnz
  2173  01CF  0AA1               	incf	(printf@f+1)^(0+128),f
  2174  01D0  0020               	movlb	0	; select bank0
  2175  01D1  0867               	movf	??_printf,w
  2176  01D2  0084               	movwf	4
  2177  01D3  0868               	movf	??_printf+1,w
  2178  01D4  0085               	movwf	5
  2179  01D5  0800               	movf	0,w	;code access
  2180  01D6  0021               	movlb	1	; select bank1
  2181  01D7  00C3               	movwf	printf@c^(0+128)
  2182                           
  2183                           ; Switch size 1, requested type "space"
  2184                           ; Number of cases is 4, Range of values is 0 to 105
  2185                           ; switch strategies available:
  2186                           ; Name         Instructions Cycles
  2187                           ; simple_byte           13     7 (average)
  2188                           ; direct_byte          218     6 (fixed)
  2189                           ; jumptable            260     6 (fixed)
  2190                           ;	Chosen strategy is simple_byte
  2191  01D8  3A00               	xorlw	0	; case 0
  2192  01D9  1903               	skipnz
  2193  01DA  2FF5               	goto	l280
  2194  01DB  3A64               	xorlw	100	; case 100
  2195  01DC  1903               	skipnz
  2196  01DD  29E5               	goto	l2425
  2197  01DE  3A02               	xorlw	2	; case 102
  2198  01DF  1903               	skipnz
  2199  01E0  29C2               	goto	l198
  2200  01E1  3A0F               	xorlw	15	; case 105
  2201  01E2  1903               	skipnz
  2202  01E3  29E5               	goto	l2425
  2203  01E4  28FA               	goto	l2663
  2204  01E5                     l2425:	
  2205                           
  2206                           ;doprnt.c: 825: if(flag & (0x700)) {
  2207  01E5  3000               	movlw	0
  2208  01E6  053A               	andwf	printf@flag^(0+128),w
  2209  01E7  0020               	movlb	0	; select bank0
  2210  01E8  00E7               	movwf	??_printf
  2211  01E9  3007               	movlw	7
  2212  01EA  0021               	movlb	1	; select bank1
  2213  01EB  053B               	andwf	(printf@flag+1)^(0+128),w
  2214  01EC  0020               	movlb	0	; select bank0
  2215  01ED  00E8               	movwf	??_printf+1
  2216  01EE  0867               	movf	??_printf,w
  2217  01EF  0468               	iorwf	??_printf+1,w
  2218  01F0  1903               	btfsc	3,2
  2219  01F1  2E5D               	goto	l2581
  2220                           
  2221                           ;doprnt.c: 827: if(flag & 0x1000)
  2222  01F2  0021               	movlb	1	; select bank1
  2223  01F3  1E3B               	btfss	(printf@flag+1)^(0+128),4
  2224  01F4  29F9               	goto	l2431
  2225                           
  2226                           ;doprnt.c: 829: prec = 6;
  2227  01F5  3006               	movlw	6
  2228  01F6  00C1               	movwf	printf@prec^(0+128)
  2229  01F7  3000               	movlw	0
  2230  01F8  00C2               	movwf	(printf@prec^(0+128)+1)
  2231  01F9                     l2431:	
  2232                           
  2233                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2234  01F9  082F               	movf	printf@ap^(0+128),w
  2235  01FA  0086               	movwf	6
  2236  01FB  0187               	clrf	7
  2237  01FC  3F40               	moviw [0]fsr1
  2238  01FD  00BE               	movwf	printf@fval^(0+128)
  2239  01FE  3F41               	moviw [1]fsr1
  2240  01FF  00BF               	movwf	(printf@fval+1)^(0+128)
  2241  0200  3F42               	moviw [2]fsr1
  2242  0201  00C0               	movwf	(printf@fval+2)^(0+128)
  2243  0202  3003               	movlw	3
  2244  0203  0020               	movlb	0	; select bank0
  2245  0204  00E7               	movwf	??_printf
  2246  0205  0867               	movf	??_printf,w
  2247  0206  0021               	movlb	1	; select bank1
  2248  0207  07AF               	addwf	printf@ap^(0+128),f
  2249                           
  2250                           ;doprnt.c: 831: if(fval < 0.0) {
  2251  0208  083E               	movf	printf@fval^(0+128),w
  2252  0209  00F0               	movwf	___ftge@ff1
  2253  020A  083F               	movf	(printf@fval+1)^(0+128),w
  2254  020B  00F1               	movwf	___ftge@ff1+1
  2255  020C  0840               	movf	(printf@fval+2)^(0+128),w
  2256  020D  00F2               	movwf	___ftge@ff1+2
  2257  020E  3000               	movlw	0
  2258  020F  00F3               	movwf	___ftge@ff2
  2259  0210  3000               	movlw	0
  2260  0211  00F4               	movwf	___ftge@ff2+1
  2261  0212  3000               	movlw	0
  2262  0213  00F5               	movwf	___ftge@ff2+2
  2263  0214  3194  24B5  3180   	fcall	___ftge
  2264  0217  1803               	btfsc	3,0
  2265  0218  2A38               	goto	l2441
  2266                           
  2267                           ;doprnt.c: 832: fval = -fval;
  2268  0219  0021               	movlb	1	; select bank1
  2269  021A  083E               	movf	printf@fval^(0+128),w
  2270  021B  0020               	movlb	0	; select bank0
  2271  021C  00B0               	movwf	___ftneg@f1
  2272  021D  0021               	movlb	1	; select bank1
  2273  021E  083F               	movf	(printf@fval+1)^(0+128),w
  2274  021F  0020               	movlb	0	; select bank0
  2275  0220  00B1               	movwf	___ftneg@f1+1
  2276  0221  0021               	movlb	1	; select bank1
  2277  0222  0840               	movf	(printf@fval+2)^(0+128),w
  2278  0223  0020               	movlb	0	; select bank0
  2279  0224  00B2               	movwf	___ftneg@f1+2
  2280  0225  3194  2434  3180   	fcall	___ftneg
  2281  0228  0020               	movlb	0	; select bank0
  2282  0229  0830               	movf	?___ftneg,w
  2283  022A  0021               	movlb	1	; select bank1
  2284  022B  00BE               	movwf	printf@fval^(0+128)
  2285  022C  0020               	movlb	0	; select bank0
  2286  022D  0831               	movf	?___ftneg+1,w
  2287  022E  0021               	movlb	1	; select bank1
  2288  022F  00BF               	movwf	(printf@fval+1)^(0+128)
  2289  0230  0020               	movlb	0	; select bank0
  2290  0231  0832               	movf	?___ftneg+2,w
  2291  0232  0021               	movlb	1	; select bank1
  2292  0233  00C0               	movwf	(printf@fval+2)^(0+128)
  2293                           
  2294                           ;doprnt.c: 833: flag |= 0x03;
  2295  0234  3003               	movlw	3
  2296  0235  04BA               	iorwf	printf@flag^(0+128),f
  2297  0236  3000               	movlw	0
  2298  0237  04BB               	iorwf	(printf@flag+1)^(0+128),f
  2299  0238                     l2441:	
  2300                           
  2301                           ;doprnt.c: 834: }
  2302                           ;doprnt.c: 835: exp = 0;
  2303  0238  0021               	movlb	1	; select bank1
  2304  0239  01B8               	clrf	printf@exp^(0+128)
  2305  023A  01B9               	clrf	(printf@exp+1)^(0+128)
  2306                           
  2307                           ;doprnt.c: 836: if( fval!=0) {
  2308  023B  0840               	movf	(printf@fval+2)^(0+128),w
  2309  023C  043F               	iorwf	(printf@fval+1)^(0+128),w
  2310  023D  043E               	iorwf	printf@fval^(0+128),w
  2311  023E  1903               	skipnz
  2312  023F  2AF8               	goto	l206
  2313                           
  2314                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2315  0240  30BE               	movlw	low (printf@fval| 0)
  2316  0241  0086               	movwf	6
  2317  0242  0187               	clrf	7
  2318  0243  3F40               	moviw [0]fsr1
  2319  0244  0020               	movlb	0	; select bank0
  2320  0245  00E7               	movwf	??_printf
  2321  0246  3F41               	moviw [1]fsr1
  2322  0247  00E8               	movwf	??_printf+1
  2323  0248  3F42               	moviw [2]fsr1
  2324  0249  00E9               	movwf	??_printf+2
  2325  024A  3F43               	moviw [3]fsr1
  2326  024B  00EA               	movwf	??_printf+3
  2327  024C  300F               	movlw	15
  2328  024D                     u3525:	
  2329  024D  36EA               	lsrf	??_printf+3,f
  2330  024E  0CE9               	rrf	??_printf+2,f
  2331  024F  0CE8               	rrf	??_printf+1,f
  2332  0250  0CE7               	rrf	??_printf,f
  2333  0251  0B89               	decfsz	9,f
  2334  0252  2A4D               	goto	u3525
  2335  0253  30FF               	movlw	255
  2336  0254  0567               	andwf	??_printf,w
  2337  0255  00EB               	movwf	??_printf+4
  2338  0256  3000               	movlw	0
  2339  0257  0568               	andwf	??_printf+1,w
  2340  0258  00EC               	movwf	??_printf+5
  2341  0259  086B               	movf	??_printf+4,w
  2342  025A  3E82               	addlw	130
  2343  025B  0021               	movlb	1	; select bank1
  2344  025C  00B8               	movwf	printf@exp^(0+128)
  2345  025D  30FF               	movlw	255
  2346  025E  0020               	movlb	0	; select bank0
  2347  025F  3D6C               	addwfc	??_printf+5,w
  2348  0260  0021               	movlb	1	; select bank1
  2349  0261  00B9               	movwf	(printf@exp+1)^(0+128)
  2350                           
  2351                           ;doprnt.c: 838: exp--;
  2352  0262  30FF               	movlw	255
  2353  0263  07B8               	addwf	printf@exp^(0+128),f
  2354  0264  30FF               	movlw	255
  2355  0265  3DB9               	addwfc	(printf@exp+1)^(0+128),f
  2356                           
  2357                           ;doprnt.c: 839: exp *= 3;
  2358  0266  3003               	movlw	3
  2359  0267  0020               	movlb	0	; select bank0
  2360  0268  00A4               	movwf	___wmul@multiplier
  2361  0269  3000               	movlw	0
  2362  026A  00A5               	movwf	___wmul@multiplier+1
  2363  026B  0021               	movlb	1	; select bank1
  2364  026C  0839               	movf	(printf@exp+1)^(0+128),w
  2365  026D  0020               	movlb	0	; select bank0
  2366  026E  00A7               	movwf	___wmul@multiplicand+1
  2367  026F  0021               	movlb	1	; select bank1
  2368  0270  0838               	movf	printf@exp^(0+128),w
  2369  0271  0020               	movlb	0	; select bank0
  2370  0272  00A6               	movwf	___wmul@multiplicand
  2371  0273  3194  245E  3180   	fcall	___wmul
  2372  0276  0020               	movlb	0	; select bank0
  2373  0277  0825               	movf	?___wmul+1,w
  2374  0278  0021               	movlb	1	; select bank1
  2375  0279  00B9               	movwf	(printf@exp+1)^(0+128)
  2376  027A  0020               	movlb	0	; select bank0
  2377  027B  0824               	movf	?___wmul,w
  2378  027C  0021               	movlb	1	; select bank1
  2379  027D  00B8               	movwf	printf@exp^(0+128)
  2380                           
  2381                           ;doprnt.c: 840: exp /= 10;
  2382  027E  300A               	movlw	10
  2383  027F  00F7               	movwf	___awdiv@divisor
  2384  0280  3000               	movlw	0
  2385  0281  00F8               	movwf	___awdiv@divisor+1
  2386  0282  0839               	movf	(printf@exp+1)^(0+128),w
  2387  0283  00FA               	movwf	___awdiv@dividend+1
  2388  0284  0838               	movf	printf@exp^(0+128),w
  2389  0285  00F9               	movwf	___awdiv@dividend
  2390  0286  3195  25CA  3180   	fcall	___awdiv
  2391  0289  0878               	movf	?___awdiv+1,w
  2392  028A  0021               	movlb	1	; select bank1
  2393  028B  00B9               	movwf	(printf@exp+1)^(0+128)
  2394  028C  0877               	movf	?___awdiv,w
  2395  028D  00B8               	movwf	printf@exp^(0+128)
  2396                           
  2397                           ;doprnt.c: 841: if(exp < 0)
  2398  028E  1FB9               	btfss	(printf@exp+1)^(0+128),7
  2399  028F  2A94               	goto	l2457
  2400                           
  2401                           ;doprnt.c: 842: exp--;
  2402  0290  30FF               	movlw	255
  2403  0291  07B8               	addwf	printf@exp^(0+128),f
  2404  0292  30FF               	movlw	255
  2405  0293  3DB9               	addwfc	(printf@exp+1)^(0+128),f
  2406  0294                     l2457:	
  2407                           
  2408                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2409  0294  0338               	decf	printf@exp^(0+128),w
  2410  0295  3AFF               	xorlw	255
  2411  0296  318D  25BC  3180   	fcall	_scale
  2412  0299  0020               	movlb	0	; select bank0
  2413  029A  0850               	movf	?_scale,w
  2414  029B  0021               	movlb	1	; select bank1
  2415  029C  00B0               	movwf	printf@tmpval^(0+128)
  2416  029D  0020               	movlb	0	; select bank0
  2417  029E  0851               	movf	?_scale+1,w
  2418  029F  0021               	movlb	1	; select bank1
  2419  02A0  00B1               	movwf	(printf@tmpval+1)^(0+128)
  2420  02A1  0020               	movlb	0	; select bank0
  2421  02A2  0852               	movf	?_scale+2,w
  2422  02A3  0021               	movlb	1	; select bank1
  2423  02A4  00B2               	movwf	(printf@tmpval+2)^(0+128)
  2424                           
  2425                           ;doprnt.c: 847: tmpval.integ *= fval;
  2426  02A5  083E               	movf	printf@fval^(0+128),w
  2427  02A6  0020               	movlb	0	; select bank0
  2428  02A7  00C0               	movwf	___ftmul@f1
  2429  02A8  0021               	movlb	1	; select bank1
  2430  02A9  083F               	movf	(printf@fval+1)^(0+128),w
  2431  02AA  0020               	movlb	0	; select bank0
  2432  02AB  00C1               	movwf	___ftmul@f1+1
  2433  02AC  0021               	movlb	1	; select bank1
  2434  02AD  0840               	movf	(printf@fval+2)^(0+128),w
  2435  02AE  0020               	movlb	0	; select bank0
  2436  02AF  00C2               	movwf	___ftmul@f1+2
  2437  02B0  0021               	movlb	1	; select bank1
  2438  02B1  0830               	movf	printf@tmpval^(0+128),w
  2439  02B2  0020               	movlb	0	; select bank0
  2440  02B3  00C3               	movwf	___ftmul@f2
  2441  02B4  0021               	movlb	1	; select bank1
  2442  02B5  0831               	movf	(printf@tmpval+1)^(0+128),w
  2443  02B6  0020               	movlb	0	; select bank0
  2444  02B7  00C4               	movwf	___ftmul@f2+1
  2445  02B8  0021               	movlb	1	; select bank1
  2446  02B9  0832               	movf	(printf@tmpval+2)^(0+128),w
  2447  02BA  0020               	movlb	0	; select bank0
  2448  02BB  00C5               	movwf	___ftmul@f2+2
  2449  02BC  3197  274C  3180   	fcall	___ftmul
  2450  02BF  0020               	movlb	0	; select bank0
  2451  02C0  0840               	movf	?___ftmul,w
  2452  02C1  0021               	movlb	1	; select bank1
  2453  02C2  00B0               	movwf	printf@tmpval^(0+128)
  2454  02C3  0020               	movlb	0	; select bank0
  2455  02C4  0841               	movf	?___ftmul+1,w
  2456  02C5  0021               	movlb	1	; select bank1
  2457  02C6  00B1               	movwf	(printf@tmpval+1)^(0+128)
  2458  02C7  0020               	movlb	0	; select bank0
  2459  02C8  0842               	movf	?___ftmul+2,w
  2460  02C9  0021               	movlb	1	; select bank1
  2461  02CA  00B2               	movwf	(printf@tmpval+2)^(0+128)
  2462                           
  2463                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2464  02CB  0830               	movf	printf@tmpval^(0+128),w
  2465  02CC  00F0               	movwf	___ftge@ff1
  2466  02CD  0831               	movf	(printf@tmpval+1)^(0+128),w
  2467  02CE  00F1               	movwf	___ftge@ff1+1
  2468  02CF  0832               	movf	(printf@tmpval+2)^(0+128),w
  2469  02D0  00F2               	movwf	___ftge@ff1+2
  2470  02D1  3000               	movlw	0
  2471  02D2  00F3               	movwf	___ftge@ff2
  2472  02D3  3080               	movlw	128
  2473  02D4  00F4               	movwf	___ftge@ff2+1
  2474  02D5  303F               	movlw	63
  2475  02D6  00F5               	movwf	___ftge@ff2+2
  2476  02D7  3194  24B5  3180   	fcall	___ftge
  2477  02DA  1803               	btfsc	3,0
  2478  02DB  2AE1               	goto	l2465
  2479                           
  2480                           ;doprnt.c: 849: exp--;
  2481  02DC  30FF               	movlw	255
  2482  02DD  0021               	movlb	1	; select bank1
  2483  02DE  07B8               	addwf	printf@exp^(0+128),f
  2484  02DF  30FF               	movlw	255
  2485  02E0  2AF7               	goto	L2
  2486  02E1                     l2465:	
  2487                           
  2488                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2489  02E1  0021               	movlb	1	; select bank1
  2490  02E2  0830               	movf	printf@tmpval^(0+128),w
  2491  02E3  00F0               	movwf	___ftge@ff1
  2492  02E4  0831               	movf	(printf@tmpval+1)^(0+128),w
  2493  02E5  00F1               	movwf	___ftge@ff1+1
  2494  02E6  0832               	movf	(printf@tmpval+2)^(0+128),w
  2495  02E7  00F2               	movwf	___ftge@ff1+2
  2496  02E8  3000               	movlw	0
  2497  02E9  00F3               	movwf	___ftge@ff2
  2498  02EA  3020               	movlw	32
  2499  02EB  00F4               	movwf	___ftge@ff2+1
  2500  02EC  3041               	movlw	65
  2501  02ED  00F5               	movwf	___ftge@ff2+2
  2502  02EE  3194  24B5  3180   	fcall	___ftge
  2503  02F1  1C03               	btfss	3,0
  2504  02F2  2AF8               	goto	l206
  2505                           
  2506                           ;doprnt.c: 851: exp++;
  2507  02F3  3001               	movlw	1
  2508  02F4  0021               	movlb	1	; select bank1
  2509  02F5  07B8               	addwf	printf@exp^(0+128),f
  2510  02F6  3000               	movlw	0
  2511  02F7                     L2:	
  2512  02F7  3DB9               	addwfc	(printf@exp+1)^(0+128),f
  2513  02F8                     l206:	
  2514                           
  2515                           ;doprnt.c: 852: }
  2516                           ;doprnt.c: 1112: if(prec <= 12)
  2517  02F8  0021               	movlb	1	; select bank1
  2518  02F9  0842               	movf	(printf@prec+1)^(0+128),w
  2519  02FA  3A80               	xorlw	128
  2520  02FB  0020               	movlb	0	; select bank0
  2521  02FC  00E7               	movwf	??_printf
  2522  02FD  3080               	movlw	128
  2523  02FE  0267               	subwf	??_printf,w
  2524  02FF  1D03               	skipz
  2525  0300  2B04               	goto	u3565
  2526  0301  300D               	movlw	13
  2527  0302  0021               	movlb	1	; select bank1
  2528  0303  0241               	subwf	printf@prec^(0+128),w
  2529  0304                     u3565:	
  2530  0304  1803               	skipnc
  2531  0305  2B2D               	goto	l2471
  2532                           
  2533                           ;doprnt.c: 1113: fval += fround(prec);
  2534  0306  0021               	movlb	1	; select bank1
  2535  0307  0841               	movf	printf@prec^(0+128),w
  2536  0308  318A  227D  3180   	fcall	_fround
  2537  030B  0020               	movlb	0	; select bank0
  2538  030C  0850               	movf	?_fround,w
  2539  030D  00B3               	movwf	___ftadd@f1
  2540  030E  0851               	movf	?_fround+1,w
  2541  030F  00B4               	movwf	___ftadd@f1+1
  2542  0310  0852               	movf	?_fround+2,w
  2543  0311  00B5               	movwf	___ftadd@f1+2
  2544  0312  0021               	movlb	1	; select bank1
  2545  0313  083E               	movf	printf@fval^(0+128),w
  2546  0314  0020               	movlb	0	; select bank0
  2547  0315  00B6               	movwf	___ftadd@f2
  2548  0316  0021               	movlb	1	; select bank1
  2549  0317  083F               	movf	(printf@fval+1)^(0+128),w
  2550  0318  0020               	movlb	0	; select bank0
  2551  0319  00B7               	movwf	___ftadd@f2+1
  2552  031A  0021               	movlb	1	; select bank1
  2553  031B  0840               	movf	(printf@fval+2)^(0+128),w
  2554  031C  0020               	movlb	0	; select bank0
  2555  031D  00B8               	movwf	___ftadd@f2+2
  2556  031E  3188  206A  3180   	fcall	___ftadd
  2557  0321  0020               	movlb	0	; select bank0
  2558  0322  0833               	movf	?___ftadd,w
  2559  0323  0021               	movlb	1	; select bank1
  2560  0324  00BE               	movwf	printf@fval^(0+128)
  2561  0325  0020               	movlb	0	; select bank0
  2562  0326  0834               	movf	?___ftadd+1,w
  2563  0327  0021               	movlb	1	; select bank1
  2564  0328  00BF               	movwf	(printf@fval+1)^(0+128)
  2565  0329  0020               	movlb	0	; select bank0
  2566  032A  0835               	movf	?___ftadd+2,w
  2567  032B  0021               	movlb	1	; select bank1
  2568  032C  00C0               	movwf	(printf@fval+2)^(0+128)
  2569  032D                     l2471:	
  2570                           
  2571                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2572  032D  0021               	movlb	1	; select bank1
  2573  032E  0839               	movf	(printf@exp+1)^(0+128),w
  2574  032F  3A80               	xorlw	128
  2575  0330  0020               	movlb	0	; select bank0
  2576  0331  00E7               	movwf	??_printf
  2577  0332  3080               	movlw	128
  2578  0333  0267               	subwf	??_printf,w
  2579  0334  1D03               	skipz
  2580  0335  2B39               	goto	u3575
  2581  0336  300A               	movlw	10
  2582  0337  0021               	movlb	1	; select bank1
  2583  0338  0238               	subwf	printf@exp^(0+128),w
  2584  0339                     u3575:	
  2585  0339  1803               	skipnc
  2586  033A  2B64               	goto	l2479
  2587  033B  0021               	movlb	1	; select bank1
  2588  033C  0840               	movf	(printf@fval+2)^(0+128),w
  2589  033D  043F               	iorwf	(printf@fval+1)^(0+128),w
  2590  033E  043E               	iorwf	printf@fval^(0+128),w
  2591  033F  1903               	skipnz
  2592  0340  2BAC               	goto	l2493
  2593  0341  083E               	movf	printf@fval^(0+128),w
  2594  0342  0020               	movlb	0	; select bank0
  2595  0343  00D9               	movwf	___fttol@f1
  2596  0344  0021               	movlb	1	; select bank1
  2597  0345  083F               	movf	(printf@fval+1)^(0+128),w
  2598  0346  0020               	movlb	0	; select bank0
  2599  0347  00DA               	movwf	___fttol@f1+1
  2600  0348  0021               	movlb	1	; select bank1
  2601  0349  0840               	movf	(printf@fval+2)^(0+128),w
  2602  034A  0020               	movlb	0	; select bank0
  2603  034B  00DB               	movwf	___fttol@f1+2
  2604  034C  3196  261C  3180   	fcall	___fttol
  2605  034F  0020               	movlb	0	; select bank0
  2606  0350  085C               	movf	?___fttol+3,w
  2607  0351  045B               	iorwf	?___fttol+2,w
  2608  0352  045A               	iorwf	?___fttol+1,w
  2609  0353  0459               	iorwf	?___fttol,w
  2610  0354  1D03               	skipz
  2611  0355  2BAC               	goto	l2493
  2612  0356  0021               	movlb	1	; select bank1
  2613  0357  0839               	movf	(printf@exp+1)^(0+128),w
  2614  0358  3A80               	xorlw	128
  2615  0359  0020               	movlb	0	; select bank0
  2616  035A  00E7               	movwf	??_printf
  2617  035B  3080               	movlw	128
  2618  035C  0267               	subwf	??_printf,w
  2619  035D  1D03               	skipz
  2620  035E  2B62               	goto	u3605
  2621  035F  3002               	movlw	2
  2622  0360  0021               	movlb	1	; select bank1
  2623  0361  0238               	subwf	printf@exp^(0+128),w
  2624  0362                     u3605:	
  2625  0362  1C03               	skipc
  2626  0363  2BAC               	goto	l2493
  2627  0364                     l2479:	
  2628                           
  2629                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2630  0364  0021               	movlb	1	; select bank1
  2631  0365  0830               	movf	printf@tmpval^(0+128),w
  2632  0366  00F0               	movwf	___ftge@ff1
  2633  0367  0831               	movf	(printf@tmpval+1)^(0+128),w
  2634  0368  00F1               	movwf	___ftge@ff1+1
  2635  0369  0832               	movf	(printf@tmpval+2)^(0+128),w
  2636  036A  00F2               	movwf	___ftge@ff1+2
  2637  036B  3070               	movlw	112
  2638  036C  00F3               	movwf	___ftge@ff2
  2639  036D  3089               	movlw	137
  2640  036E  00F4               	movwf	___ftge@ff2+1
  2641  036F  3040               	movlw	64
  2642  0370  00F5               	movwf	___ftge@ff2+2
  2643  0371  3194  24B5  3180   	fcall	___ftge
  2644  0374  1803               	btfsc	3,0
  2645  0375  2B78               	goto	l2483
  2646                           
  2647                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2648  0376  30F7               	movlw	247
  2649  0377  2B79               	goto	L3
  2650  0378                     l2483:	
  2651                           ;doprnt.c: 1122: }else{
  2652                           
  2653                           
  2654                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2655  0378  30F8               	movlw	248
  2656  0379                     L3:	
  2657  0379  0021               	movlb	1	; select bank1
  2658  037A  07B8               	addwf	printf@exp^(0+128),f
  2659  037B  30FF               	movlw	255
  2660  037C  3DB9               	addwfc	(printf@exp+1)^(0+128),f
  2661                           
  2662                           ;doprnt.c: 1124: }
  2663                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2664  037D  0838               	movf	printf@exp^(0+128),w
  2665  037E  318D  25BC  3180   	fcall	_scale
  2666  0381  0020               	movlb	0	; select bank0
  2667  0382  0850               	movf	?_scale,w
  2668  0383  0021               	movlb	1	; select bank1
  2669  0384  00B0               	movwf	printf@tmpval^(0+128)
  2670  0385  0020               	movlb	0	; select bank0
  2671  0386  0851               	movf	?_scale+1,w
  2672  0387  0021               	movlb	1	; select bank1
  2673  0388  00B1               	movwf	(printf@tmpval+1)^(0+128)
  2674  0389  0020               	movlb	0	; select bank0
  2675  038A  0852               	movf	?_scale+2,w
  2676  038B  0021               	movlb	1	; select bank1
  2677  038C  00B2               	movwf	(printf@tmpval+2)^(0+128)
  2678                           
  2679                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2680  038D  083E               	movf	printf@fval^(0+128),w
  2681  038E  00F0               	movwf	__tdiv_to_l_@f1
  2682  038F  083F               	movf	(printf@fval+1)^(0+128),w
  2683  0390  00F1               	movwf	__tdiv_to_l_@f1+1
  2684  0391  0840               	movf	(printf@fval+2)^(0+128),w
  2685  0392  00F2               	movwf	__tdiv_to_l_@f1+2
  2686  0393  0830               	movf	printf@tmpval^(0+128),w
  2687  0394  00F3               	movwf	__tdiv_to_l_@f2
  2688  0395  0831               	movf	(printf@tmpval+1)^(0+128),w
  2689  0396  00F4               	movwf	__tdiv_to_l_@f2+1
  2690  0397  0832               	movf	(printf@tmpval+2)^(0+128),w
  2691  0398  00F5               	movwf	__tdiv_to_l_@f2+2
  2692  0399  3180  203E  3180   	fcall	__tdiv_to_l_
  2693  039C  0873               	movf	?__tdiv_to_l_+3,w
  2694  039D  0021               	movlb	1	; select bank1
  2695  039E  00B7               	movwf	(printf@val+3)^(0+128)
  2696  039F  0872               	movf	?__tdiv_to_l_+2,w
  2697  03A0  00B6               	movwf	(printf@val+2)^(0+128)
  2698  03A1  0871               	movf	?__tdiv_to_l_+1,w
  2699  03A2  00B5               	movwf	(printf@val+1)^(0+128)
  2700  03A3  0870               	movf	?__tdiv_to_l_,w
  2701  03A4  00B4               	movwf	printf@val^(0+128)
  2702                           
  2703                           ;doprnt.c: 1129: fval = 0.0;
  2704  03A5  3000               	movlw	0
  2705  03A6  00BE               	movwf	printf@fval^(0+128)
  2706  03A7  3000               	movlw	0
  2707  03A8  00BF               	movwf	(printf@fval+1)^(0+128)
  2708  03A9  3000               	movlw	0
  2709  03AA  00C0               	movwf	(printf@fval+2)^(0+128)
  2710                           
  2711                           ;doprnt.c: 1130: } else {
  2712  03AB  2BFA               	goto	l2497
  2713  03AC                     l2493:	
  2714                           
  2715                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2716  03AC  0021               	movlb	1	; select bank1
  2717  03AD  083E               	movf	printf@fval^(0+128),w
  2718  03AE  0020               	movlb	0	; select bank0
  2719  03AF  00D9               	movwf	___fttol@f1
  2720  03B0  0021               	movlb	1	; select bank1
  2721  03B1  083F               	movf	(printf@fval+1)^(0+128),w
  2722  03B2  0020               	movlb	0	; select bank0
  2723  03B3  00DA               	movwf	___fttol@f1+1
  2724  03B4  0021               	movlb	1	; select bank1
  2725  03B5  0840               	movf	(printf@fval+2)^(0+128),w
  2726  03B6  0020               	movlb	0	; select bank0
  2727  03B7  00DB               	movwf	___fttol@f1+2
  2728  03B8  3196  261C  3180   	fcall	___fttol
  2729  03BB  0020               	movlb	0	; select bank0
  2730  03BC  085C               	movf	?___fttol+3,w
  2731  03BD  0021               	movlb	1	; select bank1
  2732  03BE  00B7               	movwf	(printf@val+3)^(0+128)
  2733  03BF  0020               	movlb	0	; select bank0
  2734  03C0  085B               	movf	?___fttol+2,w
  2735  03C1  0021               	movlb	1	; select bank1
  2736  03C2  00B6               	movwf	(printf@val+2)^(0+128)
  2737  03C3  0020               	movlb	0	; select bank0
  2738  03C4  085A               	movf	?___fttol+1,w
  2739  03C5  0021               	movlb	1	; select bank1
  2740  03C6  00B5               	movwf	(printf@val+1)^(0+128)
  2741  03C7  0020               	movlb	0	; select bank0
  2742  03C8  0859               	movf	?___fttol,w
  2743  03C9  0021               	movlb	1	; select bank1
  2744  03CA  00B4               	movwf	printf@val^(0+128)
  2745                           
  2746                           ;doprnt.c: 1132: fval -= (double)val;
  2747  03CB  0837               	movf	(printf@val+3)^(0+128),w
  2748  03CC  00FB               	movwf	___lltoft@c+3
  2749  03CD  0836               	movf	(printf@val+2)^(0+128),w
  2750  03CE  00FA               	movwf	___lltoft@c+2
  2751  03CF  0835               	movf	(printf@val+1)^(0+128),w
  2752  03D0  00F9               	movwf	___lltoft@c+1
  2753  03D1  0834               	movf	printf@val^(0+128),w
  2754  03D2  00F8               	movwf	___lltoft@c
  2755  03D3  3180  2016  3180   	fcall	___lltoft
  2756  03D6  0878               	movf	?___lltoft,w
  2757  03D7  0020               	movlb	0	; select bank0
  2758  03D8  00C0               	movwf	___ftsub@f2
  2759  03D9  0879               	movf	?___lltoft+1,w
  2760  03DA  00C1               	movwf	___ftsub@f2+1
  2761  03DB  087A               	movf	?___lltoft+2,w
  2762  03DC  00C2               	movwf	___ftsub@f2+2
  2763  03DD  0021               	movlb	1	; select bank1
  2764  03DE  083E               	movf	printf@fval^(0+128),w
  2765  03DF  0020               	movlb	0	; select bank0
  2766  03E0  00C3               	movwf	___ftsub@f1
  2767  03E1  0021               	movlb	1	; select bank1
  2768  03E2  083F               	movf	(printf@fval+1)^(0+128),w
  2769  03E3  0020               	movlb	0	; select bank0
  2770  03E4  00C4               	movwf	___ftsub@f1+1
  2771  03E5  0021               	movlb	1	; select bank1
  2772  03E6  0840               	movf	(printf@fval+2)^(0+128),w
  2773  03E7  0020               	movlb	0	; select bank0
  2774  03E8  00C5               	movwf	___ftsub@f1+2
  2775  03E9  3194  2497  3180   	fcall	___ftsub
  2776  03EC  0020               	movlb	0	; select bank0
  2777  03ED  0840               	movf	?___ftsub,w
  2778  03EE  0021               	movlb	1	; select bank1
  2779  03EF  00BE               	movwf	printf@fval^(0+128)
  2780  03F0  0020               	movlb	0	; select bank0
  2781  03F1  0841               	movf	?___ftsub+1,w
  2782  03F2  0021               	movlb	1	; select bank1
  2783  03F3  00BF               	movwf	(printf@fval+1)^(0+128)
  2784  03F4  0020               	movlb	0	; select bank0
  2785  03F5  0842               	movf	?___ftsub+2,w
  2786  03F6  0021               	movlb	1	; select bank1
  2787  03F7  00C0               	movwf	(printf@fval+2)^(0+128)
  2788                           
  2789                           ;doprnt.c: 1133: exp = 0;
  2790  03F8  01B8               	clrf	printf@exp^(0+128)
  2791  03F9  01B9               	clrf	(printf@exp+1)^(0+128)
  2792  03FA                     l2497:	
  2793                           
  2794                           ;doprnt.c: 1134: }
  2795                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2796  03FA  01C3               	clrf	printf@c^(0+128)
  2797  03FB  0AC3               	incf	printf@c^(0+128),f
  2798  03FC  300A               	movlw	10
  2799  03FD  0643               	xorwf	printf@c^(0+128),w
  2800  03FE  1903               	btfsc	3,2
  2801  03FF  2C37               	goto	l2509
  2802  0400                     l2503:	
  2803                           
  2804                           ;doprnt.c: 1137: if(val < dpowers[c])
  2805  0400  0843               	movf	printf@c^(0+128),w
  2806  0401  0020               	movlb	0	; select bank0
  2807  0402  00E7               	movwf	??_printf
  2808  0403  01E8               	clrf	??_printf+1
  2809  0404  35E7               	lslf	??_printf,f
  2810  0405  0DE8               	rlf	??_printf+1,f
  2811  0406  35E7               	lslf	??_printf,f
  2812  0407  0DE8               	rlf	??_printf+1,f
  2813  0408  30C7               	movlw	low (_dpowers| (0+32768))
  2814  0409  0767               	addwf	??_printf,w
  2815  040A  0084               	movwf	4
  2816  040B  3098               	movlw	high (_dpowers| (0+32768))
  2817  040C  3D68               	addwfc	??_printf+1,w
  2818  040D  0085               	movwf	5
  2819  040E  3F00               	moviw [0]fsr0
  2820  040F  00E9               	movwf	??_printf+2
  2821  0410  3F01               	moviw [1]fsr0
  2822  0411  00EA               	movwf	??_printf+3
  2823  0412  3F02               	moviw [2]fsr0
  2824  0413  00EB               	movwf	??_printf+4
  2825  0414  3F03               	moviw [3]fsr0
  2826  0415  00EC               	movwf	??_printf+5
  2827  0416  086C               	movf	??_printf+5,w
  2828  0417  0021               	movlb	1	; select bank1
  2829  0418  0237               	subwf	(printf@val+3)^(0+128),w
  2830  0419  1D03               	skipz
  2831  041A  2C2B               	goto	u3635
  2832  041B  0020               	movlb	0	; select bank0
  2833  041C  086B               	movf	??_printf+4,w
  2834  041D  0021               	movlb	1	; select bank1
  2835  041E  0236               	subwf	(printf@val+2)^(0+128),w
  2836  041F  1D03               	skipz
  2837  0420  2C2B               	goto	u3635
  2838  0421  0020               	movlb	0	; select bank0
  2839  0422  086A               	movf	??_printf+3,w
  2840  0423  0021               	movlb	1	; select bank1
  2841  0424  0235               	subwf	(printf@val+1)^(0+128),w
  2842  0425  1D03               	skipz
  2843  0426  2C2B               	goto	u3635
  2844  0427  0020               	movlb	0	; select bank0
  2845  0428  0869               	movf	??_printf+2,w
  2846  0429  0021               	movlb	1	; select bank1
  2847  042A  0234               	subwf	printf@val^(0+128),w
  2848  042B                     u3635:	
  2849  042B  1C03               	btfss	3,0
  2850  042C  2C37               	goto	l2509
  2851                           
  2852                           ;doprnt.c: 1138: break;
  2853  042D  3001               	movlw	1
  2854  042E  0020               	movlb	0	; select bank0
  2855  042F  00E7               	movwf	??_printf
  2856  0430  0867               	movf	??_printf,w
  2857  0431  0021               	movlb	1	; select bank1
  2858  0432  07C3               	addwf	printf@c^(0+128),f
  2859  0433  300A               	movlw	10
  2860  0434  0643               	xorwf	printf@c^(0+128),w
  2861  0435  1D03               	btfss	3,2
  2862  0436  2C00               	goto	l2503
  2863  0437                     l2509:	
  2864                           
  2865                           ;doprnt.c: 1142: width -= prec + c + exp;
  2866  0437  0843               	movf	printf@c^(0+128),w
  2867  0438  0020               	movlb	0	; select bank0
  2868  0439  00E7               	movwf	??_printf
  2869  043A  01E8               	clrf	??_printf+1
  2870  043B  1BE7               	btfsc	??_printf,7
  2871  043C  03E8               	decf	??_printf+1,f
  2872  043D  0021               	movlb	1	; select bank1
  2873  043E  0841               	movf	printf@prec^(0+128),w
  2874  043F  0020               	movlb	0	; select bank0
  2875  0440  0767               	addwf	??_printf,w
  2876  0441  00E9               	movwf	??_printf+2
  2877  0442  0021               	movlb	1	; select bank1
  2878  0443  0842               	movf	(printf@prec+1)^(0+128),w
  2879  0444  0020               	movlb	0	; select bank0
  2880  0445  3D68               	addwfc	??_printf+1,w
  2881  0446  00EA               	movwf	??_printf+3
  2882  0447  0021               	movlb	1	; select bank1
  2883  0448  0838               	movf	printf@exp^(0+128),w
  2884  0449  0020               	movlb	0	; select bank0
  2885  044A  0769               	addwf	??_printf+2,w
  2886  044B  00EB               	movwf	??_printf+4
  2887  044C  0021               	movlb	1	; select bank1
  2888  044D  0839               	movf	(printf@exp+1)^(0+128),w
  2889  044E  0020               	movlb	0	; select bank0
  2890  044F  3D6A               	addwfc	??_printf+3,w
  2891  0450  00EC               	movwf	??_printf+5
  2892  0451  086B               	movf	??_printf+4,w
  2893  0452  0021               	movlb	1	; select bank1
  2894  0453  02BC               	subwf	printf@width^(0+128),f
  2895  0454  0020               	movlb	0	; select bank0
  2896  0455  086C               	movf	??_printf+5,w
  2897  0456  0021               	movlb	1	; select bank1
  2898  0457  3BBD               	subwfb	(printf@width+1)^(0+128),f
  2899                           
  2900                           ;doprnt.c: 1143: if(
  2901                           ;doprnt.c: 1147: prec)
  2902  0458  0841               	movf	printf@prec^(0+128),w
  2903  0459  0442               	iorwf	(printf@prec+1)^(0+128),w
  2904  045A  1903               	btfsc	3,2
  2905  045B  2C60               	goto	l2513
  2906                           
  2907                           ;doprnt.c: 1148: width--;
  2908  045C  30FF               	movlw	255
  2909  045D  07BC               	addwf	printf@width^(0+128),f
  2910  045E  30FF               	movlw	255
  2911  045F  3DBD               	addwfc	(printf@width+1)^(0+128),f
  2912  0460                     l2513:	
  2913                           
  2914                           ;doprnt.c: 1149: if(flag & 0x03)
  2915  0460  3003               	movlw	3
  2916  0461  053A               	andwf	printf@flag^(0+128),w
  2917  0462  0020               	movlb	0	; select bank0
  2918  0463  00E7               	movwf	??_printf
  2919  0464  3000               	movlw	0
  2920  0465  0021               	movlb	1	; select bank1
  2921  0466  053B               	andwf	(printf@flag+1)^(0+128),w
  2922  0467  0020               	movlb	0	; select bank0
  2923  0468  00E8               	movwf	??_printf+1
  2924  0469  0867               	movf	??_printf,w
  2925  046A  0468               	iorwf	??_printf+1,w
  2926  046B  1903               	btfsc	3,2
  2927  046C  2C72               	goto	l2517
  2928                           
  2929                           ;doprnt.c: 1150: width--;
  2930  046D  30FF               	movlw	255
  2931  046E  0021               	movlb	1	; select bank1
  2932  046F  07BC               	addwf	printf@width^(0+128),f
  2933  0470  30FF               	movlw	255
  2934  0471  3DBD               	addwfc	(printf@width+1)^(0+128),f
  2935  0472                     l2517:	
  2936                           
  2937                           ;doprnt.c: 1153: if(flag & 0x04) {
  2938  0472  0021               	movlb	1	; select bank1
  2939  0473  1D3A               	btfss	printf@flag^(0+128),2
  2940  0474  2CA7               	goto	l2533
  2941                           
  2942                           ;doprnt.c: 1157: if(flag & 0x03)
  2943  0475  3003               	movlw	3
  2944  0476  053A               	andwf	printf@flag^(0+128),w
  2945  0477  0020               	movlb	0	; select bank0
  2946  0478  00E7               	movwf	??_printf
  2947  0479  3000               	movlw	0
  2948  047A  0021               	movlb	1	; select bank1
  2949  047B  053B               	andwf	(printf@flag+1)^(0+128),w
  2950  047C  0020               	movlb	0	; select bank0
  2951  047D  00E8               	movwf	??_printf+1
  2952  047E  0867               	movf	??_printf,w
  2953  047F  0468               	iorwf	??_printf+1,w
  2954  0480  1903               	btfsc	3,2
  2955  0481  2C86               	goto	l2527
  2956                           
  2957                           ;doprnt.c: 1159: (putch('-') );
  2958  0482  302D               	movlw	45
  2959  0483  3194  242C  3180   	fcall	_putch
  2960  0486                     l2527:	
  2961                           ;doprnt.c: 1168: while(width > 0) {
  2962                           
  2963  0486  0021               	movlb	1	; select bank1
  2964  0487  083D               	movf	(printf@width+1)^(0+128),w
  2965  0488  3A80               	xorlw	128
  2966  0489  0020               	movlb	0	; select bank0
  2967  048A  00E7               	movwf	??_printf
  2968  048B  3080               	movlw	128
  2969  048C  0267               	subwf	??_printf,w
  2970  048D  1D03               	skipz
  2971  048E  2C92               	goto	u3695
  2972  048F  3001               	movlw	1
  2973  0490  0021               	movlb	1	; select bank1
  2974  0491  023C               	subwf	printf@width^(0+128),w
  2975  0492                     u3695:	
  2976  0492  1C03               	btfss	3,0
  2977  0493  2CC7               	goto	l2545
  2978                           
  2979                           ;doprnt.c: 1169: (putch('0') );
  2980  0494  3030               	movlw	48
  2981  0495  3194  242C  3180   	fcall	_putch
  2982                           
  2983                           ;doprnt.c: 1170: width--;
  2984  0498  30FF               	movlw	255
  2985  0499  0021               	movlb	1	; select bank1
  2986  049A  07BC               	addwf	printf@width^(0+128),f
  2987  049B  30FF               	movlw	255
  2988  049C  3DBD               	addwfc	(printf@width+1)^(0+128),f
  2989  049D  2C86               	goto	l2527
  2990  049E                     l2529:	
  2991                           ;doprnt.c: 1175: {
  2992                           ;doprnt.c: 1180: while(width > 0) {
  2993                           
  2994                           ;doprnt.c: 1171: }
  2995                           ;doprnt.c: 1173: } else
  2996                           
  2997                           
  2998                           ;doprnt.c: 1181: (putch(' ') );
  2999  049E  3020               	movlw	32
  3000  049F  3194  242C  3180   	fcall	_putch
  3001                           
  3002                           ;doprnt.c: 1182: width--;
  3003  04A2  30FF               	movlw	255
  3004  04A3  0021               	movlb	1	; select bank1
  3005  04A4  07BC               	addwf	printf@width^(0+128),f
  3006  04A5  30FF               	movlw	255
  3007  04A6  3DBD               	addwfc	(printf@width+1)^(0+128),f
  3008  04A7                     l2533:	
  3009  04A7  0021               	movlb	1	; select bank1
  3010  04A8  083D               	movf	(printf@width+1)^(0+128),w
  3011  04A9  3A80               	xorlw	128
  3012  04AA  0020               	movlb	0	; select bank0
  3013  04AB  00E7               	movwf	??_printf
  3014  04AC  3080               	movlw	128
  3015  04AD  0267               	subwf	??_printf,w
  3016  04AE  1D03               	skipz
  3017  04AF  2CB3               	goto	u3705
  3018  04B0  3001               	movlw	1
  3019  04B1  0021               	movlb	1	; select bank1
  3020  04B2  023C               	subwf	printf@width^(0+128),w
  3021  04B3                     u3705:	
  3022  04B3  1803               	skipnc
  3023  04B4  2C9E               	goto	l2529
  3024                           
  3025                           ;doprnt.c: 1183: }
  3026                           ;doprnt.c: 1188: if(flag & 0x03)
  3027  04B5  3003               	movlw	3
  3028  04B6  0021               	movlb	1	; select bank1
  3029  04B7  053A               	andwf	printf@flag^(0+128),w
  3030  04B8  0020               	movlb	0	; select bank0
  3031  04B9  00E7               	movwf	??_printf
  3032  04BA  3000               	movlw	0
  3033  04BB  0021               	movlb	1	; select bank1
  3034  04BC  053B               	andwf	(printf@flag+1)^(0+128),w
  3035  04BD  0020               	movlb	0	; select bank0
  3036  04BE  00E8               	movwf	??_printf+1
  3037  04BF  0867               	movf	??_printf,w
  3038  04C0  0468               	iorwf	??_printf+1,w
  3039  04C1  1903               	btfsc	3,2
  3040  04C2  2CC7               	goto	l2545
  3041                           
  3042                           ;doprnt.c: 1190: (putch('-') );
  3043  04C3  302D               	movlw	45
  3044  04C4                     L7:	
  3045  04C4  3194  242C  3180   	fcall	_putch
  3046  04C7                     l2545:	
  3047                           ;doprnt.c: 1195: }
  3048                           ;doprnt.c: 1196: while(c--) {
  3049                           
  3050  04C7  30FF               	movlw	255
  3051  04C8  0020               	movlb	0	; select bank0
  3052  04C9  00E7               	movwf	??_printf
  3053  04CA  0867               	movf	??_printf,w
  3054  04CB  0021               	movlb	1	; select bank1
  3055  04CC  07C3               	addwf	printf@c^(0+128),f
  3056  04CD  0A43               	incf	printf@c^(0+128),w
  3057  04CE  1903               	btfsc	3,2
  3058  04CF  2D34               	goto	l2551
  3059                           
  3060                           ;doprnt.c: 1200: {
  3061                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3062  04D0  0021               	movlb	1	; select bank1
  3063  04D1  0843               	movf	printf@c^(0+128),w
  3064  04D2  0020               	movlb	0	; select bank0
  3065  04D3  00E7               	movwf	??_printf
  3066  04D4  01E8               	clrf	??_printf+1
  3067  04D5  35E7               	lslf	??_printf,f
  3068  04D6  0DE8               	rlf	??_printf+1,f
  3069  04D7  35E7               	lslf	??_printf,f
  3070  04D8  0DE8               	rlf	??_printf+1,f
  3071  04D9  30C7               	movlw	low (_dpowers| (0+32768))
  3072  04DA  0767               	addwf	??_printf,w
  3073  04DB  0084               	movwf	4
  3074  04DC  3098               	movlw	high (_dpowers| (0+32768))
  3075  04DD  3D68               	addwfc	??_printf+1,w
  3076  04DE  0085               	movwf	5
  3077  04DF  3F00               	moviw [0]fsr0
  3078  04E0  00F0               	movwf	___lldiv@divisor
  3079  04E1  3F01               	moviw [1]fsr0
  3080  04E2  00F1               	movwf	___lldiv@divisor+1
  3081  04E3  3F02               	moviw [2]fsr0
  3082  04E4  00F2               	movwf	___lldiv@divisor+2
  3083  04E5  3F03               	moviw [3]fsr0
  3084  04E6  00F3               	movwf	___lldiv@divisor+3
  3085  04E7  0021               	movlb	1	; select bank1
  3086  04E8  0837               	movf	(printf@val+3)^(0+128),w
  3087  04E9  00F7               	movwf	___lldiv@dividend+3
  3088  04EA  0836               	movf	(printf@val+2)^(0+128),w
  3089  04EB  00F6               	movwf	___lldiv@dividend+2
  3090  04EC  0835               	movf	(printf@val+1)^(0+128),w
  3091  04ED  00F5               	movwf	___lldiv@dividend+1
  3092  04EE  0834               	movf	printf@val^(0+128),w
  3093  04EF  00F4               	movwf	___lldiv@dividend
  3094  04F0  3195  2578  3180   	fcall	___lldiv
  3095  04F3  0873               	movf	?___lldiv+3,w
  3096  04F4  0021               	movlb	1	; select bank1
  3097  04F5  00B3               	movwf	(printf@tmpval+3)^(0+128)
  3098  04F6  0872               	movf	?___lldiv+2,w
  3099  04F7  00B2               	movwf	(printf@tmpval+2)^(0+128)
  3100  04F8  0871               	movf	?___lldiv+1,w
  3101  04F9  00B1               	movwf	(printf@tmpval+1)^(0+128)
  3102  04FA  0870               	movf	?___lldiv,w
  3103  04FB  00B0               	movwf	printf@tmpval^(0+128)
  3104                           
  3105                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3106  04FC  3000               	movlw	0
  3107  04FD  0020               	movlb	0	; select bank0
  3108  04FE  00A3               	movwf	___llmod@divisor+3
  3109  04FF  3000               	movlw	0
  3110  0500  00A2               	movwf	___llmod@divisor+2
  3111  0501  3000               	movlw	0
  3112  0502  00A1               	movwf	___llmod@divisor+1
  3113  0503  300A               	movlw	10
  3114  0504  00A0               	movwf	___llmod@divisor
  3115  0505  0021               	movlb	1	; select bank1
  3116  0506  0833               	movf	(printf@tmpval+3)^(0+128),w
  3117  0507  0020               	movlb	0	; select bank0
  3118  0508  00A7               	movwf	___llmod@dividend+3
  3119  0509  0021               	movlb	1	; select bank1
  3120  050A  0832               	movf	(printf@tmpval+2)^(0+128),w
  3121  050B  0020               	movlb	0	; select bank0
  3122  050C  00A6               	movwf	___llmod@dividend+2
  3123  050D  0021               	movlb	1	; select bank1
  3124  050E  0831               	movf	(printf@tmpval+1)^(0+128),w
  3125  050F  0020               	movlb	0	; select bank0
  3126  0510  00A5               	movwf	___llmod@dividend+1
  3127  0511  0021               	movlb	1	; select bank1
  3128  0512  0830               	movf	printf@tmpval^(0+128),w
  3129  0513  0020               	movlb	0	; select bank0
  3130  0514  00A4               	movwf	___llmod@dividend
  3131  0515  3194  24F0  3180   	fcall	___llmod
  3132  0518  0020               	movlb	0	; select bank0
  3133  0519  0823               	movf	?___llmod+3,w
  3134  051A  0021               	movlb	1	; select bank1
  3135  051B  00B3               	movwf	(printf@tmpval+3)^(0+128)
  3136  051C  0020               	movlb	0	; select bank0
  3137  051D  0822               	movf	?___llmod+2,w
  3138  051E  0021               	movlb	1	; select bank1
  3139  051F  00B2               	movwf	(printf@tmpval+2)^(0+128)
  3140  0520  0020               	movlb	0	; select bank0
  3141  0521  0821               	movf	?___llmod+1,w
  3142  0522  0021               	movlb	1	; select bank1
  3143  0523  00B1               	movwf	(printf@tmpval+1)^(0+128)
  3144  0524  0020               	movlb	0	; select bank0
  3145  0525  0820               	movf	?___llmod,w
  3146  0526  0021               	movlb	1	; select bank1
  3147  0527  00B0               	movwf	printf@tmpval^(0+128)
  3148                           
  3149                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  3150  0528  0830               	movf	printf@tmpval^(0+128),w
  3151  0529  3E30               	addlw	48
  3152  052A  2CC4               	goto	L7
  3153  052B                     l2547:	
  3154                           ;doprnt.c: 1204: }
  3155                           ;doprnt.c: 1206: }
  3156                           ;doprnt.c: 1207: while(exp > 0) {
  3157                           
  3158                           
  3159                           ;doprnt.c: 1208: (putch('0') );
  3160  052B  3030               	movlw	48
  3161  052C  3194  242C  3180   	fcall	_putch
  3162                           
  3163                           ;doprnt.c: 1209: exp--;
  3164  052F  30FF               	movlw	255
  3165  0530  0021               	movlb	1	; select bank1
  3166  0531  07B8               	addwf	printf@exp^(0+128),f
  3167  0532  30FF               	movlw	255
  3168  0533  3DB9               	addwfc	(printf@exp+1)^(0+128),f
  3169  0534                     l2551:	
  3170  0534  0839               	movf	(printf@exp+1)^(0+128),w
  3171  0535  3A80               	xorlw	128
  3172  0536  0020               	movlb	0	; select bank0
  3173  0537  00E7               	movwf	??_printf
  3174  0538  3080               	movlw	128
  3175  0539  0267               	subwf	??_printf,w
  3176  053A  1D03               	skipz
  3177  053B  2D3F               	goto	u3735
  3178  053C  3001               	movlw	1
  3179  053D  0021               	movlb	1	; select bank1
  3180  053E  0238               	subwf	printf@exp^(0+128),w
  3181  053F                     u3735:	
  3182  053F  1803               	skipnc
  3183  0540  2D2B               	goto	l2547
  3184                           
  3185                           ;doprnt.c: 1210: }
  3186                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3187  0541  0021               	movlb	1	; select bank1
  3188  0542  0842               	movf	(printf@prec+1)^(0+128),w
  3189  0543  3A80               	xorlw	128
  3190  0544  0020               	movlb	0	; select bank0
  3191  0545  00E7               	movwf	??_printf
  3192  0546  3080               	movlw	128
  3193  0547  0267               	subwf	??_printf,w
  3194  0548  1D03               	skipz
  3195  0549  2D4D               	goto	u3745
  3196  054A  3009               	movlw	9
  3197  054B  0021               	movlb	1	; select bank1
  3198  054C  0241               	subwf	printf@prec^(0+128),w
  3199  054D                     u3745:	
  3200  054D  1C03               	skipc
  3201  054E  2D51               	goto	l2557
  3202                           
  3203                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3204  054F  3008               	movlw	8
  3205  0550  2D53               	goto	L4
  3206  0551                     l2557:	
  3207                           
  3208                           ;doprnt.c: 1213: else
  3209                           ;doprnt.c: 1214: c = prec;
  3210  0551  0021               	movlb	1	; select bank1
  3211  0552  0841               	movf	printf@prec^(0+128),w
  3212  0553                     L4:	
  3213  0553  0020               	movlb	0	; select bank0
  3214  0554  00E7               	movwf	??_printf
  3215  0555  0867               	movf	??_printf,w
  3216  0556  0021               	movlb	1	; select bank1
  3217  0557  00C3               	movwf	printf@c^(0+128)
  3218                           
  3219                           ;doprnt.c: 1215: prec -= c;
  3220  0558  0843               	movf	printf@c^(0+128),w
  3221  0559  0020               	movlb	0	; select bank0
  3222  055A  00E7               	movwf	??_printf
  3223  055B  01E8               	clrf	??_printf+1
  3224  055C  1BE7               	btfsc	??_printf,7
  3225  055D  03E8               	decf	??_printf+1,f
  3226  055E  0867               	movf	??_printf,w
  3227  055F  0021               	movlb	1	; select bank1
  3228  0560  02C1               	subwf	printf@prec^(0+128),f
  3229  0561  0020               	movlb	0	; select bank0
  3230  0562  0868               	movf	??_printf+1,w
  3231  0563  0021               	movlb	1	; select bank1
  3232  0564  3BC2               	subwfb	(printf@prec+1)^(0+128),f
  3233                           
  3234                           ;doprnt.c: 1219: if(c)
  3235  0565  0843               	movf	printf@c^(0+128),w
  3236  0566  1903               	btfsc	3,2
  3237  0567  2D6C               	goto	l2563
  3238                           
  3239                           ;doprnt.c: 1221: (putch('.') );
  3240  0568  302E               	movlw	46
  3241  0569  3194  242C  3180   	fcall	_putch
  3242  056C                     l2563:	
  3243                           
  3244                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3245  056C  0021               	movlb	1	; select bank1
  3246  056D  0843               	movf	printf@c^(0+128),w
  3247  056E  318D  25BC  3180   	fcall	_scale
  3248  0571  0020               	movlb	0	; select bank0
  3249  0572  0850               	movf	?_scale,w
  3250  0573  0021               	movlb	1	; select bank1
  3251  0574  00AC               	movwf	_printf$567^(0+128)
  3252  0575  0020               	movlb	0	; select bank0
  3253  0576  0851               	movf	?_scale+1,w
  3254  0577  0021               	movlb	1	; select bank1
  3255  0578  00AD               	movwf	(_printf$567+1)^(0+128)
  3256  0579  0020               	movlb	0	; select bank0
  3257  057A  0852               	movf	?_scale+2,w
  3258  057B  0021               	movlb	1	; select bank1
  3259  057C  00AE               	movwf	(_printf$567+2)^(0+128)
  3260                           
  3261                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3262  057D  082C               	movf	_printf$567^(0+128),w
  3263  057E  0020               	movlb	0	; select bank0
  3264  057F  00C3               	movwf	___ftmul@f2
  3265  0580  0021               	movlb	1	; select bank1
  3266  0581  082D               	movf	(_printf$567+1)^(0+128),w
  3267  0582  0020               	movlb	0	; select bank0
  3268  0583  00C4               	movwf	___ftmul@f2+1
  3269  0584  0021               	movlb	1	; select bank1
  3270  0585  082E               	movf	(_printf$567+2)^(0+128),w
  3271  0586  0020               	movlb	0	; select bank0
  3272  0587  00C5               	movwf	___ftmul@f2+2
  3273  0588  0021               	movlb	1	; select bank1
  3274  0589  083E               	movf	printf@fval^(0+128),w
  3275  058A  0020               	movlb	0	; select bank0
  3276  058B  00C0               	movwf	___ftmul@f1
  3277  058C  0021               	movlb	1	; select bank1
  3278  058D  083F               	movf	(printf@fval+1)^(0+128),w
  3279  058E  0020               	movlb	0	; select bank0
  3280  058F  00C1               	movwf	___ftmul@f1+1
  3281  0590  0021               	movlb	1	; select bank1
  3282  0591  0840               	movf	(printf@fval+2)^(0+128),w
  3283  0592  0020               	movlb	0	; select bank0
  3284  0593  00C2               	movwf	___ftmul@f1+2
  3285  0594  3197  274C  3180   	fcall	___ftmul
  3286  0597  0020               	movlb	0	; select bank0
  3287  0598  0840               	movf	?___ftmul,w
  3288  0599  00D9               	movwf	___fttol@f1
  3289  059A  0841               	movf	?___ftmul+1,w
  3290  059B  00DA               	movwf	___fttol@f1+1
  3291  059C  0842               	movf	?___ftmul+2,w
  3292  059D  00DB               	movwf	___fttol@f1+2
  3293  059E  3196  261C  3180   	fcall	___fttol
  3294  05A1  0020               	movlb	0	; select bank0
  3295  05A2  085C               	movf	?___fttol+3,w
  3296  05A3  0021               	movlb	1	; select bank1
  3297  05A4  00B7               	movwf	(printf@val+3)^(0+128)
  3298  05A5  0020               	movlb	0	; select bank0
  3299  05A6  085B               	movf	?___fttol+2,w
  3300  05A7  0021               	movlb	1	; select bank1
  3301  05A8  00B6               	movwf	(printf@val+2)^(0+128)
  3302  05A9  0020               	movlb	0	; select bank0
  3303  05AA  085A               	movf	?___fttol+1,w
  3304  05AB  0021               	movlb	1	; select bank1
  3305  05AC  00B5               	movwf	(printf@val+1)^(0+128)
  3306  05AD  0020               	movlb	0	; select bank0
  3307  05AE  0859               	movf	?___fttol,w
  3308  05AF                     L5:	
  3309  05AF  0021               	movlb	1	; select bank1
  3310  05B0  00B4               	movwf	printf@val^(0+128)
  3311  05B1  30FF               	movlw	255
  3312  05B2  0020               	movlb	0	; select bank0
  3313  05B3  00E7               	movwf	??_printf
  3314  05B4  0867               	movf	??_printf,w
  3315  05B5  0021               	movlb	1	; select bank1
  3316  05B6  07C3               	addwf	printf@c^(0+128),f
  3317  05B7  0A43               	incf	printf@c^(0+128),w
  3318  05B8  1903               	btfsc	3,2
  3319  05B9  2E58               	goto	l2579
  3320                           
  3321                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3322                           
  3323                           ;doprnt.c: 1228: while(c--) {
  3324  05BA  0843               	movf	printf@c^(0+128),w
  3325  05BB  0020               	movlb	0	; select bank0
  3326  05BC  00E7               	movwf	??_printf
  3327  05BD  01E8               	clrf	??_printf+1
  3328  05BE  35E7               	lslf	??_printf,f
  3329  05BF  0DE8               	rlf	??_printf+1,f
  3330  05C0  35E7               	lslf	??_printf,f
  3331  05C1  0DE8               	rlf	??_printf+1,f
  3332  05C2  30C7               	movlw	low (_dpowers| (0+32768))
  3333  05C3  0767               	addwf	??_printf,w
  3334  05C4  0084               	movwf	4
  3335  05C5  3098               	movlw	high (_dpowers| (0+32768))
  3336  05C6  3D68               	addwfc	??_printf+1,w
  3337  05C7  0085               	movwf	5
  3338  05C8  3F00               	moviw [0]fsr0
  3339  05C9  00F0               	movwf	___lldiv@divisor
  3340  05CA  3F01               	moviw [1]fsr0
  3341  05CB  00F1               	movwf	___lldiv@divisor+1
  3342  05CC  3F02               	moviw [2]fsr0
  3343  05CD  00F2               	movwf	___lldiv@divisor+2
  3344  05CE  3F03               	moviw [3]fsr0
  3345  05CF  00F3               	movwf	___lldiv@divisor+3
  3346  05D0  0021               	movlb	1	; select bank1
  3347  05D1  0837               	movf	(printf@val+3)^(0+128),w
  3348  05D2  00F7               	movwf	___lldiv@dividend+3
  3349  05D3  0836               	movf	(printf@val+2)^(0+128),w
  3350  05D4  00F6               	movwf	___lldiv@dividend+2
  3351  05D5  0835               	movf	(printf@val+1)^(0+128),w
  3352  05D6  00F5               	movwf	___lldiv@dividend+1
  3353  05D7  0834               	movf	printf@val^(0+128),w
  3354  05D8  00F4               	movwf	___lldiv@dividend
  3355  05D9  3195  2578  3180   	fcall	___lldiv
  3356  05DC  0873               	movf	?___lldiv+3,w
  3357  05DD  0021               	movlb	1	; select bank1
  3358  05DE  00B3               	movwf	(printf@tmpval+3)^(0+128)
  3359  05DF  0872               	movf	?___lldiv+2,w
  3360  05E0  00B2               	movwf	(printf@tmpval+2)^(0+128)
  3361  05E1  0871               	movf	?___lldiv+1,w
  3362  05E2  00B1               	movwf	(printf@tmpval+1)^(0+128)
  3363  05E3  0870               	movf	?___lldiv,w
  3364  05E4  00B0               	movwf	printf@tmpval^(0+128)
  3365                           
  3366                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3367  05E5  3000               	movlw	0
  3368  05E6  0020               	movlb	0	; select bank0
  3369  05E7  00A3               	movwf	___llmod@divisor+3
  3370  05E8  3000               	movlw	0
  3371  05E9  00A2               	movwf	___llmod@divisor+2
  3372  05EA  3000               	movlw	0
  3373  05EB  00A1               	movwf	___llmod@divisor+1
  3374  05EC  300A               	movlw	10
  3375  05ED  00A0               	movwf	___llmod@divisor
  3376  05EE  0021               	movlb	1	; select bank1
  3377  05EF  0833               	movf	(printf@tmpval+3)^(0+128),w
  3378  05F0  0020               	movlb	0	; select bank0
  3379  05F1  00A7               	movwf	___llmod@dividend+3
  3380  05F2  0021               	movlb	1	; select bank1
  3381  05F3  0832               	movf	(printf@tmpval+2)^(0+128),w
  3382  05F4  0020               	movlb	0	; select bank0
  3383  05F5  00A6               	movwf	___llmod@dividend+2
  3384  05F6  0021               	movlb	1	; select bank1
  3385  05F7  0831               	movf	(printf@tmpval+1)^(0+128),w
  3386  05F8  0020               	movlb	0	; select bank0
  3387  05F9  00A5               	movwf	___llmod@dividend+1
  3388  05FA  0021               	movlb	1	; select bank1
  3389  05FB  0830               	movf	printf@tmpval^(0+128),w
  3390  05FC  0020               	movlb	0	; select bank0
  3391  05FD  00A4               	movwf	___llmod@dividend
  3392  05FE  3194  24F0  3180   	fcall	___llmod
  3393  0601  0020               	movlb	0	; select bank0
  3394  0602  0823               	movf	?___llmod+3,w
  3395  0603  0021               	movlb	1	; select bank1
  3396  0604  00B3               	movwf	(printf@tmpval+3)^(0+128)
  3397  0605  0020               	movlb	0	; select bank0
  3398  0606  0822               	movf	?___llmod+2,w
  3399  0607  0021               	movlb	1	; select bank1
  3400  0608  00B2               	movwf	(printf@tmpval+2)^(0+128)
  3401  0609  0020               	movlb	0	; select bank0
  3402  060A  0821               	movf	?___llmod+1,w
  3403  060B  0021               	movlb	1	; select bank1
  3404  060C  00B1               	movwf	(printf@tmpval+1)^(0+128)
  3405  060D  0020               	movlb	0	; select bank0
  3406  060E  0820               	movf	?___llmod,w
  3407  060F  0021               	movlb	1	; select bank1
  3408  0610  00B0               	movwf	printf@tmpval^(0+128)
  3409                           
  3410                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  3411  0611  0830               	movf	printf@tmpval^(0+128),w
  3412  0612  3E30               	addlw	48
  3413  0613  3194  242C  3180   	fcall	_putch
  3414                           
  3415                           ;doprnt.c: 1232: val %= dpowers[c];
  3416  0616  0021               	movlb	1	; select bank1
  3417  0617  0843               	movf	printf@c^(0+128),w
  3418  0618  0020               	movlb	0	; select bank0
  3419  0619  00E7               	movwf	??_printf
  3420  061A  01E8               	clrf	??_printf+1
  3421  061B  35E7               	lslf	??_printf,f
  3422  061C  0DE8               	rlf	??_printf+1,f
  3423  061D  35E7               	lslf	??_printf,f
  3424  061E  0DE8               	rlf	??_printf+1,f
  3425  061F  30C7               	movlw	low (_dpowers| (0+32768))
  3426  0620  0767               	addwf	??_printf,w
  3427  0621  0084               	movwf	4
  3428  0622  3098               	movlw	high (_dpowers| (0+32768))
  3429  0623  3D68               	addwfc	??_printf+1,w
  3430  0624  0085               	movwf	5
  3431  0625  3F00               	moviw [0]fsr0
  3432  0626  00A0               	movwf	___llmod@divisor
  3433  0627  3F01               	moviw [1]fsr0
  3434  0628  00A1               	movwf	___llmod@divisor+1
  3435  0629  3F02               	moviw [2]fsr0
  3436  062A  00A2               	movwf	___llmod@divisor+2
  3437  062B  3F03               	moviw [3]fsr0
  3438  062C  00A3               	movwf	___llmod@divisor+3
  3439  062D  0021               	movlb	1	; select bank1
  3440  062E  0837               	movf	(printf@val+3)^(0+128),w
  3441  062F  0020               	movlb	0	; select bank0
  3442  0630  00A7               	movwf	___llmod@dividend+3
  3443  0631  0021               	movlb	1	; select bank1
  3444  0632  0836               	movf	(printf@val+2)^(0+128),w
  3445  0633  0020               	movlb	0	; select bank0
  3446  0634  00A6               	movwf	___llmod@dividend+2
  3447  0635  0021               	movlb	1	; select bank1
  3448  0636  0835               	movf	(printf@val+1)^(0+128),w
  3449  0637  0020               	movlb	0	; select bank0
  3450  0638  00A5               	movwf	___llmod@dividend+1
  3451  0639  0021               	movlb	1	; select bank1
  3452  063A  0834               	movf	printf@val^(0+128),w
  3453  063B  0020               	movlb	0	; select bank0
  3454  063C  00A4               	movwf	___llmod@dividend
  3455  063D  3194  24F0  3180   	fcall	___llmod
  3456  0640  0020               	movlb	0	; select bank0
  3457  0641  0823               	movf	?___llmod+3,w
  3458  0642  0021               	movlb	1	; select bank1
  3459  0643  00B7               	movwf	(printf@val+3)^(0+128)
  3460  0644  0020               	movlb	0	; select bank0
  3461  0645  0822               	movf	?___llmod+2,w
  3462  0646  0021               	movlb	1	; select bank1
  3463  0647  00B6               	movwf	(printf@val+2)^(0+128)
  3464  0648  0020               	movlb	0	; select bank0
  3465  0649  0821               	movf	?___llmod+1,w
  3466  064A  0021               	movlb	1	; select bank1
  3467  064B  00B5               	movwf	(printf@val+1)^(0+128)
  3468  064C  0020               	movlb	0	; select bank0
  3469  064D  0820               	movf	?___llmod,w
  3470  064E  2DAF               	goto	L5
  3471  064F                     l2575:	
  3472                           ;doprnt.c: 1233: }
  3473                           ;doprnt.c: 1235: while(prec) {
  3474                           
  3475                           
  3476                           ;doprnt.c: 1236: (putch('0') );
  3477  064F  3030               	movlw	48
  3478  0650  3194  242C  3180   	fcall	_putch
  3479                           
  3480                           ;doprnt.c: 1237: prec--;
  3481  0653  30FF               	movlw	255
  3482  0654  0021               	movlb	1	; select bank1
  3483  0655  07C1               	addwf	printf@prec^(0+128),f
  3484  0656  30FF               	movlw	255
  3485  0657  3DC2               	addwfc	(printf@prec+1)^(0+128),f
  3486  0658                     l2579:	
  3487  0658  0841               	movf	printf@prec^(0+128),w
  3488  0659  0442               	iorwf	(printf@prec+1)^(0+128),w
  3489  065A  1903               	btfsc	3,2
  3490  065B  28FA               	goto	l2663
  3491  065C  2E4F               	goto	l2575
  3492  065D                     l2581:	
  3493                           ;doprnt.c: 1238: }
  3494                           ;doprnt.c: 1245: continue;
  3495                           
  3496                           
  3497                           ;doprnt.c: 1246: }
  3498                           ;doprnt.c: 1253: {
  3499                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3500  065D  0021               	movlb	1	; select bank1
  3501  065E  082F               	movf	printf@ap^(0+128),w
  3502  065F  0086               	movwf	6
  3503  0660  0187               	clrf	7
  3504  0661  3F40               	moviw [0]fsr1
  3505  0662  0020               	movlb	0	; select bank0
  3506  0663  00E7               	movwf	??_printf
  3507  0664  3F41               	moviw [1]fsr1
  3508  0665  00E8               	movwf	??_printf+1
  3509  0666  0867               	movf	??_printf,w
  3510  0667  0021               	movlb	1	; select bank1
  3511  0668  00B4               	movwf	printf@val^(0+128)
  3512  0669  0020               	movlb	0	; select bank0
  3513  066A  0868               	movf	??_printf+1,w
  3514  066B  0021               	movlb	1	; select bank1
  3515  066C  00B5               	movwf	(printf@val+1)^(0+128)
  3516  066D  0D89               	rlf	9,f
  3517  066E  3B89               	subwfb	9,f
  3518  066F  0989               	comf	9,f
  3519  0670  00B6               	movwf	(printf@val+2)^(0+128)
  3520  0671  00B7               	movwf	(printf@val+3)^(0+128)
  3521  0672  3002               	movlw	2
  3522  0673  0020               	movlb	0	; select bank0
  3523  0674  00E7               	movwf	??_printf
  3524  0675  0867               	movf	??_printf,w
  3525  0676  0021               	movlb	1	; select bank1
  3526  0677  07AF               	addwf	printf@ap^(0+128),f
  3527                           
  3528                           ;doprnt.c: 1261: if((long)val < 0) {
  3529  0678  1FB7               	btfss	(printf@val+3)^(0+128),7
  3530  0679  2E89               	goto	l2591
  3531                           
  3532                           ;doprnt.c: 1262: flag |= 0x03;
  3533  067A  3003               	movlw	3
  3534  067B  04BA               	iorwf	printf@flag^(0+128),f
  3535  067C  3000               	movlw	0
  3536  067D  04BB               	iorwf	(printf@flag+1)^(0+128),f
  3537                           
  3538                           ;doprnt.c: 1263: val = -val;
  3539  067E  09B4               	comf	printf@val^(0+128),f
  3540  067F  09B5               	comf	(printf@val+1)^(0+128),f
  3541  0680  09B6               	comf	(printf@val+2)^(0+128),f
  3542  0681  09B7               	comf	(printf@val+3)^(0+128),f
  3543  0682  0AB4               	incf	printf@val^(0+128),f
  3544  0683  1903               	skipnz
  3545  0684  0AB5               	incf	(printf@val+1)^(0+128),f
  3546  0685  1903               	skipnz
  3547  0686  0AB6               	incf	(printf@val+2)^(0+128),f
  3548  0687  1903               	skipnz
  3549  0688  0AB7               	incf	(printf@val+3)^(0+128),f
  3550  0689                     l2591:	
  3551                           
  3552                           ;doprnt.c: 1264: }
  3553                           ;doprnt.c: 1266: }
  3554                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3555  0689  0841               	movf	printf@prec^(0+128),w
  3556  068A  0442               	iorwf	(printf@prec+1)^(0+128),w
  3557  068B  1D03               	btfss	3,2
  3558  068C  2E97               	goto	l2597
  3559  068D  0837               	movf	(printf@val+3)^(0+128),w
  3560  068E  0436               	iorwf	(printf@val+2)^(0+128),w
  3561  068F  0435               	iorwf	(printf@val+1)^(0+128),w
  3562  0690  0434               	iorwf	printf@val^(0+128),w
  3563  0691  1D03               	skipz
  3564  0692  2E97               	goto	l2597
  3565                           
  3566                           ;doprnt.c: 1291: prec++;
  3567  0693  3001               	movlw	1
  3568  0694  07C1               	addwf	printf@prec^(0+128),f
  3569  0695  3000               	movlw	0
  3570  0696  3DC2               	addwfc	(printf@prec+1)^(0+128),f
  3571  0697                     l2597:	
  3572                           
  3573                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3574  0697  01C3               	clrf	printf@c^(0+128)
  3575  0698  0AC3               	incf	printf@c^(0+128),f
  3576  0699  300A               	movlw	10
  3577  069A  0643               	xorwf	printf@c^(0+128),w
  3578  069B  1903               	btfsc	3,2
  3579  069C  2ED4               	goto	l2609
  3580  069D                     l2603:	
  3581                           
  3582                           ;doprnt.c: 1306: if(val < dpowers[c])
  3583  069D  0843               	movf	printf@c^(0+128),w
  3584  069E  0020               	movlb	0	; select bank0
  3585  069F  00E7               	movwf	??_printf
  3586  06A0  01E8               	clrf	??_printf+1
  3587  06A1  35E7               	lslf	??_printf,f
  3588  06A2  0DE8               	rlf	??_printf+1,f
  3589  06A3  35E7               	lslf	??_printf,f
  3590  06A4  0DE8               	rlf	??_printf+1,f
  3591  06A5  30C7               	movlw	low (_dpowers| (0+32768))
  3592  06A6  0767               	addwf	??_printf,w
  3593  06A7  0084               	movwf	4
  3594  06A8  3098               	movlw	high (_dpowers| (0+32768))
  3595  06A9  3D68               	addwfc	??_printf+1,w
  3596  06AA  0085               	movwf	5
  3597  06AB  3F00               	moviw [0]fsr0
  3598  06AC  00E9               	movwf	??_printf+2
  3599  06AD  3F01               	moviw [1]fsr0
  3600  06AE  00EA               	movwf	??_printf+3
  3601  06AF  3F02               	moviw [2]fsr0
  3602  06B0  00EB               	movwf	??_printf+4
  3603  06B1  3F03               	moviw [3]fsr0
  3604  06B2  00EC               	movwf	??_printf+5
  3605  06B3  086C               	movf	??_printf+5,w
  3606  06B4  0021               	movlb	1	; select bank1
  3607  06B5  0237               	subwf	(printf@val+3)^(0+128),w
  3608  06B6  1D03               	skipz
  3609  06B7  2EC8               	goto	u3825
  3610  06B8  0020               	movlb	0	; select bank0
  3611  06B9  086B               	movf	??_printf+4,w
  3612  06BA  0021               	movlb	1	; select bank1
  3613  06BB  0236               	subwf	(printf@val+2)^(0+128),w
  3614  06BC  1D03               	skipz
  3615  06BD  2EC8               	goto	u3825
  3616  06BE  0020               	movlb	0	; select bank0
  3617  06BF  086A               	movf	??_printf+3,w
  3618  06C0  0021               	movlb	1	; select bank1
  3619  06C1  0235               	subwf	(printf@val+1)^(0+128),w
  3620  06C2  1D03               	skipz
  3621  06C3  2EC8               	goto	u3825
  3622  06C4  0020               	movlb	0	; select bank0
  3623  06C5  0869               	movf	??_printf+2,w
  3624  06C6  0021               	movlb	1	; select bank1
  3625  06C7  0234               	subwf	printf@val^(0+128),w
  3626  06C8                     u3825:	
  3627  06C8  1C03               	btfss	3,0
  3628  06C9  2ED4               	goto	l2609
  3629                           
  3630                           ;doprnt.c: 1307: break;
  3631  06CA  3001               	movlw	1
  3632  06CB  0020               	movlb	0	; select bank0
  3633  06CC  00E7               	movwf	??_printf
  3634  06CD  0867               	movf	??_printf,w
  3635  06CE  0021               	movlb	1	; select bank1
  3636  06CF  07C3               	addwf	printf@c^(0+128),f
  3637  06D0  300A               	movlw	10
  3638  06D1  0643               	xorwf	printf@c^(0+128),w
  3639  06D2  1D03               	btfss	3,2
  3640  06D3  2E9D               	goto	l2603
  3641  06D4                     l2609:	
  3642                           
  3643                           ;doprnt.c: 1339: if(c < prec)
  3644  06D4  0843               	movf	printf@c^(0+128),w
  3645  06D5  0020               	movlb	0	; select bank0
  3646  06D6  00E7               	movwf	??_printf
  3647  06D7  01E8               	clrf	??_printf+1
  3648  06D8  1BE7               	btfsc	??_printf,7
  3649  06D9  03E8               	decf	??_printf+1,f
  3650  06DA  0868               	movf	??_printf+1,w
  3651  06DB  3A80               	xorlw	128
  3652  06DC  00E9               	movwf	??_printf+2
  3653  06DD  0021               	movlb	1	; select bank1
  3654  06DE  0842               	movf	(printf@prec+1)^(0+128),w
  3655  06DF  3A80               	xorlw	128
  3656  06E0  0020               	movlb	0	; select bank0
  3657  06E1  0269               	subwf	??_printf+2,w
  3658  06E2  1D03               	skipz
  3659  06E3  2EE8               	goto	u3845
  3660  06E4  0021               	movlb	1	; select bank1
  3661  06E5  0841               	movf	printf@prec^(0+128),w
  3662  06E6  0020               	movlb	0	; select bank0
  3663  06E7  0267               	subwf	??_printf,w
  3664  06E8                     u3845:	
  3665  06E8  1803               	skipnc
  3666  06E9  2EF2               	goto	l2613
  3667                           
  3668                           ;doprnt.c: 1340: c = prec;
  3669  06EA  0021               	movlb	1	; select bank1
  3670  06EB  0841               	movf	printf@prec^(0+128),w
  3671  06EC  0020               	movlb	0	; select bank0
  3672  06ED  00E7               	movwf	??_printf
  3673  06EE  0867               	movf	??_printf,w
  3674  06EF  0021               	movlb	1	; select bank1
  3675  06F0  00C3               	movwf	printf@c^(0+128)
  3676  06F1  2F0E               	goto	l258
  3677  06F2                     l2613:	
  3678                           
  3679                           ;doprnt.c: 1341: else if(prec < c)
  3680  06F2  0021               	movlb	1	; select bank1
  3681  06F3  0843               	movf	printf@c^(0+128),w
  3682  06F4  0020               	movlb	0	; select bank0
  3683  06F5  00E7               	movwf	??_printf
  3684  06F6  01E8               	clrf	??_printf+1
  3685  06F7  1BE7               	btfsc	??_printf,7
  3686  06F8  03E8               	decf	??_printf+1,f
  3687  06F9  0021               	movlb	1	; select bank1
  3688  06FA  0842               	movf	(printf@prec+1)^(0+128),w
  3689  06FB  3A80               	xorlw	128
  3690  06FC  0020               	movlb	0	; select bank0
  3691  06FD  00E9               	movwf	??_printf+2
  3692  06FE  0868               	movf	??_printf+1,w
  3693  06FF  3A80               	xorlw	128
  3694  0700  0269               	subwf	??_printf+2,w
  3695  0701  1D03               	skipz
  3696  0702  2F06               	goto	u3855
  3697  0703  0867               	movf	??_printf,w
  3698  0704  0021               	movlb	1	; select bank1
  3699  0705  0241               	subwf	printf@prec^(0+128),w
  3700  0706                     u3855:	
  3701  0706  1803               	skipnc
  3702  0707  2F0E               	goto	l258
  3703                           
  3704                           ;doprnt.c: 1342: prec = c;
  3705  0708  0021               	movlb	1	; select bank1
  3706  0709  0843               	movf	printf@c^(0+128),w
  3707  070A  00C1               	movwf	printf@prec^(0+128)
  3708  070B  01C2               	clrf	(printf@prec+1)^(0+128)
  3709  070C  1BC1               	btfsc	printf@prec^(0+128),7
  3710  070D  03C2               	decf	(printf@prec+1)^(0+128),f
  3711  070E                     l258:	
  3712                           
  3713                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3714  070E  0021               	movlb	1	; select bank1
  3715  070F  083C               	movf	printf@width^(0+128),w
  3716  0710  043D               	iorwf	(printf@width+1)^(0+128),w
  3717  0711  1903               	btfsc	3,2
  3718  0712  2F25               	goto	l2621
  3719  0713  3003               	movlw	3
  3720  0714  053A               	andwf	printf@flag^(0+128),w
  3721  0715  0020               	movlb	0	; select bank0
  3722  0716  00E7               	movwf	??_printf
  3723  0717  3000               	movlw	0
  3724  0718  0021               	movlb	1	; select bank1
  3725  0719  053B               	andwf	(printf@flag+1)^(0+128),w
  3726  071A  0020               	movlb	0	; select bank0
  3727  071B  00E8               	movwf	??_printf+1
  3728  071C  0867               	movf	??_printf,w
  3729  071D  0468               	iorwf	??_printf+1,w
  3730  071E  1903               	btfsc	3,2
  3731  071F  2F25               	goto	l2621
  3732                           
  3733                           ;doprnt.c: 1346: width--;
  3734  0720  30FF               	movlw	255
  3735  0721  0021               	movlb	1	; select bank1
  3736  0722  07BC               	addwf	printf@width^(0+128),f
  3737  0723  30FF               	movlw	255
  3738  0724  3DBD               	addwfc	(printf@width+1)^(0+128),f
  3739  0725                     l2621:	
  3740                           
  3741                           ;doprnt.c: 1348: if(flag & 0x4000) {
  3742  0725  0021               	movlb	1	; select bank1
  3743  0726  1F3B               	btfss	(printf@flag+1)^(0+128),6
  3744  0727  2F41               	goto	l2629
  3745                           
  3746                           ;doprnt.c: 1349: if(width > prec)
  3747  0728  0842               	movf	(printf@prec+1)^(0+128),w
  3748  0729  3A80               	xorlw	128
  3749  072A  0020               	movlb	0	; select bank0
  3750  072B  00E7               	movwf	??_printf
  3751  072C  0021               	movlb	1	; select bank1
  3752  072D  083D               	movf	(printf@width+1)^(0+128),w
  3753  072E  3A80               	xorlw	128
  3754  072F  0020               	movlb	0	; select bank0
  3755  0730  0267               	subwf	??_printf,w
  3756  0731  1D03               	skipz
  3757  0732  2F36               	goto	u3895
  3758  0733  0021               	movlb	1	; select bank1
  3759  0734  083C               	movf	printf@width^(0+128),w
  3760  0735  0241               	subwf	printf@prec^(0+128),w
  3761  0736                     u3895:	
  3762  0736  1803               	skipnc
  3763  0737  2F3E               	goto	l2627
  3764                           
  3765                           ;doprnt.c: 1350: width -= prec;
  3766  0738  0021               	movlb	1	; select bank1
  3767  0739  0841               	movf	printf@prec^(0+128),w
  3768  073A  02BC               	subwf	printf@width^(0+128),f
  3769  073B  0842               	movf	(printf@prec+1)^(0+128),w
  3770  073C  3BBD               	subwfb	(printf@width+1)^(0+128),f
  3771  073D  2F41               	goto	l2629
  3772  073E                     l2627:	
  3773                           
  3774                           ;doprnt.c: 1351: else
  3775                           ;doprnt.c: 1352: width = 0;
  3776  073E  0021               	movlb	1	; select bank1
  3777  073F  01BC               	clrf	printf@width^(0+128)
  3778  0740  01BD               	clrf	(printf@width+1)^(0+128)
  3779  0741                     l2629:	
  3780                           
  3781                           ;doprnt.c: 1353: }
  3782                           ;doprnt.c: 1381: if(width > c)
  3783  0741  0843               	movf	printf@c^(0+128),w
  3784  0742  0020               	movlb	0	; select bank0
  3785  0743  00E7               	movwf	??_printf
  3786  0744  01E8               	clrf	??_printf+1
  3787  0745  1BE7               	btfsc	??_printf,7
  3788  0746  03E8               	decf	??_printf+1,f
  3789  0747  0868               	movf	??_printf+1,w
  3790  0748  3A80               	xorlw	128
  3791  0749  00E9               	movwf	??_printf+2
  3792  074A  0021               	movlb	1	; select bank1
  3793  074B  083D               	movf	(printf@width+1)^(0+128),w
  3794  074C  3A80               	xorlw	128
  3795  074D  0020               	movlb	0	; select bank0
  3796  074E  0269               	subwf	??_printf+2,w
  3797  074F  1D03               	skipz
  3798  0750  2F55               	goto	u3905
  3799  0751  0021               	movlb	1	; select bank1
  3800  0752  083C               	movf	printf@width^(0+128),w
  3801  0753  0020               	movlb	0	; select bank0
  3802  0754  0267               	subwf	??_printf,w
  3803  0755                     u3905:	
  3804  0755  1803               	skipnc
  3805  0756  2F66               	goto	l2633
  3806                           
  3807                           ;doprnt.c: 1382: width -= c;
  3808  0757  0021               	movlb	1	; select bank1
  3809  0758  0843               	movf	printf@c^(0+128),w
  3810  0759  0020               	movlb	0	; select bank0
  3811  075A  00E7               	movwf	??_printf
  3812  075B  01E8               	clrf	??_printf+1
  3813  075C  1BE7               	btfsc	??_printf,7
  3814  075D  03E8               	decf	??_printf+1,f
  3815  075E  0867               	movf	??_printf,w
  3816  075F  0021               	movlb	1	; select bank1
  3817  0760  02BC               	subwf	printf@width^(0+128),f
  3818  0761  0020               	movlb	0	; select bank0
  3819  0762  0868               	movf	??_printf+1,w
  3820  0763  0021               	movlb	1	; select bank1
  3821  0764  3BBD               	subwfb	(printf@width+1)^(0+128),f
  3822  0765  2F69               	goto	l2635
  3823  0766                     l2633:	
  3824                           
  3825                           ;doprnt.c: 1383: else
  3826                           ;doprnt.c: 1384: width = 0;
  3827  0766  0021               	movlb	1	; select bank1
  3828  0767  01BC               	clrf	printf@width^(0+128)
  3829  0768  01BD               	clrf	(printf@width+1)^(0+128)
  3830  0769                     l2635:	
  3831                           
  3832                           ;doprnt.c: 1387: if(flag & 0x04) {
  3833  0769  1D3A               	btfss	printf@flag^(0+128),2
  3834  076A  2F8B               	goto	l2647
  3835                           
  3836                           ;doprnt.c: 1392: if(flag & 0x03)
  3837  076B  3003               	movlw	3
  3838  076C  053A               	andwf	printf@flag^(0+128),w
  3839  076D  0020               	movlb	0	; select bank0
  3840  076E  00E7               	movwf	??_printf
  3841  076F  3000               	movlw	0
  3842  0770  0021               	movlb	1	; select bank1
  3843  0771  053B               	andwf	(printf@flag+1)^(0+128),w
  3844  0772  0020               	movlb	0	; select bank0
  3845  0773  00E8               	movwf	??_printf+1
  3846  0774  0867               	movf	??_printf,w
  3847  0775  0468               	iorwf	??_printf+1,w
  3848  0776  1903               	btfsc	3,2
  3849  0777  2F7C               	goto	l2641
  3850                           
  3851                           ;doprnt.c: 1393: (putch('-') );
  3852  0778  302D               	movlw	45
  3853  0779  3194  242C  3180   	fcall	_putch
  3854  077C                     l2641:	
  3855                           
  3856                           ;doprnt.c: 1415: if(width)
  3857  077C  0021               	movlb	1	; select bank1
  3858  077D                     L6:	
  3859  077D  083C               	movf	printf@width^(0+128),w
  3860  077E  043D               	iorwf	(printf@width+1)^(0+128),w
  3861  077F  1903               	btfsc	3,2
  3862  0780  2FAD               	goto	l2661
  3863                           
  3864                           ;doprnt.c: 1417: (putch('0') );
  3865                           
  3866                           ;doprnt.c: 1416: do
  3867  0781  3030               	movlw	48
  3868  0782  3194  242C  3180   	fcall	_putch
  3869                           
  3870                           ;doprnt.c: 1418: while(--width);
  3871  0785  30FF               	movlw	255
  3872  0786  0021               	movlb	1	; select bank1
  3873  0787  07BC               	addwf	printf@width^(0+128),f
  3874  0788  30FF               	movlw	255
  3875  0789  3DBD               	addwfc	(printf@width+1)^(0+128),f
  3876  078A  2F7D               	goto	L6
  3877  078B                     l2647:	
  3878                           ;doprnt.c: 1420: } else
  3879                           
  3880                           
  3881                           ;doprnt.c: 1422: {
  3882                           ;doprnt.c: 1424: if(width
  3883                           ;doprnt.c: 1428: )
  3884  078B  083C               	movf	printf@width^(0+128),w
  3885  078C  043D               	iorwf	(printf@width+1)^(0+128),w
  3886  078D  1903               	btfsc	3,2
  3887  078E  2F9C               	goto	l2653
  3888  078F                     l2649:	
  3889                           ;doprnt.c: 1429: do
  3890                           
  3891                           
  3892                           ;doprnt.c: 1430: (putch(' ') );
  3893  078F  3020               	movlw	32
  3894  0790  3194  242C  3180   	fcall	_putch
  3895                           
  3896                           ;doprnt.c: 1431: while(--width);
  3897  0793  30FF               	movlw	255
  3898  0794  0021               	movlb	1	; select bank1
  3899  0795  07BC               	addwf	printf@width^(0+128),f
  3900  0796  30FF               	movlw	255
  3901  0797  3DBD               	addwfc	(printf@width+1)^(0+128),f
  3902  0798  083C               	movf	printf@width^(0+128),w
  3903  0799  043D               	iorwf	(printf@width+1)^(0+128),w
  3904  079A  1D03               	btfss	3,2
  3905  079B  2F8F               	goto	l2649
  3906  079C                     l2653:	
  3907                           
  3908                           ;doprnt.c: 1438: if(flag & 0x03)
  3909  079C  3003               	movlw	3
  3910  079D  053A               	andwf	printf@flag^(0+128),w
  3911  079E  0020               	movlb	0	; select bank0
  3912  079F  00E7               	movwf	??_printf
  3913  07A0  3000               	movlw	0
  3914  07A1  0021               	movlb	1	; select bank1
  3915  07A2  053B               	andwf	(printf@flag+1)^(0+128),w
  3916  07A3  0020               	movlb	0	; select bank0
  3917  07A4  00E8               	movwf	??_printf+1
  3918  07A5  0867               	movf	??_printf,w
  3919  07A6  0468               	iorwf	??_printf+1,w
  3920  07A7  1903               	btfsc	3,2
  3921  07A8  2FAD               	goto	l2661
  3922                           
  3923                           ;doprnt.c: 1439: (putch('-') );
  3924  07A9  302D               	movlw	45
  3925  07AA                     L8:	
  3926  07AA  3194  242C  3180   	fcall	_putch
  3927  07AD                     l2661:	
  3928                           ;doprnt.c: 1469: }
  3929                           ;doprnt.c: 1474: while(prec--) {
  3930                           
  3931  07AD  30FF               	movlw	255
  3932  07AE  0021               	movlb	1	; select bank1
  3933  07AF  07C1               	addwf	printf@prec^(0+128),f
  3934  07B0  30FF               	movlw	255
  3935  07B1  3DC2               	addwfc	(printf@prec+1)^(0+128),f
  3936  07B2  0A41               	incf	printf@prec^(0+128),w
  3937  07B3  1903               	btfsc	3,2
  3938  07B4  0A42               	incf	(printf@prec+1)^(0+128),w
  3939  07B5  1903               	btfsc	3,2
  3940  07B6  28FA               	goto	l2663
  3941                           
  3942                           ;doprnt.c: 1478: {
  3943                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3944  07B7  3000               	movlw	0
  3945  07B8  0020               	movlb	0	; select bank0
  3946  07B9  00A3               	movwf	___llmod@divisor+3
  3947  07BA  3000               	movlw	0
  3948  07BB  00A2               	movwf	___llmod@divisor+2
  3949  07BC  3000               	movlw	0
  3950  07BD  00A1               	movwf	___llmod@divisor+1
  3951  07BE  300A               	movlw	10
  3952  07BF  00A0               	movwf	___llmod@divisor
  3953  07C0  0021               	movlb	1	; select bank1
  3954  07C1  0842               	movf	(printf@prec+1)^(0+128),w
  3955  07C2  0085               	movwf	5
  3956  07C3  0841               	movf	printf@prec^(0+128),w
  3957  07C4  0084               	movwf	4
  3958  07C5  3584               	lslf	4,f
  3959  07C6  0D85               	rlf	5,f
  3960  07C7  3584               	lslf	4,f
  3961  07C8  0D85               	rlf	5,f
  3962  07C9  30C7               	movlw	low (_dpowers| (0+32768))
  3963  07CA  0784               	addwf	4,f
  3964  07CB  3098               	movlw	high (_dpowers| (0+32768))
  3965  07CC  3D85               	addwfc	5,f
  3966  07CD  3F00               	moviw [0]fsr0
  3967  07CE  00F0               	movwf	___lldiv@divisor
  3968  07CF  3F01               	moviw [1]fsr0
  3969  07D0  00F1               	movwf	___lldiv@divisor+1
  3970  07D1  3F02               	moviw [2]fsr0
  3971  07D2  00F2               	movwf	___lldiv@divisor+2
  3972  07D3  3F03               	moviw [3]fsr0
  3973  07D4  00F3               	movwf	___lldiv@divisor+3
  3974  07D5  0837               	movf	(printf@val+3)^(0+128),w
  3975  07D6  00F7               	movwf	___lldiv@dividend+3
  3976  07D7  0836               	movf	(printf@val+2)^(0+128),w
  3977  07D8  00F6               	movwf	___lldiv@dividend+2
  3978  07D9  0835               	movf	(printf@val+1)^(0+128),w
  3979  07DA  00F5               	movwf	___lldiv@dividend+1
  3980  07DB  0834               	movf	printf@val^(0+128),w
  3981  07DC  00F4               	movwf	___lldiv@dividend
  3982  07DD  3195  2578  3180   	fcall	___lldiv
  3983  07E0  0873               	movf	?___lldiv+3,w
  3984  07E1  0020               	movlb	0	; select bank0
  3985  07E2  00A7               	movwf	___llmod@dividend+3
  3986  07E3  0872               	movf	?___lldiv+2,w
  3987  07E4  00A6               	movwf	___llmod@dividend+2
  3988  07E5  0871               	movf	?___lldiv+1,w
  3989  07E6  00A5               	movwf	___llmod@dividend+1
  3990  07E7  0870               	movf	?___lldiv,w
  3991  07E8  00A4               	movwf	___llmod@dividend
  3992  07E9  3194  24F0  3180   	fcall	___llmod
  3993  07EC  0020               	movlb	0	; select bank0
  3994  07ED  0820               	movf	?___llmod,w
  3995  07EE  3E30               	addlw	48
  3996  07EF  00E7               	movwf	??_printf
  3997  07F0  0867               	movf	??_printf,w
  3998  07F1  0021               	movlb	1	; select bank1
  3999  07F2  00C3               	movwf	printf@c^(0+128)
  4000                           
  4001                           ;doprnt.c: 1523: }
  4002                           ;doprnt.c: 1524: (putch(c) );
  4003  07F3  0843               	movf	printf@c^(0+128),w
  4004  07F4  2FAA               	goto	L8
  4005  07F5                     l280:	
  4006                           ;doprnt.c: 1540: return 0;
  4007                           ;	Return value of _printf is never used
  4008                           
  4009                           ;doprnt.c: 1525: }
  4010                           ;doprnt.c: 1533: }
  4011                           ;doprnt.c: 1535: alldone:
  4012                           
  4013  07F5  0008               	return
  4014  07F6                     __end_of_printf:	
  4015                           
  4016                           	psect	text3
  4017  0DBC                     __ptext3:	
  4018 ;; *************** function _scale *****************
  4019 ;; Defined at:
  4020 ;;		line 425 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  scl             1    wreg     char 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  scl             1   56[BANK0 ] char 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  3   48[BANK0 ] char 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4034 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4037 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4038 ;;Total ram usage:        9 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    2
  4041 ;; This function calls:
  4042 ;;		___awdiv
  4043 ;;		___awmod
  4044 ;;		___ftmul
  4045 ;;		___wmul
  4046 ;; This function is called by:
  4047 ;;		_printf
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           
  4052                           ;psect for function _scale
  4053  0DBC                     _scale:	
  4054                           
  4055                           ;incstack = 0
  4056                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4057                           ;scale@scl stored from wreg
  4058  0DBC  0020               	movlb	0	; select bank0
  4059  0DBD  00D8               	movwf	scale@scl
  4060                           
  4061                           ;doprnt.c: 428: if(scl < 0) {
  4062  0DBE  1FD8               	btfss	scale@scl,7
  4063  0DBF  2EE1               	goto	l2085
  4064                           
  4065                           ;doprnt.c: 429: scl = -scl;
  4066  0DC0  09D8               	comf	scale@scl,f
  4067  0DC1  0AD8               	incf	scale@scl,f
  4068                           
  4069                           ;doprnt.c: 430: if(scl>=110)
  4070  0DC2  0858               	movf	scale@scl,w
  4071  0DC3  3A80               	xorlw	128
  4072  0DC4  3E12               	addlw	-238
  4073  0DC5  1C03               	skipc
  4074  0DC6  2E65               	goto	l2075
  4075                           
  4076                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4077  0DC7  300A               	movlw	10
  4078  0DC8  00F7               	movwf	___awdiv@divisor
  4079  0DC9  3000               	movlw	0
  4080  0DCA  00F8               	movwf	___awdiv@divisor+1
  4081  0DCB  0858               	movf	scale@scl,w
  4082  0DCC  00F2               	movwf	___awmod@dividend
  4083  0DCD  01F3               	clrf	___awmod@dividend+1
  4084  0DCE  1BF2               	btfsc	___awmod@dividend,7
  4085  0DCF  03F3               	decf	___awmod@dividend+1,f
  4086  0DD0  3064               	movlw	100
  4087  0DD1  00F0               	movwf	___awmod@divisor
  4088  0DD2  3000               	movlw	0
  4089  0DD3  00F1               	movwf	___awmod@divisor+1
  4090  0DD4  3195  2533  318D   	fcall	___awmod
  4091  0DD7  0871               	movf	?___awmod+1,w
  4092  0DD8  00FA               	movwf	___awdiv@dividend+1
  4093  0DD9  0870               	movf	?___awmod,w
  4094  0DDA  00F9               	movwf	___awdiv@dividend
  4095  0DDB  3195  25CA  318D   	fcall	___awdiv
  4096  0DDE  0877               	movf	?___awdiv,w
  4097  0DDF  3E09               	addlw	9
  4098  0DE0  0020               	movlb	0	; select bank0
  4099  0DE1  00A4               	movwf	___wmul@multiplier
  4100  0DE2  3000               	movlw	0
  4101  0DE3  3D78               	addwfc	?___awdiv+1,w
  4102  0DE4  00A5               	movwf	___wmul@multiplier+1
  4103  0DE5  3003               	movlw	3
  4104  0DE6  00A6               	movwf	___wmul@multiplicand
  4105  0DE7  3000               	movlw	0
  4106  0DE8  00A7               	movwf	___wmul@multiplicand+1
  4107  0DE9  3194  245E  318D   	fcall	___wmul
  4108  0DEC  0020               	movlb	0	; select bank0
  4109  0DED  0825               	movf	?___wmul+1,w
  4110  0DEE  0085               	movwf	5
  4111  0DEF  0824               	movf	?___wmul,w
  4112  0DF0  0084               	movwf	4
  4113  0DF1  3000               	movlw	low (__npowers_| (0+32768))
  4114  0DF2  0784               	addwf	4,f
  4115  0DF3  3098               	movlw	high (__npowers_| (0+32768))
  4116  0DF4  3D85               	addwfc	5,f
  4117  0DF5  3F00               	moviw [0]fsr0
  4118  0DF6  00C0               	movwf	___ftmul@f1
  4119  0DF7  3F01               	moviw [1]fsr0
  4120  0DF8  00C1               	movwf	___ftmul@f1+1
  4121  0DF9  3F02               	moviw [2]fsr0
  4122  0DFA  00C2               	movwf	___ftmul@f1+2
  4123  0DFB  3064               	movlw	100
  4124  0DFC  00F7               	movwf	___awdiv@divisor
  4125  0DFD  3000               	movlw	0
  4126  0DFE  00F8               	movwf	___awdiv@divisor+1
  4127  0DFF  0858               	movf	scale@scl,w
  4128  0E00  00F9               	movwf	___awdiv@dividend
  4129  0E01  01FA               	clrf	___awdiv@dividend+1
  4130  0E02  1BF9               	btfsc	___awdiv@dividend,7
  4131  0E03  03FA               	decf	___awdiv@dividend+1,f
  4132  0E04  3195  25CA  318D   	fcall	___awdiv
  4133  0E07  0877               	movf	?___awdiv,w
  4134  0E08  3E12               	addlw	18
  4135  0E09  0020               	movlb	0	; select bank0
  4136  0E0A  00A4               	movwf	___wmul@multiplier
  4137  0E0B  3000               	movlw	0
  4138  0E0C  3D78               	addwfc	?___awdiv+1,w
  4139  0E0D  00A5               	movwf	___wmul@multiplier+1
  4140  0E0E  3003               	movlw	3
  4141  0E0F  00A6               	movwf	___wmul@multiplicand
  4142  0E10  3000               	movlw	0
  4143  0E11  00A7               	movwf	___wmul@multiplicand+1
  4144  0E12  3194  245E  318D   	fcall	___wmul
  4145  0E15  0020               	movlb	0	; select bank0
  4146  0E16  0825               	movf	?___wmul+1,w
  4147  0E17  0085               	movwf	5
  4148  0E18  0824               	movf	?___wmul,w
  4149  0E19  0084               	movwf	4
  4150  0E1A  3000               	movlw	low (__npowers_| (0+32768))
  4151  0E1B  0784               	addwf	4,f
  4152  0E1C  3098               	movlw	high (__npowers_| (0+32768))
  4153  0E1D  3D85               	addwfc	5,f
  4154  0E1E  3F00               	moviw [0]fsr0
  4155  0E1F  00C3               	movwf	___ftmul@f2
  4156  0E20  3F01               	moviw [1]fsr0
  4157  0E21  00C4               	movwf	___ftmul@f2+1
  4158  0E22  3F02               	moviw [2]fsr0
  4159  0E23  00C5               	movwf	___ftmul@f2+2
  4160  0E24  3197  274C  318D   	fcall	___ftmul
  4161  0E27  0020               	movlb	0	; select bank0
  4162  0E28  0840               	movf	?___ftmul,w
  4163  0E29  00D5               	movwf	_scale$566
  4164  0E2A  0841               	movf	?___ftmul+1,w
  4165  0E2B  00D6               	movwf	_scale$566+1
  4166  0E2C  0842               	movf	?___ftmul+2,w
  4167  0E2D  00D7               	movwf	_scale$566+2
  4168                           
  4169                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4170  0E2E  0858               	movf	scale@scl,w
  4171  0E2F  00F2               	movwf	___awmod@dividend
  4172  0E30  01F3               	clrf	___awmod@dividend+1
  4173  0E31  1BF2               	btfsc	___awmod@dividend,7
  4174  0E32  03F3               	decf	___awmod@dividend+1,f
  4175  0E33  300A               	movlw	10
  4176  0E34  00F0               	movwf	___awmod@divisor
  4177  0E35  3000               	movlw	0
  4178  0E36  00F1               	movwf	___awmod@divisor+1
  4179  0E37  3195  2533  318D   	fcall	___awmod
  4180  0E3A  0871               	movf	?___awmod+1,w
  4181  0E3B  0020               	movlb	0	; select bank0
  4182  0E3C  00A5               	movwf	___wmul@multiplier+1
  4183  0E3D  0870               	movf	?___awmod,w
  4184  0E3E  00A4               	movwf	___wmul@multiplier
  4185  0E3F  3003               	movlw	3
  4186  0E40  00A6               	movwf	___wmul@multiplicand
  4187  0E41  3000               	movlw	0
  4188  0E42  00A7               	movwf	___wmul@multiplicand+1
  4189  0E43  3194  245E  318D   	fcall	___wmul
  4190  0E46  0020               	movlb	0	; select bank0
  4191  0E47  0825               	movf	?___wmul+1,w
  4192  0E48  0085               	movwf	5
  4193  0E49  0824               	movf	?___wmul,w
  4194  0E4A  0084               	movwf	4
  4195  0E4B  3000               	movlw	low (__npowers_| (0+32768))
  4196  0E4C  0784               	addwf	4,f
  4197  0E4D  3098               	movlw	high (__npowers_| (0+32768))
  4198  0E4E  3D85               	addwfc	5,f
  4199  0E4F  3F00               	moviw [0]fsr0
  4200  0E50  00C0               	movwf	___ftmul@f1
  4201  0E51  3F01               	moviw [1]fsr0
  4202  0E52  00C1               	movwf	___ftmul@f1+1
  4203  0E53  3F02               	moviw [2]fsr0
  4204  0E54  00C2               	movwf	___ftmul@f1+2
  4205  0E55  0855               	movf	_scale$566,w
  4206  0E56  00C3               	movwf	___ftmul@f2
  4207  0E57  0856               	movf	_scale$566+1,w
  4208  0E58  00C4               	movwf	___ftmul@f2+1
  4209  0E59  0857               	movf	_scale$566+2,w
  4210  0E5A  00C5               	movwf	___ftmul@f2+2
  4211  0E5B  3197  274C         	fcall	___ftmul
  4212  0E5D  0020               	movlb	0	; select bank0
  4213  0E5E  0840               	movf	?___ftmul,w
  4214  0E5F  00D0               	movwf	?_scale
  4215  0E60  0841               	movf	?___ftmul+1,w
  4216  0E61  00D1               	movwf	?_scale+1
  4217  0E62  0842               	movf	?___ftmul+2,w
  4218  0E63  00D2               	movwf	?_scale+2
  4219  0E64  0008               	return
  4220  0E65                     l2075:	
  4221                           
  4222                           ;doprnt.c: 432: else if(scl > 10)
  4223  0E65  0858               	movf	scale@scl,w
  4224  0E66  3A80               	xorlw	128
  4225  0E67  3E75               	addlw	-139
  4226  0E68  1C03               	skipc
  4227  0E69  2EC4               	goto	l2081
  4228                           
  4229                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4230  0E6A  0858               	movf	scale@scl,w
  4231  0E6B  00F2               	movwf	___awmod@dividend
  4232  0E6C  01F3               	clrf	___awmod@dividend+1
  4233  0E6D  1BF2               	btfsc	___awmod@dividend,7
  4234  0E6E  03F3               	decf	___awmod@dividend+1,f
  4235  0E6F  300A               	movlw	10
  4236  0E70  00F0               	movwf	___awmod@divisor
  4237  0E71  3000               	movlw	0
  4238  0E72  00F1               	movwf	___awmod@divisor+1
  4239  0E73  3195  2533  318D   	fcall	___awmod
  4240  0E76  0871               	movf	?___awmod+1,w
  4241  0E77  0020               	movlb	0	; select bank0
  4242  0E78  00A5               	movwf	___wmul@multiplier+1
  4243  0E79  0870               	movf	?___awmod,w
  4244  0E7A  00A4               	movwf	___wmul@multiplier
  4245  0E7B  3003               	movlw	3
  4246  0E7C  00A6               	movwf	___wmul@multiplicand
  4247  0E7D  3000               	movlw	0
  4248  0E7E  00A7               	movwf	___wmul@multiplicand+1
  4249  0E7F  3194  245E  318D   	fcall	___wmul
  4250  0E82  0020               	movlb	0	; select bank0
  4251  0E83  0825               	movf	?___wmul+1,w
  4252  0E84  0085               	movwf	5
  4253  0E85  0824               	movf	?___wmul,w
  4254  0E86  0084               	movwf	4
  4255  0E87  3000               	movlw	low (__npowers_| (0+32768))
  4256  0E88  0784               	addwf	4,f
  4257  0E89  3098               	movlw	high (__npowers_| (0+32768))
  4258  0E8A  3D85               	addwfc	5,f
  4259  0E8B  3F00               	moviw [0]fsr0
  4260  0E8C  00C0               	movwf	___ftmul@f1
  4261  0E8D  3F01               	moviw [1]fsr0
  4262  0E8E  00C1               	movwf	___ftmul@f1+1
  4263  0E8F  3F02               	moviw [2]fsr0
  4264  0E90  00C2               	movwf	___ftmul@f1+2
  4265  0E91  300A               	movlw	10
  4266  0E92  00F7               	movwf	___awdiv@divisor
  4267  0E93  3000               	movlw	0
  4268  0E94  00F8               	movwf	___awdiv@divisor+1
  4269  0E95  0858               	movf	scale@scl,w
  4270  0E96  00F9               	movwf	___awdiv@dividend
  4271  0E97  01FA               	clrf	___awdiv@dividend+1
  4272  0E98  1BF9               	btfsc	___awdiv@dividend,7
  4273  0E99  03FA               	decf	___awdiv@dividend+1,f
  4274  0E9A  3195  25CA  318D   	fcall	___awdiv
  4275  0E9D  0877               	movf	?___awdiv,w
  4276  0E9E  3E09               	addlw	9
  4277  0E9F  0020               	movlb	0	; select bank0
  4278  0EA0  00A4               	movwf	___wmul@multiplier
  4279  0EA1  3000               	movlw	0
  4280  0EA2  3D78               	addwfc	?___awdiv+1,w
  4281  0EA3  00A5               	movwf	___wmul@multiplier+1
  4282  0EA4  3003               	movlw	3
  4283  0EA5  00A6               	movwf	___wmul@multiplicand
  4284  0EA6  3000               	movlw	0
  4285  0EA7  00A7               	movwf	___wmul@multiplicand+1
  4286  0EA8  3194  245E  318D   	fcall	___wmul
  4287  0EAB  0020               	movlb	0	; select bank0
  4288  0EAC  0825               	movf	?___wmul+1,w
  4289  0EAD  0085               	movwf	5
  4290  0EAE  0824               	movf	?___wmul,w
  4291  0EAF  0084               	movwf	4
  4292  0EB0  3000               	movlw	low (__npowers_| (0+32768))
  4293  0EB1  0784               	addwf	4,f
  4294  0EB2  3098               	movlw	high (__npowers_| (0+32768))
  4295  0EB3  3D85               	addwfc	5,f
  4296  0EB4  3F00               	moviw [0]fsr0
  4297  0EB5  00C3               	movwf	___ftmul@f2
  4298  0EB6  3F01               	moviw [1]fsr0
  4299  0EB7  00C4               	movwf	___ftmul@f2+1
  4300  0EB8  3F02               	moviw [2]fsr0
  4301  0EB9  00C5               	movwf	___ftmul@f2+2
  4302  0EBA  3197  274C         	fcall	___ftmul
  4303  0EBC  0020               	movlb	0	; select bank0
  4304  0EBD  0840               	movf	?___ftmul,w
  4305  0EBE  00D0               	movwf	?_scale
  4306  0EBF  0841               	movf	?___ftmul+1,w
  4307  0EC0  00D1               	movwf	?_scale+1
  4308  0EC1  0842               	movf	?___ftmul+2,w
  4309  0EC2  00D2               	movwf	?_scale+2
  4310  0EC3  0008               	return
  4311  0EC4                     l2081:	
  4312                           
  4313                           ;doprnt.c: 434: return _npowers_[scl];
  4314  0EC4  0858               	movf	scale@scl,w
  4315  0EC5  00D3               	movwf	??_scale
  4316  0EC6  01D4               	clrf	??_scale+1
  4317  0EC7  0853               	movf	??_scale,w
  4318  0EC8  00A4               	movwf	___wmul@multiplier
  4319  0EC9  0854               	movf	??_scale+1,w
  4320  0ECA  00A5               	movwf	___wmul@multiplier+1
  4321  0ECB  3003               	movlw	3
  4322  0ECC  00A6               	movwf	___wmul@multiplicand
  4323  0ECD  3000               	movlw	0
  4324  0ECE  00A7               	movwf	___wmul@multiplicand+1
  4325  0ECF  3194  245E         	fcall	___wmul
  4326  0ED1  0020               	movlb	0	; select bank0
  4327  0ED2  0825               	movf	?___wmul+1,w
  4328  0ED3  0085               	movwf	5
  4329  0ED4  0824               	movf	?___wmul,w
  4330  0ED5  0084               	movwf	4
  4331  0ED6  3000               	movlw	low (__npowers_| (0+32768))
  4332  0ED7  0784               	addwf	4,f
  4333  0ED8  3098               	movlw	high (__npowers_| (0+32768))
  4334  0ED9  3D85               	addwfc	5,f
  4335  0EDA  3F00               	moviw [0]fsr0
  4336  0EDB  00D0               	movwf	?_scale
  4337  0EDC  3F01               	moviw [1]fsr0
  4338  0EDD  00D1               	movwf	?_scale+1
  4339  0EDE  3F02               	moviw [2]fsr0
  4340  0EDF  00D2               	movwf	?_scale+2
  4341  0EE0  0008               	return
  4342  0EE1                     l2085:	
  4343                           
  4344                           ;doprnt.c: 435: }
  4345                           ;doprnt.c: 436: if(scl>=110)
  4346  0EE1  0858               	movf	scale@scl,w
  4347  0EE2  3A80               	xorlw	128
  4348  0EE3  3E12               	addlw	-238
  4349  0EE4  1C03               	skipc
  4350  0EE5  2F84               	goto	l2093
  4351                           
  4352                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4353  0EE6  300A               	movlw	10
  4354  0EE7  00F7               	movwf	___awdiv@divisor
  4355  0EE8  3000               	movlw	0
  4356  0EE9  00F8               	movwf	___awdiv@divisor+1
  4357  0EEA  0858               	movf	scale@scl,w
  4358  0EEB  00F2               	movwf	___awmod@dividend
  4359  0EEC  01F3               	clrf	___awmod@dividend+1
  4360  0EED  1BF2               	btfsc	___awmod@dividend,7
  4361  0EEE  03F3               	decf	___awmod@dividend+1,f
  4362  0EEF  3064               	movlw	100
  4363  0EF0  00F0               	movwf	___awmod@divisor
  4364  0EF1  3000               	movlw	0
  4365  0EF2  00F1               	movwf	___awmod@divisor+1
  4366  0EF3  3195  2533  318D   	fcall	___awmod
  4367  0EF6  0871               	movf	?___awmod+1,w
  4368  0EF7  00FA               	movwf	___awdiv@dividend+1
  4369  0EF8  0870               	movf	?___awmod,w
  4370  0EF9  00F9               	movwf	___awdiv@dividend
  4371  0EFA  3195  25CA  318D   	fcall	___awdiv
  4372  0EFD  0877               	movf	?___awdiv,w
  4373  0EFE  3E09               	addlw	9
  4374  0EFF  0020               	movlb	0	; select bank0
  4375  0F00  00A4               	movwf	___wmul@multiplier
  4376  0F01  3000               	movlw	0
  4377  0F02  3D78               	addwfc	?___awdiv+1,w
  4378  0F03  00A5               	movwf	___wmul@multiplier+1
  4379  0F04  3003               	movlw	3
  4380  0F05  00A6               	movwf	___wmul@multiplicand
  4381  0F06  3000               	movlw	0
  4382  0F07  00A7               	movwf	___wmul@multiplicand+1
  4383  0F08  3194  245E  318D   	fcall	___wmul
  4384  0F0B  0020               	movlb	0	; select bank0
  4385  0F0C  0825               	movf	?___wmul+1,w
  4386  0F0D  0085               	movwf	5
  4387  0F0E  0824               	movf	?___wmul,w
  4388  0F0F  0084               	movwf	4
  4389  0F10  30EF               	movlw	low (__powers_| (0+32768))
  4390  0F11  0784               	addwf	4,f
  4391  0F12  3098               	movlw	high (__powers_| (0+32768))
  4392  0F13  3D85               	addwfc	5,f
  4393  0F14  3F00               	moviw [0]fsr0
  4394  0F15  00C0               	movwf	___ftmul@f1
  4395  0F16  3F01               	moviw [1]fsr0
  4396  0F17  00C1               	movwf	___ftmul@f1+1
  4397  0F18  3F02               	moviw [2]fsr0
  4398  0F19  00C2               	movwf	___ftmul@f1+2
  4399  0F1A  3064               	movlw	100
  4400  0F1B  00F7               	movwf	___awdiv@divisor
  4401  0F1C  3000               	movlw	0
  4402  0F1D  00F8               	movwf	___awdiv@divisor+1
  4403  0F1E  0858               	movf	scale@scl,w
  4404  0F1F  00F9               	movwf	___awdiv@dividend
  4405  0F20  01FA               	clrf	___awdiv@dividend+1
  4406  0F21  1BF9               	btfsc	___awdiv@dividend,7
  4407  0F22  03FA               	decf	___awdiv@dividend+1,f
  4408  0F23  3195  25CA  318D   	fcall	___awdiv
  4409  0F26  0877               	movf	?___awdiv,w
  4410  0F27  3E12               	addlw	18
  4411  0F28  0020               	movlb	0	; select bank0
  4412  0F29  00A4               	movwf	___wmul@multiplier
  4413  0F2A  3000               	movlw	0
  4414  0F2B  3D78               	addwfc	?___awdiv+1,w
  4415  0F2C  00A5               	movwf	___wmul@multiplier+1
  4416  0F2D  3003               	movlw	3
  4417  0F2E  00A6               	movwf	___wmul@multiplicand
  4418  0F2F  3000               	movlw	0
  4419  0F30  00A7               	movwf	___wmul@multiplicand+1
  4420  0F31  3194  245E  318D   	fcall	___wmul
  4421  0F34  0020               	movlb	0	; select bank0
  4422  0F35  0825               	movf	?___wmul+1,w
  4423  0F36  0085               	movwf	5
  4424  0F37  0824               	movf	?___wmul,w
  4425  0F38  0084               	movwf	4
  4426  0F39  30EF               	movlw	low (__powers_| (0+32768))
  4427  0F3A  0784               	addwf	4,f
  4428  0F3B  3098               	movlw	high (__powers_| (0+32768))
  4429  0F3C  3D85               	addwfc	5,f
  4430  0F3D  3F00               	moviw [0]fsr0
  4431  0F3E  00C3               	movwf	___ftmul@f2
  4432  0F3F  3F01               	moviw [1]fsr0
  4433  0F40  00C4               	movwf	___ftmul@f2+1
  4434  0F41  3F02               	moviw [2]fsr0
  4435  0F42  00C5               	movwf	___ftmul@f2+2
  4436  0F43  3197  274C  318D   	fcall	___ftmul
  4437  0F46  0020               	movlb	0	; select bank0
  4438  0F47  0840               	movf	?___ftmul,w
  4439  0F48  00D5               	movwf	_scale$566
  4440  0F49  0841               	movf	?___ftmul+1,w
  4441  0F4A  00D6               	movwf	_scale$566+1
  4442  0F4B  0842               	movf	?___ftmul+2,w
  4443  0F4C  00D7               	movwf	_scale$566+2
  4444                           
  4445                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4446  0F4D  0858               	movf	scale@scl,w
  4447  0F4E  00F2               	movwf	___awmod@dividend
  4448  0F4F  01F3               	clrf	___awmod@dividend+1
  4449  0F50  1BF2               	btfsc	___awmod@dividend,7
  4450  0F51  03F3               	decf	___awmod@dividend+1,f
  4451  0F52  300A               	movlw	10
  4452  0F53  00F0               	movwf	___awmod@divisor
  4453  0F54  3000               	movlw	0
  4454  0F55  00F1               	movwf	___awmod@divisor+1
  4455  0F56  3195  2533  318D   	fcall	___awmod
  4456  0F59  0871               	movf	?___awmod+1,w
  4457  0F5A  0020               	movlb	0	; select bank0
  4458  0F5B  00A5               	movwf	___wmul@multiplier+1
  4459  0F5C  0870               	movf	?___awmod,w
  4460  0F5D  00A4               	movwf	___wmul@multiplier
  4461  0F5E  3003               	movlw	3
  4462  0F5F  00A6               	movwf	___wmul@multiplicand
  4463  0F60  3000               	movlw	0
  4464  0F61  00A7               	movwf	___wmul@multiplicand+1
  4465  0F62  3194  245E  318D   	fcall	___wmul
  4466  0F65  0020               	movlb	0	; select bank0
  4467  0F66  0825               	movf	?___wmul+1,w
  4468  0F67  0085               	movwf	5
  4469  0F68  0824               	movf	?___wmul,w
  4470  0F69  0084               	movwf	4
  4471  0F6A  30EF               	movlw	low (__powers_| (0+32768))
  4472  0F6B  0784               	addwf	4,f
  4473  0F6C  3098               	movlw	high (__powers_| (0+32768))
  4474  0F6D  3D85               	addwfc	5,f
  4475  0F6E  3F00               	moviw [0]fsr0
  4476  0F6F  00C0               	movwf	___ftmul@f1
  4477  0F70  3F01               	moviw [1]fsr0
  4478  0F71  00C1               	movwf	___ftmul@f1+1
  4479  0F72  3F02               	moviw [2]fsr0
  4480  0F73  00C2               	movwf	___ftmul@f1+2
  4481  0F74  0855               	movf	_scale$566,w
  4482  0F75  00C3               	movwf	___ftmul@f2
  4483  0F76  0856               	movf	_scale$566+1,w
  4484  0F77  00C4               	movwf	___ftmul@f2+1
  4485  0F78  0857               	movf	_scale$566+2,w
  4486  0F79  00C5               	movwf	___ftmul@f2+2
  4487  0F7A  3197  274C         	fcall	___ftmul
  4488  0F7C  0020               	movlb	0	; select bank0
  4489  0F7D  0840               	movf	?___ftmul,w
  4490  0F7E  00D0               	movwf	?_scale
  4491  0F7F  0841               	movf	?___ftmul+1,w
  4492  0F80  00D1               	movwf	?_scale+1
  4493  0F81  0842               	movf	?___ftmul+2,w
  4494  0F82  00D2               	movwf	?_scale+2
  4495  0F83  0008               	return
  4496  0F84                     l2093:	
  4497                           
  4498                           ;doprnt.c: 438: else if(scl > 10)
  4499  0F84  0858               	movf	scale@scl,w
  4500  0F85  3A80               	xorlw	128
  4501  0F86  3E75               	addlw	-139
  4502  0F87  1C03               	skipc
  4503  0F88  2FE3               	goto	l2099
  4504                           
  4505                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4506  0F89  0858               	movf	scale@scl,w
  4507  0F8A  00F2               	movwf	___awmod@dividend
  4508  0F8B  01F3               	clrf	___awmod@dividend+1
  4509  0F8C  1BF2               	btfsc	___awmod@dividend,7
  4510  0F8D  03F3               	decf	___awmod@dividend+1,f
  4511  0F8E  300A               	movlw	10
  4512  0F8F  00F0               	movwf	___awmod@divisor
  4513  0F90  3000               	movlw	0
  4514  0F91  00F1               	movwf	___awmod@divisor+1
  4515  0F92  3195  2533  318D   	fcall	___awmod
  4516  0F95  0871               	movf	?___awmod+1,w
  4517  0F96  0020               	movlb	0	; select bank0
  4518  0F97  00A5               	movwf	___wmul@multiplier+1
  4519  0F98  0870               	movf	?___awmod,w
  4520  0F99  00A4               	movwf	___wmul@multiplier
  4521  0F9A  3003               	movlw	3
  4522  0F9B  00A6               	movwf	___wmul@multiplicand
  4523  0F9C  3000               	movlw	0
  4524  0F9D  00A7               	movwf	___wmul@multiplicand+1
  4525  0F9E  3194  245E  318D   	fcall	___wmul
  4526  0FA1  0020               	movlb	0	; select bank0
  4527  0FA2  0825               	movf	?___wmul+1,w
  4528  0FA3  0085               	movwf	5
  4529  0FA4  0824               	movf	?___wmul,w
  4530  0FA5  0084               	movwf	4
  4531  0FA6  30EF               	movlw	low (__powers_| (0+32768))
  4532  0FA7  0784               	addwf	4,f
  4533  0FA8  3098               	movlw	high (__powers_| (0+32768))
  4534  0FA9  3D85               	addwfc	5,f
  4535  0FAA  3F00               	moviw [0]fsr0
  4536  0FAB  00C0               	movwf	___ftmul@f1
  4537  0FAC  3F01               	moviw [1]fsr0
  4538  0FAD  00C1               	movwf	___ftmul@f1+1
  4539  0FAE  3F02               	moviw [2]fsr0
  4540  0FAF  00C2               	movwf	___ftmul@f1+2
  4541  0FB0  300A               	movlw	10
  4542  0FB1  00F7               	movwf	___awdiv@divisor
  4543  0FB2  3000               	movlw	0
  4544  0FB3  00F8               	movwf	___awdiv@divisor+1
  4545  0FB4  0858               	movf	scale@scl,w
  4546  0FB5  00F9               	movwf	___awdiv@dividend
  4547  0FB6  01FA               	clrf	___awdiv@dividend+1
  4548  0FB7  1BF9               	btfsc	___awdiv@dividend,7
  4549  0FB8  03FA               	decf	___awdiv@dividend+1,f
  4550  0FB9  3195  25CA  318D   	fcall	___awdiv
  4551  0FBC  0877               	movf	?___awdiv,w
  4552  0FBD  3E09               	addlw	9
  4553  0FBE  0020               	movlb	0	; select bank0
  4554  0FBF  00A4               	movwf	___wmul@multiplier
  4555  0FC0  3000               	movlw	0
  4556  0FC1  3D78               	addwfc	?___awdiv+1,w
  4557  0FC2  00A5               	movwf	___wmul@multiplier+1
  4558  0FC3  3003               	movlw	3
  4559  0FC4  00A6               	movwf	___wmul@multiplicand
  4560  0FC5  3000               	movlw	0
  4561  0FC6  00A7               	movwf	___wmul@multiplicand+1
  4562  0FC7  3194  245E  318D   	fcall	___wmul
  4563  0FCA  0020               	movlb	0	; select bank0
  4564  0FCB  0825               	movf	?___wmul+1,w
  4565  0FCC  0085               	movwf	5
  4566  0FCD  0824               	movf	?___wmul,w
  4567  0FCE  0084               	movwf	4
  4568  0FCF  30EF               	movlw	low (__powers_| (0+32768))
  4569  0FD0  0784               	addwf	4,f
  4570  0FD1  3098               	movlw	high (__powers_| (0+32768))
  4571  0FD2  3D85               	addwfc	5,f
  4572  0FD3  3F00               	moviw [0]fsr0
  4573  0FD4  00C3               	movwf	___ftmul@f2
  4574  0FD5  3F01               	moviw [1]fsr0
  4575  0FD6  00C4               	movwf	___ftmul@f2+1
  4576  0FD7  3F02               	moviw [2]fsr0
  4577  0FD8  00C5               	movwf	___ftmul@f2+2
  4578  0FD9  3197  274C         	fcall	___ftmul
  4579  0FDB  0020               	movlb	0	; select bank0
  4580  0FDC  0840               	movf	?___ftmul,w
  4581  0FDD  00D0               	movwf	?_scale
  4582  0FDE  0841               	movf	?___ftmul+1,w
  4583  0FDF  00D1               	movwf	?_scale+1
  4584  0FE0  0842               	movf	?___ftmul+2,w
  4585  0FE1  00D2               	movwf	?_scale+2
  4586  0FE2  0008               	return
  4587  0FE3                     l2099:	
  4588                           
  4589                           ;doprnt.c: 440: return _powers_[scl];
  4590  0FE3  0858               	movf	scale@scl,w
  4591  0FE4  00D3               	movwf	??_scale
  4592  0FE5  01D4               	clrf	??_scale+1
  4593  0FE6  0853               	movf	??_scale,w
  4594  0FE7  00A4               	movwf	___wmul@multiplier
  4595  0FE8  0854               	movf	??_scale+1,w
  4596  0FE9  00A5               	movwf	___wmul@multiplier+1
  4597  0FEA  3003               	movlw	3
  4598  0FEB  00A6               	movwf	___wmul@multiplicand
  4599  0FEC  3000               	movlw	0
  4600  0FED  00A7               	movwf	___wmul@multiplicand+1
  4601  0FEE  3194  245E         	fcall	___wmul
  4602  0FF0  0020               	movlb	0	; select bank0
  4603  0FF1  0825               	movf	?___wmul+1,w
  4604  0FF2  0085               	movwf	5
  4605  0FF3  0824               	movf	?___wmul,w
  4606  0FF4  0084               	movwf	4
  4607  0FF5  30EF               	movlw	low (__powers_| (0+32768))
  4608  0FF6  0784               	addwf	4,f
  4609  0FF7  3098               	movlw	high (__powers_| (0+32768))
  4610  0FF8  3D85               	addwfc	5,f
  4611  0FF9  3F00               	moviw [0]fsr0
  4612  0FFA  00D0               	movwf	?_scale
  4613  0FFB  3F01               	moviw [1]fsr0
  4614  0FFC  00D1               	movwf	?_scale+1
  4615  0FFD  3F02               	moviw [2]fsr0
  4616  0FFE  00D2               	movwf	?_scale+2
  4617  0FFF  0008               	return
  4618  1000                     __end_of_scale:	
  4619                           
  4620                           	psect	text4
  4621  142C                     __ptext4:	
  4622 ;; *************** function _putch *****************
  4623 ;; Defined at:
  4624 ;;		line 148 in file "main.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  byte            1    wreg     unsigned char 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  byte            1    0[COMMON] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;Total ram usage:        1 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_printf
  4648 ;;		_getche
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           
  4653                           ;psect for function _putch
  4654  142C                     _putch:	
  4655                           
  4656                           ;incstack = 0
  4657                           ; Regs used in _putch: [wreg]
  4658                           ;putch@byte stored from wreg
  4659  142C  00F0               	movwf	putch@byte
  4660  142D                     l123:	
  4661                           ;main.c: 152: continue;
  4662                           
  4663                           ;main.c: 151: while(!TXIF)
  4664                           
  4665  142D  0020               	movlb	0	; select bank0
  4666  142E  1E11               	btfss	17,4	;volatile
  4667  142F  2C2D               	goto	l123
  4668                           
  4669                           ;main.c: 153: TXREG = byte;
  4670  1430  0870               	movf	putch@byte,w
  4671  1431  0023               	movlb	3	; select bank3
  4672  1432  009A               	movwf	26	;volatile
  4673  1433  0008               	return
  4674  1434                     __end_of_putch:	
  4675                           
  4676                           	psect	text5
  4677  143D                     __ptext5:	
  4678 ;; *************** function _isdigit *****************
  4679 ;; Defined at:
  4680 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  c               1    wreg     unsigned char 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  c               1    1[COMMON] unsigned char 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;		None               void
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;Total ram usage:        2 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; This function calls:
  4701 ;;		Nothing
  4702 ;; This function is called by:
  4703 ;;		_printf
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           
  4708                           ;psect for function _isdigit
  4709  143D                     _isdigit:	
  4710                           
  4711                           ;incstack = 0
  4712                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4713                           ;isdigit@c stored from wreg
  4714  143D  00F1               	movwf	isdigit@c
  4715  143E  01F0               	clrf	_isdigit$348
  4716  143F  303A               	movlw	58
  4717  1440  0271               	subwf	isdigit@c,w
  4718  1441  1803               	skipnc
  4719  1442  2C49               	goto	l2111
  4720  1443  3030               	movlw	48
  4721  1444  0271               	subwf	isdigit@c,w
  4722  1445  1C03               	skipc
  4723  1446  2C49               	goto	l2111
  4724  1447  01F0               	clrf	_isdigit$348
  4725  1448  0AF0               	incf	_isdigit$348,f
  4726  1449                     l2111:	
  4727  1449  0C70               	rrf	_isdigit$348,w
  4728  144A  0008               	return
  4729  144B                     __end_of_isdigit:	
  4730                           
  4731                           	psect	text6
  4732  0A7D                     __ptext6:	
  4733 ;; *************** function _fround *****************
  4734 ;; Defined at:
  4735 ;;		line 409 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  prec            1    wreg     unsigned char 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  prec            1   61[BANK0 ] unsigned char 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  3   48[BANK0 ] unsigned char 
  4742 ;; Registers used:
  4743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4749 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4751 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;Total ram usage:       14 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    2
  4756 ;; This function calls:
  4757 ;;		___awdiv
  4758 ;;		___awmod
  4759 ;;		___ftmul
  4760 ;;		___wmul
  4761 ;; This function is called by:
  4762 ;;		_printf
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function _fround
  4768  0A7D                     _fround:	
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4772                           ;fround@prec stored from wreg
  4773  0A7D  0020               	movlb	0	; select bank0
  4774  0A7E  00DD               	movwf	fround@prec
  4775                           
  4776                           ;doprnt.c: 413: if(prec>=110)
  4777  0A7F  306E               	movlw	110
  4778  0A80  025D               	subwf	fround@prec,w
  4779  0A81  1C03               	skipc
  4780  0A82  2B3D               	goto	l2051
  4781                           
  4782                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4783  0A83  300A               	movlw	10
  4784  0A84  00F7               	movwf	___awdiv@divisor
  4785  0A85  3000               	movlw	0
  4786  0A86  00F8               	movwf	___awdiv@divisor+1
  4787  0A87  085D               	movf	fround@prec,w
  4788  0A88  00D3               	movwf	??_fround
  4789  0A89  01D4               	clrf	??_fround+1
  4790  0A8A  0853               	movf	??_fround,w
  4791  0A8B  00F2               	movwf	___awmod@dividend
  4792  0A8C  0854               	movf	??_fround+1,w
  4793  0A8D  00F3               	movwf	___awmod@dividend+1
  4794  0A8E  3064               	movlw	100
  4795  0A8F  00F0               	movwf	___awmod@divisor
  4796  0A90  3000               	movlw	0
  4797  0A91  00F1               	movwf	___awmod@divisor+1
  4798  0A92  3195  2533  318A   	fcall	___awmod
  4799  0A95  0871               	movf	?___awmod+1,w
  4800  0A96  00FA               	movwf	___awdiv@dividend+1
  4801  0A97  0870               	movf	?___awmod,w
  4802  0A98  00F9               	movwf	___awdiv@dividend
  4803  0A99  3195  25CA  318A   	fcall	___awdiv
  4804  0A9C  0877               	movf	?___awdiv,w
  4805  0A9D  3E09               	addlw	9
  4806  0A9E  0020               	movlb	0	; select bank0
  4807  0A9F  00A4               	movwf	___wmul@multiplier
  4808  0AA0  3000               	movlw	0
  4809  0AA1  3D78               	addwfc	?___awdiv+1,w
  4810  0AA2  00A5               	movwf	___wmul@multiplier+1
  4811  0AA3  3003               	movlw	3
  4812  0AA4  00A6               	movwf	___wmul@multiplicand
  4813  0AA5  3000               	movlw	0
  4814  0AA6  00A7               	movwf	___wmul@multiplicand+1
  4815  0AA7  3194  245E  318A   	fcall	___wmul
  4816  0AAA  0020               	movlb	0	; select bank0
  4817  0AAB  0825               	movf	?___wmul+1,w
  4818  0AAC  0085               	movwf	5
  4819  0AAD  0824               	movf	?___wmul,w
  4820  0AAE  0084               	movwf	4
  4821  0AAF  3000               	movlw	low (__npowers_| (0+32768))
  4822  0AB0  0784               	addwf	4,f
  4823  0AB1  3098               	movlw	high (__npowers_| (0+32768))
  4824  0AB2  3D85               	addwfc	5,f
  4825  0AB3  3F00               	moviw [0]fsr0
  4826  0AB4  00C0               	movwf	___ftmul@f1
  4827  0AB5  3F01               	moviw [1]fsr0
  4828  0AB6  00C1               	movwf	___ftmul@f1+1
  4829  0AB7  3F02               	moviw [2]fsr0
  4830  0AB8  00C2               	movwf	___ftmul@f1+2
  4831  0AB9  3064               	movlw	100
  4832  0ABA  00F7               	movwf	___awdiv@divisor
  4833  0ABB  3000               	movlw	0
  4834  0ABC  00F8               	movwf	___awdiv@divisor+1
  4835  0ABD  085D               	movf	fround@prec,w
  4836  0ABE  00D5               	movwf	??_fround+2
  4837  0ABF  01D6               	clrf	??_fround+3
  4838  0AC0  0855               	movf	??_fround+2,w
  4839  0AC1  00F9               	movwf	___awdiv@dividend
  4840  0AC2  0856               	movf	??_fround+3,w
  4841  0AC3  00FA               	movwf	___awdiv@dividend+1
  4842  0AC4  3195  25CA  318A   	fcall	___awdiv
  4843  0AC7  0877               	movf	?___awdiv,w
  4844  0AC8  3E12               	addlw	18
  4845  0AC9  0020               	movlb	0	; select bank0
  4846  0ACA  00A4               	movwf	___wmul@multiplier
  4847  0ACB  3000               	movlw	0
  4848  0ACC  3D78               	addwfc	?___awdiv+1,w
  4849  0ACD  00A5               	movwf	___wmul@multiplier+1
  4850  0ACE  3003               	movlw	3
  4851  0ACF  00A6               	movwf	___wmul@multiplicand
  4852  0AD0  3000               	movlw	0
  4853  0AD1  00A7               	movwf	___wmul@multiplicand+1
  4854  0AD2  3194  245E  318A   	fcall	___wmul
  4855  0AD5  0020               	movlb	0	; select bank0
  4856  0AD6  0825               	movf	?___wmul+1,w
  4857  0AD7  0085               	movwf	5
  4858  0AD8  0824               	movf	?___wmul,w
  4859  0AD9  0084               	movwf	4
  4860  0ADA  3000               	movlw	low (__npowers_| (0+32768))
  4861  0ADB  0784               	addwf	4,f
  4862  0ADC  3098               	movlw	high (__npowers_| (0+32768))
  4863  0ADD  3D85               	addwfc	5,f
  4864  0ADE  3F00               	moviw [0]fsr0
  4865  0ADF  00C3               	movwf	___ftmul@f2
  4866  0AE0  3F01               	moviw [1]fsr0
  4867  0AE1  00C4               	movwf	___ftmul@f2+1
  4868  0AE2  3F02               	moviw [2]fsr0
  4869  0AE3  00C5               	movwf	___ftmul@f2+2
  4870  0AE4  3197  274C  318A   	fcall	___ftmul
  4871  0AE7  0020               	movlb	0	; select bank0
  4872  0AE8  0840               	movf	?___ftmul,w
  4873  0AE9  00DA               	movwf	_fround$564
  4874  0AEA  0841               	movf	?___ftmul+1,w
  4875  0AEB  00DB               	movwf	_fround$564+1
  4876  0AEC  0842               	movf	?___ftmul+2,w
  4877  0AED  00DC               	movwf	_fround$564+2
  4878                           
  4879                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4880  0AEE  085D               	movf	fround@prec,w
  4881  0AEF  00D3               	movwf	??_fround
  4882  0AF0  01D4               	clrf	??_fround+1
  4883  0AF1  0853               	movf	??_fround,w
  4884  0AF2  00F2               	movwf	___awmod@dividend
  4885  0AF3  0854               	movf	??_fround+1,w
  4886  0AF4  00F3               	movwf	___awmod@dividend+1
  4887  0AF5  300A               	movlw	10
  4888  0AF6  00F0               	movwf	___awmod@divisor
  4889  0AF7  3000               	movlw	0
  4890  0AF8  00F1               	movwf	___awmod@divisor+1
  4891  0AF9  3195  2533  318A   	fcall	___awmod
  4892  0AFC  0871               	movf	?___awmod+1,w
  4893  0AFD  0020               	movlb	0	; select bank0
  4894  0AFE  00A5               	movwf	___wmul@multiplier+1
  4895  0AFF  0870               	movf	?___awmod,w
  4896  0B00  00A4               	movwf	___wmul@multiplier
  4897  0B01  3003               	movlw	3
  4898  0B02  00A6               	movwf	___wmul@multiplicand
  4899  0B03  3000               	movlw	0
  4900  0B04  00A7               	movwf	___wmul@multiplicand+1
  4901  0B05  3194  245E  318A   	fcall	___wmul
  4902  0B08  0020               	movlb	0	; select bank0
  4903  0B09  0825               	movf	?___wmul+1,w
  4904  0B0A  0085               	movwf	5
  4905  0B0B  0824               	movf	?___wmul,w
  4906  0B0C  0084               	movwf	4
  4907  0B0D  3000               	movlw	low (__npowers_| (0+32768))
  4908  0B0E  0784               	addwf	4,f
  4909  0B0F  3098               	movlw	high (__npowers_| (0+32768))
  4910  0B10  3D85               	addwfc	5,f
  4911  0B11  3F00               	moviw [0]fsr0
  4912  0B12  00C0               	movwf	___ftmul@f1
  4913  0B13  3F01               	moviw [1]fsr0
  4914  0B14  00C1               	movwf	___ftmul@f1+1
  4915  0B15  3F02               	moviw [2]fsr0
  4916  0B16  00C2               	movwf	___ftmul@f1+2
  4917  0B17  085A               	movf	_fround$564,w
  4918  0B18  00C3               	movwf	___ftmul@f2
  4919  0B19  085B               	movf	_fround$564+1,w
  4920  0B1A  00C4               	movwf	___ftmul@f2+1
  4921  0B1B  085C               	movf	_fround$564+2,w
  4922  0B1C  00C5               	movwf	___ftmul@f2+2
  4923  0B1D  3197  274C  318A   	fcall	___ftmul
  4924  0B20  0020               	movlb	0	; select bank0
  4925  0B21  0840               	movf	?___ftmul,w
  4926  0B22  00D7               	movwf	_fround$565
  4927  0B23  0841               	movf	?___ftmul+1,w
  4928  0B24  00D8               	movwf	_fround$565+1
  4929  0B25  0842               	movf	?___ftmul+2,w
  4930  0B26  00D9               	movwf	_fround$565+2
  4931                           
  4932                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4933  0B27  3000               	movlw	0
  4934  0B28  00C0               	movwf	___ftmul@f1
  4935  0B29  3000               	movlw	0
  4936  0B2A  00C1               	movwf	___ftmul@f1+1
  4937  0B2B  303F               	movlw	63
  4938  0B2C  00C2               	movwf	___ftmul@f1+2
  4939  0B2D  0857               	movf	_fround$565,w
  4940  0B2E  00C3               	movwf	___ftmul@f2
  4941  0B2F  0858               	movf	_fround$565+1,w
  4942  0B30  00C4               	movwf	___ftmul@f2+1
  4943  0B31  0859               	movf	_fround$565+2,w
  4944  0B32  00C5               	movwf	___ftmul@f2+2
  4945  0B33  3197  274C         	fcall	___ftmul
  4946  0B35  0020               	movlb	0	; select bank0
  4947  0B36  0840               	movf	?___ftmul,w
  4948  0B37  00D0               	movwf	?_fround
  4949  0B38  0841               	movf	?___ftmul+1,w
  4950  0B39  00D1               	movwf	?_fround+1
  4951  0B3A  0842               	movf	?___ftmul+2,w
  4952  0B3B  00D2               	movwf	?_fround+2
  4953  0B3C  0008               	return
  4954  0B3D                     l2051:	
  4955                           
  4956                           ;doprnt.c: 415: else if(prec > 10)
  4957  0B3D  300B               	movlw	11
  4958  0B3E  025D               	subwf	fround@prec,w
  4959  0B3F  1C03               	skipc
  4960  0B40  2BB5               	goto	l2059
  4961                           
  4962                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4963  0B41  085D               	movf	fround@prec,w
  4964  0B42  00D3               	movwf	??_fround
  4965  0B43  01D4               	clrf	??_fround+1
  4966  0B44  0853               	movf	??_fround,w
  4967  0B45  00F2               	movwf	___awmod@dividend
  4968  0B46  0854               	movf	??_fround+1,w
  4969  0B47  00F3               	movwf	___awmod@dividend+1
  4970  0B48  300A               	movlw	10
  4971  0B49  00F0               	movwf	___awmod@divisor
  4972  0B4A  3000               	movlw	0
  4973  0B4B  00F1               	movwf	___awmod@divisor+1
  4974  0B4C  3195  2533  318A   	fcall	___awmod
  4975  0B4F  0871               	movf	?___awmod+1,w
  4976  0B50  0020               	movlb	0	; select bank0
  4977  0B51  00A5               	movwf	___wmul@multiplier+1
  4978  0B52  0870               	movf	?___awmod,w
  4979  0B53  00A4               	movwf	___wmul@multiplier
  4980  0B54  3003               	movlw	3
  4981  0B55  00A6               	movwf	___wmul@multiplicand
  4982  0B56  3000               	movlw	0
  4983  0B57  00A7               	movwf	___wmul@multiplicand+1
  4984  0B58  3194  245E  318A   	fcall	___wmul
  4985  0B5B  0020               	movlb	0	; select bank0
  4986  0B5C  0825               	movf	?___wmul+1,w
  4987  0B5D  0085               	movwf	5
  4988  0B5E  0824               	movf	?___wmul,w
  4989  0B5F  0084               	movwf	4
  4990  0B60  3000               	movlw	low (__npowers_| (0+32768))
  4991  0B61  0784               	addwf	4,f
  4992  0B62  3098               	movlw	high (__npowers_| (0+32768))
  4993  0B63  3D85               	addwfc	5,f
  4994  0B64  3F00               	moviw [0]fsr0
  4995  0B65  00C0               	movwf	___ftmul@f1
  4996  0B66  3F01               	moviw [1]fsr0
  4997  0B67  00C1               	movwf	___ftmul@f1+1
  4998  0B68  3F02               	moviw [2]fsr0
  4999  0B69  00C2               	movwf	___ftmul@f1+2
  5000  0B6A  300A               	movlw	10
  5001  0B6B  00F7               	movwf	___awdiv@divisor
  5002  0B6C  3000               	movlw	0
  5003  0B6D  00F8               	movwf	___awdiv@divisor+1
  5004  0B6E  085D               	movf	fround@prec,w
  5005  0B6F  00D5               	movwf	??_fround+2
  5006  0B70  01D6               	clrf	??_fround+3
  5007  0B71  0855               	movf	??_fround+2,w
  5008  0B72  00F9               	movwf	___awdiv@dividend
  5009  0B73  0856               	movf	??_fround+3,w
  5010  0B74  00FA               	movwf	___awdiv@dividend+1
  5011  0B75  3195  25CA  318A   	fcall	___awdiv
  5012  0B78  0877               	movf	?___awdiv,w
  5013  0B79  3E09               	addlw	9
  5014  0B7A  0020               	movlb	0	; select bank0
  5015  0B7B  00A4               	movwf	___wmul@multiplier
  5016  0B7C  3000               	movlw	0
  5017  0B7D  3D78               	addwfc	?___awdiv+1,w
  5018  0B7E  00A5               	movwf	___wmul@multiplier+1
  5019  0B7F  3003               	movlw	3
  5020  0B80  00A6               	movwf	___wmul@multiplicand
  5021  0B81  3000               	movlw	0
  5022  0B82  00A7               	movwf	___wmul@multiplicand+1
  5023  0B83  3194  245E  318A   	fcall	___wmul
  5024  0B86  0020               	movlb	0	; select bank0
  5025  0B87  0825               	movf	?___wmul+1,w
  5026  0B88  0085               	movwf	5
  5027  0B89  0824               	movf	?___wmul,w
  5028  0B8A  0084               	movwf	4
  5029  0B8B  3000               	movlw	low (__npowers_| (0+32768))
  5030  0B8C  0784               	addwf	4,f
  5031  0B8D  3098               	movlw	high (__npowers_| (0+32768))
  5032  0B8E  3D85               	addwfc	5,f
  5033  0B8F  3F00               	moviw [0]fsr0
  5034  0B90  00C3               	movwf	___ftmul@f2
  5035  0B91  3F01               	moviw [1]fsr0
  5036  0B92  00C4               	movwf	___ftmul@f2+1
  5037  0B93  3F02               	moviw [2]fsr0
  5038  0B94  00C5               	movwf	___ftmul@f2+2
  5039  0B95  3197  274C  318A   	fcall	___ftmul
  5040  0B98  0020               	movlb	0	; select bank0
  5041  0B99  0840               	movf	?___ftmul,w
  5042  0B9A  00DA               	movwf	_fround$564
  5043  0B9B  0841               	movf	?___ftmul+1,w
  5044  0B9C  00DB               	movwf	_fround$564+1
  5045  0B9D  0842               	movf	?___ftmul+2,w
  5046  0B9E  00DC               	movwf	_fround$564+2
  5047                           
  5048                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5049  0B9F  3000               	movlw	0
  5050  0BA0  00C0               	movwf	___ftmul@f1
  5051  0BA1  3000               	movlw	0
  5052  0BA2  00C1               	movwf	___ftmul@f1+1
  5053  0BA3  303F               	movlw	63
  5054  0BA4  00C2               	movwf	___ftmul@f1+2
  5055  0BA5  085A               	movf	_fround$564,w
  5056  0BA6  00C3               	movwf	___ftmul@f2
  5057  0BA7  085B               	movf	_fround$564+1,w
  5058  0BA8  00C4               	movwf	___ftmul@f2+1
  5059  0BA9  085C               	movf	_fround$564+2,w
  5060  0BAA  00C5               	movwf	___ftmul@f2+2
  5061  0BAB  3197  274C         	fcall	___ftmul
  5062  0BAD  0020               	movlb	0	; select bank0
  5063  0BAE  0840               	movf	?___ftmul,w
  5064  0BAF  00D0               	movwf	?_fround
  5065  0BB0  0841               	movf	?___ftmul+1,w
  5066  0BB1  00D1               	movwf	?_fround+1
  5067  0BB2  0842               	movf	?___ftmul+2,w
  5068  0BB3  00D2               	movwf	?_fround+2
  5069  0BB4  0008               	return
  5070  0BB5                     l2059:	
  5071                           
  5072                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5073  0BB5  3000               	movlw	0
  5074  0BB6  00C0               	movwf	___ftmul@f1
  5075  0BB7  3000               	movlw	0
  5076  0BB8  00C1               	movwf	___ftmul@f1+1
  5077  0BB9  303F               	movlw	63
  5078  0BBA  00C2               	movwf	___ftmul@f1+2
  5079  0BBB  085D               	movf	fround@prec,w
  5080  0BBC  00D3               	movwf	??_fround
  5081  0BBD  01D4               	clrf	??_fround+1
  5082  0BBE  0853               	movf	??_fround,w
  5083  0BBF  00A4               	movwf	___wmul@multiplier
  5084  0BC0  0854               	movf	??_fround+1,w
  5085  0BC1  00A5               	movwf	___wmul@multiplier+1
  5086  0BC2  3003               	movlw	3
  5087  0BC3  00A6               	movwf	___wmul@multiplicand
  5088  0BC4  3000               	movlw	0
  5089  0BC5  00A7               	movwf	___wmul@multiplicand+1
  5090  0BC6  3194  245E  318A   	fcall	___wmul
  5091  0BC9  0020               	movlb	0	; select bank0
  5092  0BCA  0825               	movf	?___wmul+1,w
  5093  0BCB  0085               	movwf	5
  5094  0BCC  0824               	movf	?___wmul,w
  5095  0BCD  0084               	movwf	4
  5096  0BCE  3000               	movlw	low (__npowers_| (0+32768))
  5097  0BCF  0784               	addwf	4,f
  5098  0BD0  3098               	movlw	high (__npowers_| (0+32768))
  5099  0BD1  3D85               	addwfc	5,f
  5100  0BD2  3F00               	moviw [0]fsr0
  5101  0BD3  00C3               	movwf	___ftmul@f2
  5102  0BD4  3F01               	moviw [1]fsr0
  5103  0BD5  00C4               	movwf	___ftmul@f2+1
  5104  0BD6  3F02               	moviw [2]fsr0
  5105  0BD7  00C5               	movwf	___ftmul@f2+2
  5106  0BD8  3197  274C         	fcall	___ftmul
  5107  0BDA  0020               	movlb	0	; select bank0
  5108  0BDB  0840               	movf	?___ftmul,w
  5109  0BDC  00D0               	movwf	?_fround
  5110  0BDD  0841               	movf	?___ftmul+1,w
  5111  0BDE  00D1               	movwf	?_fround+1
  5112  0BDF  0842               	movf	?___ftmul+2,w
  5113  0BE0  00D2               	movwf	?_fround+2
  5114  0BE1  0008               	return
  5115  0BE2                     __end_of_fround:	
  5116                           
  5117                           	psect	text7
  5118  145E                     __ptext7:	
  5119 ;; *************** function ___wmul *****************
  5120 ;; Defined at:
  5121 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5124 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  product         2   12[COMMON] unsigned int 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  2    4[BANK0 ] unsigned int 
  5129 ;; Registers used:
  5130 ;;		wreg, status,2, status,0
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5136 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;Total ram usage:        6 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; This function calls:
  5143 ;;		Nothing
  5144 ;; This function is called by:
  5145 ;;		_fround
  5146 ;;		_scale
  5147 ;;		_printf
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           
  5152                           ;psect for function ___wmul
  5153  145E                     ___wmul:	
  5154                           
  5155                           ;incstack = 0
  5156                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5157  145E  01FC               	clrf	___wmul@product
  5158  145F  01FD               	clrf	___wmul@product+1
  5159  1460                     l1823:	
  5160  1460  0020               	movlb	0	; select bank0
  5161  1461  1C24               	btfss	___wmul@multiplier,0
  5162  1462  2C67               	goto	l364
  5163  1463  0826               	movf	___wmul@multiplicand,w
  5164  1464  07FC               	addwf	___wmul@product,f
  5165  1465  0827               	movf	___wmul@multiplicand+1,w
  5166  1466  3DFD               	addwfc	___wmul@product+1,f
  5167  1467                     l364:	
  5168  1467  3001               	movlw	1
  5169  1468                     u2215:	
  5170  1468  35A6               	lslf	___wmul@multiplicand,f
  5171  1469  0DA7               	rlf	___wmul@multiplicand+1,f
  5172  146A  0B89               	decfsz	9,f
  5173  146B  2C68               	goto	u2215
  5174  146C  3001               	movlw	1
  5175  146D                     u2225:	
  5176  146D  36A5               	lsrf	___wmul@multiplier+1,f
  5177  146E  0CA4               	rrf	___wmul@multiplier,f
  5178  146F  0B89               	decfsz	9,f
  5179  1470  2C6D               	goto	u2225
  5180  1471  0824               	movf	___wmul@multiplier,w
  5181  1472  0425               	iorwf	___wmul@multiplier+1,w
  5182  1473  1D03               	btfss	3,2
  5183  1474  2C60               	goto	l1823
  5184  1475  087D               	movf	___wmul@product+1,w
  5185  1476  00A5               	movwf	?___wmul+1
  5186  1477  087C               	movf	___wmul@product,w
  5187  1478  00A4               	movwf	?___wmul
  5188  1479  0008               	return
  5189  147A                     __end_of___wmul:	
  5190                           
  5191                           	psect	text8
  5192  174C                     __ptext8:	
  5193 ;; *************** function ___ftmul *****************
  5194 ;; Defined at:
  5195 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/ftmul.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  f1              3   32[BANK0 ] float 
  5198 ;;  f2              3   35[BANK0 ] float 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  f3_as_produc    3   43[BANK0 ] unsigned um
  5201 ;;  sign            1   47[BANK0 ] unsigned char 
  5202 ;;  cntr            1   46[BANK0 ] unsigned char 
  5203 ;;  exp             1   42[BANK0 ] unsigned char 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  3   32[BANK0 ] float 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0, pclath, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5213 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5214 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;Total ram usage:       16 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    1
  5220 ;; This function calls:
  5221 ;;		___ftpack
  5222 ;; This function is called by:
  5223 ;;		_main
  5224 ;;		_fround
  5225 ;;		_scale
  5226 ;;		_printf
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function ___ftmul
  5232  174C                     ___ftmul:	
  5233                           
  5234                           ;incstack = 0
  5235                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5236  174C  0020               	movlb	0	; select bank0
  5237  174D  0840               	movf	___ftmul@f1,w
  5238  174E  00C6               	movwf	??___ftmul
  5239  174F  0841               	movf	___ftmul@f1+1,w
  5240  1750  00C7               	movwf	??___ftmul+1
  5241  1751  0842               	movf	___ftmul@f1+2,w
  5242  1752  00C8               	movwf	??___ftmul+2
  5243  1753  1003               	clrc
  5244  1754  0D47               	rlf	??___ftmul+1,w
  5245  1755  0D48               	rlf	??___ftmul+2,w
  5246  1756  00C9               	movwf	??___ftmul+3
  5247  1757  0849               	movf	??___ftmul+3,w
  5248  1758  00CA               	movwf	___ftmul@exp
  5249  1759  084A               	movf	___ftmul@exp,w
  5250  175A  1D03               	btfss	3,2
  5251  175B  2F63               	goto	l1993
  5252  175C  3000               	movlw	0
  5253  175D  00C0               	movwf	?___ftmul
  5254  175E  3000               	movlw	0
  5255  175F  00C1               	movwf	?___ftmul+1
  5256  1760  3000               	movlw	0
  5257  1761  00C2               	movwf	?___ftmul+2
  5258  1762  0008               	return
  5259  1763                     l1993:	
  5260  1763  0843               	movf	___ftmul@f2,w
  5261  1764  00C6               	movwf	??___ftmul
  5262  1765  0844               	movf	___ftmul@f2+1,w
  5263  1766  00C7               	movwf	??___ftmul+1
  5264  1767  0845               	movf	___ftmul@f2+2,w
  5265  1768  00C8               	movwf	??___ftmul+2
  5266  1769  1003               	clrc
  5267  176A  0D47               	rlf	??___ftmul+1,w
  5268  176B  0D48               	rlf	??___ftmul+2,w
  5269  176C  00C9               	movwf	??___ftmul+3
  5270  176D  0849               	movf	??___ftmul+3,w
  5271  176E  00CF               	movwf	___ftmul@sign
  5272  176F  084F               	movf	___ftmul@sign,w
  5273  1770  1D03               	btfss	3,2
  5274  1771  2F79               	goto	l1999
  5275  1772  3000               	movlw	0
  5276  1773  00C0               	movwf	?___ftmul
  5277  1774  3000               	movlw	0
  5278  1775  00C1               	movwf	?___ftmul+1
  5279  1776  3000               	movlw	0
  5280  1777  00C2               	movwf	?___ftmul+2
  5281  1778  0008               	return
  5282  1779                     l1999:	
  5283  1779  084F               	movf	___ftmul@sign,w
  5284  177A  3E7B               	addlw	123
  5285  177B  00C6               	movwf	??___ftmul
  5286  177C  0846               	movf	??___ftmul,w
  5287  177D  07CA               	addwf	___ftmul@exp,f
  5288  177E  0840               	movf	___ftmul@f1,w
  5289  177F  00C6               	movwf	??___ftmul
  5290  1780  0841               	movf	___ftmul@f1+1,w
  5291  1781  00C7               	movwf	??___ftmul+1
  5292  1782  0842               	movf	___ftmul@f1+2,w
  5293  1783  00C8               	movwf	??___ftmul+2
  5294  1784  3010               	movlw	16
  5295  1785                     u2685:	
  5296  1785  36C8               	lsrf	??___ftmul+2,f
  5297  1786  0CC7               	rrf	??___ftmul+1,f
  5298  1787  0CC6               	rrf	??___ftmul,f
  5299  1788  0B89               	decfsz	9,f
  5300  1789  2F85               	goto	u2685
  5301  178A  0846               	movf	??___ftmul,w
  5302  178B  00C9               	movwf	??___ftmul+3
  5303  178C  0849               	movf	??___ftmul+3,w
  5304  178D  00CF               	movwf	___ftmul@sign
  5305  178E  0843               	movf	___ftmul@f2,w
  5306  178F  00C6               	movwf	??___ftmul
  5307  1790  0844               	movf	___ftmul@f2+1,w
  5308  1791  00C7               	movwf	??___ftmul+1
  5309  1792  0845               	movf	___ftmul@f2+2,w
  5310  1793  00C8               	movwf	??___ftmul+2
  5311  1794  3010               	movlw	16
  5312  1795                     u2695:	
  5313  1795  36C8               	lsrf	??___ftmul+2,f
  5314  1796  0CC7               	rrf	??___ftmul+1,f
  5315  1797  0CC6               	rrf	??___ftmul,f
  5316  1798  0B89               	decfsz	9,f
  5317  1799  2F95               	goto	u2695
  5318  179A  0846               	movf	??___ftmul,w
  5319  179B  00C9               	movwf	??___ftmul+3
  5320  179C  0849               	movf	??___ftmul+3,w
  5321  179D  06CF               	xorwf	___ftmul@sign,f
  5322  179E  3080               	movlw	128
  5323  179F  00C6               	movwf	??___ftmul
  5324  17A0  0846               	movf	??___ftmul,w
  5325  17A1  05CF               	andwf	___ftmul@sign,f
  5326  17A2  17C1               	bsf	___ftmul@f1+1,7
  5327  17A3  17C4               	bsf	___ftmul@f2+1,7
  5328  17A4  30FF               	movlw	255
  5329  17A5  05C3               	andwf	___ftmul@f2,f
  5330  17A6  30FF               	movlw	255
  5331  17A7  05C4               	andwf	___ftmul@f2+1,f
  5332  17A8  3000               	movlw	0
  5333  17A9  05C5               	andwf	___ftmul@f2+2,f
  5334  17AA  3000               	movlw	0
  5335  17AB  00CB               	movwf	___ftmul@f3_as_product
  5336  17AC  3000               	movlw	0
  5337  17AD  00CC               	movwf	___ftmul@f3_as_product+1
  5338  17AE  3000               	movlw	0
  5339  17AF  00CD               	movwf	___ftmul@f3_as_product+2
  5340  17B0  3007               	movlw	7
  5341  17B1  00C6               	movwf	??___ftmul
  5342  17B2  0846               	movf	??___ftmul,w
  5343  17B3  00CE               	movwf	___ftmul@cntr
  5344  17B4                     l2011:	
  5345  17B4  1C40               	btfss	___ftmul@f1,0
  5346  17B5  2FBC               	goto	l2015
  5347  17B6  0843               	movf	___ftmul@f2,w
  5348  17B7  07CB               	addwf	___ftmul@f3_as_product,f
  5349  17B8  0844               	movf	___ftmul@f2+1,w
  5350  17B9  3DCC               	addwfc	___ftmul@f3_as_product+1,f
  5351  17BA  0845               	movf	___ftmul@f2+2,w
  5352  17BB  3DCD               	addwfc	___ftmul@f3_as_product+2,f
  5353  17BC                     l2015:	
  5354  17BC  3001               	movlw	1
  5355  17BD                     u2715:	
  5356  17BD  36C2               	lsrf	___ftmul@f1+2,f
  5357  17BE  0CC1               	rrf	___ftmul@f1+1,f
  5358  17BF  0CC0               	rrf	___ftmul@f1,f
  5359  17C0  0B89               	decfsz	9,f
  5360  17C1  2FBD               	goto	u2715
  5361  17C2  3001               	movlw	1
  5362  17C3                     u2725:	
  5363  17C3  35C3               	lslf	___ftmul@f2,f
  5364  17C4  0DC4               	rlf	___ftmul@f2+1,f
  5365  17C5  0DC5               	rlf	___ftmul@f2+2,f
  5366  17C6  0B89               	decfsz	9,f
  5367  17C7  2FC3               	goto	u2725
  5368  17C8  3001               	movlw	1
  5369  17C9  02CE               	subwf	___ftmul@cntr,f
  5370  17CA  1D03               	btfss	3,2
  5371  17CB  2FB4               	goto	l2011
  5372  17CC  3009               	movlw	9
  5373  17CD  00C6               	movwf	??___ftmul
  5374  17CE  0846               	movf	??___ftmul,w
  5375  17CF  00CE               	movwf	___ftmul@cntr
  5376  17D0                     l2023:	
  5377  17D0  1C40               	btfss	___ftmul@f1,0
  5378  17D1  2FD8               	goto	l2027
  5379  17D2  0843               	movf	___ftmul@f2,w
  5380  17D3  07CB               	addwf	___ftmul@f3_as_product,f
  5381  17D4  0844               	movf	___ftmul@f2+1,w
  5382  17D5  3DCC               	addwfc	___ftmul@f3_as_product+1,f
  5383  17D6  0845               	movf	___ftmul@f2+2,w
  5384  17D7  3DCD               	addwfc	___ftmul@f3_as_product+2,f
  5385  17D8                     l2027:	
  5386  17D8  3001               	movlw	1
  5387  17D9                     u2755:	
  5388  17D9  36C2               	lsrf	___ftmul@f1+2,f
  5389  17DA  0CC1               	rrf	___ftmul@f1+1,f
  5390  17DB  0CC0               	rrf	___ftmul@f1,f
  5391  17DC  0B89               	decfsz	9,f
  5392  17DD  2FD9               	goto	u2755
  5393  17DE  3001               	movlw	1
  5394  17DF                     u2765:	
  5395  17DF  36CD               	lsrf	___ftmul@f3_as_product+2,f
  5396  17E0  0CCC               	rrf	___ftmul@f3_as_product+1,f
  5397  17E1  0CCB               	rrf	___ftmul@f3_as_product,f
  5398  17E2  0B89               	decfsz	9,f
  5399  17E3  2FDF               	goto	u2765
  5400  17E4  3001               	movlw	1
  5401  17E5  02CE               	subwf	___ftmul@cntr,f
  5402  17E6  1D03               	btfss	3,2
  5403  17E7  2FD0               	goto	l2023
  5404  17E8  084B               	movf	___ftmul@f3_as_product,w
  5405  17E9  00F0               	movwf	___ftpack@arg
  5406  17EA  084C               	movf	___ftmul@f3_as_product+1,w
  5407  17EB  00F1               	movwf	___ftpack@arg+1
  5408  17EC  084D               	movf	___ftmul@f3_as_product+2,w
  5409  17ED  00F2               	movwf	___ftpack@arg+2
  5410  17EE  084A               	movf	___ftmul@exp,w
  5411  17EF  00C6               	movwf	??___ftmul
  5412  17F0  0846               	movf	??___ftmul,w
  5413  17F1  00F3               	movwf	___ftpack@exp
  5414  17F2  084F               	movf	___ftmul@sign,w
  5415  17F3  00C7               	movwf	??___ftmul+1
  5416  17F4  0847               	movf	??___ftmul+1,w
  5417  17F5  00F4               	movwf	___ftpack@sign
  5418  17F6  3188  2006         	fcall	___ftpack
  5419  17F8  0870               	movf	?___ftpack,w
  5420  17F9  0020               	movlb	0	; select bank0
  5421  17FA  00C0               	movwf	?___ftmul
  5422  17FB  0871               	movf	?___ftpack+1,w
  5423  17FC  00C1               	movwf	?___ftmul+1
  5424  17FD  0872               	movf	?___ftpack+2,w
  5425  17FE  00C2               	movwf	?___ftmul+2
  5426  17FF  0008               	return
  5427  1800                     __end_of___ftmul:	
  5428                           
  5429                           	psect	text9
  5430  1533                     __ptext9:	
  5431 ;; *************** function ___awmod *****************
  5432 ;; Defined at:
  5433 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  divisor         2    0[COMMON] int 
  5436 ;;  dividend        2    2[COMMON] int 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  sign            1    6[COMMON] unsigned char 
  5439 ;;  counter         1    5[COMMON] unsigned char 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  2    0[COMMON] int 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5452 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5453 ;;Total ram usage:        7 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_fround
  5459 ;;		_scale
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           
  5464                           ;psect for function ___awmod
  5465  1533                     ___awmod:	
  5466                           
  5467                           ;incstack = 0
  5468                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5469  1533  01F6               	clrf	___awmod@sign
  5470  1534  1FF3               	btfss	___awmod@dividend+1,7
  5471  1535  2D3D               	goto	l1887
  5472  1536  09F2               	comf	___awmod@dividend,f
  5473  1537  09F3               	comf	___awmod@dividend+1,f
  5474  1538  0AF2               	incf	___awmod@dividend,f
  5475  1539  1903               	skipnz
  5476  153A  0AF3               	incf	___awmod@dividend+1,f
  5477  153B  01F6               	clrf	___awmod@sign
  5478  153C  0AF6               	incf	___awmod@sign,f
  5479  153D                     l1887:	
  5480  153D  1FF1               	btfss	___awmod@divisor+1,7
  5481  153E  2D44               	goto	l1891
  5482  153F  09F0               	comf	___awmod@divisor,f
  5483  1540  09F1               	comf	___awmod@divisor+1,f
  5484  1541  0AF0               	incf	___awmod@divisor,f
  5485  1542  1903               	skipnz
  5486  1543  0AF1               	incf	___awmod@divisor+1,f
  5487  1544                     l1891:	
  5488  1544  0870               	movf	___awmod@divisor,w
  5489  1545  0471               	iorwf	___awmod@divisor+1,w
  5490  1546  1903               	btfsc	3,2
  5491  1547  2D6B               	goto	l1909
  5492  1548  01F5               	clrf	___awmod@counter
  5493  1549  0AF5               	incf	___awmod@counter,f
  5494  154A                     l1899:	
  5495  154A  1BF1               	btfsc	___awmod@divisor+1,7
  5496  154B  2D56               	goto	l1901
  5497  154C  3001               	movlw	1
  5498  154D                     u2375:	
  5499  154D  35F0               	lslf	___awmod@divisor,f
  5500  154E  0DF1               	rlf	___awmod@divisor+1,f
  5501  154F  0B89               	decfsz	9,f
  5502  1550  2D4D               	goto	u2375
  5503  1551  3001               	movlw	1
  5504  1552  00F4               	movwf	??___awmod
  5505  1553  0874               	movf	??___awmod,w
  5506  1554  07F5               	addwf	___awmod@counter,f
  5507  1555  2D4A               	goto	l1899
  5508  1556                     l1901:	
  5509  1556  0871               	movf	___awmod@divisor+1,w
  5510  1557  0273               	subwf	___awmod@dividend+1,w
  5511  1558  1D03               	skipz
  5512  1559  2D5C               	goto	u2395
  5513  155A  0870               	movf	___awmod@divisor,w
  5514  155B  0272               	subwf	___awmod@dividend,w
  5515  155C                     u2395:	
  5516  155C  1C03               	skipc
  5517  155D  2D62               	goto	l1905
  5518  155E  0870               	movf	___awmod@divisor,w
  5519  155F  02F2               	subwf	___awmod@dividend,f
  5520  1560  0871               	movf	___awmod@divisor+1,w
  5521  1561  3BF3               	subwfb	___awmod@dividend+1,f
  5522  1562                     l1905:	
  5523  1562  3001               	movlw	1
  5524  1563                     u2405:	
  5525  1563  36F1               	lsrf	___awmod@divisor+1,f
  5526  1564  0CF0               	rrf	___awmod@divisor,f
  5527  1565  0B89               	decfsz	9,f
  5528  1566  2D63               	goto	u2405
  5529  1567  3001               	movlw	1
  5530  1568  02F5               	subwf	___awmod@counter,f
  5531  1569  1D03               	btfss	3,2
  5532  156A  2D56               	goto	l1901
  5533  156B                     l1909:	
  5534  156B  0876               	movf	___awmod@sign,w
  5535  156C  1903               	btfsc	3,2
  5536  156D  2D73               	goto	l1913
  5537  156E  09F2               	comf	___awmod@dividend,f
  5538  156F  09F3               	comf	___awmod@dividend+1,f
  5539  1570  0AF2               	incf	___awmod@dividend,f
  5540  1571  1903               	skipnz
  5541  1572  0AF3               	incf	___awmod@dividend+1,f
  5542  1573                     l1913:	
  5543  1573  0873               	movf	___awmod@dividend+1,w
  5544  1574  00F1               	movwf	?___awmod+1
  5545  1575  0872               	movf	___awmod@dividend,w
  5546  1576  00F0               	movwf	?___awmod
  5547  1577  0008               	return
  5548  1578                     __end_of___awmod:	
  5549                           
  5550                           	psect	text10
  5551  15CA                     __ptext10:	
  5552 ;; *************** function ___awdiv *****************
  5553 ;; Defined at:
  5554 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  divisor         2    7[COMMON] int 
  5557 ;;  dividend        2    9[COMMON] int 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  quotient        2    2[BANK0 ] int 
  5560 ;;  sign            1    1[BANK0 ] unsigned char 
  5561 ;;  counter         1    0[BANK0 ] unsigned char 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  2    7[COMMON] int 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5571 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5574 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5575 ;;Total ram usage:        9 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_fround
  5581 ;;		_scale
  5582 ;;		_printf
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           
  5587                           ;psect for function ___awdiv
  5588  15CA                     ___awdiv:	
  5589                           
  5590                           ;incstack = 0
  5591                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5592  15CA  0020               	movlb	0	; select bank0
  5593  15CB  01A1               	clrf	___awdiv@sign
  5594  15CC  1FF8               	btfss	___awdiv@divisor+1,7
  5595  15CD  2DD5               	goto	l1843
  5596  15CE  09F7               	comf	___awdiv@divisor,f
  5597  15CF  09F8               	comf	___awdiv@divisor+1,f
  5598  15D0  0AF7               	incf	___awdiv@divisor,f
  5599  15D1  1903               	skipnz
  5600  15D2  0AF8               	incf	___awdiv@divisor+1,f
  5601  15D3  01A1               	clrf	___awdiv@sign
  5602  15D4  0AA1               	incf	___awdiv@sign,f
  5603  15D5                     l1843:	
  5604  15D5  1FFA               	btfss	___awdiv@dividend+1,7
  5605  15D6  2DE0               	goto	l1849
  5606  15D7  09F9               	comf	___awdiv@dividend,f
  5607  15D8  09FA               	comf	___awdiv@dividend+1,f
  5608  15D9  0AF9               	incf	___awdiv@dividend,f
  5609  15DA  1903               	skipnz
  5610  15DB  0AFA               	incf	___awdiv@dividend+1,f
  5611  15DC  3001               	movlw	1
  5612  15DD  00FB               	movwf	??___awdiv
  5613  15DE  087B               	movf	??___awdiv,w
  5614  15DF  06A1               	xorwf	___awdiv@sign,f
  5615  15E0                     l1849:	
  5616  15E0  01A2               	clrf	___awdiv@quotient
  5617  15E1  01A3               	clrf	___awdiv@quotient+1
  5618  15E2  0877               	movf	___awdiv@divisor,w
  5619  15E3  0478               	iorwf	___awdiv@divisor+1,w
  5620  15E4  1903               	btfsc	3,2
  5621  15E5  2E0F               	goto	l1871
  5622  15E6  01A0               	clrf	___awdiv@counter
  5623  15E7  0AA0               	incf	___awdiv@counter,f
  5624  15E8                     l1859:	
  5625  15E8  1BF8               	btfsc	___awdiv@divisor+1,7
  5626  15E9  2DF4               	goto	l1861
  5627  15EA  3001               	movlw	1
  5628  15EB                     u2275:	
  5629  15EB  35F7               	lslf	___awdiv@divisor,f
  5630  15EC  0DF8               	rlf	___awdiv@divisor+1,f
  5631  15ED  0B89               	decfsz	9,f
  5632  15EE  2DEB               	goto	u2275
  5633  15EF  3001               	movlw	1
  5634  15F0  00FB               	movwf	??___awdiv
  5635  15F1  087B               	movf	??___awdiv,w
  5636  15F2  07A0               	addwf	___awdiv@counter,f
  5637  15F3  2DE8               	goto	l1859
  5638  15F4                     l1861:	
  5639  15F4  3001               	movlw	1
  5640  15F5                     u2295:	
  5641  15F5  35A2               	lslf	___awdiv@quotient,f
  5642  15F6  0DA3               	rlf	___awdiv@quotient+1,f
  5643  15F7  0B89               	decfsz	9,f
  5644  15F8  2DF5               	goto	u2295
  5645  15F9  0878               	movf	___awdiv@divisor+1,w
  5646  15FA  027A               	subwf	___awdiv@dividend+1,w
  5647  15FB  1D03               	skipz
  5648  15FC  2DFF               	goto	u2305
  5649  15FD  0877               	movf	___awdiv@divisor,w
  5650  15FE  0279               	subwf	___awdiv@dividend,w
  5651  15FF                     u2305:	
  5652  15FF  1C03               	skipc
  5653  1600  2E06               	goto	l1867
  5654  1601  0877               	movf	___awdiv@divisor,w
  5655  1602  02F9               	subwf	___awdiv@dividend,f
  5656  1603  0878               	movf	___awdiv@divisor+1,w
  5657  1604  3BFA               	subwfb	___awdiv@dividend+1,f
  5658  1605  1422               	bsf	___awdiv@quotient,0
  5659  1606                     l1867:	
  5660  1606  3001               	movlw	1
  5661  1607                     u2315:	
  5662  1607  36F8               	lsrf	___awdiv@divisor+1,f
  5663  1608  0CF7               	rrf	___awdiv@divisor,f
  5664  1609  0B89               	decfsz	9,f
  5665  160A  2E07               	goto	u2315
  5666  160B  3001               	movlw	1
  5667  160C  02A0               	subwf	___awdiv@counter,f
  5668  160D  1D03               	btfss	3,2
  5669  160E  2DF4               	goto	l1861
  5670  160F                     l1871:	
  5671  160F  0821               	movf	___awdiv@sign,w
  5672  1610  1903               	btfsc	3,2
  5673  1611  2E17               	goto	l1875
  5674  1612  09A2               	comf	___awdiv@quotient,f
  5675  1613  09A3               	comf	___awdiv@quotient+1,f
  5676  1614  0AA2               	incf	___awdiv@quotient,f
  5677  1615  1903               	skipnz
  5678  1616  0AA3               	incf	___awdiv@quotient+1,f
  5679  1617                     l1875:	
  5680  1617  0823               	movf	___awdiv@quotient+1,w
  5681  1618  00F8               	movwf	?___awdiv+1
  5682  1619  0822               	movf	___awdiv@quotient,w
  5683  161A  00F7               	movwf	?___awdiv
  5684  161B  0008               	return
  5685  161C                     __end_of___awdiv:	
  5686                           
  5687                           	psect	text11
  5688  003E                     __ptext11:	
  5689 ;; *************** function __tdiv_to_l_ *****************
  5690 ;; Defined at:
  5691 ;;		line 60 in file "/opt/microchip/xc8/v1.45/sources/common/ftdivl.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;  f1              3    0[COMMON] float 
  5694 ;;  f2              3    3[COMMON] float 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  quot            4    0[BANK0 ] unsigned long 
  5697 ;;  exp1            1    5[BANK0 ] unsigned char 
  5698 ;;  cntr            1    4[BANK0 ] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  4    0[COMMON] unsigned long 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5708 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;Total ram usage:       16 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_printf
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           
  5722                           ;psect for function __tdiv_to_l_
  5723  003E                     __tdiv_to_l_:	
  5724                           
  5725                           ;incstack = 0
  5726                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5727  003E  0870               	movf	__tdiv_to_l_@f1,w
  5728  003F  00F6               	movwf	??__tdiv_to_l_
  5729  0040  0871               	movf	__tdiv_to_l_@f1+1,w
  5730  0041  00F7               	movwf	??__tdiv_to_l_+1
  5731  0042  0872               	movf	__tdiv_to_l_@f1+2,w
  5732  0043  00F8               	movwf	??__tdiv_to_l_+2
  5733  0044  1003               	clrc
  5734  0045  0D77               	rlf	??__tdiv_to_l_+1,w
  5735  0046  0D78               	rlf	??__tdiv_to_l_+2,w
  5736  0047  00F9               	movwf	??__tdiv_to_l_+3
  5737  0048  0879               	movf	??__tdiv_to_l_+3,w
  5738  0049  0020               	movlb	0	; select bank0
  5739  004A  00A5               	movwf	__tdiv_to_l_@exp1
  5740  004B  0825               	movf	__tdiv_to_l_@exp1,w
  5741  004C  1D03               	btfss	3,2
  5742  004D  2857               	goto	l2121
  5743  004E  3000               	movlw	0
  5744  004F  00F3               	movwf	?__tdiv_to_l_+3
  5745  0050  3000               	movlw	0
  5746  0051  00F2               	movwf	?__tdiv_to_l_+2
  5747  0052  3000               	movlw	0
  5748  0053  00F1               	movwf	?__tdiv_to_l_+1
  5749  0054  3000               	movlw	0
  5750  0055  00F0               	movwf	?__tdiv_to_l_
  5751  0056  0008               	return
  5752  0057                     l2121:	
  5753  0057  0873               	movf	__tdiv_to_l_@f2,w
  5754  0058  00F6               	movwf	??__tdiv_to_l_
  5755  0059  0874               	movf	__tdiv_to_l_@f2+1,w
  5756  005A  00F7               	movwf	??__tdiv_to_l_+1
  5757  005B  0875               	movf	__tdiv_to_l_@f2+2,w
  5758  005C  00F8               	movwf	??__tdiv_to_l_+2
  5759  005D  1003               	clrc
  5760  005E  0D77               	rlf	??__tdiv_to_l_+1,w
  5761  005F  0D78               	rlf	??__tdiv_to_l_+2,w
  5762  0060  00F9               	movwf	??__tdiv_to_l_+3
  5763  0061  0879               	movf	??__tdiv_to_l_+3,w
  5764  0062  00A4               	movwf	__tdiv_to_l_@cntr
  5765  0063  0824               	movf	__tdiv_to_l_@cntr,w
  5766  0064  1D03               	btfss	3,2
  5767  0065  286F               	goto	l599
  5768  0066  3000               	movlw	0
  5769  0067  00F3               	movwf	?__tdiv_to_l_+3
  5770  0068  3000               	movlw	0
  5771  0069  00F2               	movwf	?__tdiv_to_l_+2
  5772  006A  3000               	movlw	0
  5773  006B  00F1               	movwf	?__tdiv_to_l_+1
  5774  006C  3000               	movlw	0
  5775  006D  00F0               	movwf	?__tdiv_to_l_
  5776  006E  0008               	return
  5777  006F                     l599:	
  5778  006F  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5779  0070  30FF               	movlw	255
  5780  0071  05F0               	andwf	__tdiv_to_l_@f1,f
  5781  0072  30FF               	movlw	255
  5782  0073  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5783  0074  3000               	movlw	0
  5784  0075  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5785  0076  17F4               	bsf	__tdiv_to_l_@f2+1,7
  5786  0077  30FF               	movlw	255
  5787  0078  05F3               	andwf	__tdiv_to_l_@f2,f
  5788  0079  30FF               	movlw	255
  5789  007A  05F4               	andwf	__tdiv_to_l_@f2+1,f
  5790  007B  3000               	movlw	0
  5791  007C  05F5               	andwf	__tdiv_to_l_@f2+2,f
  5792  007D  3000               	movlw	0
  5793  007E  00A3               	movwf	__tdiv_to_l_@quot+3
  5794  007F  3000               	movlw	0
  5795  0080  00A2               	movwf	__tdiv_to_l_@quot+2
  5796  0081  3000               	movlw	0
  5797  0082  00A1               	movwf	__tdiv_to_l_@quot+1
  5798  0083  3000               	movlw	0
  5799  0084  00A0               	movwf	__tdiv_to_l_@quot
  5800  0085  307F               	movlw	127
  5801  0086  02A5               	subwf	__tdiv_to_l_@exp1,f
  5802  0087  3098               	movlw	152
  5803  0088  0724               	addwf	__tdiv_to_l_@cntr,w
  5804  0089  00F6               	movwf	??__tdiv_to_l_
  5805  008A  0876               	movf	??__tdiv_to_l_,w
  5806  008B  02A5               	subwf	__tdiv_to_l_@exp1,f
  5807  008C  3018               	movlw	24
  5808  008D  00F6               	movwf	??__tdiv_to_l_
  5809  008E  0876               	movf	??__tdiv_to_l_,w
  5810  008F  00A4               	movwf	__tdiv_to_l_@cntr
  5811  0090                     l2135:	
  5812  0090  3001               	movlw	1
  5813  0091                     u2905:	
  5814  0091  35A0               	lslf	__tdiv_to_l_@quot,f
  5815  0092  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5816  0093  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5817  0094  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5818  0095  0B89               	decfsz	9,f
  5819  0096  2891               	goto	u2905
  5820  0097  0875               	movf	__tdiv_to_l_@f2+2,w
  5821  0098  0272               	subwf	__tdiv_to_l_@f1+2,w
  5822  0099  1D03               	skipz
  5823  009A  28A1               	goto	u2915
  5824  009B  0874               	movf	__tdiv_to_l_@f2+1,w
  5825  009C  0271               	subwf	__tdiv_to_l_@f1+1,w
  5826  009D  1D03               	skipz
  5827  009E  28A1               	goto	u2915
  5828  009F  0873               	movf	__tdiv_to_l_@f2,w
  5829  00A0  0270               	subwf	__tdiv_to_l_@f1,w
  5830  00A1                     u2915:	
  5831  00A1  1C03               	skipc
  5832  00A2  28AA               	goto	l2143
  5833  00A3  0873               	movf	__tdiv_to_l_@f2,w
  5834  00A4  02F0               	subwf	__tdiv_to_l_@f1,f
  5835  00A5  0874               	movf	__tdiv_to_l_@f2+1,w
  5836  00A6  3BF1               	subwfb	__tdiv_to_l_@f1+1,f
  5837  00A7  0875               	movf	__tdiv_to_l_@f2+2,w
  5838  00A8  3BF2               	subwfb	__tdiv_to_l_@f1+2,f
  5839  00A9  1420               	bsf	__tdiv_to_l_@quot,0
  5840  00AA                     l2143:	
  5841  00AA  3001               	movlw	1
  5842  00AB                     u2925:	
  5843  00AB  35F0               	lslf	__tdiv_to_l_@f1,f
  5844  00AC  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5845  00AD  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5846  00AE  0B89               	decfsz	9,f
  5847  00AF  28AB               	goto	u2925
  5848  00B0  3001               	movlw	1
  5849  00B1  02A4               	subwf	__tdiv_to_l_@cntr,f
  5850  00B2  1D03               	btfss	3,2
  5851  00B3  2890               	goto	l2135
  5852  00B4  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5853  00B5  28D2               	goto	l2155
  5854  00B6  0825               	movf	__tdiv_to_l_@exp1,w
  5855  00B7  3A80               	xorlw	128
  5856  00B8  3E97               	addlw	151
  5857  00B9  1803               	skipnc
  5858  00BA  28C4               	goto	l2153
  5859  00BB  3000               	movlw	0
  5860  00BC  00F3               	movwf	?__tdiv_to_l_+3
  5861  00BD  3000               	movlw	0
  5862  00BE  00F2               	movwf	?__tdiv_to_l_+2
  5863  00BF  3000               	movlw	0
  5864  00C0  00F1               	movwf	?__tdiv_to_l_+1
  5865  00C1  3000               	movlw	0
  5866  00C2  00F0               	movwf	?__tdiv_to_l_
  5867  00C3  0008               	return
  5868  00C4                     l2153:	
  5869  00C4  3001               	movlw	1
  5870  00C5                     u2965:	
  5871  00C5  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  5872  00C6  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5873  00C7  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5874  00C8  0CA0               	rrf	__tdiv_to_l_@quot,f
  5875  00C9  0B89               	decfsz	9,f
  5876  00CA  28C5               	goto	u2965
  5877  00CB  3001               	movlw	1
  5878  00CC  00F6               	movwf	??__tdiv_to_l_
  5879  00CD  0876               	movf	??__tdiv_to_l_,w
  5880  00CE  07A5               	addwf	__tdiv_to_l_@exp1,f
  5881  00CF  1903               	btfsc	3,2
  5882  00D0  28EB               	goto	l2163
  5883  00D1  28C4               	goto	l2153
  5884  00D2                     l2155:	
  5885  00D2  3018               	movlw	24
  5886  00D3  0225               	subwf	__tdiv_to_l_@exp1,w
  5887  00D4  1C03               	skipc
  5888  00D5  28E8               	goto	l609
  5889  00D6  3000               	movlw	0
  5890  00D7  00F3               	movwf	?__tdiv_to_l_+3
  5891  00D8  3000               	movlw	0
  5892  00D9  00F2               	movwf	?__tdiv_to_l_+2
  5893  00DA  3000               	movlw	0
  5894  00DB  00F1               	movwf	?__tdiv_to_l_+1
  5895  00DC  3000               	movlw	0
  5896  00DD  00F0               	movwf	?__tdiv_to_l_
  5897  00DE  0008               	return
  5898  00DF                     l2161:	
  5899  00DF  3001               	movlw	1
  5900  00E0                     u2995:	
  5901  00E0  35A0               	lslf	__tdiv_to_l_@quot,f
  5902  00E1  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5903  00E2  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5904  00E3  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5905  00E4  0B89               	decfsz	9,f
  5906  00E5  28E0               	goto	u2995
  5907  00E6  3001               	movlw	1
  5908  00E7  02A5               	subwf	__tdiv_to_l_@exp1,f
  5909  00E8                     l609:	
  5910  00E8  0825               	movf	__tdiv_to_l_@exp1,w
  5911  00E9  1D03               	btfss	3,2
  5912  00EA  28DF               	goto	l2161
  5913  00EB                     l2163:	
  5914  00EB  0823               	movf	__tdiv_to_l_@quot+3,w
  5915  00EC  00F3               	movwf	?__tdiv_to_l_+3
  5916  00ED  0822               	movf	__tdiv_to_l_@quot+2,w
  5917  00EE  00F2               	movwf	?__tdiv_to_l_+2
  5918  00EF  0821               	movf	__tdiv_to_l_@quot+1,w
  5919  00F0  00F1               	movwf	?__tdiv_to_l_+1
  5920  00F1  0820               	movf	__tdiv_to_l_@quot,w
  5921  00F2  00F0               	movwf	?__tdiv_to_l_
  5922  00F3  0008               	return
  5923  00F4                     __end_of__tdiv_to_l_:	
  5924                           
  5925                           	psect	text12
  5926  0960                     __ptext12:	
  5927 ;; *************** function __div_to_l_ *****************
  5928 ;; Defined at:
  5929 ;;		line 60 in file "/opt/microchip/xc8/v1.45/sources/common/fldivl.c"
  5930 ;; Parameters:    Size  Location     Type
  5931 ;;  f1              3    0[COMMON] unsigned long 
  5932 ;;  f2              3    3[COMMON] unsigned long 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  quot            4    0[BANK0 ] unsigned long 
  5935 ;;  exp1            1    5[BANK0 ] unsigned char 
  5936 ;;  cntr            1    4[BANK0 ] unsigned char 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  4    0[COMMON] unsigned long 
  5939 ;; Registers used:
  5940 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5946 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5947 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5948 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;      Totals:        14       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;Total ram usage:       20 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; This function calls:
  5953 ;;		Nothing
  5954 ;; This function is called by:
  5955 ;;		_printf
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           
  5960                           ;psect for function __div_to_l_
  5961  0960                     __div_to_l_:	
  5962                           
  5963                           ;incstack = 0
  5964                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
  5965  0960  3070               	movlw	low (__div_to_l_@f1| 0)
  5966  0961  0086               	movwf	6
  5967  0962  0187               	clrf	7
  5968  0963  3F40               	moviw [0]fsr1
  5969  0964  00F6               	movwf	??__div_to_l_
  5970  0965  3F41               	moviw [1]fsr1
  5971  0966  00F7               	movwf	??__div_to_l_+1
  5972  0967  3F42               	moviw [2]fsr1
  5973  0968  00F8               	movwf	??__div_to_l_+2
  5974  0969  3F43               	moviw [3]fsr1
  5975  096A  00F9               	movwf	??__div_to_l_+3
  5976  096B  1003               	clrc
  5977  096C  0D78               	rlf	??__div_to_l_+2,w
  5978  096D  0D79               	rlf	??__div_to_l_+3,w
  5979  096E  00FA               	movwf	??__div_to_l_+4
  5980  096F  087A               	movf	??__div_to_l_+4,w
  5981  0970  0020               	movlb	0	; select bank0
  5982  0971  00A5               	movwf	__div_to_l_@exp1
  5983  0972  0825               	movf	__div_to_l_@exp1,w
  5984  0973  1D03               	btfss	3,2
  5985  0974  297E               	goto	l2173
  5986  0975  3000               	movlw	0
  5987  0976  00F3               	movwf	?__div_to_l_+3
  5988  0977  3000               	movlw	0
  5989  0978  00F2               	movwf	?__div_to_l_+2
  5990  0979  3000               	movlw	0
  5991  097A  00F1               	movwf	?__div_to_l_+1
  5992  097B  3000               	movlw	0
  5993  097C  00F0               	movwf	?__div_to_l_
  5994  097D  0008               	return
  5995  097E                     l2173:	
  5996  097E  3073               	movlw	low (__div_to_l_@f2| 0)
  5997  097F  0086               	movwf	6
  5998  0980  0187               	clrf	7
  5999  0981  3F40               	moviw [0]fsr1
  6000  0982  00F6               	movwf	??__div_to_l_
  6001  0983  3F41               	moviw [1]fsr1
  6002  0984  00F7               	movwf	??__div_to_l_+1
  6003  0985  3F42               	moviw [2]fsr1
  6004  0986  00F8               	movwf	??__div_to_l_+2
  6005  0987  3F43               	moviw [3]fsr1
  6006  0988  00F9               	movwf	??__div_to_l_+3
  6007  0989  1003               	clrc
  6008  098A  0D78               	rlf	??__div_to_l_+2,w
  6009  098B  0D79               	rlf	??__div_to_l_+3,w
  6010  098C  00FA               	movwf	??__div_to_l_+4
  6011  098D  087A               	movf	??__div_to_l_+4,w
  6012  098E  00A4               	movwf	__div_to_l_@cntr
  6013  098F  0824               	movf	__div_to_l_@cntr,w
  6014  0990  1D03               	btfss	3,2
  6015  0991  299B               	goto	l2179
  6016  0992  3000               	movlw	0
  6017  0993  00F3               	movwf	?__div_to_l_+3
  6018  0994  3000               	movlw	0
  6019  0995  00F2               	movwf	?__div_to_l_+2
  6020  0996  3000               	movlw	0
  6021  0997  00F1               	movwf	?__div_to_l_+1
  6022  0998  3000               	movlw	0
  6023  0999  00F0               	movwf	?__div_to_l_
  6024  099A  0008               	return
  6025  099B                     l2179:	
  6026  099B  3070               	movlw	low (__div_to_l_@f1| 0)
  6027  099C  0086               	movwf	6
  6028  099D  0187               	clrf	7
  6029  099E  3000               	movlw	0
  6030  099F  0481               	iorwf	1,f
  6031  09A0  3141               	addfsr 1,1
  6032  09A1  3000               	movlw	0
  6033  09A2  0481               	iorwf	1,f
  6034  09A3  3141               	addfsr 1,1
  6035  09A4  3080               	movlw	128
  6036  09A5  0481               	iorwf	1,f
  6037  09A6  3141               	addfsr 1,1
  6038  09A7  3000               	movlw	0
  6039  09A8  0481               	iorwf	1,f
  6040  09A9  3070               	movlw	low (__div_to_l_@f1| 0)
  6041  09AA  0086               	movwf	6
  6042  09AB  0187               	clrf	7
  6043  09AC  30FF               	movlw	255
  6044  09AD  0581               	andwf	1,f
  6045  09AE  3141               	addfsr 1,1
  6046  09AF  30FF               	movlw	255
  6047  09B0  0581               	andwf	1,f
  6048  09B1  3141               	addfsr 1,1
  6049  09B2  30FF               	movlw	255
  6050  09B3  0581               	andwf	1,f
  6051  09B4  3141               	addfsr 1,1
  6052  09B5  3000               	movlw	0
  6053  09B6  0581               	andwf	1,f
  6054  09B7  3073               	movlw	low (__div_to_l_@f2| 0)
  6055  09B8  0086               	movwf	6
  6056  09B9  0187               	clrf	7
  6057  09BA  3000               	movlw	0
  6058  09BB  0481               	iorwf	1,f
  6059  09BC  3141               	addfsr 1,1
  6060  09BD  3000               	movlw	0
  6061  09BE  0481               	iorwf	1,f
  6062  09BF  3141               	addfsr 1,1
  6063  09C0  3080               	movlw	128
  6064  09C1  0481               	iorwf	1,f
  6065  09C2  3141               	addfsr 1,1
  6066  09C3  3000               	movlw	0
  6067  09C4  0481               	iorwf	1,f
  6068  09C5  3073               	movlw	low (__div_to_l_@f2| 0)
  6069  09C6  0086               	movwf	6
  6070  09C7  0187               	clrf	7
  6071  09C8  30FF               	movlw	255
  6072  09C9  0581               	andwf	1,f
  6073  09CA  3141               	addfsr 1,1
  6074  09CB  30FF               	movlw	255
  6075  09CC  0581               	andwf	1,f
  6076  09CD  3141               	addfsr 1,1
  6077  09CE  30FF               	movlw	255
  6078  09CF  0581               	andwf	1,f
  6079  09D0  3141               	addfsr 1,1
  6080  09D1  3000               	movlw	0
  6081  09D2  0581               	andwf	1,f
  6082  09D3  3000               	movlw	0
  6083  09D4  00A3               	movwf	__div_to_l_@quot+3
  6084  09D5  3000               	movlw	0
  6085  09D6  00A2               	movwf	__div_to_l_@quot+2
  6086  09D7  3000               	movlw	0
  6087  09D8  00A1               	movwf	__div_to_l_@quot+1
  6088  09D9  3000               	movlw	0
  6089  09DA  00A0               	movwf	__div_to_l_@quot
  6090  09DB  307F               	movlw	127
  6091  09DC  02A5               	subwf	__div_to_l_@exp1,f
  6092  09DD  30A0               	movlw	160
  6093  09DE  0724               	addwf	__div_to_l_@cntr,w
  6094  09DF  00F6               	movwf	??__div_to_l_
  6095  09E0  0876               	movf	??__div_to_l_,w
  6096  09E1  02A5               	subwf	__div_to_l_@exp1,f
  6097  09E2  3020               	movlw	32
  6098  09E3  00F6               	movwf	??__div_to_l_
  6099  09E4  0876               	movf	??__div_to_l_,w
  6100  09E5  00A4               	movwf	__div_to_l_@cntr
  6101  09E6                     l2189:	
  6102  09E6  3001               	movlw	1
  6103  09E7                     u3035:	
  6104  09E7  35A0               	lslf	__div_to_l_@quot,f
  6105  09E8  0DA1               	rlf	__div_to_l_@quot+1,f
  6106  09E9  0DA2               	rlf	__div_to_l_@quot+2,f
  6107  09EA  0DA3               	rlf	__div_to_l_@quot+3,f
  6108  09EB  0B89               	decfsz	9,f
  6109  09EC  29E7               	goto	u3035
  6110  09ED  3073               	movlw	low (__div_to_l_@f2| 0)
  6111  09EE  0086               	movwf	6
  6112  09EF  0187               	clrf	7
  6113  09F0  3F40               	moviw [0]fsr1
  6114  09F1  00F6               	movwf	??__div_to_l_
  6115  09F2  3F41               	moviw [1]fsr1
  6116  09F3  00F7               	movwf	??__div_to_l_+1
  6117  09F4  3F42               	moviw [2]fsr1
  6118  09F5  00F8               	movwf	??__div_to_l_+2
  6119  09F6  3F43               	moviw [3]fsr1
  6120  09F7  00F9               	movwf	??__div_to_l_+3
  6121  09F8  3070               	movlw	low (__div_to_l_@f1| 0)
  6122  09F9  0086               	movwf	6
  6123  09FA  0187               	clrf	7
  6124  09FB  3F40               	moviw [0]fsr1
  6125  09FC  00FA               	movwf	??__div_to_l_+4
  6126  09FD  3F41               	moviw [1]fsr1
  6127  09FE  00FB               	movwf	??__div_to_l_+5
  6128  09FF  3F42               	moviw [2]fsr1
  6129  0A00  00FC               	movwf	??__div_to_l_+6
  6130  0A01  3F43               	moviw [3]fsr1
  6131  0A02  00FD               	movwf	??__div_to_l_+7
  6132  0A03  0879               	movf	??__div_to_l_+3,w
  6133  0A04  027D               	subwf	??__div_to_l_+7,w
  6134  0A05  1D03               	skipz
  6135  0A06  2A11               	goto	u3045
  6136  0A07  0878               	movf	??__div_to_l_+2,w
  6137  0A08  027C               	subwf	??__div_to_l_+6,w
  6138  0A09  1D03               	skipz
  6139  0A0A  2A11               	goto	u3045
  6140  0A0B  0877               	movf	??__div_to_l_+1,w
  6141  0A0C  027B               	subwf	??__div_to_l_+5,w
  6142  0A0D  1D03               	skipz
  6143  0A0E  2A11               	goto	u3045
  6144  0A0F  0876               	movf	??__div_to_l_,w
  6145  0A10  027A               	subwf	??__div_to_l_+4,w
  6146  0A11                     u3045:	
  6147  0A11  1C03               	skipc
  6148  0A12  2A2E               	goto	l2197
  6149  0A13  3073               	movlw	low (__div_to_l_@f2| 0)
  6150  0A14  0086               	movwf	6
  6151  0A15  0187               	clrf	7
  6152  0A16  3F40               	moviw [0]fsr1
  6153  0A17  00F6               	movwf	??__div_to_l_
  6154  0A18  3F41               	moviw [1]fsr1
  6155  0A19  00F7               	movwf	??__div_to_l_+1
  6156  0A1A  3F42               	moviw [2]fsr1
  6157  0A1B  00F8               	movwf	??__div_to_l_+2
  6158  0A1C  3F43               	moviw [3]fsr1
  6159  0A1D  00F9               	movwf	??__div_to_l_+3
  6160  0A1E  3070               	movlw	low (__div_to_l_@f1| 0)
  6161  0A1F  0086               	movwf	6
  6162  0A20  0187               	clrf	7
  6163  0A21  0876               	movf	??__div_to_l_,w
  6164  0A22  0281               	subwf	1,f
  6165  0A23  3141               	addfsr 1,1
  6166  0A24  0877               	movf	??__div_to_l_+1,w
  6167  0A25  3B81               	subwfb	1,f
  6168  0A26  3141               	addfsr 1,1
  6169  0A27  0878               	movf	??__div_to_l_+2,w
  6170  0A28  3B81               	subwfb	1,f
  6171  0A29  3141               	addfsr 1,1
  6172  0A2A  0879               	movf	??__div_to_l_+3,w
  6173  0A2B  3B81               	subwfb	1,f
  6174  0A2C  317D               	addfsr 1,-3
  6175  0A2D  1420               	bsf	__div_to_l_@quot,0
  6176  0A2E                     l2197:	
  6177  0A2E  3070               	movlw	low (__div_to_l_@f1| 0)
  6178  0A2F  0086               	movwf	6
  6179  0A30  0187               	clrf	7
  6180  0A31  3581               	lslf	1,f
  6181  0A32  3141               	addfsr 1,1
  6182  0A33  0D81               	rlf	1,f
  6183  0A34  3141               	addfsr 1,1
  6184  0A35  0D81               	rlf	1,f
  6185  0A36  3141               	addfsr 1,1
  6186  0A37  0D81               	rlf	1,f
  6187  0A38  317D               	addfsr 1,-3
  6188  0A39  3001               	movlw	1
  6189  0A3A  02A4               	subwf	__div_to_l_@cntr,f
  6190  0A3B  1D03               	btfss	3,2
  6191  0A3C  29E6               	goto	l2189
  6192  0A3D  1FA5               	btfss	__div_to_l_@exp1,7
  6193  0A3E  2A5B               	goto	l2209
  6194  0A3F  0825               	movf	__div_to_l_@exp1,w
  6195  0A40  3A80               	xorlw	128
  6196  0A41  3E9F               	addlw	159
  6197  0A42  1803               	skipnc
  6198  0A43  2A4D               	goto	l2207
  6199  0A44  3000               	movlw	0
  6200  0A45  00F3               	movwf	?__div_to_l_+3
  6201  0A46  3000               	movlw	0
  6202  0A47  00F2               	movwf	?__div_to_l_+2
  6203  0A48  3000               	movlw	0
  6204  0A49  00F1               	movwf	?__div_to_l_+1
  6205  0A4A  3000               	movlw	0
  6206  0A4B  00F0               	movwf	?__div_to_l_
  6207  0A4C  0008               	return
  6208  0A4D                     l2207:	
  6209  0A4D  3001               	movlw	1
  6210  0A4E                     u3085:	
  6211  0A4E  36A3               	lsrf	__div_to_l_@quot+3,f
  6212  0A4F  0CA2               	rrf	__div_to_l_@quot+2,f
  6213  0A50  0CA1               	rrf	__div_to_l_@quot+1,f
  6214  0A51  0CA0               	rrf	__div_to_l_@quot,f
  6215  0A52  0B89               	decfsz	9,f
  6216  0A53  2A4E               	goto	u3085
  6217  0A54  3001               	movlw	1
  6218  0A55  00F6               	movwf	??__div_to_l_
  6219  0A56  0876               	movf	??__div_to_l_,w
  6220  0A57  07A5               	addwf	__div_to_l_@exp1,f
  6221  0A58  1903               	btfsc	3,2
  6222  0A59  2A74               	goto	l2217
  6223  0A5A  2A4D               	goto	l2207
  6224  0A5B                     l2209:	
  6225  0A5B  3020               	movlw	32
  6226  0A5C  0225               	subwf	__div_to_l_@exp1,w
  6227  0A5D  1C03               	skipc
  6228  0A5E  2A71               	goto	l530
  6229  0A5F  3000               	movlw	0
  6230  0A60  00F3               	movwf	?__div_to_l_+3
  6231  0A61  3000               	movlw	0
  6232  0A62  00F2               	movwf	?__div_to_l_+2
  6233  0A63  3000               	movlw	0
  6234  0A64  00F1               	movwf	?__div_to_l_+1
  6235  0A65  3000               	movlw	0
  6236  0A66  00F0               	movwf	?__div_to_l_
  6237  0A67  0008               	return
  6238  0A68                     l2215:	
  6239  0A68  3001               	movlw	1
  6240  0A69                     u3115:	
  6241  0A69  35A0               	lslf	__div_to_l_@quot,f
  6242  0A6A  0DA1               	rlf	__div_to_l_@quot+1,f
  6243  0A6B  0DA2               	rlf	__div_to_l_@quot+2,f
  6244  0A6C  0DA3               	rlf	__div_to_l_@quot+3,f
  6245  0A6D  0B89               	decfsz	9,f
  6246  0A6E  2A69               	goto	u3115
  6247  0A6F  3001               	movlw	1
  6248  0A70  02A5               	subwf	__div_to_l_@exp1,f
  6249  0A71                     l530:	
  6250  0A71  0825               	movf	__div_to_l_@exp1,w
  6251  0A72  1D03               	btfss	3,2
  6252  0A73  2A68               	goto	l2215
  6253  0A74                     l2217:	
  6254  0A74  0823               	movf	__div_to_l_@quot+3,w
  6255  0A75  00F3               	movwf	?__div_to_l_+3
  6256  0A76  0822               	movf	__div_to_l_@quot+2,w
  6257  0A77  00F2               	movwf	?__div_to_l_+2
  6258  0A78  0821               	movf	__div_to_l_@quot+1,w
  6259  0A79  00F1               	movwf	?__div_to_l_+1
  6260  0A7A  0820               	movf	__div_to_l_@quot,w
  6261  0A7B  00F0               	movwf	?__div_to_l_
  6262  0A7C  0008               	return
  6263  0A7D                     __end_of__div_to_l_:	
  6264                           
  6265                           	psect	text13
  6266  0016                     __ptext13:	
  6267 ;; *************** function ___lltoft *****************
  6268 ;; Defined at:
  6269 ;;		line 35 in file "/opt/microchip/xc8/v1.45/sources/common/lltoft.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  c               4    8[COMMON] unsigned long 
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;  exp             1   13[COMMON] unsigned char 
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  3    8[COMMON] float 
  6276 ;; Registers used:
  6277 ;;		wreg, status,2, status,0, pclath, cstack
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;Total ram usage:        6 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; Hardware stack levels required when called:    1
  6290 ;; This function calls:
  6291 ;;		___ftpack
  6292 ;; This function is called by:
  6293 ;;		_printf
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           
  6298                           ;psect for function ___lltoft
  6299  0016                     ___lltoft:	
  6300                           
  6301                           ;incstack = 0
  6302                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6303  0016  308E               	movlw	142
  6304  0017  00FC               	movwf	??___lltoft
  6305  0018  087C               	movf	??___lltoft,w
  6306  0019  00FD               	movwf	___lltoft@exp
  6307  001A                     l2347:	
  6308  001A  30FF               	movlw	255
  6309  001B  057B               	andwf	___lltoft@c+3,w
  6310  001C  1903               	btfsc	3,2
  6311  001D  282A               	goto	l2349
  6312  001E  3001               	movlw	1
  6313  001F                     u3415:	
  6314  001F  36FB               	lsrf	___lltoft@c+3,f
  6315  0020  0CFA               	rrf	___lltoft@c+2,f
  6316  0021  0CF9               	rrf	___lltoft@c+1,f
  6317  0022  0CF8               	rrf	___lltoft@c,f
  6318  0023  0B89               	decfsz	9,f
  6319  0024  281F               	goto	u3415
  6320  0025  3001               	movlw	1
  6321  0026  00FC               	movwf	??___lltoft
  6322  0027  087C               	movf	??___lltoft,w
  6323  0028  07FD               	addwf	___lltoft@exp,f
  6324  0029  281A               	goto	l2347
  6325  002A                     l2349:	
  6326  002A  0878               	movf	___lltoft@c,w
  6327  002B  00F0               	movwf	___ftpack@arg
  6328  002C  0879               	movf	___lltoft@c+1,w
  6329  002D  00F1               	movwf	___ftpack@arg+1
  6330  002E  087A               	movf	___lltoft@c+2,w
  6331  002F  00F2               	movwf	___ftpack@arg+2
  6332  0030  087D               	movf	___lltoft@exp,w
  6333  0031  00FC               	movwf	??___lltoft
  6334  0032  087C               	movf	??___lltoft,w
  6335  0033  00F3               	movwf	___ftpack@exp
  6336  0034  01F4               	clrf	___ftpack@sign
  6337  0035  3188  2006         	fcall	___ftpack
  6338  0037  0870               	movf	?___ftpack,w
  6339  0038  00F8               	movwf	?___lltoft
  6340  0039  0871               	movf	?___ftpack+1,w
  6341  003A  00F9               	movwf	?___lltoft+1
  6342  003B  0872               	movf	?___ftpack+2,w
  6343  003C  00FA               	movwf	?___lltoft+2
  6344  003D  0008               	return
  6345  003E                     __end_of___lltoft:	
  6346                           
  6347                           	psect	text14
  6348  14F0                     __ptext14:	
  6349 ;; *************** function ___llmod *****************
  6350 ;; Defined at:
  6351 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/llmod.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  divisor         4    0[BANK0 ] unsigned long 
  6354 ;;  dividend        4    4[BANK0 ] unsigned long 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  counter         1    9[BANK0 ] unsigned char 
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  4    0[BANK0 ] unsigned long 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2, status,0
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6366 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;Total ram usage:       10 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_printf
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           
  6380                           ;psect for function ___llmod
  6381  14F0                     ___llmod:	
  6382                           
  6383                           ;incstack = 0
  6384                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6385  14F0  0020               	movlb	0	; select bank0
  6386  14F1  0823               	movf	___llmod@divisor+3,w
  6387  14F2  0422               	iorwf	___llmod@divisor+2,w
  6388  14F3  0421               	iorwf	___llmod@divisor+1,w
  6389  14F4  0420               	iorwf	___llmod@divisor,w
  6390  14F5  1903               	skipnz
  6391  14F6  2D2A               	goto	l2339
  6392  14F7  01A9               	clrf	___llmod@counter
  6393  14F8  0AA9               	incf	___llmod@counter,f
  6394  14F9                     l2329:	
  6395  14F9  1BA3               	btfsc	___llmod@divisor+3,7
  6396  14FA  2D07               	goto	l2331
  6397  14FB  3001               	movlw	1
  6398  14FC                     u3365:	
  6399  14FC  35A0               	lslf	___llmod@divisor,f
  6400  14FD  0DA1               	rlf	___llmod@divisor+1,f
  6401  14FE  0DA2               	rlf	___llmod@divisor+2,f
  6402  14FF  0DA3               	rlf	___llmod@divisor+3,f
  6403  1500  0B89               	decfsz	9,f
  6404  1501  2CFC               	goto	u3365
  6405  1502  3001               	movlw	1
  6406  1503  00A8               	movwf	??___llmod
  6407  1504  0828               	movf	??___llmod,w
  6408  1505  07A9               	addwf	___llmod@counter,f
  6409  1506  2CF9               	goto	l2329
  6410  1507                     l2331:	
  6411  1507  0823               	movf	___llmod@divisor+3,w
  6412  1508  0227               	subwf	___llmod@dividend+3,w
  6413  1509  1D03               	skipz
  6414  150A  2D15               	goto	u3385
  6415  150B  0822               	movf	___llmod@divisor+2,w
  6416  150C  0226               	subwf	___llmod@dividend+2,w
  6417  150D  1D03               	skipz
  6418  150E  2D15               	goto	u3385
  6419  150F  0821               	movf	___llmod@divisor+1,w
  6420  1510  0225               	subwf	___llmod@dividend+1,w
  6421  1511  1D03               	skipz
  6422  1512  2D15               	goto	u3385
  6423  1513  0820               	movf	___llmod@divisor,w
  6424  1514  0224               	subwf	___llmod@dividend,w
  6425  1515                     u3385:	
  6426  1515  1C03               	skipc
  6427  1516  2D1F               	goto	l2335
  6428  1517  0820               	movf	___llmod@divisor,w
  6429  1518  02A4               	subwf	___llmod@dividend,f
  6430  1519  0821               	movf	___llmod@divisor+1,w
  6431  151A  3BA5               	subwfb	___llmod@dividend+1,f
  6432  151B  0822               	movf	___llmod@divisor+2,w
  6433  151C  3BA6               	subwfb	___llmod@dividend+2,f
  6434  151D  0823               	movf	___llmod@divisor+3,w
  6435  151E  3BA7               	subwfb	___llmod@dividend+3,f
  6436  151F                     l2335:	
  6437  151F  3001               	movlw	1
  6438  1520                     u3395:	
  6439  1520  36A3               	lsrf	___llmod@divisor+3,f
  6440  1521  0CA2               	rrf	___llmod@divisor+2,f
  6441  1522  0CA1               	rrf	___llmod@divisor+1,f
  6442  1523  0CA0               	rrf	___llmod@divisor,f
  6443  1524  0B89               	decfsz	9,f
  6444  1525  2D20               	goto	u3395
  6445  1526  3001               	movlw	1
  6446  1527  02A9               	subwf	___llmod@counter,f
  6447  1528  1D03               	btfss	3,2
  6448  1529  2D07               	goto	l2331
  6449  152A                     l2339:	
  6450  152A  0827               	movf	___llmod@dividend+3,w
  6451  152B  00A3               	movwf	?___llmod+3
  6452  152C  0826               	movf	___llmod@dividend+2,w
  6453  152D  00A2               	movwf	?___llmod+2
  6454  152E  0825               	movf	___llmod@dividend+1,w
  6455  152F  00A1               	movwf	?___llmod+1
  6456  1530  0824               	movf	___llmod@dividend,w
  6457  1531  00A0               	movwf	?___llmod
  6458  1532  0008               	return
  6459  1533                     __end_of___llmod:	
  6460                           
  6461                           	psect	text15
  6462  1578                     __ptext15:	
  6463 ;; *************** function ___lldiv *****************
  6464 ;; Defined at:
  6465 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  divisor         4    0[COMMON] unsigned long 
  6468 ;;  dividend        4    4[COMMON] unsigned long 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  quotient        4    9[COMMON] unsigned long 
  6471 ;;  counter         1   13[COMMON] unsigned char 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  4    0[COMMON] unsigned long 
  6474 ;; Registers used:
  6475 ;;		wreg, status,2, status,0
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6481 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6482 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6483 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6484 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6485 ;;Total ram usage:       14 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; This function calls:
  6488 ;;		Nothing
  6489 ;; This function is called by:
  6490 ;;		_printf
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           
  6495                           ;psect for function ___lldiv
  6496  1578                     ___lldiv:	
  6497                           
  6498                           ;incstack = 0
  6499                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6500  1578  3000               	movlw	0
  6501  1579  00FC               	movwf	___lldiv@quotient+3
  6502  157A  3000               	movlw	0
  6503  157B  00FB               	movwf	___lldiv@quotient+2
  6504  157C  3000               	movlw	0
  6505  157D  00FA               	movwf	___lldiv@quotient+1
  6506  157E  3000               	movlw	0
  6507  157F  00F9               	movwf	___lldiv@quotient
  6508  1580  0873               	movf	___lldiv@divisor+3,w
  6509  1581  0472               	iorwf	___lldiv@divisor+2,w
  6510  1582  0471               	iorwf	___lldiv@divisor+1,w
  6511  1583  0470               	iorwf	___lldiv@divisor,w
  6512  1584  1903               	skipnz
  6513  1585  2DC1               	goto	l2319
  6514  1586  01FD               	clrf	___lldiv@counter
  6515  1587  0AFD               	incf	___lldiv@counter,f
  6516  1588                     l2305:	
  6517  1588  1BF3               	btfsc	___lldiv@divisor+3,7
  6518  1589  2D96               	goto	l2307
  6519  158A  3001               	movlw	1
  6520  158B                     u3295:	
  6521  158B  35F0               	lslf	___lldiv@divisor,f
  6522  158C  0DF1               	rlf	___lldiv@divisor+1,f
  6523  158D  0DF2               	rlf	___lldiv@divisor+2,f
  6524  158E  0DF3               	rlf	___lldiv@divisor+3,f
  6525  158F  0B89               	decfsz	9,f
  6526  1590  2D8B               	goto	u3295
  6527  1591  3001               	movlw	1
  6528  1592  00F8               	movwf	??___lldiv
  6529  1593  0878               	movf	??___lldiv,w
  6530  1594  07FD               	addwf	___lldiv@counter,f
  6531  1595  2D88               	goto	l2305
  6532  1596                     l2307:	
  6533  1596  3001               	movlw	1
  6534  1597                     u3315:	
  6535  1597  35F9               	lslf	___lldiv@quotient,f
  6536  1598  0DFA               	rlf	___lldiv@quotient+1,f
  6537  1599  0DFB               	rlf	___lldiv@quotient+2,f
  6538  159A  0DFC               	rlf	___lldiv@quotient+3,f
  6539  159B  0B89               	decfsz	9,f
  6540  159C  2D97               	goto	u3315
  6541  159D  0873               	movf	___lldiv@divisor+3,w
  6542  159E  0277               	subwf	___lldiv@dividend+3,w
  6543  159F  1D03               	skipz
  6544  15A0  2DAB               	goto	u3325
  6545  15A1  0872               	movf	___lldiv@divisor+2,w
  6546  15A2  0276               	subwf	___lldiv@dividend+2,w
  6547  15A3  1D03               	skipz
  6548  15A4  2DAB               	goto	u3325
  6549  15A5  0871               	movf	___lldiv@divisor+1,w
  6550  15A6  0275               	subwf	___lldiv@dividend+1,w
  6551  15A7  1D03               	skipz
  6552  15A8  2DAB               	goto	u3325
  6553  15A9  0870               	movf	___lldiv@divisor,w
  6554  15AA  0274               	subwf	___lldiv@dividend,w
  6555  15AB                     u3325:	
  6556  15AB  1C03               	skipc
  6557  15AC  2DB6               	goto	l2315
  6558  15AD  0870               	movf	___lldiv@divisor,w
  6559  15AE  02F4               	subwf	___lldiv@dividend,f
  6560  15AF  0871               	movf	___lldiv@divisor+1,w
  6561  15B0  3BF5               	subwfb	___lldiv@dividend+1,f
  6562  15B1  0872               	movf	___lldiv@divisor+2,w
  6563  15B2  3BF6               	subwfb	___lldiv@dividend+2,f
  6564  15B3  0873               	movf	___lldiv@divisor+3,w
  6565  15B4  3BF7               	subwfb	___lldiv@dividend+3,f
  6566  15B5  1479               	bsf	___lldiv@quotient,0
  6567  15B6                     l2315:	
  6568  15B6  3001               	movlw	1
  6569  15B7                     u3335:	
  6570  15B7  36F3               	lsrf	___lldiv@divisor+3,f
  6571  15B8  0CF2               	rrf	___lldiv@divisor+2,f
  6572  15B9  0CF1               	rrf	___lldiv@divisor+1,f
  6573  15BA  0CF0               	rrf	___lldiv@divisor,f
  6574  15BB  0B89               	decfsz	9,f
  6575  15BC  2DB7               	goto	u3335
  6576  15BD  3001               	movlw	1
  6577  15BE  02FD               	subwf	___lldiv@counter,f
  6578  15BF  1D03               	btfss	3,2
  6579  15C0  2D96               	goto	l2307
  6580  15C1                     l2319:	
  6581  15C1  087C               	movf	___lldiv@quotient+3,w
  6582  15C2  00F3               	movwf	?___lldiv+3
  6583  15C3  087B               	movf	___lldiv@quotient+2,w
  6584  15C4  00F2               	movwf	?___lldiv+2
  6585  15C5  087A               	movf	___lldiv@quotient+1,w
  6586  15C6  00F1               	movwf	?___lldiv+1
  6587  15C7  0879               	movf	___lldiv@quotient,w
  6588  15C8  00F0               	movwf	?___lldiv
  6589  15C9  0008               	return
  6590  15CA                     __end_of___lldiv:	
  6591                           
  6592                           	psect	text16
  6593  161C                     __ptext16:	
  6594 ;; *************** function ___fttol *****************
  6595 ;; Defined at:
  6596 ;;		line 44 in file "/opt/microchip/xc8/v1.45/sources/common/fttol.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  f1              3   57[BANK0 ] float 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  lval            4   66[BANK0 ] unsigned long 
  6601 ;;  exp1            1   70[BANK0 ] unsigned char 
  6602 ;;  sign1           1   65[BANK0 ] unsigned char 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  4   57[BANK0 ] long 
  6605 ;; Registers used:
  6606 ;;		wreg, status,2, status,0
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6612 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6615 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;Total ram usage:       14 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; This function calls:
  6619 ;;		Nothing
  6620 ;; This function is called by:
  6621 ;;		_printf
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           
  6626                           ;psect for function ___fttol
  6627  161C                     ___fttol:	
  6628                           
  6629                           ;incstack = 0
  6630                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6631  161C  0020               	movlb	0	; select bank0
  6632  161D  0859               	movf	___fttol@f1,w
  6633  161E  00DD               	movwf	??___fttol
  6634  161F  085A               	movf	___fttol@f1+1,w
  6635  1620  00DE               	movwf	??___fttol+1
  6636  1621  085B               	movf	___fttol@f1+2,w
  6637  1622  00DF               	movwf	??___fttol+2
  6638  1623  1003               	clrc
  6639  1624  0D5E               	rlf	??___fttol+1,w
  6640  1625  0D5F               	rlf	??___fttol+2,w
  6641  1626  00E0               	movwf	??___fttol+3
  6642  1627  0860               	movf	??___fttol+3,w
  6643  1628  00E6               	movwf	___fttol@exp1
  6644  1629  0866               	movf	___fttol@exp1,w
  6645  162A  1D03               	btfss	3,2
  6646  162B  2E35               	goto	l2263
  6647  162C  3000               	movlw	0
  6648  162D  00DC               	movwf	?___fttol+3
  6649  162E  3000               	movlw	0
  6650  162F  00DB               	movwf	?___fttol+2
  6651  1630  3000               	movlw	0
  6652  1631  00DA               	movwf	?___fttol+1
  6653  1632  3000               	movlw	0
  6654  1633  00D9               	movwf	?___fttol
  6655  1634  0008               	return
  6656  1635                     l2263:	
  6657  1635  0859               	movf	___fttol@f1,w
  6658  1636  00DD               	movwf	??___fttol
  6659  1637  085A               	movf	___fttol@f1+1,w
  6660  1638  00DE               	movwf	??___fttol+1
  6661  1639  085B               	movf	___fttol@f1+2,w
  6662  163A  00DF               	movwf	??___fttol+2
  6663  163B  3017               	movlw	23
  6664  163C                     u3195:	
  6665  163C  36DF               	lsrf	??___fttol+2,f
  6666  163D  0CDE               	rrf	??___fttol+1,f
  6667  163E  0CDD               	rrf	??___fttol,f
  6668  163F  0B89               	decfsz	9,f
  6669  1640  2E3C               	goto	u3195
  6670  1641  085D               	movf	??___fttol,w
  6671  1642  00E0               	movwf	??___fttol+3
  6672  1643  0860               	movf	??___fttol+3,w
  6673  1644  00E1               	movwf	___fttol@sign1
  6674  1645  17DA               	bsf	___fttol@f1+1,7
  6675  1646  30FF               	movlw	255
  6676  1647  05D9               	andwf	___fttol@f1,f
  6677  1648  30FF               	movlw	255
  6678  1649  05DA               	andwf	___fttol@f1+1,f
  6679  164A  3000               	movlw	0
  6680  164B  05DB               	andwf	___fttol@f1+2,f
  6681  164C  0859               	movf	___fttol@f1,w
  6682  164D  00E2               	movwf	___fttol@lval
  6683  164E  085A               	movf	___fttol@f1+1,w
  6684  164F  00E3               	movwf	___fttol@lval+1
  6685  1650  085B               	movf	___fttol@f1+2,w
  6686  1651  00E4               	movwf	___fttol@lval+2
  6687  1652  01E5               	clrf	___fttol@lval+3
  6688  1653  308E               	movlw	142
  6689  1654  02E6               	subwf	___fttol@exp1,f
  6690  1655  1FE6               	btfss	___fttol@exp1,7
  6691  1656  2E73               	goto	l2283
  6692  1657  0866               	movf	___fttol@exp1,w
  6693  1658  3A80               	xorlw	128
  6694  1659  3E8F               	addlw	143
  6695  165A  1803               	skipnc
  6696  165B  2E65               	goto	l2281
  6697  165C  3000               	movlw	0
  6698  165D  00DC               	movwf	?___fttol+3
  6699  165E  3000               	movlw	0
  6700  165F  00DB               	movwf	?___fttol+2
  6701  1660  3000               	movlw	0
  6702  1661  00DA               	movwf	?___fttol+1
  6703  1662  3000               	movlw	0
  6704  1663  00D9               	movwf	?___fttol
  6705  1664  0008               	return
  6706  1665                     l2281:	
  6707  1665  3001               	movlw	1
  6708  1666                     u3225:	
  6709  1666  36E5               	lsrf	___fttol@lval+3,f
  6710  1667  0CE4               	rrf	___fttol@lval+2,f
  6711  1668  0CE3               	rrf	___fttol@lval+1,f
  6712  1669  0CE2               	rrf	___fttol@lval,f
  6713  166A  0B89               	decfsz	9,f
  6714  166B  2E66               	goto	u3225
  6715  166C  3001               	movlw	1
  6716  166D  00DD               	movwf	??___fttol
  6717  166E  085D               	movf	??___fttol,w
  6718  166F  07E6               	addwf	___fttol@exp1,f
  6719  1670  1903               	btfsc	3,2
  6720  1671  2E8C               	goto	l2291
  6721  1672  2E65               	goto	l2281
  6722  1673                     l2283:	
  6723  1673  3018               	movlw	24
  6724  1674  0266               	subwf	___fttol@exp1,w
  6725  1675  1C03               	skipc
  6726  1676  2E89               	goto	l650
  6727  1677  3000               	movlw	0
  6728  1678  00DC               	movwf	?___fttol+3
  6729  1679  3000               	movlw	0
  6730  167A  00DB               	movwf	?___fttol+2
  6731  167B  3000               	movlw	0
  6732  167C  00DA               	movwf	?___fttol+1
  6733  167D  3000               	movlw	0
  6734  167E  00D9               	movwf	?___fttol
  6735  167F  0008               	return
  6736  1680                     l2289:	
  6737  1680  3001               	movlw	1
  6738  1681                     u3255:	
  6739  1681  35E2               	lslf	___fttol@lval,f
  6740  1682  0DE3               	rlf	___fttol@lval+1,f
  6741  1683  0DE4               	rlf	___fttol@lval+2,f
  6742  1684  0DE5               	rlf	___fttol@lval+3,f
  6743  1685  0B89               	decfsz	9,f
  6744  1686  2E81               	goto	u3255
  6745  1687  3001               	movlw	1
  6746  1688  02E6               	subwf	___fttol@exp1,f
  6747  1689                     l650:	
  6748  1689  0866               	movf	___fttol@exp1,w
  6749  168A  1D03               	btfss	3,2
  6750  168B  2E80               	goto	l2289
  6751  168C                     l2291:	
  6752  168C  0861               	movf	___fttol@sign1,w
  6753  168D  1903               	btfsc	3,2
  6754  168E  2E9A               	goto	l2295
  6755  168F  09E2               	comf	___fttol@lval,f
  6756  1690  09E3               	comf	___fttol@lval+1,f
  6757  1691  09E4               	comf	___fttol@lval+2,f
  6758  1692  09E5               	comf	___fttol@lval+3,f
  6759  1693  0AE2               	incf	___fttol@lval,f
  6760  1694  1903               	skipnz
  6761  1695  0AE3               	incf	___fttol@lval+1,f
  6762  1696  1903               	skipnz
  6763  1697  0AE4               	incf	___fttol@lval+2,f
  6764  1698  1903               	skipnz
  6765  1699  0AE5               	incf	___fttol@lval+3,f
  6766  169A                     l2295:	
  6767  169A  0865               	movf	___fttol@lval+3,w
  6768  169B  00DC               	movwf	?___fttol+3
  6769  169C  0864               	movf	___fttol@lval+2,w
  6770  169D  00DB               	movwf	?___fttol+2
  6771  169E  0863               	movf	___fttol@lval+1,w
  6772  169F  00DA               	movwf	?___fttol+1
  6773  16A0  0862               	movf	___fttol@lval,w
  6774  16A1  00D9               	movwf	?___fttol
  6775  16A2  0008               	return
  6776  16A3                     __end_of___fttol:	
  6777                           
  6778                           	psect	text17
  6779  1497                     __ptext17:	
  6780 ;; *************** function ___ftsub *****************
  6781 ;; Defined at:
  6782 ;;		line 18 in file "/opt/microchip/xc8/v1.45/sources/common/ftsub.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  f2              3   32[BANK0 ] float 
  6785 ;;  f1              3   35[BANK0 ] float 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  3   32[BANK0 ] float 
  6790 ;; Registers used:
  6791 ;;		wreg, status,2, status,0, pclath, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6797 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6800 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;Total ram usage:        6 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    2
  6804 ;; This function calls:
  6805 ;;		___ftadd
  6806 ;; This function is called by:
  6807 ;;		_printf
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           
  6812                           ;psect for function ___ftsub
  6813  1497                     ___ftsub:	
  6814                           
  6815                           ;incstack = 0
  6816                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6817  1497  0020               	movlb	0	; select bank0
  6818  1498  0842               	movf	___ftsub@f2+2,w
  6819  1499  0441               	iorwf	___ftsub@f2+1,w
  6820  149A  0440               	iorwf	___ftsub@f2,w
  6821  149B  1903               	skipnz
  6822  149C  2C9F               	goto	l2253
  6823  149D  3080               	movlw	128
  6824  149E  06C2               	xorwf	___ftsub@f2+2,f
  6825  149F                     l2253:	
  6826  149F  0843               	movf	___ftsub@f1,w
  6827  14A0  00B3               	movwf	___ftadd@f1
  6828  14A1  0844               	movf	___ftsub@f1+1,w
  6829  14A2  00B4               	movwf	___ftadd@f1+1
  6830  14A3  0845               	movf	___ftsub@f1+2,w
  6831  14A4  00B5               	movwf	___ftadd@f1+2
  6832  14A5  0840               	movf	___ftsub@f2,w
  6833  14A6  00B6               	movwf	___ftadd@f2
  6834  14A7  0841               	movf	___ftsub@f2+1,w
  6835  14A8  00B7               	movwf	___ftadd@f2+1
  6836  14A9  0842               	movf	___ftsub@f2+2,w
  6837  14AA  00B8               	movwf	___ftadd@f2+2
  6838  14AB  3188  206A         	fcall	___ftadd
  6839  14AD  0020               	movlb	0	; select bank0
  6840  14AE  0833               	movf	?___ftadd,w
  6841  14AF  00C0               	movwf	?___ftsub
  6842  14B0  0834               	movf	?___ftadd+1,w
  6843  14B1  00C1               	movwf	?___ftsub+1
  6844  14B2  0835               	movf	?___ftadd+2,w
  6845  14B3  00C2               	movwf	?___ftsub+2
  6846  14B4  0008               	return
  6847  14B5                     __end_of___ftsub:	
  6848                           
  6849                           	psect	text18
  6850  086A                     __ptext18:	
  6851 ;; *************** function ___ftadd *****************
  6852 ;; Defined at:
  6853 ;;		line 86 in file "/opt/microchip/xc8/v1.45/sources/common/ftadd.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  f1              3   19[BANK0 ] float 
  6856 ;;  f2              3   22[BANK0 ] float 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  exp1            1   31[BANK0 ] unsigned char 
  6859 ;;  exp2            1   30[BANK0 ] unsigned char 
  6860 ;;  sign            1   29[BANK0 ] unsigned char 
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  3   19[BANK0 ] float 
  6863 ;; Registers used:
  6864 ;;		wreg, status,2, status,0, pclath, cstack
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6870 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6874 ;;Total ram usage:       13 bytes
  6875 ;; Hardware stack levels used:    1
  6876 ;; Hardware stack levels required when called:    1
  6877 ;; This function calls:
  6878 ;;		___ftpack
  6879 ;; This function is called by:
  6880 ;;		_main
  6881 ;;		_printf
  6882 ;;		___ftsub
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           
  6887                           ;psect for function ___ftadd
  6888  086A                     ___ftadd:	
  6889                           
  6890                           ;incstack = 0
  6891                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6892  086A  0020               	movlb	0	; select bank0
  6893  086B  0833               	movf	___ftadd@f1,w
  6894  086C  00B9               	movwf	??___ftadd
  6895  086D  0834               	movf	___ftadd@f1+1,w
  6896  086E  00BA               	movwf	??___ftadd+1
  6897  086F  0835               	movf	___ftadd@f1+2,w
  6898  0870  00BB               	movwf	??___ftadd+2
  6899  0871  1003               	clrc
  6900  0872  0D3A               	rlf	??___ftadd+1,w
  6901  0873  0D3B               	rlf	??___ftadd+2,w
  6902  0874  00BC               	movwf	??___ftadd+3
  6903  0875  083C               	movf	??___ftadd+3,w
  6904  0876  00BF               	movwf	___ftadd@exp1
  6905  0877  0836               	movf	___ftadd@f2,w
  6906  0878  00B9               	movwf	??___ftadd
  6907  0879  0837               	movf	___ftadd@f2+1,w
  6908  087A  00BA               	movwf	??___ftadd+1
  6909  087B  0838               	movf	___ftadd@f2+2,w
  6910  087C  00BB               	movwf	??___ftadd+2
  6911  087D  1003               	clrc
  6912  087E  0D3A               	rlf	??___ftadd+1,w
  6913  087F  0D3B               	rlf	??___ftadd+2,w
  6914  0880  00BC               	movwf	??___ftadd+3
  6915  0881  083C               	movf	??___ftadd+3,w
  6916  0882  00BE               	movwf	___ftadd@exp2
  6917  0883  083F               	movf	___ftadd@exp1,w
  6918  0884  1903               	btfsc	3,2
  6919  0885  2892               	goto	l1923
  6920  0886  083E               	movf	___ftadd@exp2,w
  6921  0887  023F               	subwf	___ftadd@exp1,w
  6922  0888  1803               	skipnc
  6923  0889  2899               	goto	l1927
  6924  088A  033F               	decf	___ftadd@exp1,w
  6925  088B  3AFF               	xorlw	255
  6926  088C  073E               	addwf	___ftadd@exp2,w
  6927  088D  00B9               	movwf	??___ftadd
  6928  088E  3019               	movlw	25
  6929  088F  0239               	subwf	??___ftadd,w
  6930  0890  1C03               	skipc
  6931  0891  2899               	goto	l1927
  6932  0892                     l1923:	
  6933  0892  0836               	movf	___ftadd@f2,w
  6934  0893  00B3               	movwf	?___ftadd
  6935  0894  0837               	movf	___ftadd@f2+1,w
  6936  0895  00B4               	movwf	?___ftadd+1
  6937  0896  0838               	movf	___ftadd@f2+2,w
  6938  0897  00B5               	movwf	?___ftadd+2
  6939  0898  0008               	return
  6940  0899                     l1927:	
  6941  0899  083E               	movf	___ftadd@exp2,w
  6942  089A  1903               	btfsc	3,2
  6943  089B  0008               	return
  6944  089C  083F               	movf	___ftadd@exp1,w
  6945  089D  023E               	subwf	___ftadd@exp2,w
  6946  089E  1803               	skipnc
  6947  089F  28A8               	goto	l1933
  6948  08A0  033E               	decf	___ftadd@exp2,w
  6949  08A1  3AFF               	xorlw	255
  6950  08A2  073F               	addwf	___ftadd@exp1,w
  6951  08A3  00B9               	movwf	??___ftadd
  6952  08A4  3019               	movlw	25
  6953  08A5  0239               	subwf	??___ftadd,w
  6954  08A6  1803               	btfsc	3,0
  6955  08A7  0008               	return
  6956  08A8                     l1933:	
  6957  08A8  3006               	movlw	6
  6958  08A9  00B9               	movwf	??___ftadd
  6959  08AA  0839               	movf	??___ftadd,w
  6960  08AB  00BD               	movwf	___ftadd@sign
  6961  08AC  1BB5               	btfsc	___ftadd@f1+2,7
  6962  08AD  17BD               	bsf	___ftadd@sign,7
  6963  08AE  1BB8               	btfsc	___ftadd@f2+2,7
  6964  08AF  173D               	bsf	___ftadd@sign,6
  6965  08B0  17B4               	bsf	___ftadd@f1+1,7
  6966  08B1  30FF               	movlw	255
  6967  08B2  05B3               	andwf	___ftadd@f1,f
  6968  08B3  30FF               	movlw	255
  6969  08B4  05B4               	andwf	___ftadd@f1+1,f
  6970  08B5  3000               	movlw	0
  6971  08B6  05B5               	andwf	___ftadd@f1+2,f
  6972  08B7  17B7               	bsf	___ftadd@f2+1,7
  6973  08B8  30FF               	movlw	255
  6974  08B9  05B6               	andwf	___ftadd@f2,f
  6975  08BA  30FF               	movlw	255
  6976  08BB  05B7               	andwf	___ftadd@f2+1,f
  6977  08BC  3000               	movlw	0
  6978  08BD  05B8               	andwf	___ftadd@f2+2,f
  6979  08BE  083E               	movf	___ftadd@exp2,w
  6980  08BF  023F               	subwf	___ftadd@exp1,w
  6981  08C0  1803               	skipnc
  6982  08C1  28E4               	goto	l1955
  6983  08C2                     l1945:	
  6984  08C2  3001               	movlw	1
  6985  08C3                     u2525:	
  6986  08C3  35B6               	lslf	___ftadd@f2,f
  6987  08C4  0DB7               	rlf	___ftadd@f2+1,f
  6988  08C5  0DB8               	rlf	___ftadd@f2+2,f
  6989  08C6  0B89               	decfsz	9,f
  6990  08C7  28C3               	goto	u2525
  6991  08C8  3001               	movlw	1
  6992  08C9  02BE               	subwf	___ftadd@exp2,f
  6993  08CA  083E               	movf	___ftadd@exp2,w
  6994  08CB  063F               	xorwf	___ftadd@exp1,w
  6995  08CC  1903               	skipnz
  6996  08CD  28DF               	goto	l1953
  6997  08CE  3001               	movlw	1
  6998  08CF  02BD               	subwf	___ftadd@sign,f
  6999  08D0  083D               	movf	___ftadd@sign,w
  7000  08D1  3907               	andlw	7
  7001  08D2  1903               	btfsc	3,2
  7002  08D3  28DF               	goto	l1953
  7003  08D4  28C2               	goto	l1945
  7004  08D5                     l1951:	
  7005  08D5  3001               	movlw	1
  7006  08D6                     u2555:	
  7007  08D6  36B5               	lsrf	___ftadd@f1+2,f
  7008  08D7  0CB4               	rrf	___ftadd@f1+1,f
  7009  08D8  0CB3               	rrf	___ftadd@f1,f
  7010  08D9  0B89               	decfsz	9,f
  7011  08DA  28D6               	goto	u2555
  7012  08DB  3001               	movlw	1
  7013  08DC  00B9               	movwf	??___ftadd
  7014  08DD  0839               	movf	??___ftadd,w
  7015  08DE  07BF               	addwf	___ftadd@exp1,f
  7016  08DF                     l1953:	
  7017  08DF  083F               	movf	___ftadd@exp1,w
  7018  08E0  063E               	xorwf	___ftadd@exp2,w
  7019  08E1  1903               	btfsc	3,2
  7020  08E2  2909               	goto	l573
  7021  08E3  28D5               	goto	l1951
  7022  08E4                     l1955:	
  7023  08E4  083F               	movf	___ftadd@exp1,w
  7024  08E5  023E               	subwf	___ftadd@exp2,w
  7025  08E6  1803               	skipnc
  7026  08E7  2909               	goto	l573
  7027  08E8                     l1957:	
  7028  08E8  3001               	movlw	1
  7029  08E9                     u2585:	
  7030  08E9  35B3               	lslf	___ftadd@f1,f
  7031  08EA  0DB4               	rlf	___ftadd@f1+1,f
  7032  08EB  0DB5               	rlf	___ftadd@f1+2,f
  7033  08EC  0B89               	decfsz	9,f
  7034  08ED  28E9               	goto	u2585
  7035  08EE  3001               	movlw	1
  7036  08EF  02BF               	subwf	___ftadd@exp1,f
  7037  08F0  083E               	movf	___ftadd@exp2,w
  7038  08F1  063F               	xorwf	___ftadd@exp1,w
  7039  08F2  1903               	skipnz
  7040  08F3  2905               	goto	l1965
  7041  08F4  3001               	movlw	1
  7042  08F5  02BD               	subwf	___ftadd@sign,f
  7043  08F6  083D               	movf	___ftadd@sign,w
  7044  08F7  3907               	andlw	7
  7045  08F8  1903               	btfsc	3,2
  7046  08F9  2905               	goto	l1965
  7047  08FA  28E8               	goto	l1957
  7048  08FB                     l1963:	
  7049  08FB  3001               	movlw	1
  7050  08FC                     u2615:	
  7051  08FC  36B8               	lsrf	___ftadd@f2+2,f
  7052  08FD  0CB7               	rrf	___ftadd@f2+1,f
  7053  08FE  0CB6               	rrf	___ftadd@f2,f
  7054  08FF  0B89               	decfsz	9,f
  7055  0900  28FC               	goto	u2615
  7056  0901  3001               	movlw	1
  7057  0902  00B9               	movwf	??___ftadd
  7058  0903  0839               	movf	??___ftadd,w
  7059  0904  07BE               	addwf	___ftadd@exp2,f
  7060  0905                     l1965:	
  7061  0905  083F               	movf	___ftadd@exp1,w
  7062  0906  063E               	xorwf	___ftadd@exp2,w
  7063  0907  1D03               	skipz
  7064  0908  28FB               	goto	l1963
  7065  0909                     l573:	
  7066  0909  1FBD               	btfss	___ftadd@sign,7
  7067  090A  291B               	goto	l1969
  7068  090B  30FF               	movlw	255
  7069  090C  06B3               	xorwf	___ftadd@f1,f
  7070  090D  30FF               	movlw	255
  7071  090E  06B4               	xorwf	___ftadd@f1+1,f
  7072  090F  30FF               	movlw	255
  7073  0910  06B5               	xorwf	___ftadd@f1+2,f
  7074  0911  3001               	movlw	1
  7075  0912  07B3               	addwf	___ftadd@f1,f
  7076  0913  3000               	movlw	0
  7077  0914  1803               	skipnc
  7078  0915  3001               	movlw	1
  7079  0916  07B4               	addwf	___ftadd@f1+1,f
  7080  0917  3000               	movlw	0
  7081  0918  1803               	skipnc
  7082  0919  3001               	movlw	1
  7083  091A  07B5               	addwf	___ftadd@f1+2,f
  7084  091B                     l1969:	
  7085  091B  1F3D               	btfss	___ftadd@sign,6
  7086  091C  292D               	goto	l1973
  7087  091D  30FF               	movlw	255
  7088  091E  06B6               	xorwf	___ftadd@f2,f
  7089  091F  30FF               	movlw	255
  7090  0920  06B7               	xorwf	___ftadd@f2+1,f
  7091  0921  30FF               	movlw	255
  7092  0922  06B8               	xorwf	___ftadd@f2+2,f
  7093  0923  3001               	movlw	1
  7094  0924  07B6               	addwf	___ftadd@f2,f
  7095  0925  3000               	movlw	0
  7096  0926  1803               	skipnc
  7097  0927  3001               	movlw	1
  7098  0928  07B7               	addwf	___ftadd@f2+1,f
  7099  0929  3000               	movlw	0
  7100  092A  1803               	skipnc
  7101  092B  3001               	movlw	1
  7102  092C  07B8               	addwf	___ftadd@f2+2,f
  7103  092D                     l1973:	
  7104  092D  01BD               	clrf	___ftadd@sign
  7105  092E  0833               	movf	___ftadd@f1,w
  7106  092F  07B6               	addwf	___ftadd@f2,f
  7107  0930  0834               	movf	___ftadd@f1+1,w
  7108  0931  3DB7               	addwfc	___ftadd@f2+1,f
  7109  0932  0835               	movf	___ftadd@f1+2,w
  7110  0933  3DB8               	addwfc	___ftadd@f2+2,f
  7111  0934  1FB8               	btfss	___ftadd@f2+2,7
  7112  0935  2948               	goto	l1983
  7113  0936  30FF               	movlw	255
  7114  0937  06B6               	xorwf	___ftadd@f2,f
  7115  0938  30FF               	movlw	255
  7116  0939  06B7               	xorwf	___ftadd@f2+1,f
  7117  093A  30FF               	movlw	255
  7118  093B  06B8               	xorwf	___ftadd@f2+2,f
  7119  093C  3001               	movlw	1
  7120  093D  07B6               	addwf	___ftadd@f2,f
  7121  093E  3000               	movlw	0
  7122  093F  1803               	skipnc
  7123  0940  3001               	movlw	1
  7124  0941  07B7               	addwf	___ftadd@f2+1,f
  7125  0942  3000               	movlw	0
  7126  0943  1803               	skipnc
  7127  0944  3001               	movlw	1
  7128  0945  07B8               	addwf	___ftadd@f2+2,f
  7129  0946  01BD               	clrf	___ftadd@sign
  7130  0947  0ABD               	incf	___ftadd@sign,f
  7131  0948                     l1983:	
  7132  0948  0836               	movf	___ftadd@f2,w
  7133  0949  00F0               	movwf	___ftpack@arg
  7134  094A  0837               	movf	___ftadd@f2+1,w
  7135  094B  00F1               	movwf	___ftpack@arg+1
  7136  094C  0838               	movf	___ftadd@f2+2,w
  7137  094D  00F2               	movwf	___ftpack@arg+2
  7138  094E  083F               	movf	___ftadd@exp1,w
  7139  094F  00B9               	movwf	??___ftadd
  7140  0950  0839               	movf	??___ftadd,w
  7141  0951  00F3               	movwf	___ftpack@exp
  7142  0952  083D               	movf	___ftadd@sign,w
  7143  0953  00BA               	movwf	??___ftadd+1
  7144  0954  083A               	movf	??___ftadd+1,w
  7145  0955  00F4               	movwf	___ftpack@sign
  7146  0956  3188  2006         	fcall	___ftpack
  7147  0958  0870               	movf	?___ftpack,w
  7148  0959  0020               	movlb	0	; select bank0
  7149  095A  00B3               	movwf	?___ftadd
  7150  095B  0871               	movf	?___ftpack+1,w
  7151  095C  00B4               	movwf	?___ftadd+1
  7152  095D  0872               	movf	?___ftpack+2,w
  7153  095E  00B5               	movwf	?___ftadd+2
  7154  095F  0008               	return
  7155  0960                     __end_of___ftadd:	
  7156                           
  7157                           	psect	text19
  7158  1434                     __ptext19:	
  7159 ;; *************** function ___ftneg *****************
  7160 ;; Defined at:
  7161 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/ftneg.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  f1              3   16[BANK0 ] float 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;		None
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  3   16[BANK0 ] float 
  7168 ;; Registers used:
  7169 ;;		wreg
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7175 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;Total ram usage:        3 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_main
  7185 ;;		_printf
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           
  7190                           ;psect for function ___ftneg
  7191  1434                     ___ftneg:	
  7192                           
  7193                           ;incstack = 0
  7194                           ; Regs used in ___ftneg: [wreg]
  7195  1434  0020               	movlb	0	; select bank0
  7196  1435  0832               	movf	___ftneg@f1+2,w
  7197  1436  0431               	iorwf	___ftneg@f1+1,w
  7198  1437  0430               	iorwf	___ftneg@f1,w
  7199  1438  1903               	skipnz
  7200  1439  0008               	return
  7201  143A  3080               	movlw	128
  7202  143B  06B2               	xorwf	___ftneg@f1+2,f
  7203  143C  0008               	return
  7204  143D                     __end_of___ftneg:	
  7205                           
  7206                           	psect	text20
  7207  14B5                     __ptext20:	
  7208 ;; *************** function ___ftge *****************
  7209 ;; Defined at:
  7210 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/ftge.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;  ff1             3    0[COMMON] float 
  7213 ;;  ff2             3    3[COMMON] float 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;		None
  7216 ;; Return value:  Size  Location     Type
  7217 ;;		None               void
  7218 ;; Registers used:
  7219 ;;		wreg, status,2, status,0
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7225 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7227 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7228 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7229 ;;Total ram usage:        9 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; This function calls:
  7232 ;;		Nothing
  7233 ;; This function is called by:
  7234 ;;		_printf
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           
  7239                           ;psect for function ___ftge
  7240  14B5                     ___ftge:	
  7241                           
  7242                           ;incstack = 0
  7243                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7244  14B5  1FF2               	btfss	___ftge@ff1+2,7
  7245  14B6  2CCB               	goto	l2225
  7246  14B7  0970               	comf	___ftge@ff1,w
  7247  14B8  00F6               	movwf	??___ftge
  7248  14B9  0971               	comf	___ftge@ff1+1,w
  7249  14BA  00F7               	movwf	??___ftge+1
  7250  14BB  0972               	comf	___ftge@ff1+2,w
  7251  14BC  00F8               	movwf	??___ftge+2
  7252  14BD  0AF6               	incf	??___ftge,f
  7253  14BE  1903               	skipnz
  7254  14BF  0AF7               	incf	??___ftge+1,f
  7255  14C0  1903               	skipnz
  7256  14C1  0AF8               	incf	??___ftge+2,f
  7257  14C2  3000               	movlw	0
  7258  14C3  0776               	addwf	??___ftge,w
  7259  14C4  00F0               	movwf	___ftge@ff1
  7260  14C5  3000               	movlw	0
  7261  14C6  3D77               	addwfc	??___ftge+1,w
  7262  14C7  00F1               	movwf	___ftge@ff1+1
  7263  14C8  3080               	movlw	128
  7264  14C9  3D78               	addwfc	??___ftge+2,w
  7265  14CA  00F2               	movwf	___ftge@ff1+2
  7266  14CB                     l2225:	
  7267  14CB  1FF5               	btfss	___ftge@ff2+2,7
  7268  14CC  2CE1               	goto	l2229
  7269  14CD  0973               	comf	___ftge@ff2,w
  7270  14CE  00F6               	movwf	??___ftge
  7271  14CF  0974               	comf	___ftge@ff2+1,w
  7272  14D0  00F7               	movwf	??___ftge+1
  7273  14D1  0975               	comf	___ftge@ff2+2,w
  7274  14D2  00F8               	movwf	??___ftge+2
  7275  14D3  0AF6               	incf	??___ftge,f
  7276  14D4  1903               	skipnz
  7277  14D5  0AF7               	incf	??___ftge+1,f
  7278  14D6  1903               	skipnz
  7279  14D7  0AF8               	incf	??___ftge+2,f
  7280  14D8  3000               	movlw	0
  7281  14D9  0776               	addwf	??___ftge,w
  7282  14DA  00F3               	movwf	___ftge@ff2
  7283  14DB  3000               	movlw	0
  7284  14DC  3D77               	addwfc	??___ftge+1,w
  7285  14DD  00F4               	movwf	___ftge@ff2+1
  7286  14DE  3080               	movlw	128
  7287  14DF  3D78               	addwfc	??___ftge+2,w
  7288  14E0  00F5               	movwf	___ftge@ff2+2
  7289  14E1                     l2229:	
  7290  14E1  3080               	movlw	128
  7291  14E2  06F2               	xorwf	___ftge@ff1+2,f
  7292  14E3  3080               	movlw	128
  7293  14E4  06F5               	xorwf	___ftge@ff2+2,f
  7294  14E5  0875               	movf	___ftge@ff2+2,w
  7295  14E6  0272               	subwf	___ftge@ff1+2,w
  7296  14E7  1D03               	skipz
  7297  14E8  0008               	return
  7298  14E9  0874               	movf	___ftge@ff2+1,w
  7299  14EA  0271               	subwf	___ftge@ff1+1,w
  7300  14EB  1D03               	skipz
  7301  14EC  0008               	return
  7302  14ED  0873               	movf	___ftge@ff2,w
  7303  14EE  0270               	subwf	___ftge@ff1,w
  7304  14EF  0008               	return
  7305  14F0                     __end_of___ftge:	
  7306                           
  7307                           	psect	text21
  7308  147A                     __ptext21:	
  7309 ;; *************** function _pinConfig *****************
  7310 ;; Defined at:
  7311 ;;		line 171 in file "main.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;		None
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      void 
  7318 ;; Registers used:
  7319 ;;		wreg, status,2
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;Total ram usage:        0 bytes
  7330 ;; Hardware stack levels used:    1
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		_main
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           
  7339                           ;psect for function _pinConfig
  7340  147A                     _pinConfig:	
  7341                           
  7342                           ;main.c: 172: OSCCON = 0x6A;
  7343                           
  7344                           ;incstack = 0
  7345                           ; Regs used in _pinConfig: [wreg+status,2]
  7346  147A  306A               	movlw	106
  7347  147B  0021               	movlb	1	; select bank1
  7348  147C  0099               	movwf	25	;volatile
  7349                           
  7350                           ;main.c: 173: TXCKSEL = 1;
  7351  147D  0022               	movlb	2	; select bank2
  7352  147E  151D               	bsf	29,2	;volatile
  7353                           
  7354                           ;main.c: 174: RXDTSEL = 1;
  7355  147F  179D               	bsf	29,7	;volatile
  7356                           
  7357                           ;main.c: 176: TRISA = 0x10;
  7358  1480  3010               	movlw	16
  7359  1481  0021               	movlb	1	; select bank1
  7360  1482  008C               	movwf	12	;volatile
  7361                           
  7362                           ;main.c: 177: ANSELA =0x10;
  7363  1483  3010               	movlw	16
  7364  1484  0023               	movlb	3	; select bank3
  7365  1485  008C               	movwf	12	;volatile
  7366                           
  7367                           ;main.c: 178: TRISC = 0x0C;
  7368  1486  300C               	movlw	12
  7369  1487  0021               	movlb	1	; select bank1
  7370  1488  008E               	movwf	14	;volatile
  7371                           
  7372                           ;main.c: 179: ANSELC =0x0C;
  7373  1489  300C               	movlw	12
  7374  148A  0023               	movlb	3	; select bank3
  7375  148B  008E               	movwf	14	;volatile
  7376                           
  7377                           ;main.c: 180: TRISB = 0xF0;
  7378  148C  30F0               	movlw	240
  7379  148D  0021               	movlb	1	; select bank1
  7380  148E  008D               	movwf	13	;volatile
  7381                           
  7382                           ;main.c: 181: ANSELB =0xF0;
  7383  148F  30F0               	movlw	240
  7384  1490  0023               	movlb	3	; select bank3
  7385  1491  008D               	movwf	13	;volatile
  7386                           
  7387                           ;main.c: 182: INTCON = 0;
  7388  1492  018B               	clrf	11	;volatile
  7389                           
  7390                           ;main.c: 183: TSEN = 1;
  7391  1493  0022               	movlb	2	; select bank2
  7392  1494  1697               	bsf	23,5	;volatile
  7393                           
  7394                           ;main.c: 184: TSRNG = 0;
  7395  1495  1217               	bcf	23,4	;volatile
  7396  1496  0008               	return
  7397  1497                     __end_of_pinConfig:	
  7398                           
  7399                           	psect	text22
  7400  144B                     __ptext22:	
  7401 ;; *************** function ___lwtoft *****************
  7402 ;; Defined at:
  7403 ;;		line 28 in file "/opt/microchip/xc8/v1.45/sources/common/lwtoft.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  c               2    8[COMMON] unsigned int 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  3    8[COMMON] float 
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0, pclath, cstack
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7417 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;Total ram usage:        4 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    1
  7424 ;; This function calls:
  7425 ;;		___ftpack
  7426 ;; This function is called by:
  7427 ;;		_main
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           
  7432                           ;psect for function ___lwtoft
  7433  144B                     ___lwtoft:	
  7434                           
  7435                           ;incstack = 0
  7436                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7437  144B  0878               	movf	___lwtoft@c,w
  7438  144C  00F0               	movwf	___ftpack@arg
  7439  144D  0879               	movf	___lwtoft@c+1,w
  7440  144E  00F1               	movwf	___ftpack@arg+1
  7441  144F  01F2               	clrf	___ftpack@arg+2
  7442  1450  308E               	movlw	142
  7443  1451  00FB               	movwf	??___lwtoft
  7444  1452  087B               	movf	??___lwtoft,w
  7445  1453  00F3               	movwf	___ftpack@exp
  7446  1454  01F4               	clrf	___ftpack@sign
  7447  1455  3188  2006         	fcall	___ftpack
  7448  1457  0870               	movf	?___ftpack,w
  7449  1458  00F8               	movwf	?___lwtoft
  7450  1459  0871               	movf	?___ftpack+1,w
  7451  145A  00F9               	movwf	?___lwtoft+1
  7452  145B  0872               	movf	?___ftpack+2,w
  7453  145C  00FA               	movwf	?___lwtoft+2
  7454  145D  0008               	return
  7455  145E                     __end_of___lwtoft:	
  7456                           
  7457                           	psect	text23
  7458  16A3                     __ptext23:	
  7459 ;; *************** function ___ftdiv *****************
  7460 ;; Defined at:
  7461 ;;		line 56 in file "/opt/microchip/xc8/v1.45/sources/common/ftdiv.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  f2              3    0[BANK0 ] float 
  7464 ;;  f1              3    3[BANK0 ] float 
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;  f3              3   11[BANK0 ] float 
  7467 ;;  sign            1   15[BANK0 ] unsigned char 
  7468 ;;  exp             1   14[BANK0 ] unsigned char 
  7469 ;;  cntr            1   10[BANK0 ] unsigned char 
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  3    0[BANK0 ] float 
  7472 ;; Registers used:
  7473 ;;		wreg, status,2, status,0, pclath, cstack
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7479 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;Total ram usage:       16 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; Hardware stack levels required when called:    1
  7486 ;; This function calls:
  7487 ;;		___ftpack
  7488 ;; This function is called by:
  7489 ;;		_main
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           
  7494                           ;psect for function ___ftdiv
  7495  16A3                     ___ftdiv:	
  7496                           
  7497                           ;incstack = 0
  7498                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7499  16A3  0020               	movlb	0	; select bank0
  7500  16A4  0823               	movf	___ftdiv@f1,w
  7501  16A5  00A6               	movwf	??___ftdiv
  7502  16A6  0824               	movf	___ftdiv@f1+1,w
  7503  16A7  00A7               	movwf	??___ftdiv+1
  7504  16A8  0825               	movf	___ftdiv@f1+2,w
  7505  16A9  00A8               	movwf	??___ftdiv+2
  7506  16AA  1003               	clrc
  7507  16AB  0D27               	rlf	??___ftdiv+1,w
  7508  16AC  0D28               	rlf	??___ftdiv+2,w
  7509  16AD  00A9               	movwf	??___ftdiv+3
  7510  16AE  0829               	movf	??___ftdiv+3,w
  7511  16AF  00AE               	movwf	___ftdiv@exp
  7512  16B0  082E               	movf	___ftdiv@exp,w
  7513  16B1  1D03               	btfss	3,2
  7514  16B2  2EBA               	goto	l2671
  7515  16B3  3000               	movlw	0
  7516  16B4  00A0               	movwf	?___ftdiv
  7517  16B5  3000               	movlw	0
  7518  16B6  00A1               	movwf	?___ftdiv+1
  7519  16B7  3000               	movlw	0
  7520  16B8  00A2               	movwf	?___ftdiv+2
  7521  16B9  0008               	return
  7522  16BA                     l2671:	
  7523  16BA  0820               	movf	___ftdiv@f2,w
  7524  16BB  00A6               	movwf	??___ftdiv
  7525  16BC  0821               	movf	___ftdiv@f2+1,w
  7526  16BD  00A7               	movwf	??___ftdiv+1
  7527  16BE  0822               	movf	___ftdiv@f2+2,w
  7528  16BF  00A8               	movwf	??___ftdiv+2
  7529  16C0  1003               	clrc
  7530  16C1  0D27               	rlf	??___ftdiv+1,w
  7531  16C2  0D28               	rlf	??___ftdiv+2,w
  7532  16C3  00A9               	movwf	??___ftdiv+3
  7533  16C4  0829               	movf	??___ftdiv+3,w
  7534  16C5  00AF               	movwf	___ftdiv@sign
  7535  16C6  082F               	movf	___ftdiv@sign,w
  7536  16C7  1D03               	btfss	3,2
  7537  16C8  2ED0               	goto	l2677
  7538  16C9  3000               	movlw	0
  7539  16CA  00A0               	movwf	?___ftdiv
  7540  16CB  3000               	movlw	0
  7541  16CC  00A1               	movwf	?___ftdiv+1
  7542  16CD  3000               	movlw	0
  7543  16CE  00A2               	movwf	?___ftdiv+2
  7544  16CF  0008               	return
  7545  16D0                     l2677:	
  7546  16D0  3000               	movlw	0
  7547  16D1  00AB               	movwf	___ftdiv@f3
  7548  16D2  3000               	movlw	0
  7549  16D3  00AC               	movwf	___ftdiv@f3+1
  7550  16D4  3000               	movlw	0
  7551  16D5  00AD               	movwf	___ftdiv@f3+2
  7552  16D6  3089               	movlw	137
  7553  16D7  072F               	addwf	___ftdiv@sign,w
  7554  16D8  00A6               	movwf	??___ftdiv
  7555  16D9  0826               	movf	??___ftdiv,w
  7556  16DA  02AE               	subwf	___ftdiv@exp,f
  7557  16DB  0823               	movf	___ftdiv@f1,w
  7558  16DC  00A6               	movwf	??___ftdiv
  7559  16DD  0824               	movf	___ftdiv@f1+1,w
  7560  16DE  00A7               	movwf	??___ftdiv+1
  7561  16DF  0825               	movf	___ftdiv@f1+2,w
  7562  16E0  00A8               	movwf	??___ftdiv+2
  7563  16E1  3010               	movlw	16
  7564  16E2                     u4025:	
  7565  16E2  36A8               	lsrf	??___ftdiv+2,f
  7566  16E3  0CA7               	rrf	??___ftdiv+1,f
  7567  16E4  0CA6               	rrf	??___ftdiv,f
  7568  16E5  0B89               	decfsz	9,f
  7569  16E6  2EE2               	goto	u4025
  7570  16E7  0826               	movf	??___ftdiv,w
  7571  16E8  00A9               	movwf	??___ftdiv+3
  7572  16E9  0829               	movf	??___ftdiv+3,w
  7573  16EA  00AF               	movwf	___ftdiv@sign
  7574  16EB  0820               	movf	___ftdiv@f2,w
  7575  16EC  00A6               	movwf	??___ftdiv
  7576  16ED  0821               	movf	___ftdiv@f2+1,w
  7577  16EE  00A7               	movwf	??___ftdiv+1
  7578  16EF  0822               	movf	___ftdiv@f2+2,w
  7579  16F0  00A8               	movwf	??___ftdiv+2
  7580  16F1  3010               	movlw	16
  7581  16F2                     u4035:	
  7582  16F2  36A8               	lsrf	??___ftdiv+2,f
  7583  16F3  0CA7               	rrf	??___ftdiv+1,f
  7584  16F4  0CA6               	rrf	??___ftdiv,f
  7585  16F5  0B89               	decfsz	9,f
  7586  16F6  2EF2               	goto	u4035
  7587  16F7  0826               	movf	??___ftdiv,w
  7588  16F8  00A9               	movwf	??___ftdiv+3
  7589  16F9  0829               	movf	??___ftdiv+3,w
  7590  16FA  06AF               	xorwf	___ftdiv@sign,f
  7591  16FB  3080               	movlw	128
  7592  16FC  00A6               	movwf	??___ftdiv
  7593  16FD  0826               	movf	??___ftdiv,w
  7594  16FE  05AF               	andwf	___ftdiv@sign,f
  7595  16FF  17A4               	bsf	___ftdiv@f1+1,7
  7596  1700  30FF               	movlw	255
  7597  1701  05A3               	andwf	___ftdiv@f1,f
  7598  1702  30FF               	movlw	255
  7599  1703  05A4               	andwf	___ftdiv@f1+1,f
  7600  1704  3000               	movlw	0
  7601  1705  05A5               	andwf	___ftdiv@f1+2,f
  7602  1706  17A1               	bsf	___ftdiv@f2+1,7
  7603  1707  30FF               	movlw	255
  7604  1708  05A0               	andwf	___ftdiv@f2,f
  7605  1709  30FF               	movlw	255
  7606  170A  05A1               	andwf	___ftdiv@f2+1,f
  7607  170B  3000               	movlw	0
  7608  170C  05A2               	andwf	___ftdiv@f2+2,f
  7609  170D  3018               	movlw	24
  7610  170E  00A6               	movwf	??___ftdiv
  7611  170F  0826               	movf	??___ftdiv,w
  7612  1710  00AA               	movwf	___ftdiv@cntr
  7613  1711                     l2691:	
  7614  1711  3001               	movlw	1
  7615  1712                     u4045:	
  7616  1712  35AB               	lslf	___ftdiv@f3,f
  7617  1713  0DAC               	rlf	___ftdiv@f3+1,f
  7618  1714  0DAD               	rlf	___ftdiv@f3+2,f
  7619  1715  0B89               	decfsz	9,f
  7620  1716  2F12               	goto	u4045
  7621  1717  0822               	movf	___ftdiv@f2+2,w
  7622  1718  0225               	subwf	___ftdiv@f1+2,w
  7623  1719  1D03               	skipz
  7624  171A  2F21               	goto	u4055
  7625  171B  0821               	movf	___ftdiv@f2+1,w
  7626  171C  0224               	subwf	___ftdiv@f1+1,w
  7627  171D  1D03               	skipz
  7628  171E  2F21               	goto	u4055
  7629  171F  0820               	movf	___ftdiv@f2,w
  7630  1720  0223               	subwf	___ftdiv@f1,w
  7631  1721                     u4055:	
  7632  1721  1C03               	skipc
  7633  1722  2F2A               	goto	l2699
  7634  1723  0820               	movf	___ftdiv@f2,w
  7635  1724  02A3               	subwf	___ftdiv@f1,f
  7636  1725  0821               	movf	___ftdiv@f2+1,w
  7637  1726  3BA4               	subwfb	___ftdiv@f1+1,f
  7638  1727  0822               	movf	___ftdiv@f2+2,w
  7639  1728  3BA5               	subwfb	___ftdiv@f1+2,f
  7640  1729  142B               	bsf	___ftdiv@f3,0
  7641  172A                     l2699:	
  7642  172A  3001               	movlw	1
  7643  172B                     u4065:	
  7644  172B  35A3               	lslf	___ftdiv@f1,f
  7645  172C  0DA4               	rlf	___ftdiv@f1+1,f
  7646  172D  0DA5               	rlf	___ftdiv@f1+2,f
  7647  172E  0B89               	decfsz	9,f
  7648  172F  2F2B               	goto	u4065
  7649  1730  3001               	movlw	1
  7650  1731  02AA               	subwf	___ftdiv@cntr,f
  7651  1732  1D03               	btfss	3,2
  7652  1733  2F11               	goto	l2691
  7653  1734  082B               	movf	___ftdiv@f3,w
  7654  1735  00F0               	movwf	___ftpack@arg
  7655  1736  082C               	movf	___ftdiv@f3+1,w
  7656  1737  00F1               	movwf	___ftpack@arg+1
  7657  1738  082D               	movf	___ftdiv@f3+2,w
  7658  1739  00F2               	movwf	___ftpack@arg+2
  7659  173A  082E               	movf	___ftdiv@exp,w
  7660  173B  00A6               	movwf	??___ftdiv
  7661  173C  0826               	movf	??___ftdiv,w
  7662  173D  00F3               	movwf	___ftpack@exp
  7663  173E  082F               	movf	___ftdiv@sign,w
  7664  173F  00A7               	movwf	??___ftdiv+1
  7665  1740  0827               	movf	??___ftdiv+1,w
  7666  1741  00F4               	movwf	___ftpack@sign
  7667  1742  3188  2006         	fcall	___ftpack
  7668  1744  0870               	movf	?___ftpack,w
  7669  1745  0020               	movlb	0	; select bank0
  7670  1746  00A0               	movwf	?___ftdiv
  7671  1747  0871               	movf	?___ftpack+1,w
  7672  1748  00A1               	movwf	?___ftdiv+1
  7673  1749  0872               	movf	?___ftpack+2,w
  7674  174A  00A2               	movwf	?___ftdiv+2
  7675  174B  0008               	return
  7676  174C                     __end_of___ftdiv:	
  7677                           
  7678                           	psect	text24
  7679  0806                     __ptext24:	
  7680 ;; *************** function ___ftpack *****************
  7681 ;; Defined at:
  7682 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/float.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;  arg             3    0[COMMON] unsigned um
  7685 ;;  exp             1    3[COMMON] unsigned char 
  7686 ;;  sign            1    4[COMMON] unsigned char 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;		None
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  3    0[COMMON] float 
  7691 ;; Registers used:
  7692 ;;		wreg, status,2, status,0
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7698 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7700 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7701 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7702 ;;Total ram usage:        8 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; This function calls:
  7705 ;;		Nothing
  7706 ;; This function is called by:
  7707 ;;		___ftadd
  7708 ;;		___ftdiv
  7709 ;;		___ftmul
  7710 ;;		___lltoft
  7711 ;;		___lwtoft
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           
  7716                           ;psect for function ___ftpack
  7717  0806                     ___ftpack:	
  7718                           
  7719                           ;incstack = 0
  7720                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7721  0806  0873               	movf	___ftpack@exp,w
  7722  0807  1903               	btfsc	3,2
  7723  0808  280E               	goto	l1793
  7724  0809  0872               	movf	___ftpack@arg+2,w
  7725  080A  0471               	iorwf	___ftpack@arg+1,w
  7726  080B  0470               	iorwf	___ftpack@arg,w
  7727  080C  1D03               	skipz
  7728  080D  281F               	goto	l1799
  7729  080E                     l1793:	
  7730  080E  3000               	movlw	0
  7731  080F  00F0               	movwf	?___ftpack
  7732  0810  3000               	movlw	0
  7733  0811  00F1               	movwf	?___ftpack+1
  7734  0812  3000               	movlw	0
  7735  0813  00F2               	movwf	?___ftpack+2
  7736  0814  0008               	return
  7737  0815                     l1797:	
  7738  0815  3001               	movlw	1
  7739  0816  00F5               	movwf	??___ftpack
  7740  0817  0875               	movf	??___ftpack,w
  7741  0818  07F3               	addwf	___ftpack@exp,f
  7742  0819  3001               	movlw	1
  7743  081A                     u2105:	
  7744  081A  36F2               	lsrf	___ftpack@arg+2,f
  7745  081B  0CF1               	rrf	___ftpack@arg+1,f
  7746  081C  0CF0               	rrf	___ftpack@arg,f
  7747  081D  0B89               	decfsz	9,f
  7748  081E  281A               	goto	u2105
  7749  081F                     l1799:	
  7750  081F  30FE               	movlw	254
  7751  0820  0572               	andwf	___ftpack@arg+2,w
  7752  0821  1903               	btfsc	3,2
  7753  0822  2838               	goto	l542
  7754  0823  2815               	goto	l1797
  7755  0824                     l1801:	
  7756  0824  3001               	movlw	1
  7757  0825  00F5               	movwf	??___ftpack
  7758  0826  0875               	movf	??___ftpack,w
  7759  0827  07F3               	addwf	___ftpack@exp,f
  7760  0828  3001               	movlw	1
  7761  0829  07F0               	addwf	___ftpack@arg,f
  7762  082A  3000               	movlw	0
  7763  082B  1803               	skipnc
  7764  082C  3001               	movlw	1
  7765  082D  07F1               	addwf	___ftpack@arg+1,f
  7766  082E  3000               	movlw	0
  7767  082F  1803               	skipnc
  7768  0830  3001               	movlw	1
  7769  0831  07F2               	addwf	___ftpack@arg+2,f
  7770  0832  3001               	movlw	1
  7771  0833                     u2125:	
  7772  0833  36F2               	lsrf	___ftpack@arg+2,f
  7773  0834  0CF1               	rrf	___ftpack@arg+1,f
  7774  0835  0CF0               	rrf	___ftpack@arg,f
  7775  0836  0B89               	decfsz	9,f
  7776  0837  2833               	goto	u2125
  7777  0838                     l542:	
  7778  0838  30FF               	movlw	255
  7779  0839  0572               	andwf	___ftpack@arg+2,w
  7780  083A  1903               	btfsc	3,2
  7781  083B  2845               	goto	l1809
  7782  083C  2824               	goto	l1801
  7783  083D                     l1807:	
  7784  083D  3001               	movlw	1
  7785  083E  02F3               	subwf	___ftpack@exp,f
  7786  083F  3001               	movlw	1
  7787  0840                     u2145:	
  7788  0840  35F0               	lslf	___ftpack@arg,f
  7789  0841  0DF1               	rlf	___ftpack@arg+1,f
  7790  0842  0DF2               	rlf	___ftpack@arg+2,f
  7791  0843  0B89               	decfsz	9,f
  7792  0844  2840               	goto	u2145
  7793  0845                     l1809:	
  7794  0845  1BF1               	btfsc	___ftpack@arg+1,7
  7795  0846  284B               	goto	l549
  7796  0847  3002               	movlw	2
  7797  0848  0273               	subwf	___ftpack@exp,w
  7798  0849  1803               	skipnc
  7799  084A  283D               	goto	l1807
  7800  084B                     l549:	
  7801  084B  1873               	btfsc	___ftpack@exp,0
  7802  084C  2853               	goto	l550
  7803  084D  30FF               	movlw	255
  7804  084E  05F0               	andwf	___ftpack@arg,f
  7805  084F  307F               	movlw	127
  7806  0850  05F1               	andwf	___ftpack@arg+1,f
  7807  0851  30FF               	movlw	255
  7808  0852  05F2               	andwf	___ftpack@arg+2,f
  7809  0853                     l550:	
  7810  0853  1003               	clrc
  7811  0854  0CF3               	rrf	___ftpack@exp,f
  7812  0855  0873               	movf	___ftpack@exp,w
  7813  0856  00F5               	movwf	??___ftpack
  7814  0857  01F6               	clrf	??___ftpack+1
  7815  0858  01F7               	clrf	??___ftpack+2
  7816  0859  3010               	movlw	16
  7817  085A                     u2185:	
  7818  085A  35F5               	lslf	??___ftpack,f
  7819  085B  0DF6               	rlf	??___ftpack+1,f
  7820  085C  0DF7               	rlf	??___ftpack+2,f
  7821  085D  0B89               	decfsz	9,f
  7822  085E  285A               	goto	u2185
  7823  085F  0875               	movf	??___ftpack,w
  7824  0860  04F0               	iorwf	___ftpack@arg,f
  7825  0861  0876               	movf	??___ftpack+1,w
  7826  0862  04F1               	iorwf	___ftpack@arg+1,f
  7827  0863  0877               	movf	??___ftpack+2,w
  7828  0864  04F2               	iorwf	___ftpack@arg+2,f
  7829  0865  0874               	movf	___ftpack@sign,w
  7830  0866  1903               	btfsc	3,2
  7831  0867  0008               	return
  7832  0868  17F2               	bsf	___ftpack@arg+2,7
  7833  0869  0008               	return
  7834  086A                     __end_of___ftpack:	
  7835  007E                     btemp	set	126	;btemp
  7836  007E                     wtemp0	set	126


Data Sizes:
    Strings     160
    Constant    118
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     42      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 92
		 -> STR_2(CODE[92]), STR_1(CODE[68]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 


Critical Paths under _main in COMMON

    _printf->___lldiv
    _printf->___lltoft
    _printf->___wmul
    _printf->__div_to_l_
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    ___ftadd->___wmul
    ___ftneg->___lwtoft
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftneg->___ftdiv

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   51557
                                             77 BANK0      2     2      0
                                             36 BANK1      6     6      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lwtoft
                          _pinConfig
                             _printf
                        _setup_comms
 ---------------------------------------------------------------------------------
 (1) _setup_comms                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              47    35     12   39993
                                             71 BANK0      6     6      0
                                              0 BANK1     36    24     12
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    9139
                                             48 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              14    11      3    8941
                                             48 BANK0     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2318
                                             12 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3768
                                             32 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1868
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     583
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             57 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3395
                                             32 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3222
                                             19 BANK0     13     7      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     204
                                             16 BANK0      3     0      3
                            ___ftdiv (ARG)
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     560
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (1) _pinConfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1874
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2450
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftadd
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftadd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftneg
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _pinConfig
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftsub
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _setup_comms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     2A      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      98      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      98      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 10 17:42:33 2023

            __CFG_CP$OFF 0000                       l96 0BFC                       l99 0C0F  
           ___awdiv@sign 0021      ___wmul@multiplicand 0026             ___ftadd@exp1 003F  
           ___ftadd@exp2 003E              __CFG_LVP$ON 0000             ___ftadd@sign 003D  
                    l110 0D8B                      l102 0C22                      l105 0D00  
                    l123 142D                      l107 0D11                      l206 02F8  
                    l183 0122                      l280 07F5                      l530 0A71  
                    l258 070E                      l364 1467                      l550 0853  
                    l542 0838                      l198 01C2                      l609 00E8  
                    l650 1689                      l549 084B                      l573 0909  
                    l599 006F                      _RA2 0062                      _RA5 0065  
                    _RC6 0076             __CFG_CPD$OFF 0000             ___awmod@sign 0076  
           __CFG_BORV$LO 0000                      wreg 0009             ___ftdiv@cntr 002A  
           ___ftdiv@sign 002F                     l2011 17B4                     l2023 17D0  
                   l2015 17BC                     l2111 1449                     l2121 0057  
                   l2027 17D8                     l2051 0B3D                     l2215 0A68  
                   l2207 0A4D                     l2143 00AA                     l2135 0090  
                   l2225 14CB                     l2305 1588                     l2217 0A74  
                   l2209 0A5B                     l2161 00DF                     l2153 00C4  
                   l2081 0EC4                     l2315 15B6                     l2307 1596  
                   l2331 1507                     l2163 00EB                     l2155 00D2  
                   l2059 0BB5                     l2075 0E65                     l2403 0176  
                   l2229 14E1                     l2253 149F                     l2173 097E  
                   l2093 0F84                     l2085 0EE1                     l2263 1635  
                   l2319 15C1                     l2335 151F                     l2503 0400  
                   l2431 01F9                     l2423 01C4                     l2415 0186  
                   l1801 0824                     l2281 1665                     l2329 14F9  
                   l2513 0460                     l2441 0238                     l2425 01E5  
                   l2417 01BD                     l2291 168C                     l2283 1673  
                   l2339 152A                     l2347 001A                     l2179 099B  
                   l2099 0FE3                     l2603 069D                     l2349 002A  
                   l2197 0A2E                     l2189 09E6                     l1901 1556  
                   l2621 0725                     l2613 06F2                     l2533 04A7  
                   l2517 0472                     l2509 0437                     l1807 083D  
                   l2295 169A                     l1823 1460                     l2551 0534  
                   l2527 0486                     l2471 032D                     l2391 0130  
                   l2383 011C                     l1809 0845                     l2289 1680  
                   l1913 1573                     l1905 1562                     l2641 077C  
                   l2633 0766                     l2609 06D4                     l2529 049E  
                   l2545 04C7                     l2465 02E1                     l2457 0294  
                   l1923 0892                     l1843 15D5                     l2635 0769  
                   l2627 073E                     l2563 056C                     l2547 052B  
                   l2483 0378                     l2395 013D                     l1933 08A8  
                   l1861 15F4                     l1909 156B                     l2653 079C  
                   l2661 07AD                     l2629 0741                     l2557 0551  
                   l2493 03AC                     l2581 065D                     l2389 0127  
                   l2717 0BEE                     l2671 16BA                     l1951 08D5  
                   l1927 0899                     l1871 160F                     l2647 078B  
                   l2591 0689                     l2575 064F                     l2479 0364  
                   l2663 00FA                     l1793 080E                     l1953 08DF  
                   l1945 08C2                     l1849 15E0                     l2649 078F  
                   l2497 03FA                     l2691 1711                     l1963 08FB  
                   l1955 08E4                     l1875 1617                     l1867 1606  
                   l1859 15E8                     l1891 1544                     l2579 0658  
                   l2747 0D03                     l1797 0815                     l2677 16D0  
                   l1973 092D                     l1965 0905                     l1957 08E8  
                   l2597 0697                     l1799 081F                     l1983 0948  
                   l1887 153D                     l1969 091B                     l1993 1763  
                   l2699 172A                     l1899 154A                     l1999 1779  
                   _ADGO 04E9                     STR_1 1883                     STR_2 1827  
                   _BRGH 0CF2                     u2105 081A                     u2125 0833  
                   u2215 1468                     u2145 0840                     u2305 15FF  
                   u2225 146D                     u3115 0A69                     u3035 09E7  
                   u2315 1607                     u3045 0A11                     u2405 1563  
                   u2185 085A                     u4025 16E2                     u3225 1666  
                   u4035 16F2                     u3315 1597                     u2275 15EB  
                   u4115 0CFA                     u4045 1712                     u2525 08C3  
                   u3325 15AB                     u3085 0A4E                     u4055 1721  
                   u2615 08FC                     u3255 1681                     u3335 15B7  
                   u3415 001F                     u2295 15F5                     u2375 154D  
                   u4207 0DB2                     u4065 172B                     u2555 08D6  
                   u3195 163C                     u2395 155C                     u2715 17BD  
                   u4147 0BF5             printf@tmpval 00B0                     u3365 14FC  
                   u2725 17C3                     u3605 0362                     u3525 024D  
                   u4157 0C08                     u3295 158B                     u4167 0C1B  
                   u2585 08E9                     u3385 1515                     u2905 0091  
                   u3705 04B3                     u4177 0CEC                     u3395 1520  
                   u2915 00A1                     u2755 17D9                     u3635 042B  
                   u4187 0D0A                     u2925 00AB                     u2765 17DF  
                   u2685 1785                     u3565 0304                     u4197 0D84  
                   u2695 1795                     u3735 053F                     u3575 0339  
                   u3905 0755                     u3825 06C8                     u3745 054D  
                   _RCIF 008D                     u2965 00C5                     u3845 06E8  
                   u3855 0706                     u3695 0492                     u2995 00E0  
                   u3895 0736                     _SPEN 0CEF                     _TSEN 08BD  
                   _TXEN 0CF5                     _TXIF 008C                     _SYNC 0CF4  
           __CFG_WRT$OFF 0000                     _Temp 00D7                     _Pval 00D9  
                   _main 0BE2             ___ftpack@arg 0070             ___ftpack@exp 0073  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0002            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000             ___ftmul@cntr 004E             ___ftmul@sign 004F  
           ___fttol@exp1 0066             ___fttol@lval 0062                    ?_main 0070  
        __end_of___awdiv 161C          __end_of___ftadd 0960            __CFG_WDTE$OFF 0000  
        __end_of___awmod 1578          __end_of___ftdiv 174C          __end_of___ftneg 143D  
        __end_of___lldiv 15CA          __end_of___ftmul 1800          ___awdiv@divisor 0077  
        __end_of___llmod 1533          __end_of___ftsub 14B5          __end_of___fttol 16A3  
        ___awdiv@counter 0020                    _RCREG 0199                    _RCSTA 019D  
                  _SPBRG 019B                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _TSRNG 08BC                    _FVval 00D5  
                  _TXREG 019A                    _TXSTA 019E                    _Ctemp 00D0  
           ___lltoft@exp 007D           __CFG_FCMEN$OFF 0000                    _Photo 00D3  
        __end_of_dpowers 18EF                    _scale 0DBC          __end_of_isdigit 144B  
          ___ftpack@sign 0074                    _putch 142C           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 07F6  
           __end_of_main 0DBC                   ??_main 006D            ___fttol@sign1 0061  
         __CFG_PLLEN$OFF 0000     __size_of__tdiv_to_l_ 00B6                   _ADCON0 009D  
                 _ADCON1 009E         ___llmod@dividend 0024                   ?_scale 0050  
                 _ADRESH 009C                   _ADRESL 009B         ___awdiv@dividend 0079  
                 _ANSELA 018C                   ?_putch 0070                   _ANSELB 018D  
                 _ANSELC 018E         __end_of___ftpack 086A         __end_of___lltoft 003E  
                 _INTCON 000B                   _FVRCON 0117         __end_of___lwtoft 145E  
                 _OSCCON 0099                   _TRISC4 0474                   _TRISC5 0475  
         __CFG_PWRTE$OFF 0000         __end_of__powers_ 1916                   ___ftge 14B5  
                 ___wmul 145E                ??___awdiv 007B                ??___ftadd 0039  
         __CFG_STVREN$ON 0000                ??___awmod 0074                ??___ftdiv 0026  
              ??___ftneg 007C                ??___lldiv 0078                ??___ftmul 0046  
              ??___llmod 0028                ??___ftsub 007E                ??___fttol 005D  
                 _fround 0A7D         ___awdiv@quotient 0022          ___awmod@divisor 0070  
        ___awmod@counter 0075                   _printf 00F4    ___ftmul@f3_as_product 004B  
              ??_isdigit 0070             ?_setup_comms 0070  __end_of__initialization 07FD  
             ___ftadd@f1 0033               ___ftadd@f2 0036               ___ftge@ff1 0070  
             ___ftge@ff2 0073               ___ftdiv@f1 0023               ___ftdiv@f2 0020  
             ___ftdiv@f3 002B               ___ftneg@f1 0030               ___ftmul@f1 0040  
             ___ftmul@f2 0043               ___ftsub@f1 0043               ___ftsub@f2 0040  
             ___fttol@f1 0059           __pcstackCOMMON 0070               ___lltoft@c 0078  
          __end_of_scale 1000            __end_of_putch 1434               ___lwtoft@c 0078  
             __div_to_l_ 0960          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 0053          __div_to_l_@quot 0020                  ??_putch 0070  
             __pbssBANK1 00CA            __div_to_l_@f1 0070            __div_to_l_@f2 0073  
     __size_of_pinConfig 001D               __pmaintext 0BE2                  ?___ftge 0070  
                ?___wmul 0024                  ?_fround 0050                ?___ftpack 0070  
                ?_printf 00A0                ?___lltoft 0078                ?___lwtoft 0078  
                _RXDTSEL 08EF                  _TXCKSEL 08EA        __end_of__npowers_ 1827  
        __size_of___ftge 003B                  ___awdiv 15CA                  ___ftadd 086A  
                ___awmod 1533                  _Voltage 00CA                  ___ftdiv 16A3  
                ___ftneg 1434                  ___lldiv 1578          __size_of___wmul 001C  
                ___ftmul 174C                  ___llmod 14F0                  ___ftsub 1497  
                ___fttol 161C               _fround$564 005A               _fround$565 0057  
            _Temperature 00CD               ??___ftpack 0075          __size_of_fround 0165  
             ??___lltoft 007C                  __ptext1 0005                  __ptext2 00F4  
                __ptext3 0DBC                  __ptext4 142C                  __ptext5 143D  
                __ptext6 0A7D                  __ptext7 145E                  __ptext8 174C  
                __ptext9 1533          __size_of_printf 0702               ??___lwtoft 007B  
            ?__div_to_l_ 0070                  _dpowers 18C7                  _isdigit 143D  
       ___awmod@dividend 0072        __end_of_pinConfig 1497                  clrloop0 0801  
   end_of_initialization 07FD     __size_of_setup_comms 0011          ___lldiv@divisor 0070  
        ___lldiv@counter 007D                  printf@c 00C3                  printf@f 00A0  
         __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0073               _printf$567 00AC  
          ??__tdiv_to_l_ 0076         __CFG_FOSC$INTOSC 0000              ___ftdiv@exp 002E  
            printf@width 00BC      __size_of__div_to_l_ 011D              ___ftmul@exp 004A  
         __end_of___ftge 14F0           __end_of___wmul 147A           __end_of_fround 0BE2  
         __end_of_printf 07F6      start_initialization 07F6      __end_of__tdiv_to_l_ 00F4  
        ___llmod@divisor 0020          ___llmod@counter 0029                 ??___ftge 0076  
               ??___wmul 007C                 ??_fround 0053                 ??_printf 0067  
             fround@prec 005D        __size_of___ftpack 0064        __size_of___lltoft 0028  
              ___latbits 0002        __size_of___lwtoft 0013            __pcstackBANK0 0020  
          __pcstackBANK1 00A0                 ?___awdiv 0077                 ?___ftadd 0033  
               ?___awmod 0070                 ?___ftdiv 0020                 ?___ftneg 0030  
               ?___lldiv 0070                 ?___ftmul 0040                 ?___llmod 0020  
               ?___ftsub 0040                __npowers_ 1800                 ?___fttol 0059  
            __tdiv_to_l_ 003E             ??__div_to_l_ 0076                 ?_isdigit 0070  
              _scale$566 0055           __size_of_scale 0244                _pinConfig 147A  
         __size_of_putch 0008           ___wmul@product 007C                clear_ram0 0800  
     __end_of__div_to_l_ 0A7D        ___wmul@multiplier 0024               printf@flag 00BA  
             printf@fval 00BE               printf@prec 00C1               ?_pinConfig 0070  
          ??_setup_comms 0070         __size_of___awdiv 0052         __size_of___ftadd 00F6  
       __size_of___awmod 0045         __size_of___ftdiv 00A9         __size_of___ftneg 0009  
       __size_of___lldiv 0052         __size_of___ftmul 00B4         __size_of___llmod 0043  
       __size_of___ftsub 001E         __size_of___fttol 0087                 ___ftpack 0806  
               ___lltoft 0016              _isdigit$348 0070                 ___lwtoft 144B  
       __size_of_isdigit 000E                 _main$562 00C4                 _main$563 00C7  
               __ptext10 15CA                 __ptext11 003E                 __ptext20 14B5  
               __ptext12 0960                 __ptext21 147A                 __ptext13 0016  
               __ptext22 144B                 __ptext14 14F0                 __ptext23 16A3  
               __ptext15 1578                 __ptext24 0806                 __ptext16 161C  
               __ptext17 1497                 __ptext18 086A                 __ptext19 1434  
               __powers_ 18EF            __size_of_main 01DA      __end_of_setup_comms 0016  
              printf@exp 00B8                printf@val 00B4                putch@byte 0070  
               isdigit@c 0071                 scale@scl 0058              ??_pinConfig 0070  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024         __tdiv_to_l_@quot 0020  
       ___lldiv@dividend 0074        __CFG_CLKOUTEN$OFF 0000                 printf@ap 00AF  
           ?__tdiv_to_l_ 0070            __pstringtext1 18C7            __pstringtext2 18EF  
          __pstringtext3 1800            __pstringtext4 1883            __pstringtext5 0000  
       ___lldiv@quotient 0079              _setup_comms 0005  
