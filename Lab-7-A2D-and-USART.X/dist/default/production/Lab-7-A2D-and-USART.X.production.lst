

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 31 16:39:37 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1829 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  011A                     	;# 
   137  011B                     	;# 
   138  011D                     	;# 
   139  011E                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  018E                     	;# 
   143  0191                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0194                     	;# 
   150  0195                     	;# 
   151  0196                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019F                     	;# 
   160  020C                     	;# 
   161  020D                     	;# 
   162  020E                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  0219                     	;# 
   179  021A                     	;# 
   180  021B                     	;# 
   181  021C                     	;# 
   182  021D                     	;# 
   183  021E                     	;# 
   184  021F                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0294                     	;# 
   190  0295                     	;# 
   191  0295                     	;# 
   192  0296                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  029B                     	;# 
   198  029C                     	;# 
   199  029D                     	;# 
   200  029E                     	;# 
   201  0311                     	;# 
   202  0311                     	;# 
   203  0312                     	;# 
   204  0313                     	;# 
   205  0318                     	;# 
   206  0318                     	;# 
   207  0319                     	;# 
   208  031A                     	;# 
   209  038C                     	;# 
   210  038D                     	;# 
   211  038E                     	;# 
   212  0391                     	;# 
   213  0392                     	;# 
   214  0393                     	;# 
   215  0394                     	;# 
   216  0395                     	;# 
   217  0396                     	;# 
   218  039A                     	;# 
   219  039C                     	;# 
   220  039D                     	;# 
   221  039E                     	;# 
   222  039F                     	;# 
   223  0415                     	;# 
   224  0416                     	;# 
   225  0417                     	;# 
   226  041C                     	;# 
   227  041D                     	;# 
   228  041E                     	;# 
   229  0FE4                     	;# 
   230  0FE5                     	;# 
   231  0FE6                     	;# 
   232  0FE7                     	;# 
   233  0FE8                     	;# 
   234  0FE9                     	;# 
   235  0FEA                     	;# 
   236  0FEB                     	;# 
   237  0FED                     	;# 
   238  0FEE                     	;# 
   239  0FEF                     	;# 
   240                           
   241                           	psect	stringtext1
   242  18C6                     __pstringtext1:	
   243  18C6                     _dpowers:	
   244  18C6  3401               	retlw	1
   245  18C7  3400               	retlw	0
   246  18C8  3400               	retlw	0
   247  18C9  3400               	retlw	0
   248  18CA  340A               	retlw	10
   249  18CB  3400               	retlw	0
   250  18CC  3400               	retlw	0
   251  18CD  3400               	retlw	0
   252  18CE  3464               	retlw	100
   253  18CF  3400               	retlw	0
   254  18D0  3400               	retlw	0
   255  18D1  3400               	retlw	0
   256  18D2  34E8               	retlw	232
   257  18D3  3403               	retlw	3
   258  18D4  3400               	retlw	0
   259  18D5  3400               	retlw	0
   260  18D6  3410               	retlw	16
   261  18D7  3427               	retlw	39
   262  18D8  3400               	retlw	0
   263  18D9  3400               	retlw	0
   264  18DA  34A0               	retlw	160
   265  18DB  3486               	retlw	134
   266  18DC  3401               	retlw	1
   267  18DD  3400               	retlw	0
   268  18DE  3440               	retlw	64
   269  18DF  3442               	retlw	66
   270  18E0  340F               	retlw	15
   271  18E1  3400               	retlw	0
   272  18E2  3480               	retlw	128
   273  18E3  3496               	retlw	150
   274  18E4  3498               	retlw	152
   275  18E5  3400               	retlw	0
   276  18E6  3400               	retlw	0
   277  18E7  34E1               	retlw	225
   278  18E8  34F5               	retlw	245
   279  18E9  3405               	retlw	5
   280  18EA  3400               	retlw	0
   281  18EB  34CA               	retlw	202
   282  18EC  349A               	retlw	154
   283  18ED  343B               	retlw	59
   284  18EE                     __end_of_dpowers:	
   285                           
   286                           	psect	stringtext2
   287  18EE                     __pstringtext2:	
   288  18EE                     __powers_:	
   289  18EE  3400               	retlw	0
   290  18EF  3480               	retlw	128
   291  18F0  343F               	retlw	63
   292  18F1  3400               	retlw	0
   293  18F2  3420               	retlw	32
   294  18F3  3441               	retlw	65
   295  18F4  3400               	retlw	0
   296  18F5  34C8               	retlw	200
   297  18F6  3442               	retlw	66
   298  18F7  3400               	retlw	0
   299  18F8  347A               	retlw	122
   300  18F9  3444               	retlw	68
   301  18FA  3440               	retlw	64
   302  18FB  341C               	retlw	28
   303  18FC  3446               	retlw	70
   304  18FD  3450               	retlw	80
   305  18FE  34C3               	retlw	195
   306  18FF  3447               	retlw	71
   307  1900  3424               	retlw	36
   308  1901  3474               	retlw	116
   309  1902  3449               	retlw	73
   310  1903  3497               	retlw	151
   311  1904  3418               	retlw	24
   312  1905  344B               	retlw	75
   313  1906  34BC               	retlw	188
   314  1907  34BE               	retlw	190
   315  1908  344C               	retlw	76
   316  1909  346B               	retlw	107
   317  190A  346E               	retlw	110
   318  190B  344E               	retlw	78
   319  190C  3403               	retlw	3
   320  190D  3415               	retlw	21
   321  190E  3450               	retlw	80
   322  190F  3479               	retlw	121
   323  1910  34AD               	retlw	173
   324  1911  3460               	retlw	96
   325  1912  34F3               	retlw	243
   326  1913  3449               	retlw	73
   327  1914  3471               	retlw	113
   328  1915                     __end_of__powers_:	
   329                           
   330                           	psect	stringtext3
   331  1800                     __pstringtext3:	
   332  1800                     __npowers_:	
   333  1800  3400               	retlw	0
   334  1801  3480               	retlw	128
   335  1802  343F               	retlw	63
   336  1803  34CD               	retlw	205
   337  1804  34CC               	retlw	204
   338  1805  343D               	retlw	61
   339  1806  34D7               	retlw	215
   340  1807  3423               	retlw	35
   341  1808  343C               	retlw	60
   342  1809  3412               	retlw	18
   343  180A  3483               	retlw	131
   344  180B  343A               	retlw	58
   345  180C  34B7               	retlw	183
   346  180D  34D1               	retlw	209
   347  180E  3438               	retlw	56
   348  180F  34C6               	retlw	198
   349  1810  3427               	retlw	39
   350  1811  3437               	retlw	55
   351  1812  3438               	retlw	56
   352  1813  3486               	retlw	134
   353  1814  3435               	retlw	53
   354  1815  34C0               	retlw	192
   355  1816  34D6               	retlw	214
   356  1817  3433               	retlw	51
   357  1818  34CC               	retlw	204
   358  1819  342B               	retlw	43
   359  181A  3432               	retlw	50
   360  181B  3470               	retlw	112
   361  181C  3489               	retlw	137
   362  181D  3430               	retlw	48
   363  181E  34E7               	retlw	231
   364  181F  34DB               	retlw	219
   365  1820  342E               	retlw	46
   366  1821  34E5               	retlw	229
   367  1822  343C               	retlw	60
   368  1823  341E               	retlw	30
   369  1824  3442               	retlw	66
   370  1825  34A2               	retlw	162
   371  1826  340D               	retlw	13
   372  1827                     __end_of__npowers_:	
   373  000B                     _INTCON	set	11
   374  008D                     _RCIF	set	141
   375  008C                     _TXIF	set	140
   376  0062                     _RA2	set	98
   377  0076                     _RC6	set	118
   378  0065                     _RA5	set	101
   379  008D                     _TRISB	set	141
   380  008E                     _TRISC	set	142
   381  008C                     _TRISA	set	140
   382  0099                     _OSCCON	set	153
   383  009B                     _ADRESL	set	155
   384  009C                     _ADRESH	set	156
   385  009D                     _ADCON0	set	157
   386  009E                     _ADCON1	set	158
   387  0474                     _TRISC4	set	1140
   388  0475                     _TRISC5	set	1141
   389  04E9                     _ADGO	set	1257
   390  0117                     _FVRCON	set	279
   391  08BC                     _TSRNG	set	2236
   392  08BD                     _TSEN	set	2237
   393  08EF                     _RXDTSEL	set	2287
   394  08EA                     _TXCKSEL	set	2282
   395  019B                     _SPBRG	set	411
   396  018D                     _ANSELB	set	397
   397  018E                     _ANSELC	set	398
   398  018C                     _ANSELA	set	396
   399  0199                     _RCREG	set	409
   400  019A                     _TXREG	set	410
   401  019E                     _TXSTA	set	414
   402  019D                     _RCSTA	set	413
   403  0CF2                     _BRGH	set	3314
   404  0CEF                     _SPEN	set	3311
   405  0CF4                     _SYNC	set	3316
   406  0CF5                     _TXEN	set	3317
   407  1827                     STR_2:	
   408  1827  3445               	retlw	69	;'E'
   409  1828  3478               	retlw	120	;'x'
   410  1829  3474               	retlw	116	;'t'
   411  182A  3465               	retlw	101	;'e'
   412  182B  3472               	retlw	114	;'r'
   413  182C  346E               	retlw	110	;'n'
   414  182D  3461               	retlw	97	;'a'
   415  182E  346C               	retlw	108	;'l'
   416  182F  3420               	retlw	32	;' '
   417  1830  3452               	retlw	82	;'R'
   418  1831  3461               	retlw	97	;'a'
   419  1832  3477               	retlw	119	;'w'
   420  1833  3420               	retlw	32	;' '
   421  1834  3454               	retlw	84	;'T'
   422  1835  3465               	retlw	101	;'e'
   423  1836  346D               	retlw	109	;'m'
   424  1837  3470               	retlw	112	;'p'
   425  1838  3420               	retlw	32	;' '
   426  1839  3476               	retlw	118	;'v'
   427  183A  3461               	retlw	97	;'a'
   428  183B  346C               	retlw	108	;'l'
   429  183C  3475               	retlw	117	;'u'
   430  183D  3465               	retlw	101	;'e'
   431  183E  3420               	retlw	32	;' '
   432  183F  3469               	retlw	105	;'i'
   433  1840  3473               	retlw	115	;'s'
   434  1841  3420               	retlw	32	;' '
   435  1842  3425               	retlw	37	;'%'
   436  1843  3430               	retlw	48	;'0'
   437  1844  342E               	retlw	46	;'.'
   438  1845  3432               	retlw	50	;'2'
   439  1846  3466               	retlw	102	;'f'
   440  1847  3420               	retlw	32	;' '
   441  1848  3452               	retlw	82	;'R'
   442  1849  3441               	retlw	65	;'A'
   443  184A  3457               	retlw	87	;'W'
   444  184B  3420               	retlw	32	;' '
   445  184C  347C               	retlw	124	;'|'
   446  184D  3420               	retlw	32	;' '
   447  184E  3450               	retlw	80	;'P'
   448  184F  346F               	retlw	111	;'o'
   449  1850  3474               	retlw	116	;'t'
   450  1851  3420               	retlw	32	;' '
   451  1852  3476               	retlw	118	;'v'
   452  1853  3461               	retlw	97	;'a'
   453  1854  346C               	retlw	108	;'l'
   454  1855  3475               	retlw	117	;'u'
   455  1856  3465               	retlw	101	;'e'
   456  1857  3420               	retlw	32	;' '
   457  1858  3469               	retlw	105	;'i'
   458  1859  3473               	retlw	115	;'s'
   459  185A  3420               	retlw	32	;' '
   460  185B  3425               	retlw	37	;'%'
   461  185C  3464               	retlw	100	;'d'
   462  185D  3420               	retlw	32	;' '
   463  185E  347C               	retlw	124	;'|'
   464  185F  3420               	retlw	32	;' '
   465  1860  3456               	retlw	86	;'V'
   466  1861  346F               	retlw	111	;'o'
   467  1862  346C               	retlw	108	;'l'
   468  1863  3474               	retlw	116	;'t'
   469  1864  3461               	retlw	97	;'a'
   470  1865  3467               	retlw	103	;'g'
   471  1866  3465               	retlw	101	;'e'
   472  1867  3420               	retlw	32	;' '
   473  1868  3469               	retlw	105	;'i'
   474  1869  3473               	retlw	115	;'s'
   475  186A  3420               	retlw	32	;' '
   476  186B  3425               	retlw	37	;'%'
   477  186C  3464               	retlw	100	;'d'
   478  186D  3420               	retlw	32	;' '
   479  186E  347C               	retlw	124	;'|'
   480  186F  3420               	retlw	32	;' '
   481  1870  3450               	retlw	80	;'P'
   482  1871  3468               	retlw	104	;'h'
   483  1872  346F               	retlw	111	;'o'
   484  1873  3474               	retlw	116	;'t'
   485  1874  346F               	retlw	111	;'o'
   486  1875  3420               	retlw	32	;' '
   487  1876  3456               	retlw	86	;'V'
   488  1877  3461               	retlw	97	;'a'
   489  1878  346C               	retlw	108	;'l'
   490  1879  3475               	retlw	117	;'u'
   491  187A  3465               	retlw	101	;'e'
   492  187B  3420               	retlw	32	;' '
   493  187C  3425               	retlw	37	;'%'
   494  187D  3464               	retlw	100	;'d'
   495  187E  3420               	retlw	32	;' '
   496  187F  340A               	retlw	10
   497  1880  340D               	retlw	13
   498  1881  3400               	retlw	0
   499                           
   500                           	psect	stringtext4
   501  1882                     __pstringtext4:	
   502  1882                     STR_1:	
   503  1882  3452               	retlw	82	;'R'
   504  1883  3461               	retlw	97	;'a'
   505  1884  3477               	retlw	119	;'w'
   506  1885  3420               	retlw	32	;' '
   507  1886  3454               	retlw	84	;'T'
   508  1887  3465               	retlw	101	;'e'
   509  1888  346D               	retlw	109	;'m'
   510  1889  3470               	retlw	112	;'p'
   511  188A  3420               	retlw	32	;' '
   512  188B  3476               	retlw	118	;'v'
   513  188C  3461               	retlw	97	;'a'
   514  188D  346C               	retlw	108	;'l'
   515  188E  3475               	retlw	117	;'u'
   516  188F  3465               	retlw	101	;'e'
   517  1890  3420               	retlw	32	;' '
   518  1891  3469               	retlw	105	;'i'
   519  1892  3473               	retlw	115	;'s'
   520  1893  3420               	retlw	32	;' '
   521  1894  3425               	retlw	37	;'%'
   522  1895  3464               	retlw	100	;'d'
   523  1896  3420               	retlw	32	;' '
   524  1897  3452               	retlw	82	;'R'
   525  1898  3441               	retlw	65	;'A'
   526  1899  3457               	retlw	87	;'W'
   527  189A  3420               	retlw	32	;' '
   528  189B  347C               	retlw	124	;'|'
   529  189C  3420               	retlw	32	;' '
   530  189D  3450               	retlw	80	;'P'
   531  189E  346F               	retlw	111	;'o'
   532  189F  3474               	retlw	116	;'t'
   533  18A0  3420               	retlw	32	;' '
   534  18A1  3476               	retlw	118	;'v'
   535  18A2  3461               	retlw	97	;'a'
   536  18A3  346C               	retlw	108	;'l'
   537  18A4  3475               	retlw	117	;'u'
   538  18A5  3465               	retlw	101	;'e'
   539  18A6  3420               	retlw	32	;' '
   540  18A7  3469               	retlw	105	;'i'
   541  18A8  3473               	retlw	115	;'s'
   542  18A9  3420               	retlw	32	;' '
   543  18AA  3425               	retlw	37	;'%'
   544  18AB  3464               	retlw	100	;'d'
   545  18AC  3420               	retlw	32	;' '
   546  18AD  347C               	retlw	124	;'|'
   547  18AE  3420               	retlw	32	;' '
   548  18AF  3446               	retlw	70	;'F'
   549  18B0  3469               	retlw	105	;'i'
   550  18B1  3478               	retlw	120	;'x'
   551  18B2  3465               	retlw	101	;'e'
   552  18B3  3464               	retlw	100	;'d'
   553  18B4  3420               	retlw	32	;' '
   554  18B5  3456               	retlw	86	;'V'
   555  18B6  346F               	retlw	111	;'o'
   556  18B7  346C               	retlw	108	;'l'
   557  18B8  3474               	retlw	116	;'t'
   558  18B9  3461               	retlw	97	;'a'
   559  18BA  3467               	retlw	103	;'g'
   560  18BB  3465               	retlw	101	;'e'
   561  18BC  3420               	retlw	32	;' '
   562  18BD  3469               	retlw	105	;'i'
   563  18BE  3473               	retlw	115	;'s'
   564  18BF  3420               	retlw	32	;' '
   565  18C0  3425               	retlw	37	;'%'
   566  18C1  3464               	retlw	100	;'d'
   567  18C2  3420               	retlw	32	;' '
   568  18C3  340A               	retlw	10
   569  18C4  340D               	retlw	13
   570  18C5  3400               	retlw	0
   571                           
   572                           	psect	stringtext5
   573  0000                     __pstringtext5:	
   574                           
   575                           ; #config settings
   576  0000                     
   577                           	psect	cinit
   578  07F6                     start_initialization:	
   579  07F6                     __initialization:	
   580                           
   581                           ; Clear objects allocated to BANK1
   582  07F6  30CA               	movlw	low __pbssBANK1
   583  07F7  0084               	movwf	4
   584  07F8  3000               	movlw	high __pbssBANK1
   585  07F9  0085               	movwf	5
   586  07FA  3011               	movlw	17
   587  07FB  3188  2000         	fcall	clear_ram0
   588  07FD                     end_of_initialization:	
   589                           ;End of C runtime variable initialization code
   590                           
   591  07FD                     __end_of__initialization:	
   592  07FD  0020               	movlb	0
   593  07FE  318B  2BE2         	ljmp	_main	;jump to C main() function
   594                           
   595                           	psect	bssBANK1
   596  00CA                     __pbssBANK1:	
   597  00CA                     _Voltage:	
   598  00CA                     	ds	3
   599  00CD                     _Temperature:	
   600  00CD                     	ds	3
   601  00D0                     _Ctemp:	
   602  00D0                     	ds	3
   603  00D3                     _Photo:	
   604  00D3                     	ds	2
   605  00D5                     _FVval:	
   606  00D5                     	ds	2
   607  00D7                     _Temp:	
   608  00D7                     	ds	2
   609  00D9                     _Pval:	
   610  00D9                     	ds	2
   611                           
   612                           	psect	clrtext
   613  0800                     clear_ram0:	
   614                           ;	Called with FSR0 containing the base address, and
   615                           ;	WREG with the size to clear
   616                           
   617  0800  0064               	clrwdt	;clear the watchdog before getting into this loop
   618  0801                     clrloop0:	
   619  0801  0180               	clrf	0	;clear RAM location pointed to by FSR
   620  0802  3101               	addfsr 0,1
   621  0803  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   622  0804  2801               	goto	clrloop0	;have we reached the end yet?
   623  0805  3400               	retlw	0	;all done for this memory range, return
   624                           
   625                           	psect	cstackBANK1
   626  00A0                     __pcstackBANK1:	
   627  00A0                     ?_printf:	
   628  00A0                     printf@f:	
   629                           ; 2 bytes @ 0x0
   630                           
   631                           
   632                           ; 2 bytes @ 0x0
   633  00A0                     	ds	12
   634  00AC                     _printf$567:	
   635                           
   636                           ; 3 bytes @ 0xC
   637  00AC                     	ds	3
   638  00AF                     printf@ap:	
   639                           
   640                           ; 1 bytes @ 0xF
   641  00AF                     	ds	1
   642  00B0                     printf@tmpval:	
   643                           
   644                           ; 4 bytes @ 0x10
   645  00B0                     	ds	4
   646  00B4                     printf@val:	
   647                           
   648                           ; 4 bytes @ 0x14
   649  00B4                     	ds	4
   650  00B8                     printf@exp:	
   651                           
   652                           ; 2 bytes @ 0x18
   653  00B8                     	ds	2
   654  00BA                     printf@flag:	
   655                           
   656                           ; 2 bytes @ 0x1A
   657  00BA                     	ds	2
   658  00BC                     printf@width:	
   659                           
   660                           ; 2 bytes @ 0x1C
   661  00BC                     	ds	2
   662  00BE                     printf@fval:	
   663                           
   664                           ; 3 bytes @ 0x1E
   665  00BE                     	ds	3
   666  00C1                     printf@prec:	
   667                           
   668                           ; 2 bytes @ 0x21
   669  00C1                     	ds	2
   670  00C3                     printf@c:	
   671                           
   672                           ; 1 bytes @ 0x23
   673  00C3                     	ds	1
   674  00C4                     _main$562:	
   675                           
   676                           ; 3 bytes @ 0x24
   677  00C4                     	ds	3
   678  00C7                     _main$563:	
   679                           
   680                           ; 3 bytes @ 0x27
   681  00C7                     	ds	3
   682                           
   683                           	psect	cstackCOMMON
   684  0070                     __pcstackCOMMON:	
   685  0070                     ?_isdigit:	
   686  0070                     ?___ftge:	
   687                           ; 1 bit 
   688                           
   689  0070                     ?_pinConfig:	
   690                           ; 1 bit 
   691                           
   692  0070                     ??_pinConfig:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_setup_comms:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ??_setup_comms:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ??_isdigit:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_main:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_putch:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ??_putch:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?___awmod:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?___ftpack:	
   717                           ; 2 bytes @ 0x0
   718                           
   719  0070                     ?__tdiv_to_l_:	
   720                           ; 3 bytes @ 0x0
   721                           
   722  0070                     ?__div_to_l_:	
   723                           ; 4 bytes @ 0x0
   724                           
   725  0070                     ?___lldiv:	
   726                           ; 4 bytes @ 0x0
   727                           
   728  0070                     putch@byte:	
   729                           ; 4 bytes @ 0x0
   730                           
   731  0070                     _isdigit$348:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ___awmod@divisor:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     __div_to_l_@f1:	
   738                           ; 2 bytes @ 0x0
   739                           
   740  0070                     ___ftpack@arg:	
   741                           ; 3 bytes @ 0x0
   742                           
   743  0070                     __tdiv_to_l_@f1:	
   744                           ; 3 bytes @ 0x0
   745                           
   746  0070                     ___ftge@ff1:	
   747                           ; 3 bytes @ 0x0
   748                           
   749  0070                     ___lldiv@divisor:	
   750                           ; 3 bytes @ 0x0
   751                           
   752                           
   753                           ; 4 bytes @ 0x0
   754  0070                     	ds	1
   755  0071                     isdigit@c:	
   756                           
   757                           ; 1 bytes @ 0x1
   758  0071                     	ds	1
   759  0072                     ___awmod@dividend:	
   760                           
   761                           ; 2 bytes @ 0x2
   762  0072                     	ds	1
   763  0073                     ___ftpack@exp:	
   764  0073                     __div_to_l_@f2:	
   765                           ; 1 bytes @ 0x3
   766                           
   767  0073                     __tdiv_to_l_@f2:	
   768                           ; 3 bytes @ 0x3
   769                           
   770  0073                     ___ftge@ff2:	
   771                           ; 3 bytes @ 0x3
   772                           
   773                           
   774                           ; 3 bytes @ 0x3
   775  0073                     	ds	1
   776  0074                     ??___awmod:	
   777  0074                     ___ftpack@sign:	
   778                           ; 1 bytes @ 0x4
   779                           
   780  0074                     ___lldiv@dividend:	
   781                           ; 1 bytes @ 0x4
   782                           
   783                           
   784                           ; 4 bytes @ 0x4
   785  0074                     	ds	1
   786  0075                     ??___ftpack:	
   787  0075                     ___awmod@counter:	
   788                           ; 1 bytes @ 0x5
   789                           
   790                           
   791                           ; 1 bytes @ 0x5
   792  0075                     	ds	1
   793  0076                     ??__tdiv_to_l_:	
   794  0076                     ??__div_to_l_:	
   795                           ; 1 bytes @ 0x6
   796                           
   797  0076                     ??___ftge:	
   798                           ; 1 bytes @ 0x6
   799                           
   800  0076                     ___awmod@sign:	
   801                           ; 1 bytes @ 0x6
   802                           
   803                           
   804                           ; 1 bytes @ 0x6
   805  0076                     	ds	1
   806  0077                     ?___awdiv:	
   807  0077                     ___awdiv@divisor:	
   808                           ; 2 bytes @ 0x7
   809                           
   810                           
   811                           ; 2 bytes @ 0x7
   812  0077                     	ds	1
   813  0078                     ??___lldiv:	
   814  0078                     ?___lltoft:	
   815                           ; 1 bytes @ 0x8
   816                           
   817  0078                     ?___lwtoft:	
   818                           ; 3 bytes @ 0x8
   819                           
   820  0078                     ___lwtoft@c:	
   821                           ; 3 bytes @ 0x8
   822                           
   823  0078                     ___lltoft@c:	
   824                           ; 2 bytes @ 0x8
   825                           
   826                           
   827                           ; 4 bytes @ 0x8
   828  0078                     	ds	1
   829  0079                     ___awdiv@dividend:	
   830  0079                     ___lldiv@quotient:	
   831                           ; 2 bytes @ 0x9
   832                           
   833                           
   834                           ; 4 bytes @ 0x9
   835  0079                     	ds	2
   836  007B                     ??___awdiv:	
   837  007B                     ??___lwtoft:	
   838                           ; 1 bytes @ 0xB
   839                           
   840                           
   841                           ; 1 bytes @ 0xB
   842  007B                     	ds	1
   843  007C                     ??___wmul:	
   844  007C                     ??___ftneg:	
   845                           ; 1 bytes @ 0xC
   846                           
   847  007C                     ??___lltoft:	
   848                           ; 1 bytes @ 0xC
   849                           
   850  007C                     ___wmul@product:	
   851                           ; 1 bytes @ 0xC
   852                           
   853                           
   854                           ; 2 bytes @ 0xC
   855  007C                     	ds	1
   856  007D                     ___lldiv@counter:	
   857  007D                     ___lltoft@exp:	
   858                           ; 1 bytes @ 0xD
   859                           
   860                           
   861                           ; 1 bytes @ 0xD
   862  007D                     	ds	1
   863  007E                     ??___ftsub:	
   864                           
   865                           	psect	cstackBANK0
   866  0020                     __pcstackBANK0:	
   867                           ; 1 bytes @ 0xE
   868                           
   869  0020                     ?___ftdiv:	
   870  0020                     ?___llmod:	
   871                           ; 3 bytes @ 0x0
   872                           
   873  0020                     ___awdiv@counter:	
   874                           ; 4 bytes @ 0x0
   875                           
   876  0020                     ___ftdiv@f2:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0020                     __div_to_l_@quot:	
   880                           ; 3 bytes @ 0x0
   881                           
   882  0020                     __tdiv_to_l_@quot:	
   883                           ; 4 bytes @ 0x0
   884                           
   885  0020                     ___llmod@divisor:	
   886                           ; 4 bytes @ 0x0
   887                           
   888                           
   889                           ; 4 bytes @ 0x0
   890  0020                     	ds	1
   891  0021                     ___awdiv@sign:	
   892                           
   893                           ; 1 bytes @ 0x1
   894  0021                     	ds	1
   895  0022                     ___awdiv@quotient:	
   896                           
   897                           ; 2 bytes @ 0x2
   898  0022                     	ds	1
   899  0023                     ___ftdiv@f1:	
   900                           
   901                           ; 3 bytes @ 0x3
   902  0023                     	ds	1
   903  0024                     ?___wmul:	
   904  0024                     __div_to_l_@cntr:	
   905                           ; 2 bytes @ 0x4
   906                           
   907  0024                     __tdiv_to_l_@cntr:	
   908                           ; 1 bytes @ 0x4
   909                           
   910  0024                     ___wmul@multiplier:	
   911                           ; 1 bytes @ 0x4
   912                           
   913  0024                     ___llmod@dividend:	
   914                           ; 2 bytes @ 0x4
   915                           
   916                           
   917                           ; 4 bytes @ 0x4
   918  0024                     	ds	1
   919  0025                     __div_to_l_@exp1:	
   920  0025                     __tdiv_to_l_@exp1:	
   921                           ; 1 bytes @ 0x5
   922                           
   923                           
   924                           ; 1 bytes @ 0x5
   925  0025                     	ds	1
   926  0026                     ??___ftdiv:	
   927  0026                     ___wmul@multiplicand:	
   928                           ; 1 bytes @ 0x6
   929                           
   930                           
   931                           ; 2 bytes @ 0x6
   932  0026                     	ds	2
   933  0028                     ??___llmod:	
   934                           
   935                           ; 1 bytes @ 0x8
   936  0028                     	ds	1
   937  0029                     ___llmod@counter:	
   938                           
   939                           ; 1 bytes @ 0x9
   940  0029                     	ds	1
   941  002A                     ___ftdiv@cntr:	
   942                           
   943                           ; 1 bytes @ 0xA
   944  002A                     	ds	1
   945  002B                     ___ftdiv@f3:	
   946                           
   947                           ; 3 bytes @ 0xB
   948  002B                     	ds	3
   949  002E                     ___ftdiv@exp:	
   950                           
   951                           ; 1 bytes @ 0xE
   952  002E                     	ds	1
   953  002F                     ___ftdiv@sign:	
   954                           
   955                           ; 1 bytes @ 0xF
   956  002F                     	ds	1
   957  0030                     ?___ftneg:	
   958  0030                     ___ftneg@f1:	
   959                           ; 3 bytes @ 0x10
   960                           
   961                           
   962                           ; 3 bytes @ 0x10
   963  0030                     	ds	3
   964  0033                     ?___ftadd:	
   965  0033                     ___ftadd@f1:	
   966                           ; 3 bytes @ 0x13
   967                           
   968                           
   969                           ; 3 bytes @ 0x13
   970  0033                     	ds	3
   971  0036                     ___ftadd@f2:	
   972                           
   973                           ; 3 bytes @ 0x16
   974  0036                     	ds	3
   975  0039                     ??___ftadd:	
   976                           
   977                           ; 1 bytes @ 0x19
   978  0039                     	ds	4
   979  003D                     ___ftadd@sign:	
   980                           
   981                           ; 1 bytes @ 0x1D
   982  003D                     	ds	1
   983  003E                     ___ftadd@exp2:	
   984                           
   985                           ; 1 bytes @ 0x1E
   986  003E                     	ds	1
   987  003F                     ___ftadd@exp1:	
   988                           
   989                           ; 1 bytes @ 0x1F
   990  003F                     	ds	1
   991  0040                     ?___ftmul:	
   992  0040                     ?___ftsub:	
   993                           ; 3 bytes @ 0x20
   994                           
   995  0040                     ___ftmul@f1:	
   996                           ; 3 bytes @ 0x20
   997                           
   998  0040                     ___ftsub@f2:	
   999                           ; 3 bytes @ 0x20
  1000                           
  1001                           
  1002                           ; 3 bytes @ 0x20
  1003  0040                     	ds	3
  1004  0043                     ___ftmul@f2:	
  1005  0043                     ___ftsub@f1:	
  1006                           ; 3 bytes @ 0x23
  1007                           
  1008                           
  1009                           ; 3 bytes @ 0x23
  1010  0043                     	ds	3
  1011  0046                     ??___ftmul:	
  1012                           
  1013                           ; 1 bytes @ 0x26
  1014  0046                     	ds	4
  1015  004A                     ___ftmul@exp:	
  1016                           
  1017                           ; 1 bytes @ 0x2A
  1018  004A                     	ds	1
  1019  004B                     ___ftmul@f3_as_product:	
  1020                           
  1021                           ; 3 bytes @ 0x2B
  1022  004B                     	ds	3
  1023  004E                     ___ftmul@cntr:	
  1024                           
  1025                           ; 1 bytes @ 0x2E
  1026  004E                     	ds	1
  1027  004F                     ___ftmul@sign:	
  1028                           
  1029                           ; 1 bytes @ 0x2F
  1030  004F                     	ds	1
  1031  0050                     ?_fround:	
  1032  0050                     ?_scale:	
  1033                           ; 3 bytes @ 0x30
  1034                           
  1035                           
  1036                           ; 3 bytes @ 0x30
  1037  0050                     	ds	3
  1038  0053                     ??_fround:	
  1039  0053                     ??_scale:	
  1040                           ; 1 bytes @ 0x33
  1041                           
  1042                           
  1043                           ; 1 bytes @ 0x33
  1044  0053                     	ds	2
  1045  0055                     _scale$566:	
  1046                           
  1047                           ; 3 bytes @ 0x35
  1048  0055                     	ds	2
  1049  0057                     _fround$565:	
  1050                           
  1051                           ; 3 bytes @ 0x37
  1052  0057                     	ds	1
  1053  0058                     scale@scl:	
  1054                           
  1055                           ; 1 bytes @ 0x38
  1056  0058                     	ds	1
  1057  0059                     ?___fttol:	
  1058  0059                     ___fttol@f1:	
  1059                           ; 4 bytes @ 0x39
  1060                           
  1061                           
  1062                           ; 3 bytes @ 0x39
  1063  0059                     	ds	1
  1064  005A                     _fround$564:	
  1065                           
  1066                           ; 3 bytes @ 0x3A
  1067  005A                     	ds	3
  1068  005D                     ??___fttol:	
  1069  005D                     fround@prec:	
  1070                           ; 1 bytes @ 0x3D
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0x3D
  1074  005D                     	ds	4
  1075  0061                     ___fttol@sign1:	
  1076                           
  1077                           ; 1 bytes @ 0x41
  1078  0061                     	ds	1
  1079  0062                     ___fttol@lval:	
  1080                           
  1081                           ; 4 bytes @ 0x42
  1082  0062                     	ds	4
  1083  0066                     ___fttol@exp1:	
  1084                           
  1085                           ; 1 bytes @ 0x46
  1086  0066                     	ds	1
  1087  0067                     ??_printf:	
  1088                           
  1089                           ; 1 bytes @ 0x47
  1090  0067                     	ds	6
  1091  006D                     ??_main:	
  1092                           
  1093                           ; 1 bytes @ 0x4D
  1094  006D                     	ds	2
  1095                           
  1096                           	psect	maintext
  1097  0BE2                     __pmaintext:	
  1098 ;;
  1099 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1100 ;;
  1101 ;; *************** function _main *****************
  1102 ;; Defined at:
  1103 ;;		line 49 in file "main.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : B1F/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1118 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  1119 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1120 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0
  1121 ;;Total ram usage:        8 bytes
  1122 ;; Hardware stack levels required when called:    4
  1123 ;; This function calls:
  1124 ;;		___ftadd
  1125 ;;		___ftdiv
  1126 ;;		___ftmul
  1127 ;;		___ftneg
  1128 ;;		___lwtoft
  1129 ;;		_pinConfig
  1130 ;;		_printf
  1131 ;;		_setup_comms
  1132 ;; This function is called by:
  1133 ;;		Startup code after reset
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _main
  1139  0BE2                     _main:	
  1140                           
  1141                           ;main.c: 51: pinConfig();
  1142                           
  1143                           ;incstack = 0
  1144                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1145  0BE2  3194  247A  318B   	fcall	_pinConfig
  1146                           
  1147                           ;main.c: 53: setup_comms();
  1148  0BE5  3180  2005  318B   	fcall	_setup_comms
  1149                           
  1150                           ;main.c: 55: FVRCON = 0xA2;
  1151  0BE8  30A2               	movlw	162
  1152  0BE9  0022               	movlb	2	; select bank2
  1153  0BEA  0097               	movwf	23	;volatile
  1154                           
  1155                           ;main.c: 59: ADCON1 = 0xC0;
  1156  0BEB  30C0               	movlw	192
  1157  0BEC  0021               	movlb	1	; select bank1
  1158  0BED  009E               	movwf	30	;volatile
  1159  0BEE                     l2717:	
  1160                           ;main.c: 61: while (1) {
  1161                           
  1162                           
  1163                           ;main.c: 64: ADCON0 = 0x2D;
  1164  0BEE  302D               	movlw	45
  1165  0BEF  0021               	movlb	1	; select bank1
  1166  0BF0  009D               	movwf	29	;volatile
  1167                           
  1168                           ;main.c: 65: _delay((unsigned long)((10)*(4000000.0/4000.0)));
  1169  0BF1  300D               	movlw	13
  1170  0BF2  0020               	movlb	0	; select bank0
  1171  0BF3  00ED               	movwf	??_main
  1172  0BF4  30FB               	movlw	251
  1173  0BF5                     u4147:	
  1174  0BF5  0B89               	decfsz	9,f
  1175  0BF6  2BF5               	goto	u4147
  1176  0BF7  0BED               	decfsz	??_main,f
  1177  0BF8  2BF5               	goto	u4147
  1178  0BF9  3200               	nop2
  1179                           
  1180                           ;main.c: 66: ADGO = 1;
  1181  0BFA  0021               	movlb	1	; select bank1
  1182  0BFB  149D               	bsf	29,1	;volatile
  1183  0BFC                     l96:	
  1184                           ;main.c: 67: while(ADGO)continue;
  1185                           
  1186  0BFC  189D               	btfsc	29,1	;volatile
  1187  0BFD  2BFC               	goto	l96
  1188                           
  1189                           ;main.c: 68: Pval = (unsigned)((ADRESH<<8)+(ADRESL));
  1190  0BFE  081C               	movf	28,w	;volatile
  1191  0BFF  00DA               	movwf	(_Pval+1)^(0+128)
  1192  0C00  081B               	movf	27,w	;volatile
  1193  0C01  00D9               	movwf	_Pval^(0+128)
  1194                           
  1195                           ;main.c: 71: ADCON0 = 0x7D;
  1196  0C02  307D               	movlw	125
  1197  0C03  009D               	movwf	29	;volatile
  1198                           
  1199                           ;main.c: 72: _delay((unsigned long)((10)*(4000000.0/4000.0)));
  1200  0C04  300D               	movlw	13
  1201  0C05  0020               	movlb	0	; select bank0
  1202  0C06  00ED               	movwf	??_main
  1203  0C07  30FB               	movlw	251
  1204  0C08                     u4157:	
  1205  0C08  0B89               	decfsz	9,f
  1206  0C09  2C08               	goto	u4157
  1207  0C0A  0BED               	decfsz	??_main,f
  1208  0C0B  2C08               	goto	u4157
  1209  0C0C  3200               	nop2
  1210                           
  1211                           ;main.c: 73: ADGO = 1;
  1212  0C0D  0021               	movlb	1	; select bank1
  1213  0C0E  149D               	bsf	29,1	;volatile
  1214  0C0F                     l99:	
  1215                           ;main.c: 74: while(ADGO)continue;
  1216                           
  1217  0C0F  189D               	btfsc	29,1	;volatile
  1218  0C10  2C0F               	goto	l99
  1219                           
  1220                           ;main.c: 75: FVval = ((ADRESH<<8)+(ADRESL));
  1221  0C11  081C               	movf	28,w	;volatile
  1222  0C12  00D6               	movwf	(_FVval+1)^(0+128)
  1223  0C13  081B               	movf	27,w	;volatile
  1224  0C14  00D5               	movwf	_FVval^(0+128)
  1225                           
  1226                           ;main.c: 78: ADCON0 = 0x75;
  1227  0C15  3075               	movlw	117
  1228  0C16  009D               	movwf	29	;volatile
  1229                           
  1230                           ;main.c: 79: _delay((unsigned long)((10)*(4000000.0/4000.0)));
  1231  0C17  300D               	movlw	13
  1232  0C18  0020               	movlb	0	; select bank0
  1233  0C19  00ED               	movwf	??_main
  1234  0C1A  30FB               	movlw	251
  1235  0C1B                     u4167:	
  1236  0C1B  0B89               	decfsz	9,f
  1237  0C1C  2C1B               	goto	u4167
  1238  0C1D  0BED               	decfsz	??_main,f
  1239  0C1E  2C1B               	goto	u4167
  1240  0C1F  3200               	nop2
  1241                           
  1242                           ;main.c: 80: ADGO = 1;
  1243  0C20  0021               	movlb	1	; select bank1
  1244  0C21  149D               	bsf	29,1	;volatile
  1245  0C22                     l102:	
  1246                           ;main.c: 81: while(ADGO)continue;
  1247                           
  1248  0C22  189D               	btfsc	29,1	;volatile
  1249  0C23  2C22               	goto	l102
  1250                           
  1251                           ;main.c: 82: Temp = ((ADRESH<<8)+(ADRESL));
  1252  0C24  081C               	movf	28,w	;volatile
  1253  0C25  00D8               	movwf	(_Temp+1)^(0+128)
  1254  0C26  081B               	movf	27,w	;volatile
  1255  0C27  00D7               	movwf	_Temp^(0+128)
  1256                           
  1257                           ;main.c: 86: Ctemp = ((0.659-((1.48)*(1-((float)Temp/1023))))/0.00132)-40;
  1258  0C28  0858               	movf	(_Temp+1)^(0+128),w
  1259  0C29  00F9               	movwf	___lwtoft@c+1
  1260  0C2A  0857               	movf	_Temp^(0+128),w
  1261  0C2B  00F8               	movwf	___lwtoft@c
  1262  0C2C  3194  244B  318B   	fcall	___lwtoft
  1263  0C2F  0878               	movf	?___lwtoft,w
  1264  0C30  0020               	movlb	0	; select bank0
  1265  0C31  00A3               	movwf	___ftdiv@f1
  1266  0C32  0879               	movf	?___lwtoft+1,w
  1267  0C33  00A4               	movwf	___ftdiv@f1+1
  1268  0C34  087A               	movf	?___lwtoft+2,w
  1269  0C35  00A5               	movwf	___ftdiv@f1+2
  1270  0C36  30C0               	movlw	192
  1271  0C37  00A0               	movwf	___ftdiv@f2
  1272  0C38  307F               	movlw	127
  1273  0C39  00A1               	movwf	___ftdiv@f2+1
  1274  0C3A  3044               	movlw	68
  1275  0C3B  00A2               	movwf	___ftdiv@f2+2
  1276  0C3C  3196  26A3  318B   	fcall	___ftdiv
  1277  0C3F  0020               	movlb	0	; select bank0
  1278  0C40  0820               	movf	?___ftdiv,w
  1279  0C41  00B0               	movwf	___ftneg@f1
  1280  0C42  0821               	movf	?___ftdiv+1,w
  1281  0C43  00B1               	movwf	___ftneg@f1+1
  1282  0C44  0822               	movf	?___ftdiv+2,w
  1283  0C45  00B2               	movwf	___ftneg@f1+2
  1284  0C46  3194  2434  318B   	fcall	___ftneg
  1285  0C49  0020               	movlb	0	; select bank0
  1286  0C4A  0830               	movf	?___ftneg,w
  1287  0C4B  00B6               	movwf	___ftadd@f2
  1288  0C4C  0831               	movf	?___ftneg+1,w
  1289  0C4D  00B7               	movwf	___ftadd@f2+1
  1290  0C4E  0832               	movf	?___ftneg+2,w
  1291  0C4F  00B8               	movwf	___ftadd@f2+2
  1292  0C50  3000               	movlw	0
  1293  0C51  00B3               	movwf	___ftadd@f1
  1294  0C52  3080               	movlw	128
  1295  0C53  00B4               	movwf	___ftadd@f1+1
  1296  0C54  303F               	movlw	63
  1297  0C55  00B5               	movwf	___ftadd@f1+2
  1298  0C56  3188  206A  318B   	fcall	___ftadd
  1299  0C59  0020               	movlb	0	; select bank0
  1300  0C5A  0833               	movf	?___ftadd,w
  1301  0C5B  00C3               	movwf	___ftmul@f2
  1302  0C5C  0834               	movf	?___ftadd+1,w
  1303  0C5D  00C4               	movwf	___ftmul@f2+1
  1304  0C5E  0835               	movf	?___ftadd+2,w
  1305  0C5F  00C5               	movwf	___ftmul@f2+2
  1306  0C60  3071               	movlw	113
  1307  0C61  00C0               	movwf	___ftmul@f1
  1308  0C62  30BD               	movlw	189
  1309  0C63  00C1               	movwf	___ftmul@f1+1
  1310  0C64  303F               	movlw	63
  1311  0C65  00C2               	movwf	___ftmul@f1+2
  1312  0C66  3197  274C  318B   	fcall	___ftmul
  1313  0C69  0020               	movlb	0	; select bank0
  1314  0C6A  0840               	movf	?___ftmul,w
  1315  0C6B  0021               	movlb	1	; select bank1
  1316  0C6C  00C4               	movwf	_main$562^(0+128)
  1317  0C6D  0020               	movlb	0	; select bank0
  1318  0C6E  0841               	movf	?___ftmul+1,w
  1319  0C6F  0021               	movlb	1	; select bank1
  1320  0C70  00C5               	movwf	(_main$562+1)^(0+128)
  1321  0C71  0020               	movlb	0	; select bank0
  1322  0C72  0842               	movf	?___ftmul+2,w
  1323  0C73  0021               	movlb	1	; select bank1
  1324  0C74  00C6               	movwf	(_main$562+2)^(0+128)
  1325                           
  1326                           ;main.c: 86: Ctemp = ((0.659-((1.48)*(1-((float)Temp/1023))))/0.00132)-40;
  1327  0C75  3004               	movlw	4
  1328  0C76  0020               	movlb	0	; select bank0
  1329  0C77  00A0               	movwf	___ftdiv@f2
  1330  0C78  30AD               	movlw	173
  1331  0C79  00A1               	movwf	___ftdiv@f2+1
  1332  0C7A  303A               	movlw	58
  1333  0C7B  00A2               	movwf	___ftdiv@f2+2
  1334  0C7C  30B4               	movlw	180
  1335  0C7D  00B3               	movwf	___ftadd@f1
  1336  0C7E  3028               	movlw	40
  1337  0C7F  00B4               	movwf	___ftadd@f1+1
  1338  0C80  303F               	movlw	63
  1339  0C81  00B5               	movwf	___ftadd@f1+2
  1340  0C82  0021               	movlb	1	; select bank1
  1341  0C83  0844               	movf	_main$562^(0+128),w
  1342  0C84  0020               	movlb	0	; select bank0
  1343  0C85  00B0               	movwf	___ftneg@f1
  1344  0C86  0021               	movlb	1	; select bank1
  1345  0C87  0845               	movf	(_main$562+1)^(0+128),w
  1346  0C88  0020               	movlb	0	; select bank0
  1347  0C89  00B1               	movwf	___ftneg@f1+1
  1348  0C8A  0021               	movlb	1	; select bank1
  1349  0C8B  0846               	movf	(_main$562+2)^(0+128),w
  1350  0C8C  0020               	movlb	0	; select bank0
  1351  0C8D  00B2               	movwf	___ftneg@f1+2
  1352  0C8E  3194  2434  318B   	fcall	___ftneg
  1353  0C91  0020               	movlb	0	; select bank0
  1354  0C92  0830               	movf	?___ftneg,w
  1355  0C93  00B6               	movwf	___ftadd@f2
  1356  0C94  0831               	movf	?___ftneg+1,w
  1357  0C95  00B7               	movwf	___ftadd@f2+1
  1358  0C96  0832               	movf	?___ftneg+2,w
  1359  0C97  00B8               	movwf	___ftadd@f2+2
  1360  0C98  3188  206A  318B   	fcall	___ftadd
  1361  0C9B  0020               	movlb	0	; select bank0
  1362  0C9C  0833               	movf	?___ftadd,w
  1363  0C9D  00A3               	movwf	___ftdiv@f1
  1364  0C9E  0834               	movf	?___ftadd+1,w
  1365  0C9F  00A4               	movwf	___ftdiv@f1+1
  1366  0CA0  0835               	movf	?___ftadd+2,w
  1367  0CA1  00A5               	movwf	___ftdiv@f1+2
  1368  0CA2  3196  26A3  318B   	fcall	___ftdiv
  1369  0CA5  0020               	movlb	0	; select bank0
  1370  0CA6  0820               	movf	?___ftdiv,w
  1371  0CA7  0021               	movlb	1	; select bank1
  1372  0CA8  00C7               	movwf	_main$563^(0+128)
  1373  0CA9  0020               	movlb	0	; select bank0
  1374  0CAA  0821               	movf	?___ftdiv+1,w
  1375  0CAB  0021               	movlb	1	; select bank1
  1376  0CAC  00C8               	movwf	(_main$563+1)^(0+128)
  1377  0CAD  0020               	movlb	0	; select bank0
  1378  0CAE  0822               	movf	?___ftdiv+2,w
  1379  0CAF  0021               	movlb	1	; select bank1
  1380  0CB0  00C9               	movwf	(_main$563+2)^(0+128)
  1381                           
  1382                           ;main.c: 86: Ctemp = ((0.659-((1.48)*(1-((float)Temp/1023))))/0.00132)-40;
  1383  0CB1  3000               	movlw	0
  1384  0CB2  0020               	movlb	0	; select bank0
  1385  0CB3  00B3               	movwf	___ftadd@f1
  1386  0CB4  3020               	movlw	32
  1387  0CB5  00B4               	movwf	___ftadd@f1+1
  1388  0CB6  30C2               	movlw	194
  1389  0CB7  00B5               	movwf	___ftadd@f1+2
  1390  0CB8  0021               	movlb	1	; select bank1
  1391  0CB9  0847               	movf	_main$563^(0+128),w
  1392  0CBA  0020               	movlb	0	; select bank0
  1393  0CBB  00B6               	movwf	___ftadd@f2
  1394  0CBC  0021               	movlb	1	; select bank1
  1395  0CBD  0848               	movf	(_main$563+1)^(0+128),w
  1396  0CBE  0020               	movlb	0	; select bank0
  1397  0CBF  00B7               	movwf	___ftadd@f2+1
  1398  0CC0  0021               	movlb	1	; select bank1
  1399  0CC1  0849               	movf	(_main$563+2)^(0+128),w
  1400  0CC2  0020               	movlb	0	; select bank0
  1401  0CC3  00B8               	movwf	___ftadd@f2+2
  1402  0CC4  3188  206A  318B   	fcall	___ftadd
  1403  0CC7  0020               	movlb	0	; select bank0
  1404  0CC8  0833               	movf	?___ftadd,w
  1405  0CC9  0021               	movlb	1	; select bank1
  1406  0CCA  00D0               	movwf	_Ctemp^(0+128)
  1407  0CCB  0020               	movlb	0	; select bank0
  1408  0CCC  0834               	movf	?___ftadd+1,w
  1409  0CCD  0021               	movlb	1	; select bank1
  1410  0CCE  00D1               	movwf	(_Ctemp+1)^(0+128)
  1411  0CCF  0020               	movlb	0	; select bank0
  1412  0CD0  0835               	movf	?___ftadd+2,w
  1413  0CD1  0021               	movlb	1	; select bank1
  1414  0CD2  00D2               	movwf	(_Ctemp+2)^(0+128)
  1415                           
  1416                           ;main.c: 87: printf("Raw Temp value is %d RAW | Pot value is %d | Fixed Voltage is %d \n
      +                          \r", Temp, Pval, FVval);
  1417  0CD3  3082               	movlw	low (STR_1| (0+32768))
  1418  0CD4  00A0               	movwf	printf@f^(0+128)
  1419  0CD5  3098               	movlw	high (STR_1| (0+32768))
  1420  0CD6  00A1               	movwf	(printf@f^(0+128)+1)
  1421  0CD7  0858               	movf	(_Temp+1)^(0+128),w
  1422  0CD8  00A3               	movwf	((?_printf+1)^(0+128)+2)
  1423  0CD9  0857               	movf	_Temp^(0+128),w
  1424  0CDA  00A2               	movwf	(?_printf^(0+128)+2)
  1425  0CDB  085A               	movf	(_Pval+1)^(0+128),w
  1426  0CDC  00A5               	movwf	((?_printf+1)^(0+128)+4)
  1427  0CDD  0859               	movf	_Pval^(0+128),w
  1428  0CDE  00A4               	movwf	(?_printf^(0+128)+4)
  1429  0CDF  0856               	movf	(_FVval+1)^(0+128),w
  1430  0CE0  00A7               	movwf	((?_printf+1)^(0+128)+6)
  1431  0CE1  0855               	movf	_FVval^(0+128),w
  1432  0CE2  00A6               	movwf	(?_printf^(0+128)+6)
  1433  0CE3  3180  20F4  318B   	fcall	_printf
  1434                           
  1435                           ;main.c: 88: _delay((unsigned long)((1000)*(4000000.0/4000.0)));
  1436  0CE6  3006               	movlw	6
  1437  0CE7  0020               	movlb	0	; select bank0
  1438  0CE8  00EE               	movwf	??_main+1
  1439  0CE9  3013               	movlw	19
  1440  0CEA  00ED               	movwf	??_main
  1441  0CEB  30AD               	movlw	173
  1442  0CEC                     u4177:	
  1443  0CEC  0B89               	decfsz	9,f
  1444  0CED  2CEC               	goto	u4177
  1445  0CEE  0BED               	decfsz	??_main,f
  1446  0CEF  2CEC               	goto	u4177
  1447  0CF0  0BEE               	decfsz	??_main+1,f
  1448  0CF1  2CEC               	goto	u4177
  1449  0CF2  3200               	nop2
  1450                           
  1451                           ;main.c: 94: if ( Temp > Pval ) {
  1452  0CF3  0021               	movlb	1	; select bank1
  1453  0CF4  0858               	movf	(_Temp+1)^(0+128),w
  1454  0CF5  025A               	subwf	(_Pval+1)^(0+128),w
  1455  0CF6  1D03               	skipz
  1456  0CF7  2CFA               	goto	u4115
  1457  0CF8  0857               	movf	_Temp^(0+128),w
  1458  0CF9  0259               	subwf	_Pval^(0+128),w
  1459  0CFA                     u4115:	
  1460  0CFA  1803               	skipnc
  1461  0CFB  2D00               	goto	l105
  1462                           
  1463                           ;main.c: 96: RA5 = 0;
  1464  0CFC  0020               	movlb	0	; select bank0
  1465  0CFD  128C               	bcf	12,5	;volatile
  1466                           
  1467                           ;main.c: 97: RC6 = 1;
  1468  0CFE  170E               	bsf	14,6	;volatile
  1469                           
  1470                           ;main.c: 99: }
  1471  0CFF  2D03               	goto	l2747
  1472  0D00                     l105:	
  1473                           
  1474                           ;main.c: 101: else {
  1475                           ;main.c: 103: RA5 = 1;
  1476  0D00  0020               	movlb	0	; select bank0
  1477  0D01  168C               	bsf	12,5	;volatile
  1478                           
  1479                           ;main.c: 104: RC6 = 0;
  1480  0D02  130E               	bcf	14,6	;volatile
  1481  0D03                     l2747:	
  1482                           
  1483                           ;main.c: 106: }
  1484                           ;main.c: 109: ADCON0 = 0x19;
  1485  0D03  3019               	movlw	25
  1486  0D04  0021               	movlb	1	; select bank1
  1487  0D05  009D               	movwf	29	;volatile
  1488                           
  1489                           ;main.c: 110: _delay((unsigned long)((10)*(4000000.0/4000.0)));
  1490  0D06  300D               	movlw	13
  1491  0D07  0020               	movlb	0	; select bank0
  1492  0D08  00ED               	movwf	??_main
  1493  0D09  30FB               	movlw	251
  1494  0D0A                     u4187:	
  1495  0D0A  0B89               	decfsz	9,f
  1496  0D0B  2D0A               	goto	u4187
  1497  0D0C  0BED               	decfsz	??_main,f
  1498  0D0D  2D0A               	goto	u4187
  1499  0D0E  3200               	nop2
  1500                           
  1501                           ;main.c: 111: ADGO = 1;
  1502  0D0F  0021               	movlb	1	; select bank1
  1503  0D10  149D               	bsf	29,1	;volatile
  1504  0D11                     l107:	
  1505                           ;main.c: 112: while(ADGO)continue;
  1506                           
  1507  0D11  189D               	btfsc	29,1	;volatile
  1508  0D12  2D11               	goto	l107
  1509                           
  1510                           ;main.c: 113: Temp = ((ADRESH<<8)+(ADRESL));
  1511  0D13  081C               	movf	28,w	;volatile
  1512  0D14  00D8               	movwf	(_Temp+1)^(0+128)
  1513  0D15  081B               	movf	27,w	;volatile
  1514  0D16  00D7               	movwf	_Temp^(0+128)
  1515                           
  1516                           ;main.c: 115: Voltage = (float)(Temp * 5.0)/1024;
  1517  0D17  3000               	movlw	0
  1518  0D18  0020               	movlb	0	; select bank0
  1519  0D19  00A0               	movwf	___ftdiv@f2
  1520  0D1A  3080               	movlw	128
  1521  0D1B  00A1               	movwf	___ftdiv@f2+1
  1522  0D1C  3044               	movlw	68
  1523  0D1D  00A2               	movwf	___ftdiv@f2+2
  1524  0D1E  3000               	movlw	0
  1525  0D1F  00C0               	movwf	___ftmul@f1
  1526  0D20  30A0               	movlw	160
  1527  0D21  00C1               	movwf	___ftmul@f1+1
  1528  0D22  3040               	movlw	64
  1529  0D23  00C2               	movwf	___ftmul@f1+2
  1530  0D24  0021               	movlb	1	; select bank1
  1531  0D25  0858               	movf	(_Temp+1)^(0+128),w
  1532  0D26  00F9               	movwf	___lwtoft@c+1
  1533  0D27  0857               	movf	_Temp^(0+128),w
  1534  0D28  00F8               	movwf	___lwtoft@c
  1535  0D29  3194  244B  318B   	fcall	___lwtoft
  1536  0D2C  0878               	movf	?___lwtoft,w
  1537  0D2D  0020               	movlb	0	; select bank0
  1538  0D2E  00C3               	movwf	___ftmul@f2
  1539  0D2F  0879               	movf	?___lwtoft+1,w
  1540  0D30  00C4               	movwf	___ftmul@f2+1
  1541  0D31  087A               	movf	?___lwtoft+2,w
  1542  0D32  00C5               	movwf	___ftmul@f2+2
  1543  0D33  3197  274C  318B   	fcall	___ftmul
  1544  0D36  0020               	movlb	0	; select bank0
  1545  0D37  0840               	movf	?___ftmul,w
  1546  0D38  00A3               	movwf	___ftdiv@f1
  1547  0D39  0841               	movf	?___ftmul+1,w
  1548  0D3A  00A4               	movwf	___ftdiv@f1+1
  1549  0D3B  0842               	movf	?___ftmul+2,w
  1550  0D3C  00A5               	movwf	___ftdiv@f1+2
  1551  0D3D  3196  26A3  318B   	fcall	___ftdiv
  1552  0D40  0020               	movlb	0	; select bank0
  1553  0D41  0820               	movf	?___ftdiv,w
  1554  0D42  0021               	movlb	1	; select bank1
  1555  0D43  00CA               	movwf	_Voltage^(0+128)
  1556  0D44  0020               	movlb	0	; select bank0
  1557  0D45  0821               	movf	?___ftdiv+1,w
  1558  0D46  0021               	movlb	1	; select bank1
  1559  0D47  00CB               	movwf	(_Voltage+1)^(0+128)
  1560  0D48  0020               	movlb	0	; select bank0
  1561  0D49  0822               	movf	?___ftdiv+2,w
  1562  0D4A  0021               	movlb	1	; select bank1
  1563  0D4B  00CC               	movwf	(_Voltage+2)^(0+128)
  1564                           
  1565                           ;main.c: 116: Temperature = (Voltage - .5)/ 0.01;
  1566  0D4C  30D7               	movlw	215
  1567  0D4D  0020               	movlb	0	; select bank0
  1568  0D4E  00A0               	movwf	___ftdiv@f2
  1569  0D4F  3023               	movlw	35
  1570  0D50  00A1               	movwf	___ftdiv@f2+1
  1571  0D51  303C               	movlw	60
  1572  0D52  00A2               	movwf	___ftdiv@f2+2
  1573  0D53  3000               	movlw	0
  1574  0D54  00B3               	movwf	___ftadd@f1
  1575  0D55  3000               	movlw	0
  1576  0D56  00B4               	movwf	___ftadd@f1+1
  1577  0D57  30BF               	movlw	191
  1578  0D58  00B5               	movwf	___ftadd@f1+2
  1579  0D59  0021               	movlb	1	; select bank1
  1580  0D5A  084A               	movf	_Voltage^(0+128),w
  1581  0D5B  0020               	movlb	0	; select bank0
  1582  0D5C  00B6               	movwf	___ftadd@f2
  1583  0D5D  0021               	movlb	1	; select bank1
  1584  0D5E  084B               	movf	(_Voltage+1)^(0+128),w
  1585  0D5F  0020               	movlb	0	; select bank0
  1586  0D60  00B7               	movwf	___ftadd@f2+1
  1587  0D61  0021               	movlb	1	; select bank1
  1588  0D62  084C               	movf	(_Voltage+2)^(0+128),w
  1589  0D63  0020               	movlb	0	; select bank0
  1590  0D64  00B8               	movwf	___ftadd@f2+2
  1591  0D65  3188  206A  318B   	fcall	___ftadd
  1592  0D68  0020               	movlb	0	; select bank0
  1593  0D69  0833               	movf	?___ftadd,w
  1594  0D6A  00A3               	movwf	___ftdiv@f1
  1595  0D6B  0834               	movf	?___ftadd+1,w
  1596  0D6C  00A4               	movwf	___ftdiv@f1+1
  1597  0D6D  0835               	movf	?___ftadd+2,w
  1598  0D6E  00A5               	movwf	___ftdiv@f1+2
  1599  0D6F  3196  26A3  318B   	fcall	___ftdiv
  1600  0D72  0020               	movlb	0	; select bank0
  1601  0D73  0820               	movf	?___ftdiv,w
  1602  0D74  0021               	movlb	1	; select bank1
  1603  0D75  00CD               	movwf	_Temperature^(0+128)
  1604  0D76  0020               	movlb	0	; select bank0
  1605  0D77  0821               	movf	?___ftdiv+1,w
  1606  0D78  0021               	movlb	1	; select bank1
  1607  0D79  00CE               	movwf	(_Temperature+1)^(0+128)
  1608  0D7A  0020               	movlb	0	; select bank0
  1609  0D7B  0822               	movf	?___ftdiv+2,w
  1610  0D7C  0021               	movlb	1	; select bank1
  1611  0D7D  00CF               	movwf	(_Temperature+2)^(0+128)
  1612                           
  1613                           ;main.c: 119: ADCON0 = 0x1D;
  1614  0D7E  301D               	movlw	29
  1615  0D7F  009D               	movwf	29	;volatile
  1616                           
  1617                           ;main.c: 120: _delay((unsigned long)((10)*(4000000.0/4000.0)));
  1618  0D80  300D               	movlw	13
  1619  0D81  0020               	movlb	0	; select bank0
  1620  0D82  00ED               	movwf	??_main
  1621  0D83  30FB               	movlw	251
  1622  0D84                     u4197:	
  1623  0D84  0B89               	decfsz	9,f
  1624  0D85  2D84               	goto	u4197
  1625  0D86  0BED               	decfsz	??_main,f
  1626  0D87  2D84               	goto	u4197
  1627  0D88  3200               	nop2
  1628                           
  1629                           ;main.c: 121: ADGO = 1;
  1630  0D89  0021               	movlb	1	; select bank1
  1631  0D8A  149D               	bsf	29,1	;volatile
  1632  0D8B                     l110:	
  1633                           ;main.c: 122: while(ADGO)continue;
  1634                           
  1635  0D8B  189D               	btfsc	29,1	;volatile
  1636  0D8C  2D8B               	goto	l110
  1637                           
  1638                           ;main.c: 123: Photo = ((ADRESH<<8)+(ADRESL));
  1639  0D8D  081C               	movf	28,w	;volatile
  1640  0D8E  00D4               	movwf	(_Photo+1)^(0+128)
  1641  0D8F  081B               	movf	27,w	;volatile
  1642  0D90  00D3               	movwf	_Photo^(0+128)
  1643                           
  1644                           ;main.c: 126: printf("External Raw Temp value is %0.2f RAW | Pot value is %d | Voltage i
      +                          s %d | Photo Value %d \n\r", Temperature, Pval, Voltage, Photo);
  1645  0D91  3027               	movlw	low (STR_2| (0+32768))
  1646  0D92  00A0               	movwf	printf@f^(0+128)
  1647  0D93  3098               	movlw	high (STR_2| (0+32768))
  1648  0D94  00A1               	movwf	(printf@f^(0+128)+1)
  1649  0D95  084D               	movf	_Temperature^(0+128),w
  1650  0D96  00A2               	movwf	(?_printf^(0+128)+2)
  1651  0D97  084E               	movf	(_Temperature+1)^(0+128),w
  1652  0D98  00A3               	movwf	((?_printf+1)^(0+128)+2)
  1653  0D99  084F               	movf	(_Temperature+2)^(0+128),w
  1654  0D9A  00A4               	movwf	((?_printf+2)^(0+128)+2)
  1655  0D9B  085A               	movf	(_Pval+1)^(0+128),w
  1656  0D9C  00A6               	movwf	((?_printf+1)^(0+128)+5)
  1657  0D9D  0859               	movf	_Pval^(0+128),w
  1658  0D9E  00A5               	movwf	(?_printf^(0+128)+5)
  1659  0D9F  084A               	movf	_Voltage^(0+128),w
  1660  0DA0  00A7               	movwf	(?_printf^(0+128)+7)
  1661  0DA1  084B               	movf	(_Voltage+1)^(0+128),w
  1662  0DA2  00A8               	movwf	((?_printf+1)^(0+128)+7)
  1663  0DA3  084C               	movf	(_Voltage+2)^(0+128),w
  1664  0DA4  00A9               	movwf	((?_printf+2)^(0+128)+7)
  1665  0DA5  0854               	movf	(_Photo+1)^(0+128),w
  1666  0DA6  00AB               	movwf	((?_printf+1)^(0+128)+10)
  1667  0DA7  0853               	movf	_Photo^(0+128),w
  1668  0DA8  00AA               	movwf	(?_printf^(0+128)+10)
  1669  0DA9  3180  20F4  318B   	fcall	_printf
  1670                           
  1671                           ;main.c: 127: _delay((unsigned long)((1000)*(4000000.0/4000.0)));
  1672  0DAC  3006               	movlw	6
  1673  0DAD  0020               	movlb	0	; select bank0
  1674  0DAE  00EE               	movwf	??_main+1
  1675  0DAF  3013               	movlw	19
  1676  0DB0  00ED               	movwf	??_main
  1677  0DB1  30AD               	movlw	173
  1678  0DB2                     u4207:	
  1679  0DB2  0B89               	decfsz	9,f
  1680  0DB3  2DB2               	goto	u4207
  1681  0DB4  0BED               	decfsz	??_main,f
  1682  0DB5  2DB2               	goto	u4207
  1683  0DB6  0BEE               	decfsz	??_main+1,f
  1684  0DB7  2DB2               	goto	u4207
  1685  0DB8  3200               	nop2
  1686                           
  1687                           ;main.c: 130: else RA2 = 1;
  1688                           
  1689                           ;main.c: 129: if ( Photo < 0 ) RA2 = 0;
  1690  0DB9  0020               	movlb	0	; select bank0
  1691  0DBA  150C               	bsf	12,2	;volatile
  1692  0DBB  2BEE               	goto	l2717
  1693  0DBC                     __end_of_main:	
  1694                           ;main.c: 132: }
  1695                           ;main.c: 133: return;
  1696                           
  1697                           
  1698                           	psect	text1
  1699  0005                     __ptext1:	
  1700 ;; *************** function _setup_comms *****************
  1701 ;; Defined at:
  1702 ;;		line 136 in file "main.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _setup_comms
  1731  0005                     _setup_comms:	
  1732                           
  1733                           ;main.c: 137: TRISC5 = 1;
  1734                           
  1735                           ;incstack = 0
  1736                           ; Regs used in _setup_comms: [wreg]
  1737  0005  0021               	movlb	1	; select bank1
  1738  0006  168E               	bsf	14,5	;volatile
  1739                           
  1740                           ;main.c: 138: TRISC4 = 1;
  1741  0007  160E               	bsf	14,4	;volatile
  1742                           
  1743                           ;main.c: 139: SPBRG = ((int)(4000000L/(16UL * 9600) -1));
  1744  0008  3000               	movlw	0
  1745  0009  0023               	movlb	3	; select bank3
  1746  000A  009C               	movwf	28	;volatile
  1747  000B  3019               	movlw	25
  1748  000C  009B               	movwf	27	;volatile
  1749                           
  1750                           ;main.c: 140: RCSTA = (0 | 0x90);
  1751  000D  3090               	movlw	144
  1752  000E  009D               	movwf	29	;volatile
  1753                           
  1754                           ;main.c: 141: TXSTA = (0x4 | 0 | 0x20);
  1755  000F  3024               	movlw	36
  1756  0010  009E               	movwf	30	;volatile
  1757                           
  1758                           ;main.c: 142: TXEN = 1;
  1759  0011  169E               	bsf	30,5	;volatile
  1760                           
  1761                           ;main.c: 143: SYNC = 0;
  1762  0012  121E               	bcf	30,4	;volatile
  1763                           
  1764                           ;main.c: 144: SPEN = 1;
  1765  0013  179D               	bsf	29,7	;volatile
  1766                           
  1767                           ;main.c: 145: BRGH = 1;
  1768  0014  151E               	bsf	30,2	;volatile
  1769  0015  0008               	return
  1770  0016                     __end_of_setup_comms:	
  1771                           
  1772                           	psect	text2
  1773  00F4                     __ptext2:	
  1774 ;; *************** function _printf *****************
  1775 ;; Defined at:
  1776 ;;		line 464 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  f               2    0[BANK1 ] PTR const unsigned char 
  1779 ;;		 -> STR_2(91), STR_1(68), 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  val             4   20[BANK1 ] unsigned long 
  1782 ;;  tmpval          4   16[BANK1 ] struct .
  1783 ;;  fval            3   30[BANK1 ] struct .
  1784 ;;  prec            2   33[BANK1 ] int 
  1785 ;;  width           2   28[BANK1 ] int 
  1786 ;;  flag            2   26[BANK1 ] unsigned short 
  1787 ;;  exp             2   24[BANK1 ] int 
  1788 ;;  cp              2    0        PTR const unsigned char 
  1789 ;;  len             2    0        unsigned int 
  1790 ;;  c               1   35[BANK1 ] char 
  1791 ;;  ap              1   15[BANK1 ] PTR void [1]
  1792 ;;		 -> ?_printf(2), 
  1793 ;;  d               1    0        unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  2    0[BANK1 ] int 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1803 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1804 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  1805 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1806 ;;      Totals:         0       6      36       0       0       0       0       0       0       0       0       0       
      +0       0
  1807 ;;Total ram usage:       42 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    3
  1810 ;; This function calls:
  1811 ;;		___awdiv
  1812 ;;		___ftadd
  1813 ;;		___ftge
  1814 ;;		___ftmul
  1815 ;;		___ftneg
  1816 ;;		___ftsub
  1817 ;;		___fttol
  1818 ;;		___lldiv
  1819 ;;		___llmod
  1820 ;;		___lltoft
  1821 ;;		___wmul
  1822 ;;		__div_to_l_
  1823 ;;		__tdiv_to_l_
  1824 ;;		_fround
  1825 ;;		_isdigit
  1826 ;;		_putch
  1827 ;;		_scale
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _printf
  1835  00F4                     _printf:	
  1836                           
  1837                           ;doprnt.c: 466: va_list ap;
  1838                           ;doprnt.c: 499: signed char c;
  1839                           ;doprnt.c: 501: int width;
  1840                           ;doprnt.c: 504: int prec;
  1841                           ;doprnt.c: 508: unsigned short flag;
  1842                           ;doprnt.c: 515: char d;
  1843                           ;doprnt.c: 516: double fval;
  1844                           ;doprnt.c: 517: int exp;
  1845                           ;doprnt.c: 523: union {
  1846                           ;doprnt.c: 524: unsigned long vd;
  1847                           ;doprnt.c: 525: double integ;
  1848                           ;doprnt.c: 526: } tmpval;
  1849                           ;doprnt.c: 528: unsigned long val;
  1850                           ;doprnt.c: 529: unsigned len;
  1851                           ;doprnt.c: 530: const char * cp;
  1852                           ;doprnt.c: 533: *ap = __va_start();
  1853                           
  1854                           ;incstack = 0
  1855                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1856  00F4  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1857  00F5  0020               	movlb	0	; select bank0
  1858  00F6  00E7               	movwf	??_printf
  1859  00F7  0867               	movf	??_printf,w
  1860  00F8  0021               	movlb	1	; select bank1
  1861  00F9  00AF               	movwf	printf@ap^(0+128)
  1862  00FA                     l2663:	
  1863                           ;doprnt.c: 536: while(c = *f++) {
  1864                           
  1865  00FA  0021               	movlb	1	; select bank1
  1866  00FB  0821               	movf	(printf@f+1)^(0+128),w
  1867  00FC  0020               	movlb	0	; select bank0
  1868  00FD  00E8               	movwf	??_printf+1
  1869  00FE  0021               	movlb	1	; select bank1
  1870  00FF  0820               	movf	printf@f^(0+128),w
  1871  0100  0020               	movlb	0	; select bank0
  1872  0101  00E7               	movwf	??_printf
  1873  0102  0021               	movlb	1	; select bank1
  1874  0103  0AA0               	incf	printf@f^(0+128),f
  1875  0104  1903               	skipnz
  1876  0105  0AA1               	incf	(printf@f+1)^(0+128),f
  1877  0106  0020               	movlb	0	; select bank0
  1878  0107  0867               	movf	??_printf,w
  1879  0108  0084               	movwf	4
  1880  0109  0868               	movf	??_printf+1,w
  1881  010A  0085               	movwf	5
  1882  010B  0800               	movf	0,w	;code access
  1883  010C  00E9               	movwf	??_printf+2
  1884  010D  0869               	movf	??_printf+2,w
  1885  010E  0021               	movlb	1	; select bank1
  1886  010F  00C3               	movwf	printf@c^(0+128)
  1887  0110  0843               	movf	printf@c^(0+128),w
  1888  0111  1903               	btfsc	3,2
  1889  0112  0008               	return
  1890                           
  1891                           ;doprnt.c: 538: if(c != '%')
  1892  0113  3025               	movlw	37
  1893  0114  0643               	xorwf	printf@c^(0+128),w
  1894  0115  1903               	btfsc	3,2
  1895  0116  291C               	goto	l2383
  1896                           
  1897                           ;doprnt.c: 540: {
  1898                           ;doprnt.c: 541: (putch(c) );
  1899  0117  0843               	movf	printf@c^(0+128),w
  1900  0118  3194  242C  3180   	fcall	_putch
  1901                           
  1902                           ;doprnt.c: 542: continue;
  1903  011B  28FA               	goto	l2663
  1904  011C                     l2383:	
  1905                           
  1906                           ;doprnt.c: 543: }
  1907                           ;doprnt.c: 546: width = 0;
  1908  011C  0021               	movlb	1	; select bank1
  1909  011D  01BC               	clrf	printf@width^(0+128)
  1910  011E  01BD               	clrf	(printf@width+1)^(0+128)
  1911                           
  1912                           ;doprnt.c: 548: flag = 0;
  1913  011F  01BA               	clrf	printf@flag^(0+128)
  1914  0120  01BB               	clrf	(printf@flag+1)^(0+128)
  1915                           
  1916                           ;doprnt.c: 551: switch(*f) {
  1917                           
  1918                           ;doprnt.c: 550: for(;;) {
  1919  0121  2927               	goto	l2389
  1920  0122                     l183:	
  1921                           ;doprnt.c: 579: case '0':
  1922                           
  1923                           
  1924                           ;doprnt.c: 580: flag |= 0x04;
  1925  0122  153A               	bsf	printf@flag^(0+128),2
  1926                           
  1927                           ;doprnt.c: 581: f++;
  1928  0123  3001               	movlw	1
  1929  0124  07A0               	addwf	printf@f^(0+128),f
  1930  0125  3000               	movlw	0
  1931  0126  3DA1               	addwfc	(printf@f+1)^(0+128),f
  1932  0127                     l2389:	
  1933                           ;doprnt.c: 584: }
  1934                           
  1935                           ;doprnt.c: 582: continue;
  1936                           
  1937  0127  0820               	movf	printf@f^(0+128),w
  1938  0128  0084               	movwf	4
  1939  0129  0821               	movf	(printf@f+1)^(0+128),w
  1940  012A  0085               	movwf	5
  1941  012B  0800               	movf	0,w	;code access
  1942                           
  1943                           ; Switch size 1, requested type "space"
  1944                           ; Number of cases is 1, Range of values is 48 to 48
  1945                           ; switch strategies available:
  1946                           ; Name         Instructions Cycles
  1947                           ; simple_byte            4     3 (average)
  1948                           ; direct_byte           11     9 (fixed)
  1949                           ; jumptable            263     9 (fixed)
  1950                           ;	Chosen strategy is simple_byte
  1951  012C  3A30               	xorlw	48	; case 48
  1952  012D  1903               	skipnz
  1953  012E  2922               	goto	l183
  1954  012F  2930               	goto	l2391
  1955  0130                     l2391:	
  1956                           ;doprnt.c: 586: }
  1957                           
  1958                           ;doprnt.c: 585: break;
  1959                           
  1960                           
  1961                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1962  0130  0820               	movf	printf@f^(0+128),w
  1963  0131  0084               	movwf	4
  1964  0132  0821               	movf	(printf@f+1)^(0+128),w
  1965  0133  0085               	movwf	5
  1966  0134  0800               	movf	0,w	;code access
  1967  0135  3194  243D  3180   	fcall	_isdigit
  1968  0138  1C03               	btfss	3,0
  1969  0139  2976               	goto	l2403
  1970                           
  1971                           ;doprnt.c: 598: width = 0;
  1972  013A  0021               	movlb	1	; select bank1
  1973  013B  01BC               	clrf	printf@width^(0+128)
  1974  013C  01BD               	clrf	(printf@width+1)^(0+128)
  1975  013D                     l2395:	
  1976                           ;doprnt.c: 599: do {
  1977                           
  1978                           
  1979                           ;doprnt.c: 600: width *= 10;
  1980  013D  300A               	movlw	10
  1981  013E  0020               	movlb	0	; select bank0
  1982  013F  00A4               	movwf	___wmul@multiplier
  1983  0140  3000               	movlw	0
  1984  0141  00A5               	movwf	___wmul@multiplier+1
  1985  0142  0021               	movlb	1	; select bank1
  1986  0143  083D               	movf	(printf@width+1)^(0+128),w
  1987  0144  0020               	movlb	0	; select bank0
  1988  0145  00A7               	movwf	___wmul@multiplicand+1
  1989  0146  0021               	movlb	1	; select bank1
  1990  0147  083C               	movf	printf@width^(0+128),w
  1991  0148  0020               	movlb	0	; select bank0
  1992  0149  00A6               	movwf	___wmul@multiplicand
  1993  014A  3194  245E  3180   	fcall	___wmul
  1994  014D  0020               	movlb	0	; select bank0
  1995  014E  0825               	movf	?___wmul+1,w
  1996  014F  0021               	movlb	1	; select bank1
  1997  0150  00BD               	movwf	(printf@width+1)^(0+128)
  1998  0151  0020               	movlb	0	; select bank0
  1999  0152  0824               	movf	?___wmul,w
  2000  0153  0021               	movlb	1	; select bank1
  2001  0154  00BC               	movwf	printf@width^(0+128)
  2002                           
  2003                           ;doprnt.c: 601: width += *f++ - '0';
  2004  0155  0820               	movf	printf@f^(0+128),w
  2005  0156  0084               	movwf	4
  2006  0157  0821               	movf	(printf@f+1)^(0+128),w
  2007  0158  0085               	movwf	5
  2008  0159  0800               	movf	0,w	;code access
  2009  015A  3ED0               	addlw	208
  2010  015B  0020               	movlb	0	; select bank0
  2011  015C  00E7               	movwf	??_printf
  2012  015D  30FF               	movlw	255
  2013  015E  1803               	skipnc
  2014  015F  3000               	movlw	0
  2015  0160  00E8               	movwf	??_printf+1
  2016  0161  0867               	movf	??_printf,w
  2017  0162  0021               	movlb	1	; select bank1
  2018  0163  07BC               	addwf	printf@width^(0+128),f
  2019  0164  0020               	movlb	0	; select bank0
  2020  0165  0868               	movf	??_printf+1,w
  2021  0166  0021               	movlb	1	; select bank1
  2022  0167  3DBD               	addwfc	(printf@width+1)^(0+128),f
  2023  0168  3001               	movlw	1
  2024  0169  07A0               	addwf	printf@f^(0+128),f
  2025  016A  3000               	movlw	0
  2026  016B  3DA1               	addwfc	(printf@f+1)^(0+128),f
  2027                           
  2028                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2029  016C  0820               	movf	printf@f^(0+128),w
  2030  016D  0084               	movwf	4
  2031  016E  0821               	movf	(printf@f+1)^(0+128),w
  2032  016F  0085               	movwf	5
  2033  0170  0800               	movf	0,w	;code access
  2034  0171  3194  243D  3180   	fcall	_isdigit
  2035  0174  1803               	btfsc	3,0
  2036  0175  293D               	goto	l2395
  2037  0176                     l2403:	
  2038                           
  2039                           ;doprnt.c: 608: }
  2040                           ;doprnt.c: 611: if(*f == '.') {
  2041  0176  0021               	movlb	1	; select bank1
  2042  0177  0820               	movf	printf@f^(0+128),w
  2043  0178  0084               	movwf	4
  2044  0179  0821               	movf	(printf@f+1)^(0+128),w
  2045  017A  0085               	movwf	5
  2046  017B  0012               	moviw fsr0++
  2047  017C  3A2E               	xorlw	46
  2048  017D  1D03               	btfss	3,2
  2049  017E  29BD               	goto	l2417
  2050                           
  2051                           ;doprnt.c: 612: flag |= 0x4000;
  2052  017F  173B               	bsf	(printf@flag^(0+128)+1),6
  2053                           
  2054                           ;doprnt.c: 613: f++;
  2055  0180  3001               	movlw	1
  2056  0181  07A0               	addwf	printf@f^(0+128),f
  2057  0182  3000               	movlw	0
  2058  0183  3DA1               	addwfc	(printf@f+1)^(0+128),f
  2059                           
  2060                           ;doprnt.c: 620: {
  2061                           ;doprnt.c: 621: prec = 0;
  2062  0184  01C1               	clrf	printf@prec^(0+128)
  2063  0185  01C2               	clrf	(printf@prec+1)^(0+128)
  2064  0186                     l2415:	
  2065                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2066                           
  2067  0186  0820               	movf	printf@f^(0+128),w
  2068  0187  0084               	movwf	4
  2069  0188  0821               	movf	(printf@f+1)^(0+128),w
  2070  0189  0085               	movwf	5
  2071  018A  0800               	movf	0,w	;code access
  2072  018B  3194  243D  3180   	fcall	_isdigit
  2073  018E  1C03               	btfss	3,0
  2074  018F  29C4               	goto	l2423
  2075                           
  2076                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2077  0190  0021               	movlb	1	; select bank1
  2078  0191  0820               	movf	printf@f^(0+128),w
  2079  0192  0084               	movwf	4
  2080  0193  0821               	movf	(printf@f+1)^(0+128),w
  2081  0194  0085               	movwf	5
  2082  0195  0800               	movf	0,w	;code access
  2083  0196  0020               	movlb	0	; select bank0
  2084  0197  00E7               	movwf	??_printf
  2085  0198  01E8               	clrf	??_printf+1
  2086  0199  0021               	movlb	1	; select bank1
  2087  019A  0842               	movf	(printf@prec+1)^(0+128),w
  2088  019B  0020               	movlb	0	; select bank0
  2089  019C  00A5               	movwf	___wmul@multiplier+1
  2090  019D  0021               	movlb	1	; select bank1
  2091  019E  0841               	movf	printf@prec^(0+128),w
  2092  019F  0020               	movlb	0	; select bank0
  2093  01A0  00A4               	movwf	___wmul@multiplier
  2094  01A1  300A               	movlw	10
  2095  01A2  00A6               	movwf	___wmul@multiplicand
  2096  01A3  3000               	movlw	0
  2097  01A4  00A7               	movwf	___wmul@multiplicand+1
  2098  01A5  3194  245E  3180   	fcall	___wmul
  2099  01A8  0020               	movlb	0	; select bank0
  2100  01A9  0867               	movf	??_printf,w
  2101  01AA  0724               	addwf	?___wmul,w
  2102  01AB  00E9               	movwf	??_printf+2
  2103  01AC  0868               	movf	??_printf+1,w
  2104  01AD  3D25               	addwfc	?___wmul+1,w
  2105  01AE  00EA               	movwf	??_printf+3
  2106  01AF  0869               	movf	??_printf+2,w
  2107  01B0  3ED0               	addlw	208
  2108  01B1  0021               	movlb	1	; select bank1
  2109  01B2  00C1               	movwf	printf@prec^(0+128)
  2110  01B3  30FF               	movlw	255
  2111  01B4  0020               	movlb	0	; select bank0
  2112  01B5  3D6A               	addwfc	??_printf+3,w
  2113  01B6  0021               	movlb	1	; select bank1
  2114  01B7  00C2               	movwf	(printf@prec+1)^(0+128)
  2115  01B8  3001               	movlw	1
  2116  01B9  07A0               	addwf	printf@f^(0+128),f
  2117  01BA  3000               	movlw	0
  2118  01BB  3DA1               	addwfc	(printf@f+1)^(0+128),f
  2119  01BC  2986               	goto	l2415
  2120  01BD                     l2417:	
  2121                           ;doprnt.c: 624: }
  2122                           ;doprnt.c: 625: } else {
  2123                           
  2124                           
  2125                           ;doprnt.c: 626: prec = 0;
  2126  01BD  0021               	movlb	1	; select bank1
  2127  01BE  01C1               	clrf	printf@prec^(0+128)
  2128  01BF  01C2               	clrf	(printf@prec+1)^(0+128)
  2129                           
  2130                           ;doprnt.c: 628: flag |= 0x1000;
  2131  01C0  163B               	bsf	(printf@flag^(0+128)+1),4
  2132                           
  2133                           ;doprnt.c: 630: }
  2134                           ;doprnt.c: 635: switch(c = *f++) {
  2135  01C1  29C4               	goto	l2423
  2136  01C2                     l198:	
  2137                           ;doprnt.c: 662: case 'f':
  2138                           
  2139                           ;doprnt.c: 638: goto alldone;
  2140                           
  2141                           ;doprnt.c: 637: case 0:
  2142                           
  2143                           
  2144                           ;doprnt.c: 663: flag |= 0x400;
  2145  01C2  153B               	bsf	(printf@flag^(0+128)+1),2
  2146                           
  2147                           ;doprnt.c: 698: case 'i':
  2148                           ;doprnt.c: 699: break;
  2149                           
  2150                           ;doprnt.c: 697: case 'd':
  2151                           
  2152                           ;doprnt.c: 664: break;
  2153  01C3  29E5               	goto	l2425
  2154  01C4                     l2423:	
  2155                           ;doprnt.c: 822: }
  2156                           
  2157                           ;doprnt.c: 813: continue;
  2158                           
  2159                           ;doprnt.c: 802: default:
  2160                           
  2161  01C4  0021               	movlb	1	; select bank1
  2162  01C5  0821               	movf	(printf@f+1)^(0+128),w
  2163  01C6  0020               	movlb	0	; select bank0
  2164  01C7  00E8               	movwf	??_printf+1
  2165  01C8  0021               	movlb	1	; select bank1
  2166  01C9  0820               	movf	printf@f^(0+128),w
  2167  01CA  0020               	movlb	0	; select bank0
  2168  01CB  00E7               	movwf	??_printf
  2169  01CC  0021               	movlb	1	; select bank1
  2170  01CD  0AA0               	incf	printf@f^(0+128),f
  2171  01CE  1903               	skipnz
  2172  01CF  0AA1               	incf	(printf@f+1)^(0+128),f
  2173  01D0  0020               	movlb	0	; select bank0
  2174  01D1  0867               	movf	??_printf,w
  2175  01D2  0084               	movwf	4
  2176  01D3  0868               	movf	??_printf+1,w
  2177  01D4  0085               	movwf	5
  2178  01D5  0800               	movf	0,w	;code access
  2179  01D6  0021               	movlb	1	; select bank1
  2180  01D7  00C3               	movwf	printf@c^(0+128)
  2181                           
  2182                           ; Switch size 1, requested type "space"
  2183                           ; Number of cases is 4, Range of values is 0 to 105
  2184                           ; switch strategies available:
  2185                           ; Name         Instructions Cycles
  2186                           ; simple_byte           13     7 (average)
  2187                           ; direct_byte          218     6 (fixed)
  2188                           ; jumptable            260     6 (fixed)
  2189                           ;	Chosen strategy is simple_byte
  2190  01D8  3A00               	xorlw	0	; case 0
  2191  01D9  1903               	skipnz
  2192  01DA  2FF5               	goto	l280
  2193  01DB  3A64               	xorlw	100	; case 100
  2194  01DC  1903               	skipnz
  2195  01DD  29E5               	goto	l2425
  2196  01DE  3A02               	xorlw	2	; case 102
  2197  01DF  1903               	skipnz
  2198  01E0  29C2               	goto	l198
  2199  01E1  3A0F               	xorlw	15	; case 105
  2200  01E2  1903               	skipnz
  2201  01E3  29E5               	goto	l2425
  2202  01E4  28FA               	goto	l2663
  2203  01E5                     l2425:	
  2204                           
  2205                           ;doprnt.c: 825: if(flag & (0x700)) {
  2206  01E5  3000               	movlw	0
  2207  01E6  053A               	andwf	printf@flag^(0+128),w
  2208  01E7  0020               	movlb	0	; select bank0
  2209  01E8  00E7               	movwf	??_printf
  2210  01E9  3007               	movlw	7
  2211  01EA  0021               	movlb	1	; select bank1
  2212  01EB  053B               	andwf	(printf@flag+1)^(0+128),w
  2213  01EC  0020               	movlb	0	; select bank0
  2214  01ED  00E8               	movwf	??_printf+1
  2215  01EE  0867               	movf	??_printf,w
  2216  01EF  0468               	iorwf	??_printf+1,w
  2217  01F0  1903               	btfsc	3,2
  2218  01F1  2E5D               	goto	l2581
  2219                           
  2220                           ;doprnt.c: 827: if(flag & 0x1000)
  2221  01F2  0021               	movlb	1	; select bank1
  2222  01F3  1E3B               	btfss	(printf@flag+1)^(0+128),4
  2223  01F4  29F9               	goto	l2431
  2224                           
  2225                           ;doprnt.c: 829: prec = 6;
  2226  01F5  3006               	movlw	6
  2227  01F6  00C1               	movwf	printf@prec^(0+128)
  2228  01F7  3000               	movlw	0
  2229  01F8  00C2               	movwf	(printf@prec^(0+128)+1)
  2230  01F9                     l2431:	
  2231                           
  2232                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2233  01F9  082F               	movf	printf@ap^(0+128),w
  2234  01FA  0086               	movwf	6
  2235  01FB  0187               	clrf	7
  2236  01FC  3F40               	moviw [0]fsr1
  2237  01FD  00BE               	movwf	printf@fval^(0+128)
  2238  01FE  3F41               	moviw [1]fsr1
  2239  01FF  00BF               	movwf	(printf@fval+1)^(0+128)
  2240  0200  3F42               	moviw [2]fsr1
  2241  0201  00C0               	movwf	(printf@fval+2)^(0+128)
  2242  0202  3003               	movlw	3
  2243  0203  0020               	movlb	0	; select bank0
  2244  0204  00E7               	movwf	??_printf
  2245  0205  0867               	movf	??_printf,w
  2246  0206  0021               	movlb	1	; select bank1
  2247  0207  07AF               	addwf	printf@ap^(0+128),f
  2248                           
  2249                           ;doprnt.c: 831: if(fval < 0.0) {
  2250  0208  083E               	movf	printf@fval^(0+128),w
  2251  0209  00F0               	movwf	___ftge@ff1
  2252  020A  083F               	movf	(printf@fval+1)^(0+128),w
  2253  020B  00F1               	movwf	___ftge@ff1+1
  2254  020C  0840               	movf	(printf@fval+2)^(0+128),w
  2255  020D  00F2               	movwf	___ftge@ff1+2
  2256  020E  3000               	movlw	0
  2257  020F  00F3               	movwf	___ftge@ff2
  2258  0210  3000               	movlw	0
  2259  0211  00F4               	movwf	___ftge@ff2+1
  2260  0212  3000               	movlw	0
  2261  0213  00F5               	movwf	___ftge@ff2+2
  2262  0214  3194  24B5  3180   	fcall	___ftge
  2263  0217  1803               	btfsc	3,0
  2264  0218  2A38               	goto	l2441
  2265                           
  2266                           ;doprnt.c: 832: fval = -fval;
  2267  0219  0021               	movlb	1	; select bank1
  2268  021A  083E               	movf	printf@fval^(0+128),w
  2269  021B  0020               	movlb	0	; select bank0
  2270  021C  00B0               	movwf	___ftneg@f1
  2271  021D  0021               	movlb	1	; select bank1
  2272  021E  083F               	movf	(printf@fval+1)^(0+128),w
  2273  021F  0020               	movlb	0	; select bank0
  2274  0220  00B1               	movwf	___ftneg@f1+1
  2275  0221  0021               	movlb	1	; select bank1
  2276  0222  0840               	movf	(printf@fval+2)^(0+128),w
  2277  0223  0020               	movlb	0	; select bank0
  2278  0224  00B2               	movwf	___ftneg@f1+2
  2279  0225  3194  2434  3180   	fcall	___ftneg
  2280  0228  0020               	movlb	0	; select bank0
  2281  0229  0830               	movf	?___ftneg,w
  2282  022A  0021               	movlb	1	; select bank1
  2283  022B  00BE               	movwf	printf@fval^(0+128)
  2284  022C  0020               	movlb	0	; select bank0
  2285  022D  0831               	movf	?___ftneg+1,w
  2286  022E  0021               	movlb	1	; select bank1
  2287  022F  00BF               	movwf	(printf@fval+1)^(0+128)
  2288  0230  0020               	movlb	0	; select bank0
  2289  0231  0832               	movf	?___ftneg+2,w
  2290  0232  0021               	movlb	1	; select bank1
  2291  0233  00C0               	movwf	(printf@fval+2)^(0+128)
  2292                           
  2293                           ;doprnt.c: 833: flag |= 0x03;
  2294  0234  3003               	movlw	3
  2295  0235  04BA               	iorwf	printf@flag^(0+128),f
  2296  0236  3000               	movlw	0
  2297  0237  04BB               	iorwf	(printf@flag+1)^(0+128),f
  2298  0238                     l2441:	
  2299                           
  2300                           ;doprnt.c: 834: }
  2301                           ;doprnt.c: 835: exp = 0;
  2302  0238  0021               	movlb	1	; select bank1
  2303  0239  01B8               	clrf	printf@exp^(0+128)
  2304  023A  01B9               	clrf	(printf@exp+1)^(0+128)
  2305                           
  2306                           ;doprnt.c: 836: if( fval!=0) {
  2307  023B  0840               	movf	(printf@fval+2)^(0+128),w
  2308  023C  043F               	iorwf	(printf@fval+1)^(0+128),w
  2309  023D  043E               	iorwf	printf@fval^(0+128),w
  2310  023E  1903               	skipnz
  2311  023F  2AF8               	goto	l206
  2312                           
  2313                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2314  0240  30BE               	movlw	low (printf@fval| 0)
  2315  0241  0086               	movwf	6
  2316  0242  0187               	clrf	7
  2317  0243  3F40               	moviw [0]fsr1
  2318  0244  0020               	movlb	0	; select bank0
  2319  0245  00E7               	movwf	??_printf
  2320  0246  3F41               	moviw [1]fsr1
  2321  0247  00E8               	movwf	??_printf+1
  2322  0248  3F42               	moviw [2]fsr1
  2323  0249  00E9               	movwf	??_printf+2
  2324  024A  3F43               	moviw [3]fsr1
  2325  024B  00EA               	movwf	??_printf+3
  2326  024C  300F               	movlw	15
  2327  024D                     u3525:	
  2328  024D  36EA               	lsrf	??_printf+3,f
  2329  024E  0CE9               	rrf	??_printf+2,f
  2330  024F  0CE8               	rrf	??_printf+1,f
  2331  0250  0CE7               	rrf	??_printf,f
  2332  0251  0B89               	decfsz	9,f
  2333  0252  2A4D               	goto	u3525
  2334  0253  30FF               	movlw	255
  2335  0254  0567               	andwf	??_printf,w
  2336  0255  00EB               	movwf	??_printf+4
  2337  0256  3000               	movlw	0
  2338  0257  0568               	andwf	??_printf+1,w
  2339  0258  00EC               	movwf	??_printf+5
  2340  0259  086B               	movf	??_printf+4,w
  2341  025A  3E82               	addlw	130
  2342  025B  0021               	movlb	1	; select bank1
  2343  025C  00B8               	movwf	printf@exp^(0+128)
  2344  025D  30FF               	movlw	255
  2345  025E  0020               	movlb	0	; select bank0
  2346  025F  3D6C               	addwfc	??_printf+5,w
  2347  0260  0021               	movlb	1	; select bank1
  2348  0261  00B9               	movwf	(printf@exp+1)^(0+128)
  2349                           
  2350                           ;doprnt.c: 838: exp--;
  2351  0262  30FF               	movlw	255
  2352  0263  07B8               	addwf	printf@exp^(0+128),f
  2353  0264  30FF               	movlw	255
  2354  0265  3DB9               	addwfc	(printf@exp+1)^(0+128),f
  2355                           
  2356                           ;doprnt.c: 839: exp *= 3;
  2357  0266  3003               	movlw	3
  2358  0267  0020               	movlb	0	; select bank0
  2359  0268  00A4               	movwf	___wmul@multiplier
  2360  0269  3000               	movlw	0
  2361  026A  00A5               	movwf	___wmul@multiplier+1
  2362  026B  0021               	movlb	1	; select bank1
  2363  026C  0839               	movf	(printf@exp+1)^(0+128),w
  2364  026D  0020               	movlb	0	; select bank0
  2365  026E  00A7               	movwf	___wmul@multiplicand+1
  2366  026F  0021               	movlb	1	; select bank1
  2367  0270  0838               	movf	printf@exp^(0+128),w
  2368  0271  0020               	movlb	0	; select bank0
  2369  0272  00A6               	movwf	___wmul@multiplicand
  2370  0273  3194  245E  3180   	fcall	___wmul
  2371  0276  0020               	movlb	0	; select bank0
  2372  0277  0825               	movf	?___wmul+1,w
  2373  0278  0021               	movlb	1	; select bank1
  2374  0279  00B9               	movwf	(printf@exp+1)^(0+128)
  2375  027A  0020               	movlb	0	; select bank0
  2376  027B  0824               	movf	?___wmul,w
  2377  027C  0021               	movlb	1	; select bank1
  2378  027D  00B8               	movwf	printf@exp^(0+128)
  2379                           
  2380                           ;doprnt.c: 840: exp /= 10;
  2381  027E  300A               	movlw	10
  2382  027F  00F7               	movwf	___awdiv@divisor
  2383  0280  3000               	movlw	0
  2384  0281  00F8               	movwf	___awdiv@divisor+1
  2385  0282  0839               	movf	(printf@exp+1)^(0+128),w
  2386  0283  00FA               	movwf	___awdiv@dividend+1
  2387  0284  0838               	movf	printf@exp^(0+128),w
  2388  0285  00F9               	movwf	___awdiv@dividend
  2389  0286  3195  25CA  3180   	fcall	___awdiv
  2390  0289  0878               	movf	?___awdiv+1,w
  2391  028A  0021               	movlb	1	; select bank1
  2392  028B  00B9               	movwf	(printf@exp+1)^(0+128)
  2393  028C  0877               	movf	?___awdiv,w
  2394  028D  00B8               	movwf	printf@exp^(0+128)
  2395                           
  2396                           ;doprnt.c: 841: if(exp < 0)
  2397  028E  1FB9               	btfss	(printf@exp+1)^(0+128),7
  2398  028F  2A94               	goto	l2457
  2399                           
  2400                           ;doprnt.c: 842: exp--;
  2401  0290  30FF               	movlw	255
  2402  0291  07B8               	addwf	printf@exp^(0+128),f
  2403  0292  30FF               	movlw	255
  2404  0293  3DB9               	addwfc	(printf@exp+1)^(0+128),f
  2405  0294                     l2457:	
  2406                           
  2407                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2408  0294  0338               	decf	printf@exp^(0+128),w
  2409  0295  3AFF               	xorlw	255
  2410  0296  318D  25BC  3180   	fcall	_scale
  2411  0299  0020               	movlb	0	; select bank0
  2412  029A  0850               	movf	?_scale,w
  2413  029B  0021               	movlb	1	; select bank1
  2414  029C  00B0               	movwf	printf@tmpval^(0+128)
  2415  029D  0020               	movlb	0	; select bank0
  2416  029E  0851               	movf	?_scale+1,w
  2417  029F  0021               	movlb	1	; select bank1
  2418  02A0  00B1               	movwf	(printf@tmpval+1)^(0+128)
  2419  02A1  0020               	movlb	0	; select bank0
  2420  02A2  0852               	movf	?_scale+2,w
  2421  02A3  0021               	movlb	1	; select bank1
  2422  02A4  00B2               	movwf	(printf@tmpval+2)^(0+128)
  2423                           
  2424                           ;doprnt.c: 847: tmpval.integ *= fval;
  2425  02A5  083E               	movf	printf@fval^(0+128),w
  2426  02A6  0020               	movlb	0	; select bank0
  2427  02A7  00C0               	movwf	___ftmul@f1
  2428  02A8  0021               	movlb	1	; select bank1
  2429  02A9  083F               	movf	(printf@fval+1)^(0+128),w
  2430  02AA  0020               	movlb	0	; select bank0
  2431  02AB  00C1               	movwf	___ftmul@f1+1
  2432  02AC  0021               	movlb	1	; select bank1
  2433  02AD  0840               	movf	(printf@fval+2)^(0+128),w
  2434  02AE  0020               	movlb	0	; select bank0
  2435  02AF  00C2               	movwf	___ftmul@f1+2
  2436  02B0  0021               	movlb	1	; select bank1
  2437  02B1  0830               	movf	printf@tmpval^(0+128),w
  2438  02B2  0020               	movlb	0	; select bank0
  2439  02B3  00C3               	movwf	___ftmul@f2
  2440  02B4  0021               	movlb	1	; select bank1
  2441  02B5  0831               	movf	(printf@tmpval+1)^(0+128),w
  2442  02B6  0020               	movlb	0	; select bank0
  2443  02B7  00C4               	movwf	___ftmul@f2+1
  2444  02B8  0021               	movlb	1	; select bank1
  2445  02B9  0832               	movf	(printf@tmpval+2)^(0+128),w
  2446  02BA  0020               	movlb	0	; select bank0
  2447  02BB  00C5               	movwf	___ftmul@f2+2
  2448  02BC  3197  274C  3180   	fcall	___ftmul
  2449  02BF  0020               	movlb	0	; select bank0
  2450  02C0  0840               	movf	?___ftmul,w
  2451  02C1  0021               	movlb	1	; select bank1
  2452  02C2  00B0               	movwf	printf@tmpval^(0+128)
  2453  02C3  0020               	movlb	0	; select bank0
  2454  02C4  0841               	movf	?___ftmul+1,w
  2455  02C5  0021               	movlb	1	; select bank1
  2456  02C6  00B1               	movwf	(printf@tmpval+1)^(0+128)
  2457  02C7  0020               	movlb	0	; select bank0
  2458  02C8  0842               	movf	?___ftmul+2,w
  2459  02C9  0021               	movlb	1	; select bank1
  2460  02CA  00B2               	movwf	(printf@tmpval+2)^(0+128)
  2461                           
  2462                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2463  02CB  0830               	movf	printf@tmpval^(0+128),w
  2464  02CC  00F0               	movwf	___ftge@ff1
  2465  02CD  0831               	movf	(printf@tmpval+1)^(0+128),w
  2466  02CE  00F1               	movwf	___ftge@ff1+1
  2467  02CF  0832               	movf	(printf@tmpval+2)^(0+128),w
  2468  02D0  00F2               	movwf	___ftge@ff1+2
  2469  02D1  3000               	movlw	0
  2470  02D2  00F3               	movwf	___ftge@ff2
  2471  02D3  3080               	movlw	128
  2472  02D4  00F4               	movwf	___ftge@ff2+1
  2473  02D5  303F               	movlw	63
  2474  02D6  00F5               	movwf	___ftge@ff2+2
  2475  02D7  3194  24B5  3180   	fcall	___ftge
  2476  02DA  1803               	btfsc	3,0
  2477  02DB  2AE1               	goto	l2465
  2478                           
  2479                           ;doprnt.c: 849: exp--;
  2480  02DC  30FF               	movlw	255
  2481  02DD  0021               	movlb	1	; select bank1
  2482  02DE  07B8               	addwf	printf@exp^(0+128),f
  2483  02DF  30FF               	movlw	255
  2484  02E0  2AF7               	goto	L2
  2485  02E1                     l2465:	
  2486                           
  2487                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2488  02E1  0021               	movlb	1	; select bank1
  2489  02E2  0830               	movf	printf@tmpval^(0+128),w
  2490  02E3  00F0               	movwf	___ftge@ff1
  2491  02E4  0831               	movf	(printf@tmpval+1)^(0+128),w
  2492  02E5  00F1               	movwf	___ftge@ff1+1
  2493  02E6  0832               	movf	(printf@tmpval+2)^(0+128),w
  2494  02E7  00F2               	movwf	___ftge@ff1+2
  2495  02E8  3000               	movlw	0
  2496  02E9  00F3               	movwf	___ftge@ff2
  2497  02EA  3020               	movlw	32
  2498  02EB  00F4               	movwf	___ftge@ff2+1
  2499  02EC  3041               	movlw	65
  2500  02ED  00F5               	movwf	___ftge@ff2+2
  2501  02EE  3194  24B5  3180   	fcall	___ftge
  2502  02F1  1C03               	btfss	3,0
  2503  02F2  2AF8               	goto	l206
  2504                           
  2505                           ;doprnt.c: 851: exp++;
  2506  02F3  3001               	movlw	1
  2507  02F4  0021               	movlb	1	; select bank1
  2508  02F5  07B8               	addwf	printf@exp^(0+128),f
  2509  02F6  3000               	movlw	0
  2510  02F7                     L2:	
  2511  02F7  3DB9               	addwfc	(printf@exp+1)^(0+128),f
  2512  02F8                     l206:	
  2513                           
  2514                           ;doprnt.c: 852: }
  2515                           ;doprnt.c: 1112: if(prec <= 12)
  2516  02F8  0021               	movlb	1	; select bank1
  2517  02F9  0842               	movf	(printf@prec+1)^(0+128),w
  2518  02FA  3A80               	xorlw	128
  2519  02FB  0020               	movlb	0	; select bank0
  2520  02FC  00E7               	movwf	??_printf
  2521  02FD  3080               	movlw	128
  2522  02FE  0267               	subwf	??_printf,w
  2523  02FF  1D03               	skipz
  2524  0300  2B04               	goto	u3565
  2525  0301  300D               	movlw	13
  2526  0302  0021               	movlb	1	; select bank1
  2527  0303  0241               	subwf	printf@prec^(0+128),w
  2528  0304                     u3565:	
  2529  0304  1803               	skipnc
  2530  0305  2B2D               	goto	l2471
  2531                           
  2532                           ;doprnt.c: 1113: fval += fround(prec);
  2533  0306  0021               	movlb	1	; select bank1
  2534  0307  0841               	movf	printf@prec^(0+128),w
  2535  0308  318A  227D  3180   	fcall	_fround
  2536  030B  0020               	movlb	0	; select bank0
  2537  030C  0850               	movf	?_fround,w
  2538  030D  00B3               	movwf	___ftadd@f1
  2539  030E  0851               	movf	?_fround+1,w
  2540  030F  00B4               	movwf	___ftadd@f1+1
  2541  0310  0852               	movf	?_fround+2,w
  2542  0311  00B5               	movwf	___ftadd@f1+2
  2543  0312  0021               	movlb	1	; select bank1
  2544  0313  083E               	movf	printf@fval^(0+128),w
  2545  0314  0020               	movlb	0	; select bank0
  2546  0315  00B6               	movwf	___ftadd@f2
  2547  0316  0021               	movlb	1	; select bank1
  2548  0317  083F               	movf	(printf@fval+1)^(0+128),w
  2549  0318  0020               	movlb	0	; select bank0
  2550  0319  00B7               	movwf	___ftadd@f2+1
  2551  031A  0021               	movlb	1	; select bank1
  2552  031B  0840               	movf	(printf@fval+2)^(0+128),w
  2553  031C  0020               	movlb	0	; select bank0
  2554  031D  00B8               	movwf	___ftadd@f2+2
  2555  031E  3188  206A  3180   	fcall	___ftadd
  2556  0321  0020               	movlb	0	; select bank0
  2557  0322  0833               	movf	?___ftadd,w
  2558  0323  0021               	movlb	1	; select bank1
  2559  0324  00BE               	movwf	printf@fval^(0+128)
  2560  0325  0020               	movlb	0	; select bank0
  2561  0326  0834               	movf	?___ftadd+1,w
  2562  0327  0021               	movlb	1	; select bank1
  2563  0328  00BF               	movwf	(printf@fval+1)^(0+128)
  2564  0329  0020               	movlb	0	; select bank0
  2565  032A  0835               	movf	?___ftadd+2,w
  2566  032B  0021               	movlb	1	; select bank1
  2567  032C  00C0               	movwf	(printf@fval+2)^(0+128)
  2568  032D                     l2471:	
  2569                           
  2570                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2571  032D  0021               	movlb	1	; select bank1
  2572  032E  0839               	movf	(printf@exp+1)^(0+128),w
  2573  032F  3A80               	xorlw	128
  2574  0330  0020               	movlb	0	; select bank0
  2575  0331  00E7               	movwf	??_printf
  2576  0332  3080               	movlw	128
  2577  0333  0267               	subwf	??_printf,w
  2578  0334  1D03               	skipz
  2579  0335  2B39               	goto	u3575
  2580  0336  300A               	movlw	10
  2581  0337  0021               	movlb	1	; select bank1
  2582  0338  0238               	subwf	printf@exp^(0+128),w
  2583  0339                     u3575:	
  2584  0339  1803               	skipnc
  2585  033A  2B64               	goto	l2479
  2586  033B  0021               	movlb	1	; select bank1
  2587  033C  0840               	movf	(printf@fval+2)^(0+128),w
  2588  033D  043F               	iorwf	(printf@fval+1)^(0+128),w
  2589  033E  043E               	iorwf	printf@fval^(0+128),w
  2590  033F  1903               	skipnz
  2591  0340  2BAC               	goto	l2493
  2592  0341  083E               	movf	printf@fval^(0+128),w
  2593  0342  0020               	movlb	0	; select bank0
  2594  0343  00D9               	movwf	___fttol@f1
  2595  0344  0021               	movlb	1	; select bank1
  2596  0345  083F               	movf	(printf@fval+1)^(0+128),w
  2597  0346  0020               	movlb	0	; select bank0
  2598  0347  00DA               	movwf	___fttol@f1+1
  2599  0348  0021               	movlb	1	; select bank1
  2600  0349  0840               	movf	(printf@fval+2)^(0+128),w
  2601  034A  0020               	movlb	0	; select bank0
  2602  034B  00DB               	movwf	___fttol@f1+2
  2603  034C  3196  261C  3180   	fcall	___fttol
  2604  034F  0020               	movlb	0	; select bank0
  2605  0350  085C               	movf	?___fttol+3,w
  2606  0351  045B               	iorwf	?___fttol+2,w
  2607  0352  045A               	iorwf	?___fttol+1,w
  2608  0353  0459               	iorwf	?___fttol,w
  2609  0354  1D03               	skipz
  2610  0355  2BAC               	goto	l2493
  2611  0356  0021               	movlb	1	; select bank1
  2612  0357  0839               	movf	(printf@exp+1)^(0+128),w
  2613  0358  3A80               	xorlw	128
  2614  0359  0020               	movlb	0	; select bank0
  2615  035A  00E7               	movwf	??_printf
  2616  035B  3080               	movlw	128
  2617  035C  0267               	subwf	??_printf,w
  2618  035D  1D03               	skipz
  2619  035E  2B62               	goto	u3605
  2620  035F  3002               	movlw	2
  2621  0360  0021               	movlb	1	; select bank1
  2622  0361  0238               	subwf	printf@exp^(0+128),w
  2623  0362                     u3605:	
  2624  0362  1C03               	skipc
  2625  0363  2BAC               	goto	l2493
  2626  0364                     l2479:	
  2627                           
  2628                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2629  0364  0021               	movlb	1	; select bank1
  2630  0365  0830               	movf	printf@tmpval^(0+128),w
  2631  0366  00F0               	movwf	___ftge@ff1
  2632  0367  0831               	movf	(printf@tmpval+1)^(0+128),w
  2633  0368  00F1               	movwf	___ftge@ff1+1
  2634  0369  0832               	movf	(printf@tmpval+2)^(0+128),w
  2635  036A  00F2               	movwf	___ftge@ff1+2
  2636  036B  3070               	movlw	112
  2637  036C  00F3               	movwf	___ftge@ff2
  2638  036D  3089               	movlw	137
  2639  036E  00F4               	movwf	___ftge@ff2+1
  2640  036F  3040               	movlw	64
  2641  0370  00F5               	movwf	___ftge@ff2+2
  2642  0371  3194  24B5  3180   	fcall	___ftge
  2643  0374  1803               	btfsc	3,0
  2644  0375  2B78               	goto	l2483
  2645                           
  2646                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2647  0376  30F7               	movlw	247
  2648  0377  2B79               	goto	L3
  2649  0378                     l2483:	
  2650                           ;doprnt.c: 1122: }else{
  2651                           
  2652                           
  2653                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2654  0378  30F8               	movlw	248
  2655  0379                     L3:	
  2656  0379  0021               	movlb	1	; select bank1
  2657  037A  07B8               	addwf	printf@exp^(0+128),f
  2658  037B  30FF               	movlw	255
  2659  037C  3DB9               	addwfc	(printf@exp+1)^(0+128),f
  2660                           
  2661                           ;doprnt.c: 1124: }
  2662                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2663  037D  0838               	movf	printf@exp^(0+128),w
  2664  037E  318D  25BC  3180   	fcall	_scale
  2665  0381  0020               	movlb	0	; select bank0
  2666  0382  0850               	movf	?_scale,w
  2667  0383  0021               	movlb	1	; select bank1
  2668  0384  00B0               	movwf	printf@tmpval^(0+128)
  2669  0385  0020               	movlb	0	; select bank0
  2670  0386  0851               	movf	?_scale+1,w
  2671  0387  0021               	movlb	1	; select bank1
  2672  0388  00B1               	movwf	(printf@tmpval+1)^(0+128)
  2673  0389  0020               	movlb	0	; select bank0
  2674  038A  0852               	movf	?_scale+2,w
  2675  038B  0021               	movlb	1	; select bank1
  2676  038C  00B2               	movwf	(printf@tmpval+2)^(0+128)
  2677                           
  2678                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2679  038D  083E               	movf	printf@fval^(0+128),w
  2680  038E  00F0               	movwf	__tdiv_to_l_@f1
  2681  038F  083F               	movf	(printf@fval+1)^(0+128),w
  2682  0390  00F1               	movwf	__tdiv_to_l_@f1+1
  2683  0391  0840               	movf	(printf@fval+2)^(0+128),w
  2684  0392  00F2               	movwf	__tdiv_to_l_@f1+2
  2685  0393  0830               	movf	printf@tmpval^(0+128),w
  2686  0394  00F3               	movwf	__tdiv_to_l_@f2
  2687  0395  0831               	movf	(printf@tmpval+1)^(0+128),w
  2688  0396  00F4               	movwf	__tdiv_to_l_@f2+1
  2689  0397  0832               	movf	(printf@tmpval+2)^(0+128),w
  2690  0398  00F5               	movwf	__tdiv_to_l_@f2+2
  2691  0399  3180  203E  3180   	fcall	__tdiv_to_l_
  2692  039C  0873               	movf	?__tdiv_to_l_+3,w
  2693  039D  0021               	movlb	1	; select bank1
  2694  039E  00B7               	movwf	(printf@val+3)^(0+128)
  2695  039F  0872               	movf	?__tdiv_to_l_+2,w
  2696  03A0  00B6               	movwf	(printf@val+2)^(0+128)
  2697  03A1  0871               	movf	?__tdiv_to_l_+1,w
  2698  03A2  00B5               	movwf	(printf@val+1)^(0+128)
  2699  03A3  0870               	movf	?__tdiv_to_l_,w
  2700  03A4  00B4               	movwf	printf@val^(0+128)
  2701                           
  2702                           ;doprnt.c: 1129: fval = 0.0;
  2703  03A5  3000               	movlw	0
  2704  03A6  00BE               	movwf	printf@fval^(0+128)
  2705  03A7  3000               	movlw	0
  2706  03A8  00BF               	movwf	(printf@fval+1)^(0+128)
  2707  03A9  3000               	movlw	0
  2708  03AA  00C0               	movwf	(printf@fval+2)^(0+128)
  2709                           
  2710                           ;doprnt.c: 1130: } else {
  2711  03AB  2BFA               	goto	l2497
  2712  03AC                     l2493:	
  2713                           
  2714                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2715  03AC  0021               	movlb	1	; select bank1
  2716  03AD  083E               	movf	printf@fval^(0+128),w
  2717  03AE  0020               	movlb	0	; select bank0
  2718  03AF  00D9               	movwf	___fttol@f1
  2719  03B0  0021               	movlb	1	; select bank1
  2720  03B1  083F               	movf	(printf@fval+1)^(0+128),w
  2721  03B2  0020               	movlb	0	; select bank0
  2722  03B3  00DA               	movwf	___fttol@f1+1
  2723  03B4  0021               	movlb	1	; select bank1
  2724  03B5  0840               	movf	(printf@fval+2)^(0+128),w
  2725  03B6  0020               	movlb	0	; select bank0
  2726  03B7  00DB               	movwf	___fttol@f1+2
  2727  03B8  3196  261C  3180   	fcall	___fttol
  2728  03BB  0020               	movlb	0	; select bank0
  2729  03BC  085C               	movf	?___fttol+3,w
  2730  03BD  0021               	movlb	1	; select bank1
  2731  03BE  00B7               	movwf	(printf@val+3)^(0+128)
  2732  03BF  0020               	movlb	0	; select bank0
  2733  03C0  085B               	movf	?___fttol+2,w
  2734  03C1  0021               	movlb	1	; select bank1
  2735  03C2  00B6               	movwf	(printf@val+2)^(0+128)
  2736  03C3  0020               	movlb	0	; select bank0
  2737  03C4  085A               	movf	?___fttol+1,w
  2738  03C5  0021               	movlb	1	; select bank1
  2739  03C6  00B5               	movwf	(printf@val+1)^(0+128)
  2740  03C7  0020               	movlb	0	; select bank0
  2741  03C8  0859               	movf	?___fttol,w
  2742  03C9  0021               	movlb	1	; select bank1
  2743  03CA  00B4               	movwf	printf@val^(0+128)
  2744                           
  2745                           ;doprnt.c: 1132: fval -= (double)val;
  2746  03CB  0837               	movf	(printf@val+3)^(0+128),w
  2747  03CC  00FB               	movwf	___lltoft@c+3
  2748  03CD  0836               	movf	(printf@val+2)^(0+128),w
  2749  03CE  00FA               	movwf	___lltoft@c+2
  2750  03CF  0835               	movf	(printf@val+1)^(0+128),w
  2751  03D0  00F9               	movwf	___lltoft@c+1
  2752  03D1  0834               	movf	printf@val^(0+128),w
  2753  03D2  00F8               	movwf	___lltoft@c
  2754  03D3  3180  2016  3180   	fcall	___lltoft
  2755  03D6  0878               	movf	?___lltoft,w
  2756  03D7  0020               	movlb	0	; select bank0
  2757  03D8  00C0               	movwf	___ftsub@f2
  2758  03D9  0879               	movf	?___lltoft+1,w
  2759  03DA  00C1               	movwf	___ftsub@f2+1
  2760  03DB  087A               	movf	?___lltoft+2,w
  2761  03DC  00C2               	movwf	___ftsub@f2+2
  2762  03DD  0021               	movlb	1	; select bank1
  2763  03DE  083E               	movf	printf@fval^(0+128),w
  2764  03DF  0020               	movlb	0	; select bank0
  2765  03E0  00C3               	movwf	___ftsub@f1
  2766  03E1  0021               	movlb	1	; select bank1
  2767  03E2  083F               	movf	(printf@fval+1)^(0+128),w
  2768  03E3  0020               	movlb	0	; select bank0
  2769  03E4  00C4               	movwf	___ftsub@f1+1
  2770  03E5  0021               	movlb	1	; select bank1
  2771  03E6  0840               	movf	(printf@fval+2)^(0+128),w
  2772  03E7  0020               	movlb	0	; select bank0
  2773  03E8  00C5               	movwf	___ftsub@f1+2
  2774  03E9  3194  2497  3180   	fcall	___ftsub
  2775  03EC  0020               	movlb	0	; select bank0
  2776  03ED  0840               	movf	?___ftsub,w
  2777  03EE  0021               	movlb	1	; select bank1
  2778  03EF  00BE               	movwf	printf@fval^(0+128)
  2779  03F0  0020               	movlb	0	; select bank0
  2780  03F1  0841               	movf	?___ftsub+1,w
  2781  03F2  0021               	movlb	1	; select bank1
  2782  03F3  00BF               	movwf	(printf@fval+1)^(0+128)
  2783  03F4  0020               	movlb	0	; select bank0
  2784  03F5  0842               	movf	?___ftsub+2,w
  2785  03F6  0021               	movlb	1	; select bank1
  2786  03F7  00C0               	movwf	(printf@fval+2)^(0+128)
  2787                           
  2788                           ;doprnt.c: 1133: exp = 0;
  2789  03F8  01B8               	clrf	printf@exp^(0+128)
  2790  03F9  01B9               	clrf	(printf@exp+1)^(0+128)
  2791  03FA                     l2497:	
  2792                           
  2793                           ;doprnt.c: 1134: }
  2794                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2795  03FA  01C3               	clrf	printf@c^(0+128)
  2796  03FB  0AC3               	incf	printf@c^(0+128),f
  2797  03FC  300A               	movlw	10
  2798  03FD  0643               	xorwf	printf@c^(0+128),w
  2799  03FE  1903               	btfsc	3,2
  2800  03FF  2C37               	goto	l2509
  2801  0400                     l2503:	
  2802                           
  2803                           ;doprnt.c: 1137: if(val < dpowers[c])
  2804  0400  0843               	movf	printf@c^(0+128),w
  2805  0401  0020               	movlb	0	; select bank0
  2806  0402  00E7               	movwf	??_printf
  2807  0403  01E8               	clrf	??_printf+1
  2808  0404  35E7               	lslf	??_printf,f
  2809  0405  0DE8               	rlf	??_printf+1,f
  2810  0406  35E7               	lslf	??_printf,f
  2811  0407  0DE8               	rlf	??_printf+1,f
  2812  0408  30C6               	movlw	low (_dpowers| (0+32768))
  2813  0409  0767               	addwf	??_printf,w
  2814  040A  0084               	movwf	4
  2815  040B  3098               	movlw	high (_dpowers| (0+32768))
  2816  040C  3D68               	addwfc	??_printf+1,w
  2817  040D  0085               	movwf	5
  2818  040E  3F00               	moviw [0]fsr0
  2819  040F  00E9               	movwf	??_printf+2
  2820  0410  3F01               	moviw [1]fsr0
  2821  0411  00EA               	movwf	??_printf+3
  2822  0412  3F02               	moviw [2]fsr0
  2823  0413  00EB               	movwf	??_printf+4
  2824  0414  3F03               	moviw [3]fsr0
  2825  0415  00EC               	movwf	??_printf+5
  2826  0416  086C               	movf	??_printf+5,w
  2827  0417  0021               	movlb	1	; select bank1
  2828  0418  0237               	subwf	(printf@val+3)^(0+128),w
  2829  0419  1D03               	skipz
  2830  041A  2C2B               	goto	u3635
  2831  041B  0020               	movlb	0	; select bank0
  2832  041C  086B               	movf	??_printf+4,w
  2833  041D  0021               	movlb	1	; select bank1
  2834  041E  0236               	subwf	(printf@val+2)^(0+128),w
  2835  041F  1D03               	skipz
  2836  0420  2C2B               	goto	u3635
  2837  0421  0020               	movlb	0	; select bank0
  2838  0422  086A               	movf	??_printf+3,w
  2839  0423  0021               	movlb	1	; select bank1
  2840  0424  0235               	subwf	(printf@val+1)^(0+128),w
  2841  0425  1D03               	skipz
  2842  0426  2C2B               	goto	u3635
  2843  0427  0020               	movlb	0	; select bank0
  2844  0428  0869               	movf	??_printf+2,w
  2845  0429  0021               	movlb	1	; select bank1
  2846  042A  0234               	subwf	printf@val^(0+128),w
  2847  042B                     u3635:	
  2848  042B  1C03               	btfss	3,0
  2849  042C  2C37               	goto	l2509
  2850                           
  2851                           ;doprnt.c: 1138: break;
  2852  042D  3001               	movlw	1
  2853  042E  0020               	movlb	0	; select bank0
  2854  042F  00E7               	movwf	??_printf
  2855  0430  0867               	movf	??_printf,w
  2856  0431  0021               	movlb	1	; select bank1
  2857  0432  07C3               	addwf	printf@c^(0+128),f
  2858  0433  300A               	movlw	10
  2859  0434  0643               	xorwf	printf@c^(0+128),w
  2860  0435  1D03               	btfss	3,2
  2861  0436  2C00               	goto	l2503
  2862  0437                     l2509:	
  2863                           
  2864                           ;doprnt.c: 1142: width -= prec + c + exp;
  2865  0437  0843               	movf	printf@c^(0+128),w
  2866  0438  0020               	movlb	0	; select bank0
  2867  0439  00E7               	movwf	??_printf
  2868  043A  01E8               	clrf	??_printf+1
  2869  043B  1BE7               	btfsc	??_printf,7
  2870  043C  03E8               	decf	??_printf+1,f
  2871  043D  0021               	movlb	1	; select bank1
  2872  043E  0841               	movf	printf@prec^(0+128),w
  2873  043F  0020               	movlb	0	; select bank0
  2874  0440  0767               	addwf	??_printf,w
  2875  0441  00E9               	movwf	??_printf+2
  2876  0442  0021               	movlb	1	; select bank1
  2877  0443  0842               	movf	(printf@prec+1)^(0+128),w
  2878  0444  0020               	movlb	0	; select bank0
  2879  0445  3D68               	addwfc	??_printf+1,w
  2880  0446  00EA               	movwf	??_printf+3
  2881  0447  0021               	movlb	1	; select bank1
  2882  0448  0838               	movf	printf@exp^(0+128),w
  2883  0449  0020               	movlb	0	; select bank0
  2884  044A  0769               	addwf	??_printf+2,w
  2885  044B  00EB               	movwf	??_printf+4
  2886  044C  0021               	movlb	1	; select bank1
  2887  044D  0839               	movf	(printf@exp+1)^(0+128),w
  2888  044E  0020               	movlb	0	; select bank0
  2889  044F  3D6A               	addwfc	??_printf+3,w
  2890  0450  00EC               	movwf	??_printf+5
  2891  0451  086B               	movf	??_printf+4,w
  2892  0452  0021               	movlb	1	; select bank1
  2893  0453  02BC               	subwf	printf@width^(0+128),f
  2894  0454  0020               	movlb	0	; select bank0
  2895  0455  086C               	movf	??_printf+5,w
  2896  0456  0021               	movlb	1	; select bank1
  2897  0457  3BBD               	subwfb	(printf@width+1)^(0+128),f
  2898                           
  2899                           ;doprnt.c: 1143: if(
  2900                           ;doprnt.c: 1147: prec)
  2901  0458  0841               	movf	printf@prec^(0+128),w
  2902  0459  0442               	iorwf	(printf@prec+1)^(0+128),w
  2903  045A  1903               	btfsc	3,2
  2904  045B  2C60               	goto	l2513
  2905                           
  2906                           ;doprnt.c: 1148: width--;
  2907  045C  30FF               	movlw	255
  2908  045D  07BC               	addwf	printf@width^(0+128),f
  2909  045E  30FF               	movlw	255
  2910  045F  3DBD               	addwfc	(printf@width+1)^(0+128),f
  2911  0460                     l2513:	
  2912                           
  2913                           ;doprnt.c: 1149: if(flag & 0x03)
  2914  0460  3003               	movlw	3
  2915  0461  053A               	andwf	printf@flag^(0+128),w
  2916  0462  0020               	movlb	0	; select bank0
  2917  0463  00E7               	movwf	??_printf
  2918  0464  3000               	movlw	0
  2919  0465  0021               	movlb	1	; select bank1
  2920  0466  053B               	andwf	(printf@flag+1)^(0+128),w
  2921  0467  0020               	movlb	0	; select bank0
  2922  0468  00E8               	movwf	??_printf+1
  2923  0469  0867               	movf	??_printf,w
  2924  046A  0468               	iorwf	??_printf+1,w
  2925  046B  1903               	btfsc	3,2
  2926  046C  2C72               	goto	l2517
  2927                           
  2928                           ;doprnt.c: 1150: width--;
  2929  046D  30FF               	movlw	255
  2930  046E  0021               	movlb	1	; select bank1
  2931  046F  07BC               	addwf	printf@width^(0+128),f
  2932  0470  30FF               	movlw	255
  2933  0471  3DBD               	addwfc	(printf@width+1)^(0+128),f
  2934  0472                     l2517:	
  2935                           
  2936                           ;doprnt.c: 1153: if(flag & 0x04) {
  2937  0472  0021               	movlb	1	; select bank1
  2938  0473  1D3A               	btfss	printf@flag^(0+128),2
  2939  0474  2CA7               	goto	l2533
  2940                           
  2941                           ;doprnt.c: 1157: if(flag & 0x03)
  2942  0475  3003               	movlw	3
  2943  0476  053A               	andwf	printf@flag^(0+128),w
  2944  0477  0020               	movlb	0	; select bank0
  2945  0478  00E7               	movwf	??_printf
  2946  0479  3000               	movlw	0
  2947  047A  0021               	movlb	1	; select bank1
  2948  047B  053B               	andwf	(printf@flag+1)^(0+128),w
  2949  047C  0020               	movlb	0	; select bank0
  2950  047D  00E8               	movwf	??_printf+1
  2951  047E  0867               	movf	??_printf,w
  2952  047F  0468               	iorwf	??_printf+1,w
  2953  0480  1903               	btfsc	3,2
  2954  0481  2C86               	goto	l2527
  2955                           
  2956                           ;doprnt.c: 1159: (putch('-') );
  2957  0482  302D               	movlw	45
  2958  0483  3194  242C  3180   	fcall	_putch
  2959  0486                     l2527:	
  2960                           ;doprnt.c: 1168: while(width > 0) {
  2961                           
  2962  0486  0021               	movlb	1	; select bank1
  2963  0487  083D               	movf	(printf@width+1)^(0+128),w
  2964  0488  3A80               	xorlw	128
  2965  0489  0020               	movlb	0	; select bank0
  2966  048A  00E7               	movwf	??_printf
  2967  048B  3080               	movlw	128
  2968  048C  0267               	subwf	??_printf,w
  2969  048D  1D03               	skipz
  2970  048E  2C92               	goto	u3695
  2971  048F  3001               	movlw	1
  2972  0490  0021               	movlb	1	; select bank1
  2973  0491  023C               	subwf	printf@width^(0+128),w
  2974  0492                     u3695:	
  2975  0492  1C03               	btfss	3,0
  2976  0493  2CC7               	goto	l2545
  2977                           
  2978                           ;doprnt.c: 1169: (putch('0') );
  2979  0494  3030               	movlw	48
  2980  0495  3194  242C  3180   	fcall	_putch
  2981                           
  2982                           ;doprnt.c: 1170: width--;
  2983  0498  30FF               	movlw	255
  2984  0499  0021               	movlb	1	; select bank1
  2985  049A  07BC               	addwf	printf@width^(0+128),f
  2986  049B  30FF               	movlw	255
  2987  049C  3DBD               	addwfc	(printf@width+1)^(0+128),f
  2988  049D  2C86               	goto	l2527
  2989  049E                     l2529:	
  2990                           ;doprnt.c: 1175: {
  2991                           ;doprnt.c: 1180: while(width > 0) {
  2992                           
  2993                           ;doprnt.c: 1171: }
  2994                           ;doprnt.c: 1173: } else
  2995                           
  2996                           
  2997                           ;doprnt.c: 1181: (putch(' ') );
  2998  049E  3020               	movlw	32
  2999  049F  3194  242C  3180   	fcall	_putch
  3000                           
  3001                           ;doprnt.c: 1182: width--;
  3002  04A2  30FF               	movlw	255
  3003  04A3  0021               	movlb	1	; select bank1
  3004  04A4  07BC               	addwf	printf@width^(0+128),f
  3005  04A5  30FF               	movlw	255
  3006  04A6  3DBD               	addwfc	(printf@width+1)^(0+128),f
  3007  04A7                     l2533:	
  3008  04A7  0021               	movlb	1	; select bank1
  3009  04A8  083D               	movf	(printf@width+1)^(0+128),w
  3010  04A9  3A80               	xorlw	128
  3011  04AA  0020               	movlb	0	; select bank0
  3012  04AB  00E7               	movwf	??_printf
  3013  04AC  3080               	movlw	128
  3014  04AD  0267               	subwf	??_printf,w
  3015  04AE  1D03               	skipz
  3016  04AF  2CB3               	goto	u3705
  3017  04B0  3001               	movlw	1
  3018  04B1  0021               	movlb	1	; select bank1
  3019  04B2  023C               	subwf	printf@width^(0+128),w
  3020  04B3                     u3705:	
  3021  04B3  1803               	skipnc
  3022  04B4  2C9E               	goto	l2529
  3023                           
  3024                           ;doprnt.c: 1183: }
  3025                           ;doprnt.c: 1188: if(flag & 0x03)
  3026  04B5  3003               	movlw	3
  3027  04B6  0021               	movlb	1	; select bank1
  3028  04B7  053A               	andwf	printf@flag^(0+128),w
  3029  04B8  0020               	movlb	0	; select bank0
  3030  04B9  00E7               	movwf	??_printf
  3031  04BA  3000               	movlw	0
  3032  04BB  0021               	movlb	1	; select bank1
  3033  04BC  053B               	andwf	(printf@flag+1)^(0+128),w
  3034  04BD  0020               	movlb	0	; select bank0
  3035  04BE  00E8               	movwf	??_printf+1
  3036  04BF  0867               	movf	??_printf,w
  3037  04C0  0468               	iorwf	??_printf+1,w
  3038  04C1  1903               	btfsc	3,2
  3039  04C2  2CC7               	goto	l2545
  3040                           
  3041                           ;doprnt.c: 1190: (putch('-') );
  3042  04C3  302D               	movlw	45
  3043  04C4                     L7:	
  3044  04C4  3194  242C  3180   	fcall	_putch
  3045  04C7                     l2545:	
  3046                           ;doprnt.c: 1195: }
  3047                           ;doprnt.c: 1196: while(c--) {
  3048                           
  3049  04C7  30FF               	movlw	255
  3050  04C8  0020               	movlb	0	; select bank0
  3051  04C9  00E7               	movwf	??_printf
  3052  04CA  0867               	movf	??_printf,w
  3053  04CB  0021               	movlb	1	; select bank1
  3054  04CC  07C3               	addwf	printf@c^(0+128),f
  3055  04CD  0A43               	incf	printf@c^(0+128),w
  3056  04CE  1903               	btfsc	3,2
  3057  04CF  2D34               	goto	l2551
  3058                           
  3059                           ;doprnt.c: 1200: {
  3060                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3061  04D0  0021               	movlb	1	; select bank1
  3062  04D1  0843               	movf	printf@c^(0+128),w
  3063  04D2  0020               	movlb	0	; select bank0
  3064  04D3  00E7               	movwf	??_printf
  3065  04D4  01E8               	clrf	??_printf+1
  3066  04D5  35E7               	lslf	??_printf,f
  3067  04D6  0DE8               	rlf	??_printf+1,f
  3068  04D7  35E7               	lslf	??_printf,f
  3069  04D8  0DE8               	rlf	??_printf+1,f
  3070  04D9  30C6               	movlw	low (_dpowers| (0+32768))
  3071  04DA  0767               	addwf	??_printf,w
  3072  04DB  0084               	movwf	4
  3073  04DC  3098               	movlw	high (_dpowers| (0+32768))
  3074  04DD  3D68               	addwfc	??_printf+1,w
  3075  04DE  0085               	movwf	5
  3076  04DF  3F00               	moviw [0]fsr0
  3077  04E0  00F0               	movwf	___lldiv@divisor
  3078  04E1  3F01               	moviw [1]fsr0
  3079  04E2  00F1               	movwf	___lldiv@divisor+1
  3080  04E3  3F02               	moviw [2]fsr0
  3081  04E4  00F2               	movwf	___lldiv@divisor+2
  3082  04E5  3F03               	moviw [3]fsr0
  3083  04E6  00F3               	movwf	___lldiv@divisor+3
  3084  04E7  0021               	movlb	1	; select bank1
  3085  04E8  0837               	movf	(printf@val+3)^(0+128),w
  3086  04E9  00F7               	movwf	___lldiv@dividend+3
  3087  04EA  0836               	movf	(printf@val+2)^(0+128),w
  3088  04EB  00F6               	movwf	___lldiv@dividend+2
  3089  04EC  0835               	movf	(printf@val+1)^(0+128),w
  3090  04ED  00F5               	movwf	___lldiv@dividend+1
  3091  04EE  0834               	movf	printf@val^(0+128),w
  3092  04EF  00F4               	movwf	___lldiv@dividend
  3093  04F0  3195  2578  3180   	fcall	___lldiv
  3094  04F3  0873               	movf	?___lldiv+3,w
  3095  04F4  0021               	movlb	1	; select bank1
  3096  04F5  00B3               	movwf	(printf@tmpval+3)^(0+128)
  3097  04F6  0872               	movf	?___lldiv+2,w
  3098  04F7  00B2               	movwf	(printf@tmpval+2)^(0+128)
  3099  04F8  0871               	movf	?___lldiv+1,w
  3100  04F9  00B1               	movwf	(printf@tmpval+1)^(0+128)
  3101  04FA  0870               	movf	?___lldiv,w
  3102  04FB  00B0               	movwf	printf@tmpval^(0+128)
  3103                           
  3104                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3105  04FC  3000               	movlw	0
  3106  04FD  0020               	movlb	0	; select bank0
  3107  04FE  00A3               	movwf	___llmod@divisor+3
  3108  04FF  3000               	movlw	0
  3109  0500  00A2               	movwf	___llmod@divisor+2
  3110  0501  3000               	movlw	0
  3111  0502  00A1               	movwf	___llmod@divisor+1
  3112  0503  300A               	movlw	10
  3113  0504  00A0               	movwf	___llmod@divisor
  3114  0505  0021               	movlb	1	; select bank1
  3115  0506  0833               	movf	(printf@tmpval+3)^(0+128),w
  3116  0507  0020               	movlb	0	; select bank0
  3117  0508  00A7               	movwf	___llmod@dividend+3
  3118  0509  0021               	movlb	1	; select bank1
  3119  050A  0832               	movf	(printf@tmpval+2)^(0+128),w
  3120  050B  0020               	movlb	0	; select bank0
  3121  050C  00A6               	movwf	___llmod@dividend+2
  3122  050D  0021               	movlb	1	; select bank1
  3123  050E  0831               	movf	(printf@tmpval+1)^(0+128),w
  3124  050F  0020               	movlb	0	; select bank0
  3125  0510  00A5               	movwf	___llmod@dividend+1
  3126  0511  0021               	movlb	1	; select bank1
  3127  0512  0830               	movf	printf@tmpval^(0+128),w
  3128  0513  0020               	movlb	0	; select bank0
  3129  0514  00A4               	movwf	___llmod@dividend
  3130  0515  3194  24F0  3180   	fcall	___llmod
  3131  0518  0020               	movlb	0	; select bank0
  3132  0519  0823               	movf	?___llmod+3,w
  3133  051A  0021               	movlb	1	; select bank1
  3134  051B  00B3               	movwf	(printf@tmpval+3)^(0+128)
  3135  051C  0020               	movlb	0	; select bank0
  3136  051D  0822               	movf	?___llmod+2,w
  3137  051E  0021               	movlb	1	; select bank1
  3138  051F  00B2               	movwf	(printf@tmpval+2)^(0+128)
  3139  0520  0020               	movlb	0	; select bank0
  3140  0521  0821               	movf	?___llmod+1,w
  3141  0522  0021               	movlb	1	; select bank1
  3142  0523  00B1               	movwf	(printf@tmpval+1)^(0+128)
  3143  0524  0020               	movlb	0	; select bank0
  3144  0525  0820               	movf	?___llmod,w
  3145  0526  0021               	movlb	1	; select bank1
  3146  0527  00B0               	movwf	printf@tmpval^(0+128)
  3147                           
  3148                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  3149  0528  0830               	movf	printf@tmpval^(0+128),w
  3150  0529  3E30               	addlw	48
  3151  052A  2CC4               	goto	L7
  3152  052B                     l2547:	
  3153                           ;doprnt.c: 1204: }
  3154                           ;doprnt.c: 1206: }
  3155                           ;doprnt.c: 1207: while(exp > 0) {
  3156                           
  3157                           
  3158                           ;doprnt.c: 1208: (putch('0') );
  3159  052B  3030               	movlw	48
  3160  052C  3194  242C  3180   	fcall	_putch
  3161                           
  3162                           ;doprnt.c: 1209: exp--;
  3163  052F  30FF               	movlw	255
  3164  0530  0021               	movlb	1	; select bank1
  3165  0531  07B8               	addwf	printf@exp^(0+128),f
  3166  0532  30FF               	movlw	255
  3167  0533  3DB9               	addwfc	(printf@exp+1)^(0+128),f
  3168  0534                     l2551:	
  3169  0534  0839               	movf	(printf@exp+1)^(0+128),w
  3170  0535  3A80               	xorlw	128
  3171  0536  0020               	movlb	0	; select bank0
  3172  0537  00E7               	movwf	??_printf
  3173  0538  3080               	movlw	128
  3174  0539  0267               	subwf	??_printf,w
  3175  053A  1D03               	skipz
  3176  053B  2D3F               	goto	u3735
  3177  053C  3001               	movlw	1
  3178  053D  0021               	movlb	1	; select bank1
  3179  053E  0238               	subwf	printf@exp^(0+128),w
  3180  053F                     u3735:	
  3181  053F  1803               	skipnc
  3182  0540  2D2B               	goto	l2547
  3183                           
  3184                           ;doprnt.c: 1210: }
  3185                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3186  0541  0021               	movlb	1	; select bank1
  3187  0542  0842               	movf	(printf@prec+1)^(0+128),w
  3188  0543  3A80               	xorlw	128
  3189  0544  0020               	movlb	0	; select bank0
  3190  0545  00E7               	movwf	??_printf
  3191  0546  3080               	movlw	128
  3192  0547  0267               	subwf	??_printf,w
  3193  0548  1D03               	skipz
  3194  0549  2D4D               	goto	u3745
  3195  054A  3009               	movlw	9
  3196  054B  0021               	movlb	1	; select bank1
  3197  054C  0241               	subwf	printf@prec^(0+128),w
  3198  054D                     u3745:	
  3199  054D  1C03               	skipc
  3200  054E  2D51               	goto	l2557
  3201                           
  3202                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3203  054F  3008               	movlw	8
  3204  0550  2D53               	goto	L4
  3205  0551                     l2557:	
  3206                           
  3207                           ;doprnt.c: 1213: else
  3208                           ;doprnt.c: 1214: c = prec;
  3209  0551  0021               	movlb	1	; select bank1
  3210  0552  0841               	movf	printf@prec^(0+128),w
  3211  0553                     L4:	
  3212  0553  0020               	movlb	0	; select bank0
  3213  0554  00E7               	movwf	??_printf
  3214  0555  0867               	movf	??_printf,w
  3215  0556  0021               	movlb	1	; select bank1
  3216  0557  00C3               	movwf	printf@c^(0+128)
  3217                           
  3218                           ;doprnt.c: 1215: prec -= c;
  3219  0558  0843               	movf	printf@c^(0+128),w
  3220  0559  0020               	movlb	0	; select bank0
  3221  055A  00E7               	movwf	??_printf
  3222  055B  01E8               	clrf	??_printf+1
  3223  055C  1BE7               	btfsc	??_printf,7
  3224  055D  03E8               	decf	??_printf+1,f
  3225  055E  0867               	movf	??_printf,w
  3226  055F  0021               	movlb	1	; select bank1
  3227  0560  02C1               	subwf	printf@prec^(0+128),f
  3228  0561  0020               	movlb	0	; select bank0
  3229  0562  0868               	movf	??_printf+1,w
  3230  0563  0021               	movlb	1	; select bank1
  3231  0564  3BC2               	subwfb	(printf@prec+1)^(0+128),f
  3232                           
  3233                           ;doprnt.c: 1219: if(c)
  3234  0565  0843               	movf	printf@c^(0+128),w
  3235  0566  1903               	btfsc	3,2
  3236  0567  2D6C               	goto	l2563
  3237                           
  3238                           ;doprnt.c: 1221: (putch('.') );
  3239  0568  302E               	movlw	46
  3240  0569  3194  242C  3180   	fcall	_putch
  3241  056C                     l2563:	
  3242                           
  3243                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3244  056C  0021               	movlb	1	; select bank1
  3245  056D  0843               	movf	printf@c^(0+128),w
  3246  056E  318D  25BC  3180   	fcall	_scale
  3247  0571  0020               	movlb	0	; select bank0
  3248  0572  0850               	movf	?_scale,w
  3249  0573  0021               	movlb	1	; select bank1
  3250  0574  00AC               	movwf	_printf$567^(0+128)
  3251  0575  0020               	movlb	0	; select bank0
  3252  0576  0851               	movf	?_scale+1,w
  3253  0577  0021               	movlb	1	; select bank1
  3254  0578  00AD               	movwf	(_printf$567+1)^(0+128)
  3255  0579  0020               	movlb	0	; select bank0
  3256  057A  0852               	movf	?_scale+2,w
  3257  057B  0021               	movlb	1	; select bank1
  3258  057C  00AE               	movwf	(_printf$567+2)^(0+128)
  3259                           
  3260                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3261  057D  082C               	movf	_printf$567^(0+128),w
  3262  057E  0020               	movlb	0	; select bank0
  3263  057F  00C3               	movwf	___ftmul@f2
  3264  0580  0021               	movlb	1	; select bank1
  3265  0581  082D               	movf	(_printf$567+1)^(0+128),w
  3266  0582  0020               	movlb	0	; select bank0
  3267  0583  00C4               	movwf	___ftmul@f2+1
  3268  0584  0021               	movlb	1	; select bank1
  3269  0585  082E               	movf	(_printf$567+2)^(0+128),w
  3270  0586  0020               	movlb	0	; select bank0
  3271  0587  00C5               	movwf	___ftmul@f2+2
  3272  0588  0021               	movlb	1	; select bank1
  3273  0589  083E               	movf	printf@fval^(0+128),w
  3274  058A  0020               	movlb	0	; select bank0
  3275  058B  00C0               	movwf	___ftmul@f1
  3276  058C  0021               	movlb	1	; select bank1
  3277  058D  083F               	movf	(printf@fval+1)^(0+128),w
  3278  058E  0020               	movlb	0	; select bank0
  3279  058F  00C1               	movwf	___ftmul@f1+1
  3280  0590  0021               	movlb	1	; select bank1
  3281  0591  0840               	movf	(printf@fval+2)^(0+128),w
  3282  0592  0020               	movlb	0	; select bank0
  3283  0593  00C2               	movwf	___ftmul@f1+2
  3284  0594  3197  274C  3180   	fcall	___ftmul
  3285  0597  0020               	movlb	0	; select bank0
  3286  0598  0840               	movf	?___ftmul,w
  3287  0599  00D9               	movwf	___fttol@f1
  3288  059A  0841               	movf	?___ftmul+1,w
  3289  059B  00DA               	movwf	___fttol@f1+1
  3290  059C  0842               	movf	?___ftmul+2,w
  3291  059D  00DB               	movwf	___fttol@f1+2
  3292  059E  3196  261C  3180   	fcall	___fttol
  3293  05A1  0020               	movlb	0	; select bank0
  3294  05A2  085C               	movf	?___fttol+3,w
  3295  05A3  0021               	movlb	1	; select bank1
  3296  05A4  00B7               	movwf	(printf@val+3)^(0+128)
  3297  05A5  0020               	movlb	0	; select bank0
  3298  05A6  085B               	movf	?___fttol+2,w
  3299  05A7  0021               	movlb	1	; select bank1
  3300  05A8  00B6               	movwf	(printf@val+2)^(0+128)
  3301  05A9  0020               	movlb	0	; select bank0
  3302  05AA  085A               	movf	?___fttol+1,w
  3303  05AB  0021               	movlb	1	; select bank1
  3304  05AC  00B5               	movwf	(printf@val+1)^(0+128)
  3305  05AD  0020               	movlb	0	; select bank0
  3306  05AE  0859               	movf	?___fttol,w
  3307  05AF                     L5:	
  3308  05AF  0021               	movlb	1	; select bank1
  3309  05B0  00B4               	movwf	printf@val^(0+128)
  3310  05B1  30FF               	movlw	255
  3311  05B2  0020               	movlb	0	; select bank0
  3312  05B3  00E7               	movwf	??_printf
  3313  05B4  0867               	movf	??_printf,w
  3314  05B5  0021               	movlb	1	; select bank1
  3315  05B6  07C3               	addwf	printf@c^(0+128),f
  3316  05B7  0A43               	incf	printf@c^(0+128),w
  3317  05B8  1903               	btfsc	3,2
  3318  05B9  2E58               	goto	l2579
  3319                           
  3320                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3321                           
  3322                           ;doprnt.c: 1228: while(c--) {
  3323  05BA  0843               	movf	printf@c^(0+128),w
  3324  05BB  0020               	movlb	0	; select bank0
  3325  05BC  00E7               	movwf	??_printf
  3326  05BD  01E8               	clrf	??_printf+1
  3327  05BE  35E7               	lslf	??_printf,f
  3328  05BF  0DE8               	rlf	??_printf+1,f
  3329  05C0  35E7               	lslf	??_printf,f
  3330  05C1  0DE8               	rlf	??_printf+1,f
  3331  05C2  30C6               	movlw	low (_dpowers| (0+32768))
  3332  05C3  0767               	addwf	??_printf,w
  3333  05C4  0084               	movwf	4
  3334  05C5  3098               	movlw	high (_dpowers| (0+32768))
  3335  05C6  3D68               	addwfc	??_printf+1,w
  3336  05C7  0085               	movwf	5
  3337  05C8  3F00               	moviw [0]fsr0
  3338  05C9  00F0               	movwf	___lldiv@divisor
  3339  05CA  3F01               	moviw [1]fsr0
  3340  05CB  00F1               	movwf	___lldiv@divisor+1
  3341  05CC  3F02               	moviw [2]fsr0
  3342  05CD  00F2               	movwf	___lldiv@divisor+2
  3343  05CE  3F03               	moviw [3]fsr0
  3344  05CF  00F3               	movwf	___lldiv@divisor+3
  3345  05D0  0021               	movlb	1	; select bank1
  3346  05D1  0837               	movf	(printf@val+3)^(0+128),w
  3347  05D2  00F7               	movwf	___lldiv@dividend+3
  3348  05D3  0836               	movf	(printf@val+2)^(0+128),w
  3349  05D4  00F6               	movwf	___lldiv@dividend+2
  3350  05D5  0835               	movf	(printf@val+1)^(0+128),w
  3351  05D6  00F5               	movwf	___lldiv@dividend+1
  3352  05D7  0834               	movf	printf@val^(0+128),w
  3353  05D8  00F4               	movwf	___lldiv@dividend
  3354  05D9  3195  2578  3180   	fcall	___lldiv
  3355  05DC  0873               	movf	?___lldiv+3,w
  3356  05DD  0021               	movlb	1	; select bank1
  3357  05DE  00B3               	movwf	(printf@tmpval+3)^(0+128)
  3358  05DF  0872               	movf	?___lldiv+2,w
  3359  05E0  00B2               	movwf	(printf@tmpval+2)^(0+128)
  3360  05E1  0871               	movf	?___lldiv+1,w
  3361  05E2  00B1               	movwf	(printf@tmpval+1)^(0+128)
  3362  05E3  0870               	movf	?___lldiv,w
  3363  05E4  00B0               	movwf	printf@tmpval^(0+128)
  3364                           
  3365                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3366  05E5  3000               	movlw	0
  3367  05E6  0020               	movlb	0	; select bank0
  3368  05E7  00A3               	movwf	___llmod@divisor+3
  3369  05E8  3000               	movlw	0
  3370  05E9  00A2               	movwf	___llmod@divisor+2
  3371  05EA  3000               	movlw	0
  3372  05EB  00A1               	movwf	___llmod@divisor+1
  3373  05EC  300A               	movlw	10
  3374  05ED  00A0               	movwf	___llmod@divisor
  3375  05EE  0021               	movlb	1	; select bank1
  3376  05EF  0833               	movf	(printf@tmpval+3)^(0+128),w
  3377  05F0  0020               	movlb	0	; select bank0
  3378  05F1  00A7               	movwf	___llmod@dividend+3
  3379  05F2  0021               	movlb	1	; select bank1
  3380  05F3  0832               	movf	(printf@tmpval+2)^(0+128),w
  3381  05F4  0020               	movlb	0	; select bank0
  3382  05F5  00A6               	movwf	___llmod@dividend+2
  3383  05F6  0021               	movlb	1	; select bank1
  3384  05F7  0831               	movf	(printf@tmpval+1)^(0+128),w
  3385  05F8  0020               	movlb	0	; select bank0
  3386  05F9  00A5               	movwf	___llmod@dividend+1
  3387  05FA  0021               	movlb	1	; select bank1
  3388  05FB  0830               	movf	printf@tmpval^(0+128),w
  3389  05FC  0020               	movlb	0	; select bank0
  3390  05FD  00A4               	movwf	___llmod@dividend
  3391  05FE  3194  24F0  3180   	fcall	___llmod
  3392  0601  0020               	movlb	0	; select bank0
  3393  0602  0823               	movf	?___llmod+3,w
  3394  0603  0021               	movlb	1	; select bank1
  3395  0604  00B3               	movwf	(printf@tmpval+3)^(0+128)
  3396  0605  0020               	movlb	0	; select bank0
  3397  0606  0822               	movf	?___llmod+2,w
  3398  0607  0021               	movlb	1	; select bank1
  3399  0608  00B2               	movwf	(printf@tmpval+2)^(0+128)
  3400  0609  0020               	movlb	0	; select bank0
  3401  060A  0821               	movf	?___llmod+1,w
  3402  060B  0021               	movlb	1	; select bank1
  3403  060C  00B1               	movwf	(printf@tmpval+1)^(0+128)
  3404  060D  0020               	movlb	0	; select bank0
  3405  060E  0820               	movf	?___llmod,w
  3406  060F  0021               	movlb	1	; select bank1
  3407  0610  00B0               	movwf	printf@tmpval^(0+128)
  3408                           
  3409                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  3410  0611  0830               	movf	printf@tmpval^(0+128),w
  3411  0612  3E30               	addlw	48
  3412  0613  3194  242C  3180   	fcall	_putch
  3413                           
  3414                           ;doprnt.c: 1232: val %= dpowers[c];
  3415  0616  0021               	movlb	1	; select bank1
  3416  0617  0843               	movf	printf@c^(0+128),w
  3417  0618  0020               	movlb	0	; select bank0
  3418  0619  00E7               	movwf	??_printf
  3419  061A  01E8               	clrf	??_printf+1
  3420  061B  35E7               	lslf	??_printf,f
  3421  061C  0DE8               	rlf	??_printf+1,f
  3422  061D  35E7               	lslf	??_printf,f
  3423  061E  0DE8               	rlf	??_printf+1,f
  3424  061F  30C6               	movlw	low (_dpowers| (0+32768))
  3425  0620  0767               	addwf	??_printf,w
  3426  0621  0084               	movwf	4
  3427  0622  3098               	movlw	high (_dpowers| (0+32768))
  3428  0623  3D68               	addwfc	??_printf+1,w
  3429  0624  0085               	movwf	5
  3430  0625  3F00               	moviw [0]fsr0
  3431  0626  00A0               	movwf	___llmod@divisor
  3432  0627  3F01               	moviw [1]fsr0
  3433  0628  00A1               	movwf	___llmod@divisor+1
  3434  0629  3F02               	moviw [2]fsr0
  3435  062A  00A2               	movwf	___llmod@divisor+2
  3436  062B  3F03               	moviw [3]fsr0
  3437  062C  00A3               	movwf	___llmod@divisor+3
  3438  062D  0021               	movlb	1	; select bank1
  3439  062E  0837               	movf	(printf@val+3)^(0+128),w
  3440  062F  0020               	movlb	0	; select bank0
  3441  0630  00A7               	movwf	___llmod@dividend+3
  3442  0631  0021               	movlb	1	; select bank1
  3443  0632  0836               	movf	(printf@val+2)^(0+128),w
  3444  0633  0020               	movlb	0	; select bank0
  3445  0634  00A6               	movwf	___llmod@dividend+2
  3446  0635  0021               	movlb	1	; select bank1
  3447  0636  0835               	movf	(printf@val+1)^(0+128),w
  3448  0637  0020               	movlb	0	; select bank0
  3449  0638  00A5               	movwf	___llmod@dividend+1
  3450  0639  0021               	movlb	1	; select bank1
  3451  063A  0834               	movf	printf@val^(0+128),w
  3452  063B  0020               	movlb	0	; select bank0
  3453  063C  00A4               	movwf	___llmod@dividend
  3454  063D  3194  24F0  3180   	fcall	___llmod
  3455  0640  0020               	movlb	0	; select bank0
  3456  0641  0823               	movf	?___llmod+3,w
  3457  0642  0021               	movlb	1	; select bank1
  3458  0643  00B7               	movwf	(printf@val+3)^(0+128)
  3459  0644  0020               	movlb	0	; select bank0
  3460  0645  0822               	movf	?___llmod+2,w
  3461  0646  0021               	movlb	1	; select bank1
  3462  0647  00B6               	movwf	(printf@val+2)^(0+128)
  3463  0648  0020               	movlb	0	; select bank0
  3464  0649  0821               	movf	?___llmod+1,w
  3465  064A  0021               	movlb	1	; select bank1
  3466  064B  00B5               	movwf	(printf@val+1)^(0+128)
  3467  064C  0020               	movlb	0	; select bank0
  3468  064D  0820               	movf	?___llmod,w
  3469  064E  2DAF               	goto	L5
  3470  064F                     l2575:	
  3471                           ;doprnt.c: 1233: }
  3472                           ;doprnt.c: 1235: while(prec) {
  3473                           
  3474                           
  3475                           ;doprnt.c: 1236: (putch('0') );
  3476  064F  3030               	movlw	48
  3477  0650  3194  242C  3180   	fcall	_putch
  3478                           
  3479                           ;doprnt.c: 1237: prec--;
  3480  0653  30FF               	movlw	255
  3481  0654  0021               	movlb	1	; select bank1
  3482  0655  07C1               	addwf	printf@prec^(0+128),f
  3483  0656  30FF               	movlw	255
  3484  0657  3DC2               	addwfc	(printf@prec+1)^(0+128),f
  3485  0658                     l2579:	
  3486  0658  0841               	movf	printf@prec^(0+128),w
  3487  0659  0442               	iorwf	(printf@prec+1)^(0+128),w
  3488  065A  1903               	btfsc	3,2
  3489  065B  28FA               	goto	l2663
  3490  065C  2E4F               	goto	l2575
  3491  065D                     l2581:	
  3492                           ;doprnt.c: 1238: }
  3493                           ;doprnt.c: 1245: continue;
  3494                           
  3495                           
  3496                           ;doprnt.c: 1246: }
  3497                           ;doprnt.c: 1253: {
  3498                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3499  065D  0021               	movlb	1	; select bank1
  3500  065E  082F               	movf	printf@ap^(0+128),w
  3501  065F  0086               	movwf	6
  3502  0660  0187               	clrf	7
  3503  0661  3F40               	moviw [0]fsr1
  3504  0662  0020               	movlb	0	; select bank0
  3505  0663  00E7               	movwf	??_printf
  3506  0664  3F41               	moviw [1]fsr1
  3507  0665  00E8               	movwf	??_printf+1
  3508  0666  0867               	movf	??_printf,w
  3509  0667  0021               	movlb	1	; select bank1
  3510  0668  00B4               	movwf	printf@val^(0+128)
  3511  0669  0020               	movlb	0	; select bank0
  3512  066A  0868               	movf	??_printf+1,w
  3513  066B  0021               	movlb	1	; select bank1
  3514  066C  00B5               	movwf	(printf@val+1)^(0+128)
  3515  066D  0D89               	rlf	9,f
  3516  066E  3B89               	subwfb	9,f
  3517  066F  0989               	comf	9,f
  3518  0670  00B6               	movwf	(printf@val+2)^(0+128)
  3519  0671  00B7               	movwf	(printf@val+3)^(0+128)
  3520  0672  3002               	movlw	2
  3521  0673  0020               	movlb	0	; select bank0
  3522  0674  00E7               	movwf	??_printf
  3523  0675  0867               	movf	??_printf,w
  3524  0676  0021               	movlb	1	; select bank1
  3525  0677  07AF               	addwf	printf@ap^(0+128),f
  3526                           
  3527                           ;doprnt.c: 1261: if((long)val < 0) {
  3528  0678  1FB7               	btfss	(printf@val+3)^(0+128),7
  3529  0679  2E89               	goto	l2591
  3530                           
  3531                           ;doprnt.c: 1262: flag |= 0x03;
  3532  067A  3003               	movlw	3
  3533  067B  04BA               	iorwf	printf@flag^(0+128),f
  3534  067C  3000               	movlw	0
  3535  067D  04BB               	iorwf	(printf@flag+1)^(0+128),f
  3536                           
  3537                           ;doprnt.c: 1263: val = -val;
  3538  067E  09B4               	comf	printf@val^(0+128),f
  3539  067F  09B5               	comf	(printf@val+1)^(0+128),f
  3540  0680  09B6               	comf	(printf@val+2)^(0+128),f
  3541  0681  09B7               	comf	(printf@val+3)^(0+128),f
  3542  0682  0AB4               	incf	printf@val^(0+128),f
  3543  0683  1903               	skipnz
  3544  0684  0AB5               	incf	(printf@val+1)^(0+128),f
  3545  0685  1903               	skipnz
  3546  0686  0AB6               	incf	(printf@val+2)^(0+128),f
  3547  0687  1903               	skipnz
  3548  0688  0AB7               	incf	(printf@val+3)^(0+128),f
  3549  0689                     l2591:	
  3550                           
  3551                           ;doprnt.c: 1264: }
  3552                           ;doprnt.c: 1266: }
  3553                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3554  0689  0841               	movf	printf@prec^(0+128),w
  3555  068A  0442               	iorwf	(printf@prec+1)^(0+128),w
  3556  068B  1D03               	btfss	3,2
  3557  068C  2E97               	goto	l2597
  3558  068D  0837               	movf	(printf@val+3)^(0+128),w
  3559  068E  0436               	iorwf	(printf@val+2)^(0+128),w
  3560  068F  0435               	iorwf	(printf@val+1)^(0+128),w
  3561  0690  0434               	iorwf	printf@val^(0+128),w
  3562  0691  1D03               	skipz
  3563  0692  2E97               	goto	l2597
  3564                           
  3565                           ;doprnt.c: 1291: prec++;
  3566  0693  3001               	movlw	1
  3567  0694  07C1               	addwf	printf@prec^(0+128),f
  3568  0695  3000               	movlw	0
  3569  0696  3DC2               	addwfc	(printf@prec+1)^(0+128),f
  3570  0697                     l2597:	
  3571                           
  3572                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3573  0697  01C3               	clrf	printf@c^(0+128)
  3574  0698  0AC3               	incf	printf@c^(0+128),f
  3575  0699  300A               	movlw	10
  3576  069A  0643               	xorwf	printf@c^(0+128),w
  3577  069B  1903               	btfsc	3,2
  3578  069C  2ED4               	goto	l2609
  3579  069D                     l2603:	
  3580                           
  3581                           ;doprnt.c: 1306: if(val < dpowers[c])
  3582  069D  0843               	movf	printf@c^(0+128),w
  3583  069E  0020               	movlb	0	; select bank0
  3584  069F  00E7               	movwf	??_printf
  3585  06A0  01E8               	clrf	??_printf+1
  3586  06A1  35E7               	lslf	??_printf,f
  3587  06A2  0DE8               	rlf	??_printf+1,f
  3588  06A3  35E7               	lslf	??_printf,f
  3589  06A4  0DE8               	rlf	??_printf+1,f
  3590  06A5  30C6               	movlw	low (_dpowers| (0+32768))
  3591  06A6  0767               	addwf	??_printf,w
  3592  06A7  0084               	movwf	4
  3593  06A8  3098               	movlw	high (_dpowers| (0+32768))
  3594  06A9  3D68               	addwfc	??_printf+1,w
  3595  06AA  0085               	movwf	5
  3596  06AB  3F00               	moviw [0]fsr0
  3597  06AC  00E9               	movwf	??_printf+2
  3598  06AD  3F01               	moviw [1]fsr0
  3599  06AE  00EA               	movwf	??_printf+3
  3600  06AF  3F02               	moviw [2]fsr0
  3601  06B0  00EB               	movwf	??_printf+4
  3602  06B1  3F03               	moviw [3]fsr0
  3603  06B2  00EC               	movwf	??_printf+5
  3604  06B3  086C               	movf	??_printf+5,w
  3605  06B4  0021               	movlb	1	; select bank1
  3606  06B5  0237               	subwf	(printf@val+3)^(0+128),w
  3607  06B6  1D03               	skipz
  3608  06B7  2EC8               	goto	u3825
  3609  06B8  0020               	movlb	0	; select bank0
  3610  06B9  086B               	movf	??_printf+4,w
  3611  06BA  0021               	movlb	1	; select bank1
  3612  06BB  0236               	subwf	(printf@val+2)^(0+128),w
  3613  06BC  1D03               	skipz
  3614  06BD  2EC8               	goto	u3825
  3615  06BE  0020               	movlb	0	; select bank0
  3616  06BF  086A               	movf	??_printf+3,w
  3617  06C0  0021               	movlb	1	; select bank1
  3618  06C1  0235               	subwf	(printf@val+1)^(0+128),w
  3619  06C2  1D03               	skipz
  3620  06C3  2EC8               	goto	u3825
  3621  06C4  0020               	movlb	0	; select bank0
  3622  06C5  0869               	movf	??_printf+2,w
  3623  06C6  0021               	movlb	1	; select bank1
  3624  06C7  0234               	subwf	printf@val^(0+128),w
  3625  06C8                     u3825:	
  3626  06C8  1C03               	btfss	3,0
  3627  06C9  2ED4               	goto	l2609
  3628                           
  3629                           ;doprnt.c: 1307: break;
  3630  06CA  3001               	movlw	1
  3631  06CB  0020               	movlb	0	; select bank0
  3632  06CC  00E7               	movwf	??_printf
  3633  06CD  0867               	movf	??_printf,w
  3634  06CE  0021               	movlb	1	; select bank1
  3635  06CF  07C3               	addwf	printf@c^(0+128),f
  3636  06D0  300A               	movlw	10
  3637  06D1  0643               	xorwf	printf@c^(0+128),w
  3638  06D2  1D03               	btfss	3,2
  3639  06D3  2E9D               	goto	l2603
  3640  06D4                     l2609:	
  3641                           
  3642                           ;doprnt.c: 1339: if(c < prec)
  3643  06D4  0843               	movf	printf@c^(0+128),w
  3644  06D5  0020               	movlb	0	; select bank0
  3645  06D6  00E7               	movwf	??_printf
  3646  06D7  01E8               	clrf	??_printf+1
  3647  06D8  1BE7               	btfsc	??_printf,7
  3648  06D9  03E8               	decf	??_printf+1,f
  3649  06DA  0868               	movf	??_printf+1,w
  3650  06DB  3A80               	xorlw	128
  3651  06DC  00E9               	movwf	??_printf+2
  3652  06DD  0021               	movlb	1	; select bank1
  3653  06DE  0842               	movf	(printf@prec+1)^(0+128),w
  3654  06DF  3A80               	xorlw	128
  3655  06E0  0020               	movlb	0	; select bank0
  3656  06E1  0269               	subwf	??_printf+2,w
  3657  06E2  1D03               	skipz
  3658  06E3  2EE8               	goto	u3845
  3659  06E4  0021               	movlb	1	; select bank1
  3660  06E5  0841               	movf	printf@prec^(0+128),w
  3661  06E6  0020               	movlb	0	; select bank0
  3662  06E7  0267               	subwf	??_printf,w
  3663  06E8                     u3845:	
  3664  06E8  1803               	skipnc
  3665  06E9  2EF2               	goto	l2613
  3666                           
  3667                           ;doprnt.c: 1340: c = prec;
  3668  06EA  0021               	movlb	1	; select bank1
  3669  06EB  0841               	movf	printf@prec^(0+128),w
  3670  06EC  0020               	movlb	0	; select bank0
  3671  06ED  00E7               	movwf	??_printf
  3672  06EE  0867               	movf	??_printf,w
  3673  06EF  0021               	movlb	1	; select bank1
  3674  06F0  00C3               	movwf	printf@c^(0+128)
  3675  06F1  2F0E               	goto	l258
  3676  06F2                     l2613:	
  3677                           
  3678                           ;doprnt.c: 1341: else if(prec < c)
  3679  06F2  0021               	movlb	1	; select bank1
  3680  06F3  0843               	movf	printf@c^(0+128),w
  3681  06F4  0020               	movlb	0	; select bank0
  3682  06F5  00E7               	movwf	??_printf
  3683  06F6  01E8               	clrf	??_printf+1
  3684  06F7  1BE7               	btfsc	??_printf,7
  3685  06F8  03E8               	decf	??_printf+1,f
  3686  06F9  0021               	movlb	1	; select bank1
  3687  06FA  0842               	movf	(printf@prec+1)^(0+128),w
  3688  06FB  3A80               	xorlw	128
  3689  06FC  0020               	movlb	0	; select bank0
  3690  06FD  00E9               	movwf	??_printf+2
  3691  06FE  0868               	movf	??_printf+1,w
  3692  06FF  3A80               	xorlw	128
  3693  0700  0269               	subwf	??_printf+2,w
  3694  0701  1D03               	skipz
  3695  0702  2F06               	goto	u3855
  3696  0703  0867               	movf	??_printf,w
  3697  0704  0021               	movlb	1	; select bank1
  3698  0705  0241               	subwf	printf@prec^(0+128),w
  3699  0706                     u3855:	
  3700  0706  1803               	skipnc
  3701  0707  2F0E               	goto	l258
  3702                           
  3703                           ;doprnt.c: 1342: prec = c;
  3704  0708  0021               	movlb	1	; select bank1
  3705  0709  0843               	movf	printf@c^(0+128),w
  3706  070A  00C1               	movwf	printf@prec^(0+128)
  3707  070B  01C2               	clrf	(printf@prec+1)^(0+128)
  3708  070C  1BC1               	btfsc	printf@prec^(0+128),7
  3709  070D  03C2               	decf	(printf@prec+1)^(0+128),f
  3710  070E                     l258:	
  3711                           
  3712                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3713  070E  0021               	movlb	1	; select bank1
  3714  070F  083C               	movf	printf@width^(0+128),w
  3715  0710  043D               	iorwf	(printf@width+1)^(0+128),w
  3716  0711  1903               	btfsc	3,2
  3717  0712  2F25               	goto	l2621
  3718  0713  3003               	movlw	3
  3719  0714  053A               	andwf	printf@flag^(0+128),w
  3720  0715  0020               	movlb	0	; select bank0
  3721  0716  00E7               	movwf	??_printf
  3722  0717  3000               	movlw	0
  3723  0718  0021               	movlb	1	; select bank1
  3724  0719  053B               	andwf	(printf@flag+1)^(0+128),w
  3725  071A  0020               	movlb	0	; select bank0
  3726  071B  00E8               	movwf	??_printf+1
  3727  071C  0867               	movf	??_printf,w
  3728  071D  0468               	iorwf	??_printf+1,w
  3729  071E  1903               	btfsc	3,2
  3730  071F  2F25               	goto	l2621
  3731                           
  3732                           ;doprnt.c: 1346: width--;
  3733  0720  30FF               	movlw	255
  3734  0721  0021               	movlb	1	; select bank1
  3735  0722  07BC               	addwf	printf@width^(0+128),f
  3736  0723  30FF               	movlw	255
  3737  0724  3DBD               	addwfc	(printf@width+1)^(0+128),f
  3738  0725                     l2621:	
  3739                           
  3740                           ;doprnt.c: 1348: if(flag & 0x4000) {
  3741  0725  0021               	movlb	1	; select bank1
  3742  0726  1F3B               	btfss	(printf@flag+1)^(0+128),6
  3743  0727  2F41               	goto	l2629
  3744                           
  3745                           ;doprnt.c: 1349: if(width > prec)
  3746  0728  0842               	movf	(printf@prec+1)^(0+128),w
  3747  0729  3A80               	xorlw	128
  3748  072A  0020               	movlb	0	; select bank0
  3749  072B  00E7               	movwf	??_printf
  3750  072C  0021               	movlb	1	; select bank1
  3751  072D  083D               	movf	(printf@width+1)^(0+128),w
  3752  072E  3A80               	xorlw	128
  3753  072F  0020               	movlb	0	; select bank0
  3754  0730  0267               	subwf	??_printf,w
  3755  0731  1D03               	skipz
  3756  0732  2F36               	goto	u3895
  3757  0733  0021               	movlb	1	; select bank1
  3758  0734  083C               	movf	printf@width^(0+128),w
  3759  0735  0241               	subwf	printf@prec^(0+128),w
  3760  0736                     u3895:	
  3761  0736  1803               	skipnc
  3762  0737  2F3E               	goto	l2627
  3763                           
  3764                           ;doprnt.c: 1350: width -= prec;
  3765  0738  0021               	movlb	1	; select bank1
  3766  0739  0841               	movf	printf@prec^(0+128),w
  3767  073A  02BC               	subwf	printf@width^(0+128),f
  3768  073B  0842               	movf	(printf@prec+1)^(0+128),w
  3769  073C  3BBD               	subwfb	(printf@width+1)^(0+128),f
  3770  073D  2F41               	goto	l2629
  3771  073E                     l2627:	
  3772                           
  3773                           ;doprnt.c: 1351: else
  3774                           ;doprnt.c: 1352: width = 0;
  3775  073E  0021               	movlb	1	; select bank1
  3776  073F  01BC               	clrf	printf@width^(0+128)
  3777  0740  01BD               	clrf	(printf@width+1)^(0+128)
  3778  0741                     l2629:	
  3779                           
  3780                           ;doprnt.c: 1353: }
  3781                           ;doprnt.c: 1381: if(width > c)
  3782  0741  0843               	movf	printf@c^(0+128),w
  3783  0742  0020               	movlb	0	; select bank0
  3784  0743  00E7               	movwf	??_printf
  3785  0744  01E8               	clrf	??_printf+1
  3786  0745  1BE7               	btfsc	??_printf,7
  3787  0746  03E8               	decf	??_printf+1,f
  3788  0747  0868               	movf	??_printf+1,w
  3789  0748  3A80               	xorlw	128
  3790  0749  00E9               	movwf	??_printf+2
  3791  074A  0021               	movlb	1	; select bank1
  3792  074B  083D               	movf	(printf@width+1)^(0+128),w
  3793  074C  3A80               	xorlw	128
  3794  074D  0020               	movlb	0	; select bank0
  3795  074E  0269               	subwf	??_printf+2,w
  3796  074F  1D03               	skipz
  3797  0750  2F55               	goto	u3905
  3798  0751  0021               	movlb	1	; select bank1
  3799  0752  083C               	movf	printf@width^(0+128),w
  3800  0753  0020               	movlb	0	; select bank0
  3801  0754  0267               	subwf	??_printf,w
  3802  0755                     u3905:	
  3803  0755  1803               	skipnc
  3804  0756  2F66               	goto	l2633
  3805                           
  3806                           ;doprnt.c: 1382: width -= c;
  3807  0757  0021               	movlb	1	; select bank1
  3808  0758  0843               	movf	printf@c^(0+128),w
  3809  0759  0020               	movlb	0	; select bank0
  3810  075A  00E7               	movwf	??_printf
  3811  075B  01E8               	clrf	??_printf+1
  3812  075C  1BE7               	btfsc	??_printf,7
  3813  075D  03E8               	decf	??_printf+1,f
  3814  075E  0867               	movf	??_printf,w
  3815  075F  0021               	movlb	1	; select bank1
  3816  0760  02BC               	subwf	printf@width^(0+128),f
  3817  0761  0020               	movlb	0	; select bank0
  3818  0762  0868               	movf	??_printf+1,w
  3819  0763  0021               	movlb	1	; select bank1
  3820  0764  3BBD               	subwfb	(printf@width+1)^(0+128),f
  3821  0765  2F69               	goto	l2635
  3822  0766                     l2633:	
  3823                           
  3824                           ;doprnt.c: 1383: else
  3825                           ;doprnt.c: 1384: width = 0;
  3826  0766  0021               	movlb	1	; select bank1
  3827  0767  01BC               	clrf	printf@width^(0+128)
  3828  0768  01BD               	clrf	(printf@width+1)^(0+128)
  3829  0769                     l2635:	
  3830                           
  3831                           ;doprnt.c: 1387: if(flag & 0x04) {
  3832  0769  1D3A               	btfss	printf@flag^(0+128),2
  3833  076A  2F8B               	goto	l2647
  3834                           
  3835                           ;doprnt.c: 1392: if(flag & 0x03)
  3836  076B  3003               	movlw	3
  3837  076C  053A               	andwf	printf@flag^(0+128),w
  3838  076D  0020               	movlb	0	; select bank0
  3839  076E  00E7               	movwf	??_printf
  3840  076F  3000               	movlw	0
  3841  0770  0021               	movlb	1	; select bank1
  3842  0771  053B               	andwf	(printf@flag+1)^(0+128),w
  3843  0772  0020               	movlb	0	; select bank0
  3844  0773  00E8               	movwf	??_printf+1
  3845  0774  0867               	movf	??_printf,w
  3846  0775  0468               	iorwf	??_printf+1,w
  3847  0776  1903               	btfsc	3,2
  3848  0777  2F7C               	goto	l2641
  3849                           
  3850                           ;doprnt.c: 1393: (putch('-') );
  3851  0778  302D               	movlw	45
  3852  0779  3194  242C  3180   	fcall	_putch
  3853  077C                     l2641:	
  3854                           
  3855                           ;doprnt.c: 1415: if(width)
  3856  077C  0021               	movlb	1	; select bank1
  3857  077D                     L6:	
  3858  077D  083C               	movf	printf@width^(0+128),w
  3859  077E  043D               	iorwf	(printf@width+1)^(0+128),w
  3860  077F  1903               	btfsc	3,2
  3861  0780  2FAD               	goto	l2661
  3862                           
  3863                           ;doprnt.c: 1417: (putch('0') );
  3864                           
  3865                           ;doprnt.c: 1416: do
  3866  0781  3030               	movlw	48
  3867  0782  3194  242C  3180   	fcall	_putch
  3868                           
  3869                           ;doprnt.c: 1418: while(--width);
  3870  0785  30FF               	movlw	255
  3871  0786  0021               	movlb	1	; select bank1
  3872  0787  07BC               	addwf	printf@width^(0+128),f
  3873  0788  30FF               	movlw	255
  3874  0789  3DBD               	addwfc	(printf@width+1)^(0+128),f
  3875  078A  2F7D               	goto	L6
  3876  078B                     l2647:	
  3877                           ;doprnt.c: 1420: } else
  3878                           
  3879                           
  3880                           ;doprnt.c: 1422: {
  3881                           ;doprnt.c: 1424: if(width
  3882                           ;doprnt.c: 1428: )
  3883  078B  083C               	movf	printf@width^(0+128),w
  3884  078C  043D               	iorwf	(printf@width+1)^(0+128),w
  3885  078D  1903               	btfsc	3,2
  3886  078E  2F9C               	goto	l2653
  3887  078F                     l2649:	
  3888                           ;doprnt.c: 1429: do
  3889                           
  3890                           
  3891                           ;doprnt.c: 1430: (putch(' ') );
  3892  078F  3020               	movlw	32
  3893  0790  3194  242C  3180   	fcall	_putch
  3894                           
  3895                           ;doprnt.c: 1431: while(--width);
  3896  0793  30FF               	movlw	255
  3897  0794  0021               	movlb	1	; select bank1
  3898  0795  07BC               	addwf	printf@width^(0+128),f
  3899  0796  30FF               	movlw	255
  3900  0797  3DBD               	addwfc	(printf@width+1)^(0+128),f
  3901  0798  083C               	movf	printf@width^(0+128),w
  3902  0799  043D               	iorwf	(printf@width+1)^(0+128),w
  3903  079A  1D03               	btfss	3,2
  3904  079B  2F8F               	goto	l2649
  3905  079C                     l2653:	
  3906                           
  3907                           ;doprnt.c: 1438: if(flag & 0x03)
  3908  079C  3003               	movlw	3
  3909  079D  053A               	andwf	printf@flag^(0+128),w
  3910  079E  0020               	movlb	0	; select bank0
  3911  079F  00E7               	movwf	??_printf
  3912  07A0  3000               	movlw	0
  3913  07A1  0021               	movlb	1	; select bank1
  3914  07A2  053B               	andwf	(printf@flag+1)^(0+128),w
  3915  07A3  0020               	movlb	0	; select bank0
  3916  07A4  00E8               	movwf	??_printf+1
  3917  07A5  0867               	movf	??_printf,w
  3918  07A6  0468               	iorwf	??_printf+1,w
  3919  07A7  1903               	btfsc	3,2
  3920  07A8  2FAD               	goto	l2661
  3921                           
  3922                           ;doprnt.c: 1439: (putch('-') );
  3923  07A9  302D               	movlw	45
  3924  07AA                     L8:	
  3925  07AA  3194  242C  3180   	fcall	_putch
  3926  07AD                     l2661:	
  3927                           ;doprnt.c: 1469: }
  3928                           ;doprnt.c: 1474: while(prec--) {
  3929                           
  3930  07AD  30FF               	movlw	255
  3931  07AE  0021               	movlb	1	; select bank1
  3932  07AF  07C1               	addwf	printf@prec^(0+128),f
  3933  07B0  30FF               	movlw	255
  3934  07B1  3DC2               	addwfc	(printf@prec+1)^(0+128),f
  3935  07B2  0A41               	incf	printf@prec^(0+128),w
  3936  07B3  1903               	btfsc	3,2
  3937  07B4  0A42               	incf	(printf@prec+1)^(0+128),w
  3938  07B5  1903               	btfsc	3,2
  3939  07B6  28FA               	goto	l2663
  3940                           
  3941                           ;doprnt.c: 1478: {
  3942                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3943  07B7  3000               	movlw	0
  3944  07B8  0020               	movlb	0	; select bank0
  3945  07B9  00A3               	movwf	___llmod@divisor+3
  3946  07BA  3000               	movlw	0
  3947  07BB  00A2               	movwf	___llmod@divisor+2
  3948  07BC  3000               	movlw	0
  3949  07BD  00A1               	movwf	___llmod@divisor+1
  3950  07BE  300A               	movlw	10
  3951  07BF  00A0               	movwf	___llmod@divisor
  3952  07C0  0021               	movlb	1	; select bank1
  3953  07C1  0842               	movf	(printf@prec+1)^(0+128),w
  3954  07C2  0085               	movwf	5
  3955  07C3  0841               	movf	printf@prec^(0+128),w
  3956  07C4  0084               	movwf	4
  3957  07C5  3584               	lslf	4,f
  3958  07C6  0D85               	rlf	5,f
  3959  07C7  3584               	lslf	4,f
  3960  07C8  0D85               	rlf	5,f
  3961  07C9  30C6               	movlw	low (_dpowers| (0+32768))
  3962  07CA  0784               	addwf	4,f
  3963  07CB  3098               	movlw	high (_dpowers| (0+32768))
  3964  07CC  3D85               	addwfc	5,f
  3965  07CD  3F00               	moviw [0]fsr0
  3966  07CE  00F0               	movwf	___lldiv@divisor
  3967  07CF  3F01               	moviw [1]fsr0
  3968  07D0  00F1               	movwf	___lldiv@divisor+1
  3969  07D1  3F02               	moviw [2]fsr0
  3970  07D2  00F2               	movwf	___lldiv@divisor+2
  3971  07D3  3F03               	moviw [3]fsr0
  3972  07D4  00F3               	movwf	___lldiv@divisor+3
  3973  07D5  0837               	movf	(printf@val+3)^(0+128),w
  3974  07D6  00F7               	movwf	___lldiv@dividend+3
  3975  07D7  0836               	movf	(printf@val+2)^(0+128),w
  3976  07D8  00F6               	movwf	___lldiv@dividend+2
  3977  07D9  0835               	movf	(printf@val+1)^(0+128),w
  3978  07DA  00F5               	movwf	___lldiv@dividend+1
  3979  07DB  0834               	movf	printf@val^(0+128),w
  3980  07DC  00F4               	movwf	___lldiv@dividend
  3981  07DD  3195  2578  3180   	fcall	___lldiv
  3982  07E0  0873               	movf	?___lldiv+3,w
  3983  07E1  0020               	movlb	0	; select bank0
  3984  07E2  00A7               	movwf	___llmod@dividend+3
  3985  07E3  0872               	movf	?___lldiv+2,w
  3986  07E4  00A6               	movwf	___llmod@dividend+2
  3987  07E5  0871               	movf	?___lldiv+1,w
  3988  07E6  00A5               	movwf	___llmod@dividend+1
  3989  07E7  0870               	movf	?___lldiv,w
  3990  07E8  00A4               	movwf	___llmod@dividend
  3991  07E9  3194  24F0  3180   	fcall	___llmod
  3992  07EC  0020               	movlb	0	; select bank0
  3993  07ED  0820               	movf	?___llmod,w
  3994  07EE  3E30               	addlw	48
  3995  07EF  00E7               	movwf	??_printf
  3996  07F0  0867               	movf	??_printf,w
  3997  07F1  0021               	movlb	1	; select bank1
  3998  07F2  00C3               	movwf	printf@c^(0+128)
  3999                           
  4000                           ;doprnt.c: 1523: }
  4001                           ;doprnt.c: 1524: (putch(c) );
  4002  07F3  0843               	movf	printf@c^(0+128),w
  4003  07F4  2FAA               	goto	L8
  4004  07F5                     l280:	
  4005                           ;doprnt.c: 1540: return 0;
  4006                           ;	Return value of _printf is never used
  4007                           
  4008                           ;doprnt.c: 1525: }
  4009                           ;doprnt.c: 1533: }
  4010                           ;doprnt.c: 1535: alldone:
  4011                           
  4012  07F5  0008               	return
  4013  07F6                     __end_of_printf:	
  4014                           
  4015                           	psect	text3
  4016  0DBC                     __ptext3:	
  4017 ;; *************** function _scale *****************
  4018 ;; Defined at:
  4019 ;;		line 425 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  scl             1    wreg     char 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  scl             1   56[BANK0 ] char 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  3   48[BANK0 ] char 
  4026 ;; Registers used:
  4027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4033 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4037 ;;Total ram usage:        9 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    2
  4040 ;; This function calls:
  4041 ;;		___awdiv
  4042 ;;		___awmod
  4043 ;;		___ftmul
  4044 ;;		___wmul
  4045 ;; This function is called by:
  4046 ;;		_printf
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           
  4051                           ;psect for function _scale
  4052  0DBC                     _scale:	
  4053                           
  4054                           ;incstack = 0
  4055                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4056                           ;scale@scl stored from wreg
  4057  0DBC  0020               	movlb	0	; select bank0
  4058  0DBD  00D8               	movwf	scale@scl
  4059                           
  4060                           ;doprnt.c: 428: if(scl < 0) {
  4061  0DBE  1FD8               	btfss	scale@scl,7
  4062  0DBF  2EE1               	goto	l2085
  4063                           
  4064                           ;doprnt.c: 429: scl = -scl;
  4065  0DC0  09D8               	comf	scale@scl,f
  4066  0DC1  0AD8               	incf	scale@scl,f
  4067                           
  4068                           ;doprnt.c: 430: if(scl>=110)
  4069  0DC2  0858               	movf	scale@scl,w
  4070  0DC3  3A80               	xorlw	128
  4071  0DC4  3E12               	addlw	-238
  4072  0DC5  1C03               	skipc
  4073  0DC6  2E65               	goto	l2075
  4074                           
  4075                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4076  0DC7  300A               	movlw	10
  4077  0DC8  00F7               	movwf	___awdiv@divisor
  4078  0DC9  3000               	movlw	0
  4079  0DCA  00F8               	movwf	___awdiv@divisor+1
  4080  0DCB  0858               	movf	scale@scl,w
  4081  0DCC  00F2               	movwf	___awmod@dividend
  4082  0DCD  01F3               	clrf	___awmod@dividend+1
  4083  0DCE  1BF2               	btfsc	___awmod@dividend,7
  4084  0DCF  03F3               	decf	___awmod@dividend+1,f
  4085  0DD0  3064               	movlw	100
  4086  0DD1  00F0               	movwf	___awmod@divisor
  4087  0DD2  3000               	movlw	0
  4088  0DD3  00F1               	movwf	___awmod@divisor+1
  4089  0DD4  3195  2533  318D   	fcall	___awmod
  4090  0DD7  0871               	movf	?___awmod+1,w
  4091  0DD8  00FA               	movwf	___awdiv@dividend+1
  4092  0DD9  0870               	movf	?___awmod,w
  4093  0DDA  00F9               	movwf	___awdiv@dividend
  4094  0DDB  3195  25CA  318D   	fcall	___awdiv
  4095  0DDE  0877               	movf	?___awdiv,w
  4096  0DDF  3E09               	addlw	9
  4097  0DE0  0020               	movlb	0	; select bank0
  4098  0DE1  00A4               	movwf	___wmul@multiplier
  4099  0DE2  3000               	movlw	0
  4100  0DE3  3D78               	addwfc	?___awdiv+1,w
  4101  0DE4  00A5               	movwf	___wmul@multiplier+1
  4102  0DE5  3003               	movlw	3
  4103  0DE6  00A6               	movwf	___wmul@multiplicand
  4104  0DE7  3000               	movlw	0
  4105  0DE8  00A7               	movwf	___wmul@multiplicand+1
  4106  0DE9  3194  245E  318D   	fcall	___wmul
  4107  0DEC  0020               	movlb	0	; select bank0
  4108  0DED  0825               	movf	?___wmul+1,w
  4109  0DEE  0085               	movwf	5
  4110  0DEF  0824               	movf	?___wmul,w
  4111  0DF0  0084               	movwf	4
  4112  0DF1  3000               	movlw	low (__npowers_| (0+32768))
  4113  0DF2  0784               	addwf	4,f
  4114  0DF3  3098               	movlw	high (__npowers_| (0+32768))
  4115  0DF4  3D85               	addwfc	5,f
  4116  0DF5  3F00               	moviw [0]fsr0
  4117  0DF6  00C0               	movwf	___ftmul@f1
  4118  0DF7  3F01               	moviw [1]fsr0
  4119  0DF8  00C1               	movwf	___ftmul@f1+1
  4120  0DF9  3F02               	moviw [2]fsr0
  4121  0DFA  00C2               	movwf	___ftmul@f1+2
  4122  0DFB  3064               	movlw	100
  4123  0DFC  00F7               	movwf	___awdiv@divisor
  4124  0DFD  3000               	movlw	0
  4125  0DFE  00F8               	movwf	___awdiv@divisor+1
  4126  0DFF  0858               	movf	scale@scl,w
  4127  0E00  00F9               	movwf	___awdiv@dividend
  4128  0E01  01FA               	clrf	___awdiv@dividend+1
  4129  0E02  1BF9               	btfsc	___awdiv@dividend,7
  4130  0E03  03FA               	decf	___awdiv@dividend+1,f
  4131  0E04  3195  25CA  318D   	fcall	___awdiv
  4132  0E07  0877               	movf	?___awdiv,w
  4133  0E08  3E12               	addlw	18
  4134  0E09  0020               	movlb	0	; select bank0
  4135  0E0A  00A4               	movwf	___wmul@multiplier
  4136  0E0B  3000               	movlw	0
  4137  0E0C  3D78               	addwfc	?___awdiv+1,w
  4138  0E0D  00A5               	movwf	___wmul@multiplier+1
  4139  0E0E  3003               	movlw	3
  4140  0E0F  00A6               	movwf	___wmul@multiplicand
  4141  0E10  3000               	movlw	0
  4142  0E11  00A7               	movwf	___wmul@multiplicand+1
  4143  0E12  3194  245E  318D   	fcall	___wmul
  4144  0E15  0020               	movlb	0	; select bank0
  4145  0E16  0825               	movf	?___wmul+1,w
  4146  0E17  0085               	movwf	5
  4147  0E18  0824               	movf	?___wmul,w
  4148  0E19  0084               	movwf	4
  4149  0E1A  3000               	movlw	low (__npowers_| (0+32768))
  4150  0E1B  0784               	addwf	4,f
  4151  0E1C  3098               	movlw	high (__npowers_| (0+32768))
  4152  0E1D  3D85               	addwfc	5,f
  4153  0E1E  3F00               	moviw [0]fsr0
  4154  0E1F  00C3               	movwf	___ftmul@f2
  4155  0E20  3F01               	moviw [1]fsr0
  4156  0E21  00C4               	movwf	___ftmul@f2+1
  4157  0E22  3F02               	moviw [2]fsr0
  4158  0E23  00C5               	movwf	___ftmul@f2+2
  4159  0E24  3197  274C  318D   	fcall	___ftmul
  4160  0E27  0020               	movlb	0	; select bank0
  4161  0E28  0840               	movf	?___ftmul,w
  4162  0E29  00D5               	movwf	_scale$566
  4163  0E2A  0841               	movf	?___ftmul+1,w
  4164  0E2B  00D6               	movwf	_scale$566+1
  4165  0E2C  0842               	movf	?___ftmul+2,w
  4166  0E2D  00D7               	movwf	_scale$566+2
  4167                           
  4168                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4169  0E2E  0858               	movf	scale@scl,w
  4170  0E2F  00F2               	movwf	___awmod@dividend
  4171  0E30  01F3               	clrf	___awmod@dividend+1
  4172  0E31  1BF2               	btfsc	___awmod@dividend,7
  4173  0E32  03F3               	decf	___awmod@dividend+1,f
  4174  0E33  300A               	movlw	10
  4175  0E34  00F0               	movwf	___awmod@divisor
  4176  0E35  3000               	movlw	0
  4177  0E36  00F1               	movwf	___awmod@divisor+1
  4178  0E37  3195  2533  318D   	fcall	___awmod
  4179  0E3A  0871               	movf	?___awmod+1,w
  4180  0E3B  0020               	movlb	0	; select bank0
  4181  0E3C  00A5               	movwf	___wmul@multiplier+1
  4182  0E3D  0870               	movf	?___awmod,w
  4183  0E3E  00A4               	movwf	___wmul@multiplier
  4184  0E3F  3003               	movlw	3
  4185  0E40  00A6               	movwf	___wmul@multiplicand
  4186  0E41  3000               	movlw	0
  4187  0E42  00A7               	movwf	___wmul@multiplicand+1
  4188  0E43  3194  245E  318D   	fcall	___wmul
  4189  0E46  0020               	movlb	0	; select bank0
  4190  0E47  0825               	movf	?___wmul+1,w
  4191  0E48  0085               	movwf	5
  4192  0E49  0824               	movf	?___wmul,w
  4193  0E4A  0084               	movwf	4
  4194  0E4B  3000               	movlw	low (__npowers_| (0+32768))
  4195  0E4C  0784               	addwf	4,f
  4196  0E4D  3098               	movlw	high (__npowers_| (0+32768))
  4197  0E4E  3D85               	addwfc	5,f
  4198  0E4F  3F00               	moviw [0]fsr0
  4199  0E50  00C0               	movwf	___ftmul@f1
  4200  0E51  3F01               	moviw [1]fsr0
  4201  0E52  00C1               	movwf	___ftmul@f1+1
  4202  0E53  3F02               	moviw [2]fsr0
  4203  0E54  00C2               	movwf	___ftmul@f1+2
  4204  0E55  0855               	movf	_scale$566,w
  4205  0E56  00C3               	movwf	___ftmul@f2
  4206  0E57  0856               	movf	_scale$566+1,w
  4207  0E58  00C4               	movwf	___ftmul@f2+1
  4208  0E59  0857               	movf	_scale$566+2,w
  4209  0E5A  00C5               	movwf	___ftmul@f2+2
  4210  0E5B  3197  274C         	fcall	___ftmul
  4211  0E5D  0020               	movlb	0	; select bank0
  4212  0E5E  0840               	movf	?___ftmul,w
  4213  0E5F  00D0               	movwf	?_scale
  4214  0E60  0841               	movf	?___ftmul+1,w
  4215  0E61  00D1               	movwf	?_scale+1
  4216  0E62  0842               	movf	?___ftmul+2,w
  4217  0E63  00D2               	movwf	?_scale+2
  4218  0E64  0008               	return
  4219  0E65                     l2075:	
  4220                           
  4221                           ;doprnt.c: 432: else if(scl > 10)
  4222  0E65  0858               	movf	scale@scl,w
  4223  0E66  3A80               	xorlw	128
  4224  0E67  3E75               	addlw	-139
  4225  0E68  1C03               	skipc
  4226  0E69  2EC4               	goto	l2081
  4227                           
  4228                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4229  0E6A  0858               	movf	scale@scl,w
  4230  0E6B  00F2               	movwf	___awmod@dividend
  4231  0E6C  01F3               	clrf	___awmod@dividend+1
  4232  0E6D  1BF2               	btfsc	___awmod@dividend,7
  4233  0E6E  03F3               	decf	___awmod@dividend+1,f
  4234  0E6F  300A               	movlw	10
  4235  0E70  00F0               	movwf	___awmod@divisor
  4236  0E71  3000               	movlw	0
  4237  0E72  00F1               	movwf	___awmod@divisor+1
  4238  0E73  3195  2533  318D   	fcall	___awmod
  4239  0E76  0871               	movf	?___awmod+1,w
  4240  0E77  0020               	movlb	0	; select bank0
  4241  0E78  00A5               	movwf	___wmul@multiplier+1
  4242  0E79  0870               	movf	?___awmod,w
  4243  0E7A  00A4               	movwf	___wmul@multiplier
  4244  0E7B  3003               	movlw	3
  4245  0E7C  00A6               	movwf	___wmul@multiplicand
  4246  0E7D  3000               	movlw	0
  4247  0E7E  00A7               	movwf	___wmul@multiplicand+1
  4248  0E7F  3194  245E  318D   	fcall	___wmul
  4249  0E82  0020               	movlb	0	; select bank0
  4250  0E83  0825               	movf	?___wmul+1,w
  4251  0E84  0085               	movwf	5
  4252  0E85  0824               	movf	?___wmul,w
  4253  0E86  0084               	movwf	4
  4254  0E87  3000               	movlw	low (__npowers_| (0+32768))
  4255  0E88  0784               	addwf	4,f
  4256  0E89  3098               	movlw	high (__npowers_| (0+32768))
  4257  0E8A  3D85               	addwfc	5,f
  4258  0E8B  3F00               	moviw [0]fsr0
  4259  0E8C  00C0               	movwf	___ftmul@f1
  4260  0E8D  3F01               	moviw [1]fsr0
  4261  0E8E  00C1               	movwf	___ftmul@f1+1
  4262  0E8F  3F02               	moviw [2]fsr0
  4263  0E90  00C2               	movwf	___ftmul@f1+2
  4264  0E91  300A               	movlw	10
  4265  0E92  00F7               	movwf	___awdiv@divisor
  4266  0E93  3000               	movlw	0
  4267  0E94  00F8               	movwf	___awdiv@divisor+1
  4268  0E95  0858               	movf	scale@scl,w
  4269  0E96  00F9               	movwf	___awdiv@dividend
  4270  0E97  01FA               	clrf	___awdiv@dividend+1
  4271  0E98  1BF9               	btfsc	___awdiv@dividend,7
  4272  0E99  03FA               	decf	___awdiv@dividend+1,f
  4273  0E9A  3195  25CA  318D   	fcall	___awdiv
  4274  0E9D  0877               	movf	?___awdiv,w
  4275  0E9E  3E09               	addlw	9
  4276  0E9F  0020               	movlb	0	; select bank0
  4277  0EA0  00A4               	movwf	___wmul@multiplier
  4278  0EA1  3000               	movlw	0
  4279  0EA2  3D78               	addwfc	?___awdiv+1,w
  4280  0EA3  00A5               	movwf	___wmul@multiplier+1
  4281  0EA4  3003               	movlw	3
  4282  0EA5  00A6               	movwf	___wmul@multiplicand
  4283  0EA6  3000               	movlw	0
  4284  0EA7  00A7               	movwf	___wmul@multiplicand+1
  4285  0EA8  3194  245E  318D   	fcall	___wmul
  4286  0EAB  0020               	movlb	0	; select bank0
  4287  0EAC  0825               	movf	?___wmul+1,w
  4288  0EAD  0085               	movwf	5
  4289  0EAE  0824               	movf	?___wmul,w
  4290  0EAF  0084               	movwf	4
  4291  0EB0  3000               	movlw	low (__npowers_| (0+32768))
  4292  0EB1  0784               	addwf	4,f
  4293  0EB2  3098               	movlw	high (__npowers_| (0+32768))
  4294  0EB3  3D85               	addwfc	5,f
  4295  0EB4  3F00               	moviw [0]fsr0
  4296  0EB5  00C3               	movwf	___ftmul@f2
  4297  0EB6  3F01               	moviw [1]fsr0
  4298  0EB7  00C4               	movwf	___ftmul@f2+1
  4299  0EB8  3F02               	moviw [2]fsr0
  4300  0EB9  00C5               	movwf	___ftmul@f2+2
  4301  0EBA  3197  274C         	fcall	___ftmul
  4302  0EBC  0020               	movlb	0	; select bank0
  4303  0EBD  0840               	movf	?___ftmul,w
  4304  0EBE  00D0               	movwf	?_scale
  4305  0EBF  0841               	movf	?___ftmul+1,w
  4306  0EC0  00D1               	movwf	?_scale+1
  4307  0EC1  0842               	movf	?___ftmul+2,w
  4308  0EC2  00D2               	movwf	?_scale+2
  4309  0EC3  0008               	return
  4310  0EC4                     l2081:	
  4311                           
  4312                           ;doprnt.c: 434: return _npowers_[scl];
  4313  0EC4  0858               	movf	scale@scl,w
  4314  0EC5  00D3               	movwf	??_scale
  4315  0EC6  01D4               	clrf	??_scale+1
  4316  0EC7  0853               	movf	??_scale,w
  4317  0EC8  00A4               	movwf	___wmul@multiplier
  4318  0EC9  0854               	movf	??_scale+1,w
  4319  0ECA  00A5               	movwf	___wmul@multiplier+1
  4320  0ECB  3003               	movlw	3
  4321  0ECC  00A6               	movwf	___wmul@multiplicand
  4322  0ECD  3000               	movlw	0
  4323  0ECE  00A7               	movwf	___wmul@multiplicand+1
  4324  0ECF  3194  245E         	fcall	___wmul
  4325  0ED1  0020               	movlb	0	; select bank0
  4326  0ED2  0825               	movf	?___wmul+1,w
  4327  0ED3  0085               	movwf	5
  4328  0ED4  0824               	movf	?___wmul,w
  4329  0ED5  0084               	movwf	4
  4330  0ED6  3000               	movlw	low (__npowers_| (0+32768))
  4331  0ED7  0784               	addwf	4,f
  4332  0ED8  3098               	movlw	high (__npowers_| (0+32768))
  4333  0ED9  3D85               	addwfc	5,f
  4334  0EDA  3F00               	moviw [0]fsr0
  4335  0EDB  00D0               	movwf	?_scale
  4336  0EDC  3F01               	moviw [1]fsr0
  4337  0EDD  00D1               	movwf	?_scale+1
  4338  0EDE  3F02               	moviw [2]fsr0
  4339  0EDF  00D2               	movwf	?_scale+2
  4340  0EE0  0008               	return
  4341  0EE1                     l2085:	
  4342                           
  4343                           ;doprnt.c: 435: }
  4344                           ;doprnt.c: 436: if(scl>=110)
  4345  0EE1  0858               	movf	scale@scl,w
  4346  0EE2  3A80               	xorlw	128
  4347  0EE3  3E12               	addlw	-238
  4348  0EE4  1C03               	skipc
  4349  0EE5  2F84               	goto	l2093
  4350                           
  4351                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4352  0EE6  300A               	movlw	10
  4353  0EE7  00F7               	movwf	___awdiv@divisor
  4354  0EE8  3000               	movlw	0
  4355  0EE9  00F8               	movwf	___awdiv@divisor+1
  4356  0EEA  0858               	movf	scale@scl,w
  4357  0EEB  00F2               	movwf	___awmod@dividend
  4358  0EEC  01F3               	clrf	___awmod@dividend+1
  4359  0EED  1BF2               	btfsc	___awmod@dividend,7
  4360  0EEE  03F3               	decf	___awmod@dividend+1,f
  4361  0EEF  3064               	movlw	100
  4362  0EF0  00F0               	movwf	___awmod@divisor
  4363  0EF1  3000               	movlw	0
  4364  0EF2  00F1               	movwf	___awmod@divisor+1
  4365  0EF3  3195  2533  318D   	fcall	___awmod
  4366  0EF6  0871               	movf	?___awmod+1,w
  4367  0EF7  00FA               	movwf	___awdiv@dividend+1
  4368  0EF8  0870               	movf	?___awmod,w
  4369  0EF9  00F9               	movwf	___awdiv@dividend
  4370  0EFA  3195  25CA  318D   	fcall	___awdiv
  4371  0EFD  0877               	movf	?___awdiv,w
  4372  0EFE  3E09               	addlw	9
  4373  0EFF  0020               	movlb	0	; select bank0
  4374  0F00  00A4               	movwf	___wmul@multiplier
  4375  0F01  3000               	movlw	0
  4376  0F02  3D78               	addwfc	?___awdiv+1,w
  4377  0F03  00A5               	movwf	___wmul@multiplier+1
  4378  0F04  3003               	movlw	3
  4379  0F05  00A6               	movwf	___wmul@multiplicand
  4380  0F06  3000               	movlw	0
  4381  0F07  00A7               	movwf	___wmul@multiplicand+1
  4382  0F08  3194  245E  318D   	fcall	___wmul
  4383  0F0B  0020               	movlb	0	; select bank0
  4384  0F0C  0825               	movf	?___wmul+1,w
  4385  0F0D  0085               	movwf	5
  4386  0F0E  0824               	movf	?___wmul,w
  4387  0F0F  0084               	movwf	4
  4388  0F10  30EE               	movlw	low (__powers_| (0+32768))
  4389  0F11  0784               	addwf	4,f
  4390  0F12  3098               	movlw	high (__powers_| (0+32768))
  4391  0F13  3D85               	addwfc	5,f
  4392  0F14  3F00               	moviw [0]fsr0
  4393  0F15  00C0               	movwf	___ftmul@f1
  4394  0F16  3F01               	moviw [1]fsr0
  4395  0F17  00C1               	movwf	___ftmul@f1+1
  4396  0F18  3F02               	moviw [2]fsr0
  4397  0F19  00C2               	movwf	___ftmul@f1+2
  4398  0F1A  3064               	movlw	100
  4399  0F1B  00F7               	movwf	___awdiv@divisor
  4400  0F1C  3000               	movlw	0
  4401  0F1D  00F8               	movwf	___awdiv@divisor+1
  4402  0F1E  0858               	movf	scale@scl,w
  4403  0F1F  00F9               	movwf	___awdiv@dividend
  4404  0F20  01FA               	clrf	___awdiv@dividend+1
  4405  0F21  1BF9               	btfsc	___awdiv@dividend,7
  4406  0F22  03FA               	decf	___awdiv@dividend+1,f
  4407  0F23  3195  25CA  318D   	fcall	___awdiv
  4408  0F26  0877               	movf	?___awdiv,w
  4409  0F27  3E12               	addlw	18
  4410  0F28  0020               	movlb	0	; select bank0
  4411  0F29  00A4               	movwf	___wmul@multiplier
  4412  0F2A  3000               	movlw	0
  4413  0F2B  3D78               	addwfc	?___awdiv+1,w
  4414  0F2C  00A5               	movwf	___wmul@multiplier+1
  4415  0F2D  3003               	movlw	3
  4416  0F2E  00A6               	movwf	___wmul@multiplicand
  4417  0F2F  3000               	movlw	0
  4418  0F30  00A7               	movwf	___wmul@multiplicand+1
  4419  0F31  3194  245E  318D   	fcall	___wmul
  4420  0F34  0020               	movlb	0	; select bank0
  4421  0F35  0825               	movf	?___wmul+1,w
  4422  0F36  0085               	movwf	5
  4423  0F37  0824               	movf	?___wmul,w
  4424  0F38  0084               	movwf	4
  4425  0F39  30EE               	movlw	low (__powers_| (0+32768))
  4426  0F3A  0784               	addwf	4,f
  4427  0F3B  3098               	movlw	high (__powers_| (0+32768))
  4428  0F3C  3D85               	addwfc	5,f
  4429  0F3D  3F00               	moviw [0]fsr0
  4430  0F3E  00C3               	movwf	___ftmul@f2
  4431  0F3F  3F01               	moviw [1]fsr0
  4432  0F40  00C4               	movwf	___ftmul@f2+1
  4433  0F41  3F02               	moviw [2]fsr0
  4434  0F42  00C5               	movwf	___ftmul@f2+2
  4435  0F43  3197  274C  318D   	fcall	___ftmul
  4436  0F46  0020               	movlb	0	; select bank0
  4437  0F47  0840               	movf	?___ftmul,w
  4438  0F48  00D5               	movwf	_scale$566
  4439  0F49  0841               	movf	?___ftmul+1,w
  4440  0F4A  00D6               	movwf	_scale$566+1
  4441  0F4B  0842               	movf	?___ftmul+2,w
  4442  0F4C  00D7               	movwf	_scale$566+2
  4443                           
  4444                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4445  0F4D  0858               	movf	scale@scl,w
  4446  0F4E  00F2               	movwf	___awmod@dividend
  4447  0F4F  01F3               	clrf	___awmod@dividend+1
  4448  0F50  1BF2               	btfsc	___awmod@dividend,7
  4449  0F51  03F3               	decf	___awmod@dividend+1,f
  4450  0F52  300A               	movlw	10
  4451  0F53  00F0               	movwf	___awmod@divisor
  4452  0F54  3000               	movlw	0
  4453  0F55  00F1               	movwf	___awmod@divisor+1
  4454  0F56  3195  2533  318D   	fcall	___awmod
  4455  0F59  0871               	movf	?___awmod+1,w
  4456  0F5A  0020               	movlb	0	; select bank0
  4457  0F5B  00A5               	movwf	___wmul@multiplier+1
  4458  0F5C  0870               	movf	?___awmod,w
  4459  0F5D  00A4               	movwf	___wmul@multiplier
  4460  0F5E  3003               	movlw	3
  4461  0F5F  00A6               	movwf	___wmul@multiplicand
  4462  0F60  3000               	movlw	0
  4463  0F61  00A7               	movwf	___wmul@multiplicand+1
  4464  0F62  3194  245E  318D   	fcall	___wmul
  4465  0F65  0020               	movlb	0	; select bank0
  4466  0F66  0825               	movf	?___wmul+1,w
  4467  0F67  0085               	movwf	5
  4468  0F68  0824               	movf	?___wmul,w
  4469  0F69  0084               	movwf	4
  4470  0F6A  30EE               	movlw	low (__powers_| (0+32768))
  4471  0F6B  0784               	addwf	4,f
  4472  0F6C  3098               	movlw	high (__powers_| (0+32768))
  4473  0F6D  3D85               	addwfc	5,f
  4474  0F6E  3F00               	moviw [0]fsr0
  4475  0F6F  00C0               	movwf	___ftmul@f1
  4476  0F70  3F01               	moviw [1]fsr0
  4477  0F71  00C1               	movwf	___ftmul@f1+1
  4478  0F72  3F02               	moviw [2]fsr0
  4479  0F73  00C2               	movwf	___ftmul@f1+2
  4480  0F74  0855               	movf	_scale$566,w
  4481  0F75  00C3               	movwf	___ftmul@f2
  4482  0F76  0856               	movf	_scale$566+1,w
  4483  0F77  00C4               	movwf	___ftmul@f2+1
  4484  0F78  0857               	movf	_scale$566+2,w
  4485  0F79  00C5               	movwf	___ftmul@f2+2
  4486  0F7A  3197  274C         	fcall	___ftmul
  4487  0F7C  0020               	movlb	0	; select bank0
  4488  0F7D  0840               	movf	?___ftmul,w
  4489  0F7E  00D0               	movwf	?_scale
  4490  0F7F  0841               	movf	?___ftmul+1,w
  4491  0F80  00D1               	movwf	?_scale+1
  4492  0F81  0842               	movf	?___ftmul+2,w
  4493  0F82  00D2               	movwf	?_scale+2
  4494  0F83  0008               	return
  4495  0F84                     l2093:	
  4496                           
  4497                           ;doprnt.c: 438: else if(scl > 10)
  4498  0F84  0858               	movf	scale@scl,w
  4499  0F85  3A80               	xorlw	128
  4500  0F86  3E75               	addlw	-139
  4501  0F87  1C03               	skipc
  4502  0F88  2FE3               	goto	l2099
  4503                           
  4504                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4505  0F89  0858               	movf	scale@scl,w
  4506  0F8A  00F2               	movwf	___awmod@dividend
  4507  0F8B  01F3               	clrf	___awmod@dividend+1
  4508  0F8C  1BF2               	btfsc	___awmod@dividend,7
  4509  0F8D  03F3               	decf	___awmod@dividend+1,f
  4510  0F8E  300A               	movlw	10
  4511  0F8F  00F0               	movwf	___awmod@divisor
  4512  0F90  3000               	movlw	0
  4513  0F91  00F1               	movwf	___awmod@divisor+1
  4514  0F92  3195  2533  318D   	fcall	___awmod
  4515  0F95  0871               	movf	?___awmod+1,w
  4516  0F96  0020               	movlb	0	; select bank0
  4517  0F97  00A5               	movwf	___wmul@multiplier+1
  4518  0F98  0870               	movf	?___awmod,w
  4519  0F99  00A4               	movwf	___wmul@multiplier
  4520  0F9A  3003               	movlw	3
  4521  0F9B  00A6               	movwf	___wmul@multiplicand
  4522  0F9C  3000               	movlw	0
  4523  0F9D  00A7               	movwf	___wmul@multiplicand+1
  4524  0F9E  3194  245E  318D   	fcall	___wmul
  4525  0FA1  0020               	movlb	0	; select bank0
  4526  0FA2  0825               	movf	?___wmul+1,w
  4527  0FA3  0085               	movwf	5
  4528  0FA4  0824               	movf	?___wmul,w
  4529  0FA5  0084               	movwf	4
  4530  0FA6  30EE               	movlw	low (__powers_| (0+32768))
  4531  0FA7  0784               	addwf	4,f
  4532  0FA8  3098               	movlw	high (__powers_| (0+32768))
  4533  0FA9  3D85               	addwfc	5,f
  4534  0FAA  3F00               	moviw [0]fsr0
  4535  0FAB  00C0               	movwf	___ftmul@f1
  4536  0FAC  3F01               	moviw [1]fsr0
  4537  0FAD  00C1               	movwf	___ftmul@f1+1
  4538  0FAE  3F02               	moviw [2]fsr0
  4539  0FAF  00C2               	movwf	___ftmul@f1+2
  4540  0FB0  300A               	movlw	10
  4541  0FB1  00F7               	movwf	___awdiv@divisor
  4542  0FB2  3000               	movlw	0
  4543  0FB3  00F8               	movwf	___awdiv@divisor+1
  4544  0FB4  0858               	movf	scale@scl,w
  4545  0FB5  00F9               	movwf	___awdiv@dividend
  4546  0FB6  01FA               	clrf	___awdiv@dividend+1
  4547  0FB7  1BF9               	btfsc	___awdiv@dividend,7
  4548  0FB8  03FA               	decf	___awdiv@dividend+1,f
  4549  0FB9  3195  25CA  318D   	fcall	___awdiv
  4550  0FBC  0877               	movf	?___awdiv,w
  4551  0FBD  3E09               	addlw	9
  4552  0FBE  0020               	movlb	0	; select bank0
  4553  0FBF  00A4               	movwf	___wmul@multiplier
  4554  0FC0  3000               	movlw	0
  4555  0FC1  3D78               	addwfc	?___awdiv+1,w
  4556  0FC2  00A5               	movwf	___wmul@multiplier+1
  4557  0FC3  3003               	movlw	3
  4558  0FC4  00A6               	movwf	___wmul@multiplicand
  4559  0FC5  3000               	movlw	0
  4560  0FC6  00A7               	movwf	___wmul@multiplicand+1
  4561  0FC7  3194  245E  318D   	fcall	___wmul
  4562  0FCA  0020               	movlb	0	; select bank0
  4563  0FCB  0825               	movf	?___wmul+1,w
  4564  0FCC  0085               	movwf	5
  4565  0FCD  0824               	movf	?___wmul,w
  4566  0FCE  0084               	movwf	4
  4567  0FCF  30EE               	movlw	low (__powers_| (0+32768))
  4568  0FD0  0784               	addwf	4,f
  4569  0FD1  3098               	movlw	high (__powers_| (0+32768))
  4570  0FD2  3D85               	addwfc	5,f
  4571  0FD3  3F00               	moviw [0]fsr0
  4572  0FD4  00C3               	movwf	___ftmul@f2
  4573  0FD5  3F01               	moviw [1]fsr0
  4574  0FD6  00C4               	movwf	___ftmul@f2+1
  4575  0FD7  3F02               	moviw [2]fsr0
  4576  0FD8  00C5               	movwf	___ftmul@f2+2
  4577  0FD9  3197  274C         	fcall	___ftmul
  4578  0FDB  0020               	movlb	0	; select bank0
  4579  0FDC  0840               	movf	?___ftmul,w
  4580  0FDD  00D0               	movwf	?_scale
  4581  0FDE  0841               	movf	?___ftmul+1,w
  4582  0FDF  00D1               	movwf	?_scale+1
  4583  0FE0  0842               	movf	?___ftmul+2,w
  4584  0FE1  00D2               	movwf	?_scale+2
  4585  0FE2  0008               	return
  4586  0FE3                     l2099:	
  4587                           
  4588                           ;doprnt.c: 440: return _powers_[scl];
  4589  0FE3  0858               	movf	scale@scl,w
  4590  0FE4  00D3               	movwf	??_scale
  4591  0FE5  01D4               	clrf	??_scale+1
  4592  0FE6  0853               	movf	??_scale,w
  4593  0FE7  00A4               	movwf	___wmul@multiplier
  4594  0FE8  0854               	movf	??_scale+1,w
  4595  0FE9  00A5               	movwf	___wmul@multiplier+1
  4596  0FEA  3003               	movlw	3
  4597  0FEB  00A6               	movwf	___wmul@multiplicand
  4598  0FEC  3000               	movlw	0
  4599  0FED  00A7               	movwf	___wmul@multiplicand+1
  4600  0FEE  3194  245E         	fcall	___wmul
  4601  0FF0  0020               	movlb	0	; select bank0
  4602  0FF1  0825               	movf	?___wmul+1,w
  4603  0FF2  0085               	movwf	5
  4604  0FF3  0824               	movf	?___wmul,w
  4605  0FF4  0084               	movwf	4
  4606  0FF5  30EE               	movlw	low (__powers_| (0+32768))
  4607  0FF6  0784               	addwf	4,f
  4608  0FF7  3098               	movlw	high (__powers_| (0+32768))
  4609  0FF8  3D85               	addwfc	5,f
  4610  0FF9  3F00               	moviw [0]fsr0
  4611  0FFA  00D0               	movwf	?_scale
  4612  0FFB  3F01               	moviw [1]fsr0
  4613  0FFC  00D1               	movwf	?_scale+1
  4614  0FFD  3F02               	moviw [2]fsr0
  4615  0FFE  00D2               	movwf	?_scale+2
  4616  0FFF  0008               	return
  4617  1000                     __end_of_scale:	
  4618                           
  4619                           	psect	text4
  4620  142C                     __ptext4:	
  4621 ;; *************** function _putch *****************
  4622 ;; Defined at:
  4623 ;;		line 148 in file "main.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  byte            1    wreg     unsigned char 
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;  byte            1    0[COMMON] unsigned char 
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1    wreg      void 
  4630 ;; Registers used:
  4631 ;;		wreg
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;Total ram usage:        1 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_printf
  4647 ;;		_getche
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           
  4652                           ;psect for function _putch
  4653  142C                     _putch:	
  4654                           
  4655                           ;incstack = 0
  4656                           ; Regs used in _putch: [wreg]
  4657                           ;putch@byte stored from wreg
  4658  142C  00F0               	movwf	putch@byte
  4659  142D                     l123:	
  4660                           ;main.c: 152: continue;
  4661                           
  4662                           ;main.c: 151: while(!TXIF)
  4663                           
  4664  142D  0020               	movlb	0	; select bank0
  4665  142E  1E11               	btfss	17,4	;volatile
  4666  142F  2C2D               	goto	l123
  4667                           
  4668                           ;main.c: 153: TXREG = byte;
  4669  1430  0870               	movf	putch@byte,w
  4670  1431  0023               	movlb	3	; select bank3
  4671  1432  009A               	movwf	26	;volatile
  4672  1433  0008               	return
  4673  1434                     __end_of_putch:	
  4674                           
  4675                           	psect	text5
  4676  143D                     __ptext5:	
  4677 ;; *************** function _isdigit *****************
  4678 ;; Defined at:
  4679 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  c               1    wreg     unsigned char 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  c               1    1[COMMON] unsigned char 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;		None               void
  4686 ;; Registers used:
  4687 ;;		wreg, status,2, status,0
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;Total ram usage:        2 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_printf
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           
  4707                           ;psect for function _isdigit
  4708  143D                     _isdigit:	
  4709                           
  4710                           ;incstack = 0
  4711                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4712                           ;isdigit@c stored from wreg
  4713  143D  00F1               	movwf	isdigit@c
  4714  143E  01F0               	clrf	_isdigit$348
  4715  143F  303A               	movlw	58
  4716  1440  0271               	subwf	isdigit@c,w
  4717  1441  1803               	skipnc
  4718  1442  2C49               	goto	l2111
  4719  1443  3030               	movlw	48
  4720  1444  0271               	subwf	isdigit@c,w
  4721  1445  1C03               	skipc
  4722  1446  2C49               	goto	l2111
  4723  1447  01F0               	clrf	_isdigit$348
  4724  1448  0AF0               	incf	_isdigit$348,f
  4725  1449                     l2111:	
  4726  1449  0C70               	rrf	_isdigit$348,w
  4727  144A  0008               	return
  4728  144B                     __end_of_isdigit:	
  4729                           
  4730                           	psect	text6
  4731  0A7D                     __ptext6:	
  4732 ;; *************** function _fround *****************
  4733 ;; Defined at:
  4734 ;;		line 409 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  prec            1    wreg     unsigned char 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  prec            1   61[BANK0 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  3   48[BANK0 ] unsigned char 
  4741 ;; Registers used:
  4742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4748 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4749 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4751 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;Total ram usage:       14 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:    2
  4755 ;; This function calls:
  4756 ;;		___awdiv
  4757 ;;		___awmod
  4758 ;;		___ftmul
  4759 ;;		___wmul
  4760 ;; This function is called by:
  4761 ;;		_printf
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           
  4766                           ;psect for function _fround
  4767  0A7D                     _fround:	
  4768                           
  4769                           ;incstack = 0
  4770                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4771                           ;fround@prec stored from wreg
  4772  0A7D  0020               	movlb	0	; select bank0
  4773  0A7E  00DD               	movwf	fround@prec
  4774                           
  4775                           ;doprnt.c: 413: if(prec>=110)
  4776  0A7F  306E               	movlw	110
  4777  0A80  025D               	subwf	fround@prec,w
  4778  0A81  1C03               	skipc
  4779  0A82  2B3D               	goto	l2051
  4780                           
  4781                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4782  0A83  300A               	movlw	10
  4783  0A84  00F7               	movwf	___awdiv@divisor
  4784  0A85  3000               	movlw	0
  4785  0A86  00F8               	movwf	___awdiv@divisor+1
  4786  0A87  085D               	movf	fround@prec,w
  4787  0A88  00D3               	movwf	??_fround
  4788  0A89  01D4               	clrf	??_fround+1
  4789  0A8A  0853               	movf	??_fround,w
  4790  0A8B  00F2               	movwf	___awmod@dividend
  4791  0A8C  0854               	movf	??_fround+1,w
  4792  0A8D  00F3               	movwf	___awmod@dividend+1
  4793  0A8E  3064               	movlw	100
  4794  0A8F  00F0               	movwf	___awmod@divisor
  4795  0A90  3000               	movlw	0
  4796  0A91  00F1               	movwf	___awmod@divisor+1
  4797  0A92  3195  2533  318A   	fcall	___awmod
  4798  0A95  0871               	movf	?___awmod+1,w
  4799  0A96  00FA               	movwf	___awdiv@dividend+1
  4800  0A97  0870               	movf	?___awmod,w
  4801  0A98  00F9               	movwf	___awdiv@dividend
  4802  0A99  3195  25CA  318A   	fcall	___awdiv
  4803  0A9C  0877               	movf	?___awdiv,w
  4804  0A9D  3E09               	addlw	9
  4805  0A9E  0020               	movlb	0	; select bank0
  4806  0A9F  00A4               	movwf	___wmul@multiplier
  4807  0AA0  3000               	movlw	0
  4808  0AA1  3D78               	addwfc	?___awdiv+1,w
  4809  0AA2  00A5               	movwf	___wmul@multiplier+1
  4810  0AA3  3003               	movlw	3
  4811  0AA4  00A6               	movwf	___wmul@multiplicand
  4812  0AA5  3000               	movlw	0
  4813  0AA6  00A7               	movwf	___wmul@multiplicand+1
  4814  0AA7  3194  245E  318A   	fcall	___wmul
  4815  0AAA  0020               	movlb	0	; select bank0
  4816  0AAB  0825               	movf	?___wmul+1,w
  4817  0AAC  0085               	movwf	5
  4818  0AAD  0824               	movf	?___wmul,w
  4819  0AAE  0084               	movwf	4
  4820  0AAF  3000               	movlw	low (__npowers_| (0+32768))
  4821  0AB0  0784               	addwf	4,f
  4822  0AB1  3098               	movlw	high (__npowers_| (0+32768))
  4823  0AB2  3D85               	addwfc	5,f
  4824  0AB3  3F00               	moviw [0]fsr0
  4825  0AB4  00C0               	movwf	___ftmul@f1
  4826  0AB5  3F01               	moviw [1]fsr0
  4827  0AB6  00C1               	movwf	___ftmul@f1+1
  4828  0AB7  3F02               	moviw [2]fsr0
  4829  0AB8  00C2               	movwf	___ftmul@f1+2
  4830  0AB9  3064               	movlw	100
  4831  0ABA  00F7               	movwf	___awdiv@divisor
  4832  0ABB  3000               	movlw	0
  4833  0ABC  00F8               	movwf	___awdiv@divisor+1
  4834  0ABD  085D               	movf	fround@prec,w
  4835  0ABE  00D5               	movwf	??_fround+2
  4836  0ABF  01D6               	clrf	??_fround+3
  4837  0AC0  0855               	movf	??_fround+2,w
  4838  0AC1  00F9               	movwf	___awdiv@dividend
  4839  0AC2  0856               	movf	??_fround+3,w
  4840  0AC3  00FA               	movwf	___awdiv@dividend+1
  4841  0AC4  3195  25CA  318A   	fcall	___awdiv
  4842  0AC7  0877               	movf	?___awdiv,w
  4843  0AC8  3E12               	addlw	18
  4844  0AC9  0020               	movlb	0	; select bank0
  4845  0ACA  00A4               	movwf	___wmul@multiplier
  4846  0ACB  3000               	movlw	0
  4847  0ACC  3D78               	addwfc	?___awdiv+1,w
  4848  0ACD  00A5               	movwf	___wmul@multiplier+1
  4849  0ACE  3003               	movlw	3
  4850  0ACF  00A6               	movwf	___wmul@multiplicand
  4851  0AD0  3000               	movlw	0
  4852  0AD1  00A7               	movwf	___wmul@multiplicand+1
  4853  0AD2  3194  245E  318A   	fcall	___wmul
  4854  0AD5  0020               	movlb	0	; select bank0
  4855  0AD6  0825               	movf	?___wmul+1,w
  4856  0AD7  0085               	movwf	5
  4857  0AD8  0824               	movf	?___wmul,w
  4858  0AD9  0084               	movwf	4
  4859  0ADA  3000               	movlw	low (__npowers_| (0+32768))
  4860  0ADB  0784               	addwf	4,f
  4861  0ADC  3098               	movlw	high (__npowers_| (0+32768))
  4862  0ADD  3D85               	addwfc	5,f
  4863  0ADE  3F00               	moviw [0]fsr0
  4864  0ADF  00C3               	movwf	___ftmul@f2
  4865  0AE0  3F01               	moviw [1]fsr0
  4866  0AE1  00C4               	movwf	___ftmul@f2+1
  4867  0AE2  3F02               	moviw [2]fsr0
  4868  0AE3  00C5               	movwf	___ftmul@f2+2
  4869  0AE4  3197  274C  318A   	fcall	___ftmul
  4870  0AE7  0020               	movlb	0	; select bank0
  4871  0AE8  0840               	movf	?___ftmul,w
  4872  0AE9  00DA               	movwf	_fround$564
  4873  0AEA  0841               	movf	?___ftmul+1,w
  4874  0AEB  00DB               	movwf	_fround$564+1
  4875  0AEC  0842               	movf	?___ftmul+2,w
  4876  0AED  00DC               	movwf	_fround$564+2
  4877                           
  4878                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4879  0AEE  085D               	movf	fround@prec,w
  4880  0AEF  00D3               	movwf	??_fround
  4881  0AF0  01D4               	clrf	??_fround+1
  4882  0AF1  0853               	movf	??_fround,w
  4883  0AF2  00F2               	movwf	___awmod@dividend
  4884  0AF3  0854               	movf	??_fround+1,w
  4885  0AF4  00F3               	movwf	___awmod@dividend+1
  4886  0AF5  300A               	movlw	10
  4887  0AF6  00F0               	movwf	___awmod@divisor
  4888  0AF7  3000               	movlw	0
  4889  0AF8  00F1               	movwf	___awmod@divisor+1
  4890  0AF9  3195  2533  318A   	fcall	___awmod
  4891  0AFC  0871               	movf	?___awmod+1,w
  4892  0AFD  0020               	movlb	0	; select bank0
  4893  0AFE  00A5               	movwf	___wmul@multiplier+1
  4894  0AFF  0870               	movf	?___awmod,w
  4895  0B00  00A4               	movwf	___wmul@multiplier
  4896  0B01  3003               	movlw	3
  4897  0B02  00A6               	movwf	___wmul@multiplicand
  4898  0B03  3000               	movlw	0
  4899  0B04  00A7               	movwf	___wmul@multiplicand+1
  4900  0B05  3194  245E  318A   	fcall	___wmul
  4901  0B08  0020               	movlb	0	; select bank0
  4902  0B09  0825               	movf	?___wmul+1,w
  4903  0B0A  0085               	movwf	5
  4904  0B0B  0824               	movf	?___wmul,w
  4905  0B0C  0084               	movwf	4
  4906  0B0D  3000               	movlw	low (__npowers_| (0+32768))
  4907  0B0E  0784               	addwf	4,f
  4908  0B0F  3098               	movlw	high (__npowers_| (0+32768))
  4909  0B10  3D85               	addwfc	5,f
  4910  0B11  3F00               	moviw [0]fsr0
  4911  0B12  00C0               	movwf	___ftmul@f1
  4912  0B13  3F01               	moviw [1]fsr0
  4913  0B14  00C1               	movwf	___ftmul@f1+1
  4914  0B15  3F02               	moviw [2]fsr0
  4915  0B16  00C2               	movwf	___ftmul@f1+2
  4916  0B17  085A               	movf	_fround$564,w
  4917  0B18  00C3               	movwf	___ftmul@f2
  4918  0B19  085B               	movf	_fround$564+1,w
  4919  0B1A  00C4               	movwf	___ftmul@f2+1
  4920  0B1B  085C               	movf	_fround$564+2,w
  4921  0B1C  00C5               	movwf	___ftmul@f2+2
  4922  0B1D  3197  274C  318A   	fcall	___ftmul
  4923  0B20  0020               	movlb	0	; select bank0
  4924  0B21  0840               	movf	?___ftmul,w
  4925  0B22  00D7               	movwf	_fround$565
  4926  0B23  0841               	movf	?___ftmul+1,w
  4927  0B24  00D8               	movwf	_fround$565+1
  4928  0B25  0842               	movf	?___ftmul+2,w
  4929  0B26  00D9               	movwf	_fround$565+2
  4930                           
  4931                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4932  0B27  3000               	movlw	0
  4933  0B28  00C0               	movwf	___ftmul@f1
  4934  0B29  3000               	movlw	0
  4935  0B2A  00C1               	movwf	___ftmul@f1+1
  4936  0B2B  303F               	movlw	63
  4937  0B2C  00C2               	movwf	___ftmul@f1+2
  4938  0B2D  0857               	movf	_fround$565,w
  4939  0B2E  00C3               	movwf	___ftmul@f2
  4940  0B2F  0858               	movf	_fround$565+1,w
  4941  0B30  00C4               	movwf	___ftmul@f2+1
  4942  0B31  0859               	movf	_fround$565+2,w
  4943  0B32  00C5               	movwf	___ftmul@f2+2
  4944  0B33  3197  274C         	fcall	___ftmul
  4945  0B35  0020               	movlb	0	; select bank0
  4946  0B36  0840               	movf	?___ftmul,w
  4947  0B37  00D0               	movwf	?_fround
  4948  0B38  0841               	movf	?___ftmul+1,w
  4949  0B39  00D1               	movwf	?_fround+1
  4950  0B3A  0842               	movf	?___ftmul+2,w
  4951  0B3B  00D2               	movwf	?_fround+2
  4952  0B3C  0008               	return
  4953  0B3D                     l2051:	
  4954                           
  4955                           ;doprnt.c: 415: else if(prec > 10)
  4956  0B3D  300B               	movlw	11
  4957  0B3E  025D               	subwf	fround@prec,w
  4958  0B3F  1C03               	skipc
  4959  0B40  2BB5               	goto	l2059
  4960                           
  4961                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4962  0B41  085D               	movf	fround@prec,w
  4963  0B42  00D3               	movwf	??_fround
  4964  0B43  01D4               	clrf	??_fround+1
  4965  0B44  0853               	movf	??_fround,w
  4966  0B45  00F2               	movwf	___awmod@dividend
  4967  0B46  0854               	movf	??_fround+1,w
  4968  0B47  00F3               	movwf	___awmod@dividend+1
  4969  0B48  300A               	movlw	10
  4970  0B49  00F0               	movwf	___awmod@divisor
  4971  0B4A  3000               	movlw	0
  4972  0B4B  00F1               	movwf	___awmod@divisor+1
  4973  0B4C  3195  2533  318A   	fcall	___awmod
  4974  0B4F  0871               	movf	?___awmod+1,w
  4975  0B50  0020               	movlb	0	; select bank0
  4976  0B51  00A5               	movwf	___wmul@multiplier+1
  4977  0B52  0870               	movf	?___awmod,w
  4978  0B53  00A4               	movwf	___wmul@multiplier
  4979  0B54  3003               	movlw	3
  4980  0B55  00A6               	movwf	___wmul@multiplicand
  4981  0B56  3000               	movlw	0
  4982  0B57  00A7               	movwf	___wmul@multiplicand+1
  4983  0B58  3194  245E  318A   	fcall	___wmul
  4984  0B5B  0020               	movlb	0	; select bank0
  4985  0B5C  0825               	movf	?___wmul+1,w
  4986  0B5D  0085               	movwf	5
  4987  0B5E  0824               	movf	?___wmul,w
  4988  0B5F  0084               	movwf	4
  4989  0B60  3000               	movlw	low (__npowers_| (0+32768))
  4990  0B61  0784               	addwf	4,f
  4991  0B62  3098               	movlw	high (__npowers_| (0+32768))
  4992  0B63  3D85               	addwfc	5,f
  4993  0B64  3F00               	moviw [0]fsr0
  4994  0B65  00C0               	movwf	___ftmul@f1
  4995  0B66  3F01               	moviw [1]fsr0
  4996  0B67  00C1               	movwf	___ftmul@f1+1
  4997  0B68  3F02               	moviw [2]fsr0
  4998  0B69  00C2               	movwf	___ftmul@f1+2
  4999  0B6A  300A               	movlw	10
  5000  0B6B  00F7               	movwf	___awdiv@divisor
  5001  0B6C  3000               	movlw	0
  5002  0B6D  00F8               	movwf	___awdiv@divisor+1
  5003  0B6E  085D               	movf	fround@prec,w
  5004  0B6F  00D5               	movwf	??_fround+2
  5005  0B70  01D6               	clrf	??_fround+3
  5006  0B71  0855               	movf	??_fround+2,w
  5007  0B72  00F9               	movwf	___awdiv@dividend
  5008  0B73  0856               	movf	??_fround+3,w
  5009  0B74  00FA               	movwf	___awdiv@dividend+1
  5010  0B75  3195  25CA  318A   	fcall	___awdiv
  5011  0B78  0877               	movf	?___awdiv,w
  5012  0B79  3E09               	addlw	9
  5013  0B7A  0020               	movlb	0	; select bank0
  5014  0B7B  00A4               	movwf	___wmul@multiplier
  5015  0B7C  3000               	movlw	0
  5016  0B7D  3D78               	addwfc	?___awdiv+1,w
  5017  0B7E  00A5               	movwf	___wmul@multiplier+1
  5018  0B7F  3003               	movlw	3
  5019  0B80  00A6               	movwf	___wmul@multiplicand
  5020  0B81  3000               	movlw	0
  5021  0B82  00A7               	movwf	___wmul@multiplicand+1
  5022  0B83  3194  245E  318A   	fcall	___wmul
  5023  0B86  0020               	movlb	0	; select bank0
  5024  0B87  0825               	movf	?___wmul+1,w
  5025  0B88  0085               	movwf	5
  5026  0B89  0824               	movf	?___wmul,w
  5027  0B8A  0084               	movwf	4
  5028  0B8B  3000               	movlw	low (__npowers_| (0+32768))
  5029  0B8C  0784               	addwf	4,f
  5030  0B8D  3098               	movlw	high (__npowers_| (0+32768))
  5031  0B8E  3D85               	addwfc	5,f
  5032  0B8F  3F00               	moviw [0]fsr0
  5033  0B90  00C3               	movwf	___ftmul@f2
  5034  0B91  3F01               	moviw [1]fsr0
  5035  0B92  00C4               	movwf	___ftmul@f2+1
  5036  0B93  3F02               	moviw [2]fsr0
  5037  0B94  00C5               	movwf	___ftmul@f2+2
  5038  0B95  3197  274C  318A   	fcall	___ftmul
  5039  0B98  0020               	movlb	0	; select bank0
  5040  0B99  0840               	movf	?___ftmul,w
  5041  0B9A  00DA               	movwf	_fround$564
  5042  0B9B  0841               	movf	?___ftmul+1,w
  5043  0B9C  00DB               	movwf	_fround$564+1
  5044  0B9D  0842               	movf	?___ftmul+2,w
  5045  0B9E  00DC               	movwf	_fround$564+2
  5046                           
  5047                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5048  0B9F  3000               	movlw	0
  5049  0BA0  00C0               	movwf	___ftmul@f1
  5050  0BA1  3000               	movlw	0
  5051  0BA2  00C1               	movwf	___ftmul@f1+1
  5052  0BA3  303F               	movlw	63
  5053  0BA4  00C2               	movwf	___ftmul@f1+2
  5054  0BA5  085A               	movf	_fround$564,w
  5055  0BA6  00C3               	movwf	___ftmul@f2
  5056  0BA7  085B               	movf	_fround$564+1,w
  5057  0BA8  00C4               	movwf	___ftmul@f2+1
  5058  0BA9  085C               	movf	_fround$564+2,w
  5059  0BAA  00C5               	movwf	___ftmul@f2+2
  5060  0BAB  3197  274C         	fcall	___ftmul
  5061  0BAD  0020               	movlb	0	; select bank0
  5062  0BAE  0840               	movf	?___ftmul,w
  5063  0BAF  00D0               	movwf	?_fround
  5064  0BB0  0841               	movf	?___ftmul+1,w
  5065  0BB1  00D1               	movwf	?_fround+1
  5066  0BB2  0842               	movf	?___ftmul+2,w
  5067  0BB3  00D2               	movwf	?_fround+2
  5068  0BB4  0008               	return
  5069  0BB5                     l2059:	
  5070                           
  5071                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5072  0BB5  3000               	movlw	0
  5073  0BB6  00C0               	movwf	___ftmul@f1
  5074  0BB7  3000               	movlw	0
  5075  0BB8  00C1               	movwf	___ftmul@f1+1
  5076  0BB9  303F               	movlw	63
  5077  0BBA  00C2               	movwf	___ftmul@f1+2
  5078  0BBB  085D               	movf	fround@prec,w
  5079  0BBC  00D3               	movwf	??_fround
  5080  0BBD  01D4               	clrf	??_fround+1
  5081  0BBE  0853               	movf	??_fround,w
  5082  0BBF  00A4               	movwf	___wmul@multiplier
  5083  0BC0  0854               	movf	??_fround+1,w
  5084  0BC1  00A5               	movwf	___wmul@multiplier+1
  5085  0BC2  3003               	movlw	3
  5086  0BC3  00A6               	movwf	___wmul@multiplicand
  5087  0BC4  3000               	movlw	0
  5088  0BC5  00A7               	movwf	___wmul@multiplicand+1
  5089  0BC6  3194  245E  318A   	fcall	___wmul
  5090  0BC9  0020               	movlb	0	; select bank0
  5091  0BCA  0825               	movf	?___wmul+1,w
  5092  0BCB  0085               	movwf	5
  5093  0BCC  0824               	movf	?___wmul,w
  5094  0BCD  0084               	movwf	4
  5095  0BCE  3000               	movlw	low (__npowers_| (0+32768))
  5096  0BCF  0784               	addwf	4,f
  5097  0BD0  3098               	movlw	high (__npowers_| (0+32768))
  5098  0BD1  3D85               	addwfc	5,f
  5099  0BD2  3F00               	moviw [0]fsr0
  5100  0BD3  00C3               	movwf	___ftmul@f2
  5101  0BD4  3F01               	moviw [1]fsr0
  5102  0BD5  00C4               	movwf	___ftmul@f2+1
  5103  0BD6  3F02               	moviw [2]fsr0
  5104  0BD7  00C5               	movwf	___ftmul@f2+2
  5105  0BD8  3197  274C         	fcall	___ftmul
  5106  0BDA  0020               	movlb	0	; select bank0
  5107  0BDB  0840               	movf	?___ftmul,w
  5108  0BDC  00D0               	movwf	?_fround
  5109  0BDD  0841               	movf	?___ftmul+1,w
  5110  0BDE  00D1               	movwf	?_fround+1
  5111  0BDF  0842               	movf	?___ftmul+2,w
  5112  0BE0  00D2               	movwf	?_fround+2
  5113  0BE1  0008               	return
  5114  0BE2                     __end_of_fround:	
  5115                           
  5116                           	psect	text7
  5117  145E                     __ptext7:	
  5118 ;; *************** function ___wmul *****************
  5119 ;; Defined at:
  5120 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5123 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  product         2   12[COMMON] unsigned int 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  2    4[BANK0 ] unsigned int 
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;Total ram usage:        6 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_fround
  5145 ;;		_scale
  5146 ;;		_printf
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           
  5151                           ;psect for function ___wmul
  5152  145E                     ___wmul:	
  5153                           
  5154                           ;incstack = 0
  5155                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5156  145E  01FC               	clrf	___wmul@product
  5157  145F  01FD               	clrf	___wmul@product+1
  5158  1460                     l1823:	
  5159  1460  0020               	movlb	0	; select bank0
  5160  1461  1C24               	btfss	___wmul@multiplier,0
  5161  1462  2C67               	goto	l364
  5162  1463  0826               	movf	___wmul@multiplicand,w
  5163  1464  07FC               	addwf	___wmul@product,f
  5164  1465  0827               	movf	___wmul@multiplicand+1,w
  5165  1466  3DFD               	addwfc	___wmul@product+1,f
  5166  1467                     l364:	
  5167  1467  3001               	movlw	1
  5168  1468                     u2215:	
  5169  1468  35A6               	lslf	___wmul@multiplicand,f
  5170  1469  0DA7               	rlf	___wmul@multiplicand+1,f
  5171  146A  0B89               	decfsz	9,f
  5172  146B  2C68               	goto	u2215
  5173  146C  3001               	movlw	1
  5174  146D                     u2225:	
  5175  146D  36A5               	lsrf	___wmul@multiplier+1,f
  5176  146E  0CA4               	rrf	___wmul@multiplier,f
  5177  146F  0B89               	decfsz	9,f
  5178  1470  2C6D               	goto	u2225
  5179  1471  0824               	movf	___wmul@multiplier,w
  5180  1472  0425               	iorwf	___wmul@multiplier+1,w
  5181  1473  1D03               	btfss	3,2
  5182  1474  2C60               	goto	l1823
  5183  1475  087D               	movf	___wmul@product+1,w
  5184  1476  00A5               	movwf	?___wmul+1
  5185  1477  087C               	movf	___wmul@product,w
  5186  1478  00A4               	movwf	?___wmul
  5187  1479  0008               	return
  5188  147A                     __end_of___wmul:	
  5189                           
  5190                           	psect	text8
  5191  174C                     __ptext8:	
  5192 ;; *************** function ___ftmul *****************
  5193 ;; Defined at:
  5194 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/ftmul.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  f1              3   32[BANK0 ] float 
  5197 ;;  f2              3   35[BANK0 ] float 
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;  f3_as_produc    3   43[BANK0 ] unsigned um
  5200 ;;  sign            1   47[BANK0 ] unsigned char 
  5201 ;;  cntr            1   46[BANK0 ] unsigned char 
  5202 ;;  exp             1   42[BANK0 ] unsigned char 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  3   32[BANK0 ] float 
  5205 ;; Registers used:
  5206 ;;		wreg, status,2, status,0, pclath, cstack
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5212 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5213 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5214 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;Total ram usage:       16 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; Hardware stack levels required when called:    1
  5219 ;; This function calls:
  5220 ;;		___ftpack
  5221 ;; This function is called by:
  5222 ;;		_main
  5223 ;;		_fround
  5224 ;;		_scale
  5225 ;;		_printf
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           
  5230                           ;psect for function ___ftmul
  5231  174C                     ___ftmul:	
  5232                           
  5233                           ;incstack = 0
  5234                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5235  174C  0020               	movlb	0	; select bank0
  5236  174D  0840               	movf	___ftmul@f1,w
  5237  174E  00C6               	movwf	??___ftmul
  5238  174F  0841               	movf	___ftmul@f1+1,w
  5239  1750  00C7               	movwf	??___ftmul+1
  5240  1751  0842               	movf	___ftmul@f1+2,w
  5241  1752  00C8               	movwf	??___ftmul+2
  5242  1753  1003               	clrc
  5243  1754  0D47               	rlf	??___ftmul+1,w
  5244  1755  0D48               	rlf	??___ftmul+2,w
  5245  1756  00C9               	movwf	??___ftmul+3
  5246  1757  0849               	movf	??___ftmul+3,w
  5247  1758  00CA               	movwf	___ftmul@exp
  5248  1759  084A               	movf	___ftmul@exp,w
  5249  175A  1D03               	btfss	3,2
  5250  175B  2F63               	goto	l1993
  5251  175C  3000               	movlw	0
  5252  175D  00C0               	movwf	?___ftmul
  5253  175E  3000               	movlw	0
  5254  175F  00C1               	movwf	?___ftmul+1
  5255  1760  3000               	movlw	0
  5256  1761  00C2               	movwf	?___ftmul+2
  5257  1762  0008               	return
  5258  1763                     l1993:	
  5259  1763  0843               	movf	___ftmul@f2,w
  5260  1764  00C6               	movwf	??___ftmul
  5261  1765  0844               	movf	___ftmul@f2+1,w
  5262  1766  00C7               	movwf	??___ftmul+1
  5263  1767  0845               	movf	___ftmul@f2+2,w
  5264  1768  00C8               	movwf	??___ftmul+2
  5265  1769  1003               	clrc
  5266  176A  0D47               	rlf	??___ftmul+1,w
  5267  176B  0D48               	rlf	??___ftmul+2,w
  5268  176C  00C9               	movwf	??___ftmul+3
  5269  176D  0849               	movf	??___ftmul+3,w
  5270  176E  00CF               	movwf	___ftmul@sign
  5271  176F  084F               	movf	___ftmul@sign,w
  5272  1770  1D03               	btfss	3,2
  5273  1771  2F79               	goto	l1999
  5274  1772  3000               	movlw	0
  5275  1773  00C0               	movwf	?___ftmul
  5276  1774  3000               	movlw	0
  5277  1775  00C1               	movwf	?___ftmul+1
  5278  1776  3000               	movlw	0
  5279  1777  00C2               	movwf	?___ftmul+2
  5280  1778  0008               	return
  5281  1779                     l1999:	
  5282  1779  084F               	movf	___ftmul@sign,w
  5283  177A  3E7B               	addlw	123
  5284  177B  00C6               	movwf	??___ftmul
  5285  177C  0846               	movf	??___ftmul,w
  5286  177D  07CA               	addwf	___ftmul@exp,f
  5287  177E  0840               	movf	___ftmul@f1,w
  5288  177F  00C6               	movwf	??___ftmul
  5289  1780  0841               	movf	___ftmul@f1+1,w
  5290  1781  00C7               	movwf	??___ftmul+1
  5291  1782  0842               	movf	___ftmul@f1+2,w
  5292  1783  00C8               	movwf	??___ftmul+2
  5293  1784  3010               	movlw	16
  5294  1785                     u2685:	
  5295  1785  36C8               	lsrf	??___ftmul+2,f
  5296  1786  0CC7               	rrf	??___ftmul+1,f
  5297  1787  0CC6               	rrf	??___ftmul,f
  5298  1788  0B89               	decfsz	9,f
  5299  1789  2F85               	goto	u2685
  5300  178A  0846               	movf	??___ftmul,w
  5301  178B  00C9               	movwf	??___ftmul+3
  5302  178C  0849               	movf	??___ftmul+3,w
  5303  178D  00CF               	movwf	___ftmul@sign
  5304  178E  0843               	movf	___ftmul@f2,w
  5305  178F  00C6               	movwf	??___ftmul
  5306  1790  0844               	movf	___ftmul@f2+1,w
  5307  1791  00C7               	movwf	??___ftmul+1
  5308  1792  0845               	movf	___ftmul@f2+2,w
  5309  1793  00C8               	movwf	??___ftmul+2
  5310  1794  3010               	movlw	16
  5311  1795                     u2695:	
  5312  1795  36C8               	lsrf	??___ftmul+2,f
  5313  1796  0CC7               	rrf	??___ftmul+1,f
  5314  1797  0CC6               	rrf	??___ftmul,f
  5315  1798  0B89               	decfsz	9,f
  5316  1799  2F95               	goto	u2695
  5317  179A  0846               	movf	??___ftmul,w
  5318  179B  00C9               	movwf	??___ftmul+3
  5319  179C  0849               	movf	??___ftmul+3,w
  5320  179D  06CF               	xorwf	___ftmul@sign,f
  5321  179E  3080               	movlw	128
  5322  179F  00C6               	movwf	??___ftmul
  5323  17A0  0846               	movf	??___ftmul,w
  5324  17A1  05CF               	andwf	___ftmul@sign,f
  5325  17A2  17C1               	bsf	___ftmul@f1+1,7
  5326  17A3  17C4               	bsf	___ftmul@f2+1,7
  5327  17A4  30FF               	movlw	255
  5328  17A5  05C3               	andwf	___ftmul@f2,f
  5329  17A6  30FF               	movlw	255
  5330  17A7  05C4               	andwf	___ftmul@f2+1,f
  5331  17A8  3000               	movlw	0
  5332  17A9  05C5               	andwf	___ftmul@f2+2,f
  5333  17AA  3000               	movlw	0
  5334  17AB  00CB               	movwf	___ftmul@f3_as_product
  5335  17AC  3000               	movlw	0
  5336  17AD  00CC               	movwf	___ftmul@f3_as_product+1
  5337  17AE  3000               	movlw	0
  5338  17AF  00CD               	movwf	___ftmul@f3_as_product+2
  5339  17B0  3007               	movlw	7
  5340  17B1  00C6               	movwf	??___ftmul
  5341  17B2  0846               	movf	??___ftmul,w
  5342  17B3  00CE               	movwf	___ftmul@cntr
  5343  17B4                     l2011:	
  5344  17B4  1C40               	btfss	___ftmul@f1,0
  5345  17B5  2FBC               	goto	l2015
  5346  17B6  0843               	movf	___ftmul@f2,w
  5347  17B7  07CB               	addwf	___ftmul@f3_as_product,f
  5348  17B8  0844               	movf	___ftmul@f2+1,w
  5349  17B9  3DCC               	addwfc	___ftmul@f3_as_product+1,f
  5350  17BA  0845               	movf	___ftmul@f2+2,w
  5351  17BB  3DCD               	addwfc	___ftmul@f3_as_product+2,f
  5352  17BC                     l2015:	
  5353  17BC  3001               	movlw	1
  5354  17BD                     u2715:	
  5355  17BD  36C2               	lsrf	___ftmul@f1+2,f
  5356  17BE  0CC1               	rrf	___ftmul@f1+1,f
  5357  17BF  0CC0               	rrf	___ftmul@f1,f
  5358  17C0  0B89               	decfsz	9,f
  5359  17C1  2FBD               	goto	u2715
  5360  17C2  3001               	movlw	1
  5361  17C3                     u2725:	
  5362  17C3  35C3               	lslf	___ftmul@f2,f
  5363  17C4  0DC4               	rlf	___ftmul@f2+1,f
  5364  17C5  0DC5               	rlf	___ftmul@f2+2,f
  5365  17C6  0B89               	decfsz	9,f
  5366  17C7  2FC3               	goto	u2725
  5367  17C8  3001               	movlw	1
  5368  17C9  02CE               	subwf	___ftmul@cntr,f
  5369  17CA  1D03               	btfss	3,2
  5370  17CB  2FB4               	goto	l2011
  5371  17CC  3009               	movlw	9
  5372  17CD  00C6               	movwf	??___ftmul
  5373  17CE  0846               	movf	??___ftmul,w
  5374  17CF  00CE               	movwf	___ftmul@cntr
  5375  17D0                     l2023:	
  5376  17D0  1C40               	btfss	___ftmul@f1,0
  5377  17D1  2FD8               	goto	l2027
  5378  17D2  0843               	movf	___ftmul@f2,w
  5379  17D3  07CB               	addwf	___ftmul@f3_as_product,f
  5380  17D4  0844               	movf	___ftmul@f2+1,w
  5381  17D5  3DCC               	addwfc	___ftmul@f3_as_product+1,f
  5382  17D6  0845               	movf	___ftmul@f2+2,w
  5383  17D7  3DCD               	addwfc	___ftmul@f3_as_product+2,f
  5384  17D8                     l2027:	
  5385  17D8  3001               	movlw	1
  5386  17D9                     u2755:	
  5387  17D9  36C2               	lsrf	___ftmul@f1+2,f
  5388  17DA  0CC1               	rrf	___ftmul@f1+1,f
  5389  17DB  0CC0               	rrf	___ftmul@f1,f
  5390  17DC  0B89               	decfsz	9,f
  5391  17DD  2FD9               	goto	u2755
  5392  17DE  3001               	movlw	1
  5393  17DF                     u2765:	
  5394  17DF  36CD               	lsrf	___ftmul@f3_as_product+2,f
  5395  17E0  0CCC               	rrf	___ftmul@f3_as_product+1,f
  5396  17E1  0CCB               	rrf	___ftmul@f3_as_product,f
  5397  17E2  0B89               	decfsz	9,f
  5398  17E3  2FDF               	goto	u2765
  5399  17E4  3001               	movlw	1
  5400  17E5  02CE               	subwf	___ftmul@cntr,f
  5401  17E6  1D03               	btfss	3,2
  5402  17E7  2FD0               	goto	l2023
  5403  17E8  084B               	movf	___ftmul@f3_as_product,w
  5404  17E9  00F0               	movwf	___ftpack@arg
  5405  17EA  084C               	movf	___ftmul@f3_as_product+1,w
  5406  17EB  00F1               	movwf	___ftpack@arg+1
  5407  17EC  084D               	movf	___ftmul@f3_as_product+2,w
  5408  17ED  00F2               	movwf	___ftpack@arg+2
  5409  17EE  084A               	movf	___ftmul@exp,w
  5410  17EF  00C6               	movwf	??___ftmul
  5411  17F0  0846               	movf	??___ftmul,w
  5412  17F1  00F3               	movwf	___ftpack@exp
  5413  17F2  084F               	movf	___ftmul@sign,w
  5414  17F3  00C7               	movwf	??___ftmul+1
  5415  17F4  0847               	movf	??___ftmul+1,w
  5416  17F5  00F4               	movwf	___ftpack@sign
  5417  17F6  3188  2006         	fcall	___ftpack
  5418  17F8  0870               	movf	?___ftpack,w
  5419  17F9  0020               	movlb	0	; select bank0
  5420  17FA  00C0               	movwf	?___ftmul
  5421  17FB  0871               	movf	?___ftpack+1,w
  5422  17FC  00C1               	movwf	?___ftmul+1
  5423  17FD  0872               	movf	?___ftpack+2,w
  5424  17FE  00C2               	movwf	?___ftmul+2
  5425  17FF  0008               	return
  5426  1800                     __end_of___ftmul:	
  5427                           
  5428                           	psect	text9
  5429  1533                     __ptext9:	
  5430 ;; *************** function ___awmod *****************
  5431 ;; Defined at:
  5432 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  divisor         2    0[COMMON] int 
  5435 ;;  dividend        2    2[COMMON] int 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  sign            1    6[COMMON] unsigned char 
  5438 ;;  counter         1    5[COMMON] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  2    0[COMMON] int 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5452 ;;Total ram usage:        7 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_fround
  5458 ;;		_scale
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           
  5463                           ;psect for function ___awmod
  5464  1533                     ___awmod:	
  5465                           
  5466                           ;incstack = 0
  5467                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5468  1533  01F6               	clrf	___awmod@sign
  5469  1534  1FF3               	btfss	___awmod@dividend+1,7
  5470  1535  2D3D               	goto	l1887
  5471  1536  09F2               	comf	___awmod@dividend,f
  5472  1537  09F3               	comf	___awmod@dividend+1,f
  5473  1538  0AF2               	incf	___awmod@dividend,f
  5474  1539  1903               	skipnz
  5475  153A  0AF3               	incf	___awmod@dividend+1,f
  5476  153B  01F6               	clrf	___awmod@sign
  5477  153C  0AF6               	incf	___awmod@sign,f
  5478  153D                     l1887:	
  5479  153D  1FF1               	btfss	___awmod@divisor+1,7
  5480  153E  2D44               	goto	l1891
  5481  153F  09F0               	comf	___awmod@divisor,f
  5482  1540  09F1               	comf	___awmod@divisor+1,f
  5483  1541  0AF0               	incf	___awmod@divisor,f
  5484  1542  1903               	skipnz
  5485  1543  0AF1               	incf	___awmod@divisor+1,f
  5486  1544                     l1891:	
  5487  1544  0870               	movf	___awmod@divisor,w
  5488  1545  0471               	iorwf	___awmod@divisor+1,w
  5489  1546  1903               	btfsc	3,2
  5490  1547  2D6B               	goto	l1909
  5491  1548  01F5               	clrf	___awmod@counter
  5492  1549  0AF5               	incf	___awmod@counter,f
  5493  154A                     l1899:	
  5494  154A  1BF1               	btfsc	___awmod@divisor+1,7
  5495  154B  2D56               	goto	l1901
  5496  154C  3001               	movlw	1
  5497  154D                     u2375:	
  5498  154D  35F0               	lslf	___awmod@divisor,f
  5499  154E  0DF1               	rlf	___awmod@divisor+1,f
  5500  154F  0B89               	decfsz	9,f
  5501  1550  2D4D               	goto	u2375
  5502  1551  3001               	movlw	1
  5503  1552  00F4               	movwf	??___awmod
  5504  1553  0874               	movf	??___awmod,w
  5505  1554  07F5               	addwf	___awmod@counter,f
  5506  1555  2D4A               	goto	l1899
  5507  1556                     l1901:	
  5508  1556  0871               	movf	___awmod@divisor+1,w
  5509  1557  0273               	subwf	___awmod@dividend+1,w
  5510  1558  1D03               	skipz
  5511  1559  2D5C               	goto	u2395
  5512  155A  0870               	movf	___awmod@divisor,w
  5513  155B  0272               	subwf	___awmod@dividend,w
  5514  155C                     u2395:	
  5515  155C  1C03               	skipc
  5516  155D  2D62               	goto	l1905
  5517  155E  0870               	movf	___awmod@divisor,w
  5518  155F  02F2               	subwf	___awmod@dividend,f
  5519  1560  0871               	movf	___awmod@divisor+1,w
  5520  1561  3BF3               	subwfb	___awmod@dividend+1,f
  5521  1562                     l1905:	
  5522  1562  3001               	movlw	1
  5523  1563                     u2405:	
  5524  1563  36F1               	lsrf	___awmod@divisor+1,f
  5525  1564  0CF0               	rrf	___awmod@divisor,f
  5526  1565  0B89               	decfsz	9,f
  5527  1566  2D63               	goto	u2405
  5528  1567  3001               	movlw	1
  5529  1568  02F5               	subwf	___awmod@counter,f
  5530  1569  1D03               	btfss	3,2
  5531  156A  2D56               	goto	l1901
  5532  156B                     l1909:	
  5533  156B  0876               	movf	___awmod@sign,w
  5534  156C  1903               	btfsc	3,2
  5535  156D  2D73               	goto	l1913
  5536  156E  09F2               	comf	___awmod@dividend,f
  5537  156F  09F3               	comf	___awmod@dividend+1,f
  5538  1570  0AF2               	incf	___awmod@dividend,f
  5539  1571  1903               	skipnz
  5540  1572  0AF3               	incf	___awmod@dividend+1,f
  5541  1573                     l1913:	
  5542  1573  0873               	movf	___awmod@dividend+1,w
  5543  1574  00F1               	movwf	?___awmod+1
  5544  1575  0872               	movf	___awmod@dividend,w
  5545  1576  00F0               	movwf	?___awmod
  5546  1577  0008               	return
  5547  1578                     __end_of___awmod:	
  5548                           
  5549                           	psect	text10
  5550  15CA                     __ptext10:	
  5551 ;; *************** function ___awdiv *****************
  5552 ;; Defined at:
  5553 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  divisor         2    7[COMMON] int 
  5556 ;;  dividend        2    9[COMMON] int 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  quotient        2    2[BANK0 ] int 
  5559 ;;  sign            1    1[BANK0 ] unsigned char 
  5560 ;;  counter         1    0[BANK0 ] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  2    7[COMMON] int 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5573 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5574 ;;Total ram usage:        9 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; This function calls:
  5577 ;;		Nothing
  5578 ;; This function is called by:
  5579 ;;		_fround
  5580 ;;		_scale
  5581 ;;		_printf
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           
  5586                           ;psect for function ___awdiv
  5587  15CA                     ___awdiv:	
  5588                           
  5589                           ;incstack = 0
  5590                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5591  15CA  0020               	movlb	0	; select bank0
  5592  15CB  01A1               	clrf	___awdiv@sign
  5593  15CC  1FF8               	btfss	___awdiv@divisor+1,7
  5594  15CD  2DD5               	goto	l1843
  5595  15CE  09F7               	comf	___awdiv@divisor,f
  5596  15CF  09F8               	comf	___awdiv@divisor+1,f
  5597  15D0  0AF7               	incf	___awdiv@divisor,f
  5598  15D1  1903               	skipnz
  5599  15D2  0AF8               	incf	___awdiv@divisor+1,f
  5600  15D3  01A1               	clrf	___awdiv@sign
  5601  15D4  0AA1               	incf	___awdiv@sign,f
  5602  15D5                     l1843:	
  5603  15D5  1FFA               	btfss	___awdiv@dividend+1,7
  5604  15D6  2DE0               	goto	l1849
  5605  15D7  09F9               	comf	___awdiv@dividend,f
  5606  15D8  09FA               	comf	___awdiv@dividend+1,f
  5607  15D9  0AF9               	incf	___awdiv@dividend,f
  5608  15DA  1903               	skipnz
  5609  15DB  0AFA               	incf	___awdiv@dividend+1,f
  5610  15DC  3001               	movlw	1
  5611  15DD  00FB               	movwf	??___awdiv
  5612  15DE  087B               	movf	??___awdiv,w
  5613  15DF  06A1               	xorwf	___awdiv@sign,f
  5614  15E0                     l1849:	
  5615  15E0  01A2               	clrf	___awdiv@quotient
  5616  15E1  01A3               	clrf	___awdiv@quotient+1
  5617  15E2  0877               	movf	___awdiv@divisor,w
  5618  15E3  0478               	iorwf	___awdiv@divisor+1,w
  5619  15E4  1903               	btfsc	3,2
  5620  15E5  2E0F               	goto	l1871
  5621  15E6  01A0               	clrf	___awdiv@counter
  5622  15E7  0AA0               	incf	___awdiv@counter,f
  5623  15E8                     l1859:	
  5624  15E8  1BF8               	btfsc	___awdiv@divisor+1,7
  5625  15E9  2DF4               	goto	l1861
  5626  15EA  3001               	movlw	1
  5627  15EB                     u2275:	
  5628  15EB  35F7               	lslf	___awdiv@divisor,f
  5629  15EC  0DF8               	rlf	___awdiv@divisor+1,f
  5630  15ED  0B89               	decfsz	9,f
  5631  15EE  2DEB               	goto	u2275
  5632  15EF  3001               	movlw	1
  5633  15F0  00FB               	movwf	??___awdiv
  5634  15F1  087B               	movf	??___awdiv,w
  5635  15F2  07A0               	addwf	___awdiv@counter,f
  5636  15F3  2DE8               	goto	l1859
  5637  15F4                     l1861:	
  5638  15F4  3001               	movlw	1
  5639  15F5                     u2295:	
  5640  15F5  35A2               	lslf	___awdiv@quotient,f
  5641  15F6  0DA3               	rlf	___awdiv@quotient+1,f
  5642  15F7  0B89               	decfsz	9,f
  5643  15F8  2DF5               	goto	u2295
  5644  15F9  0878               	movf	___awdiv@divisor+1,w
  5645  15FA  027A               	subwf	___awdiv@dividend+1,w
  5646  15FB  1D03               	skipz
  5647  15FC  2DFF               	goto	u2305
  5648  15FD  0877               	movf	___awdiv@divisor,w
  5649  15FE  0279               	subwf	___awdiv@dividend,w
  5650  15FF                     u2305:	
  5651  15FF  1C03               	skipc
  5652  1600  2E06               	goto	l1867
  5653  1601  0877               	movf	___awdiv@divisor,w
  5654  1602  02F9               	subwf	___awdiv@dividend,f
  5655  1603  0878               	movf	___awdiv@divisor+1,w
  5656  1604  3BFA               	subwfb	___awdiv@dividend+1,f
  5657  1605  1422               	bsf	___awdiv@quotient,0
  5658  1606                     l1867:	
  5659  1606  3001               	movlw	1
  5660  1607                     u2315:	
  5661  1607  36F8               	lsrf	___awdiv@divisor+1,f
  5662  1608  0CF7               	rrf	___awdiv@divisor,f
  5663  1609  0B89               	decfsz	9,f
  5664  160A  2E07               	goto	u2315
  5665  160B  3001               	movlw	1
  5666  160C  02A0               	subwf	___awdiv@counter,f
  5667  160D  1D03               	btfss	3,2
  5668  160E  2DF4               	goto	l1861
  5669  160F                     l1871:	
  5670  160F  0821               	movf	___awdiv@sign,w
  5671  1610  1903               	btfsc	3,2
  5672  1611  2E17               	goto	l1875
  5673  1612  09A2               	comf	___awdiv@quotient,f
  5674  1613  09A3               	comf	___awdiv@quotient+1,f
  5675  1614  0AA2               	incf	___awdiv@quotient,f
  5676  1615  1903               	skipnz
  5677  1616  0AA3               	incf	___awdiv@quotient+1,f
  5678  1617                     l1875:	
  5679  1617  0823               	movf	___awdiv@quotient+1,w
  5680  1618  00F8               	movwf	?___awdiv+1
  5681  1619  0822               	movf	___awdiv@quotient,w
  5682  161A  00F7               	movwf	?___awdiv
  5683  161B  0008               	return
  5684  161C                     __end_of___awdiv:	
  5685                           
  5686                           	psect	text11
  5687  003E                     __ptext11:	
  5688 ;; *************** function __tdiv_to_l_ *****************
  5689 ;; Defined at:
  5690 ;;		line 60 in file "/opt/microchip/xc8/v1.45/sources/common/ftdivl.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  f1              3    0[COMMON] float 
  5693 ;;  f2              3    3[COMMON] float 
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;  quot            4    0[BANK0 ] unsigned long 
  5696 ;;  exp1            1    5[BANK0 ] unsigned char 
  5697 ;;  cntr            1    4[BANK0 ] unsigned char 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  4    0[COMMON] unsigned long 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5707 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;Total ram usage:       16 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; This function calls:
  5714 ;;		Nothing
  5715 ;; This function is called by:
  5716 ;;		_printf
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           
  5721                           ;psect for function __tdiv_to_l_
  5722  003E                     __tdiv_to_l_:	
  5723                           
  5724                           ;incstack = 0
  5725                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5726  003E  0870               	movf	__tdiv_to_l_@f1,w
  5727  003F  00F6               	movwf	??__tdiv_to_l_
  5728  0040  0871               	movf	__tdiv_to_l_@f1+1,w
  5729  0041  00F7               	movwf	??__tdiv_to_l_+1
  5730  0042  0872               	movf	__tdiv_to_l_@f1+2,w
  5731  0043  00F8               	movwf	??__tdiv_to_l_+2
  5732  0044  1003               	clrc
  5733  0045  0D77               	rlf	??__tdiv_to_l_+1,w
  5734  0046  0D78               	rlf	??__tdiv_to_l_+2,w
  5735  0047  00F9               	movwf	??__tdiv_to_l_+3
  5736  0048  0879               	movf	??__tdiv_to_l_+3,w
  5737  0049  0020               	movlb	0	; select bank0
  5738  004A  00A5               	movwf	__tdiv_to_l_@exp1
  5739  004B  0825               	movf	__tdiv_to_l_@exp1,w
  5740  004C  1D03               	btfss	3,2
  5741  004D  2857               	goto	l2121
  5742  004E  3000               	movlw	0
  5743  004F  00F3               	movwf	?__tdiv_to_l_+3
  5744  0050  3000               	movlw	0
  5745  0051  00F2               	movwf	?__tdiv_to_l_+2
  5746  0052  3000               	movlw	0
  5747  0053  00F1               	movwf	?__tdiv_to_l_+1
  5748  0054  3000               	movlw	0
  5749  0055  00F0               	movwf	?__tdiv_to_l_
  5750  0056  0008               	return
  5751  0057                     l2121:	
  5752  0057  0873               	movf	__tdiv_to_l_@f2,w
  5753  0058  00F6               	movwf	??__tdiv_to_l_
  5754  0059  0874               	movf	__tdiv_to_l_@f2+1,w
  5755  005A  00F7               	movwf	??__tdiv_to_l_+1
  5756  005B  0875               	movf	__tdiv_to_l_@f2+2,w
  5757  005C  00F8               	movwf	??__tdiv_to_l_+2
  5758  005D  1003               	clrc
  5759  005E  0D77               	rlf	??__tdiv_to_l_+1,w
  5760  005F  0D78               	rlf	??__tdiv_to_l_+2,w
  5761  0060  00F9               	movwf	??__tdiv_to_l_+3
  5762  0061  0879               	movf	??__tdiv_to_l_+3,w
  5763  0062  00A4               	movwf	__tdiv_to_l_@cntr
  5764  0063  0824               	movf	__tdiv_to_l_@cntr,w
  5765  0064  1D03               	btfss	3,2
  5766  0065  286F               	goto	l599
  5767  0066  3000               	movlw	0
  5768  0067  00F3               	movwf	?__tdiv_to_l_+3
  5769  0068  3000               	movlw	0
  5770  0069  00F2               	movwf	?__tdiv_to_l_+2
  5771  006A  3000               	movlw	0
  5772  006B  00F1               	movwf	?__tdiv_to_l_+1
  5773  006C  3000               	movlw	0
  5774  006D  00F0               	movwf	?__tdiv_to_l_
  5775  006E  0008               	return
  5776  006F                     l599:	
  5777  006F  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5778  0070  30FF               	movlw	255
  5779  0071  05F0               	andwf	__tdiv_to_l_@f1,f
  5780  0072  30FF               	movlw	255
  5781  0073  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5782  0074  3000               	movlw	0
  5783  0075  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5784  0076  17F4               	bsf	__tdiv_to_l_@f2+1,7
  5785  0077  30FF               	movlw	255
  5786  0078  05F3               	andwf	__tdiv_to_l_@f2,f
  5787  0079  30FF               	movlw	255
  5788  007A  05F4               	andwf	__tdiv_to_l_@f2+1,f
  5789  007B  3000               	movlw	0
  5790  007C  05F5               	andwf	__tdiv_to_l_@f2+2,f
  5791  007D  3000               	movlw	0
  5792  007E  00A3               	movwf	__tdiv_to_l_@quot+3
  5793  007F  3000               	movlw	0
  5794  0080  00A2               	movwf	__tdiv_to_l_@quot+2
  5795  0081  3000               	movlw	0
  5796  0082  00A1               	movwf	__tdiv_to_l_@quot+1
  5797  0083  3000               	movlw	0
  5798  0084  00A0               	movwf	__tdiv_to_l_@quot
  5799  0085  307F               	movlw	127
  5800  0086  02A5               	subwf	__tdiv_to_l_@exp1,f
  5801  0087  3098               	movlw	152
  5802  0088  0724               	addwf	__tdiv_to_l_@cntr,w
  5803  0089  00F6               	movwf	??__tdiv_to_l_
  5804  008A  0876               	movf	??__tdiv_to_l_,w
  5805  008B  02A5               	subwf	__tdiv_to_l_@exp1,f
  5806  008C  3018               	movlw	24
  5807  008D  00F6               	movwf	??__tdiv_to_l_
  5808  008E  0876               	movf	??__tdiv_to_l_,w
  5809  008F  00A4               	movwf	__tdiv_to_l_@cntr
  5810  0090                     l2135:	
  5811  0090  3001               	movlw	1
  5812  0091                     u2905:	
  5813  0091  35A0               	lslf	__tdiv_to_l_@quot,f
  5814  0092  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5815  0093  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5816  0094  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5817  0095  0B89               	decfsz	9,f
  5818  0096  2891               	goto	u2905
  5819  0097  0875               	movf	__tdiv_to_l_@f2+2,w
  5820  0098  0272               	subwf	__tdiv_to_l_@f1+2,w
  5821  0099  1D03               	skipz
  5822  009A  28A1               	goto	u2915
  5823  009B  0874               	movf	__tdiv_to_l_@f2+1,w
  5824  009C  0271               	subwf	__tdiv_to_l_@f1+1,w
  5825  009D  1D03               	skipz
  5826  009E  28A1               	goto	u2915
  5827  009F  0873               	movf	__tdiv_to_l_@f2,w
  5828  00A0  0270               	subwf	__tdiv_to_l_@f1,w
  5829  00A1                     u2915:	
  5830  00A1  1C03               	skipc
  5831  00A2  28AA               	goto	l2143
  5832  00A3  0873               	movf	__tdiv_to_l_@f2,w
  5833  00A4  02F0               	subwf	__tdiv_to_l_@f1,f
  5834  00A5  0874               	movf	__tdiv_to_l_@f2+1,w
  5835  00A6  3BF1               	subwfb	__tdiv_to_l_@f1+1,f
  5836  00A7  0875               	movf	__tdiv_to_l_@f2+2,w
  5837  00A8  3BF2               	subwfb	__tdiv_to_l_@f1+2,f
  5838  00A9  1420               	bsf	__tdiv_to_l_@quot,0
  5839  00AA                     l2143:	
  5840  00AA  3001               	movlw	1
  5841  00AB                     u2925:	
  5842  00AB  35F0               	lslf	__tdiv_to_l_@f1,f
  5843  00AC  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5844  00AD  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5845  00AE  0B89               	decfsz	9,f
  5846  00AF  28AB               	goto	u2925
  5847  00B0  3001               	movlw	1
  5848  00B1  02A4               	subwf	__tdiv_to_l_@cntr,f
  5849  00B2  1D03               	btfss	3,2
  5850  00B3  2890               	goto	l2135
  5851  00B4  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5852  00B5  28D2               	goto	l2155
  5853  00B6  0825               	movf	__tdiv_to_l_@exp1,w
  5854  00B7  3A80               	xorlw	128
  5855  00B8  3E97               	addlw	151
  5856  00B9  1803               	skipnc
  5857  00BA  28C4               	goto	l2153
  5858  00BB  3000               	movlw	0
  5859  00BC  00F3               	movwf	?__tdiv_to_l_+3
  5860  00BD  3000               	movlw	0
  5861  00BE  00F2               	movwf	?__tdiv_to_l_+2
  5862  00BF  3000               	movlw	0
  5863  00C0  00F1               	movwf	?__tdiv_to_l_+1
  5864  00C1  3000               	movlw	0
  5865  00C2  00F0               	movwf	?__tdiv_to_l_
  5866  00C3  0008               	return
  5867  00C4                     l2153:	
  5868  00C4  3001               	movlw	1
  5869  00C5                     u2965:	
  5870  00C5  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  5871  00C6  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5872  00C7  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5873  00C8  0CA0               	rrf	__tdiv_to_l_@quot,f
  5874  00C9  0B89               	decfsz	9,f
  5875  00CA  28C5               	goto	u2965
  5876  00CB  3001               	movlw	1
  5877  00CC  00F6               	movwf	??__tdiv_to_l_
  5878  00CD  0876               	movf	??__tdiv_to_l_,w
  5879  00CE  07A5               	addwf	__tdiv_to_l_@exp1,f
  5880  00CF  1903               	btfsc	3,2
  5881  00D0  28EB               	goto	l2163
  5882  00D1  28C4               	goto	l2153
  5883  00D2                     l2155:	
  5884  00D2  3018               	movlw	24
  5885  00D3  0225               	subwf	__tdiv_to_l_@exp1,w
  5886  00D4  1C03               	skipc
  5887  00D5  28E8               	goto	l609
  5888  00D6  3000               	movlw	0
  5889  00D7  00F3               	movwf	?__tdiv_to_l_+3
  5890  00D8  3000               	movlw	0
  5891  00D9  00F2               	movwf	?__tdiv_to_l_+2
  5892  00DA  3000               	movlw	0
  5893  00DB  00F1               	movwf	?__tdiv_to_l_+1
  5894  00DC  3000               	movlw	0
  5895  00DD  00F0               	movwf	?__tdiv_to_l_
  5896  00DE  0008               	return
  5897  00DF                     l2161:	
  5898  00DF  3001               	movlw	1
  5899  00E0                     u2995:	
  5900  00E0  35A0               	lslf	__tdiv_to_l_@quot,f
  5901  00E1  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5902  00E2  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5903  00E3  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5904  00E4  0B89               	decfsz	9,f
  5905  00E5  28E0               	goto	u2995
  5906  00E6  3001               	movlw	1
  5907  00E7  02A5               	subwf	__tdiv_to_l_@exp1,f
  5908  00E8                     l609:	
  5909  00E8  0825               	movf	__tdiv_to_l_@exp1,w
  5910  00E9  1D03               	btfss	3,2
  5911  00EA  28DF               	goto	l2161
  5912  00EB                     l2163:	
  5913  00EB  0823               	movf	__tdiv_to_l_@quot+3,w
  5914  00EC  00F3               	movwf	?__tdiv_to_l_+3
  5915  00ED  0822               	movf	__tdiv_to_l_@quot+2,w
  5916  00EE  00F2               	movwf	?__tdiv_to_l_+2
  5917  00EF  0821               	movf	__tdiv_to_l_@quot+1,w
  5918  00F0  00F1               	movwf	?__tdiv_to_l_+1
  5919  00F1  0820               	movf	__tdiv_to_l_@quot,w
  5920  00F2  00F0               	movwf	?__tdiv_to_l_
  5921  00F3  0008               	return
  5922  00F4                     __end_of__tdiv_to_l_:	
  5923                           
  5924                           	psect	text12
  5925  0960                     __ptext12:	
  5926 ;; *************** function __div_to_l_ *****************
  5927 ;; Defined at:
  5928 ;;		line 60 in file "/opt/microchip/xc8/v1.45/sources/common/fldivl.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  f1              3    0[COMMON] unsigned long 
  5931 ;;  f2              3    3[COMMON] unsigned long 
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;  quot            4    0[BANK0 ] unsigned long 
  5934 ;;  exp1            1    5[BANK0 ] unsigned char 
  5935 ;;  cntr            1    4[BANK0 ] unsigned char 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  4    0[COMMON] unsigned long 
  5938 ;; Registers used:
  5939 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5945 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5946 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5947 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5948 ;;      Totals:        14       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;Total ram usage:       20 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_printf
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           
  5959                           ;psect for function __div_to_l_
  5960  0960                     __div_to_l_:	
  5961                           
  5962                           ;incstack = 0
  5963                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
  5964  0960  3070               	movlw	low (__div_to_l_@f1| 0)
  5965  0961  0086               	movwf	6
  5966  0962  0187               	clrf	7
  5967  0963  3F40               	moviw [0]fsr1
  5968  0964  00F6               	movwf	??__div_to_l_
  5969  0965  3F41               	moviw [1]fsr1
  5970  0966  00F7               	movwf	??__div_to_l_+1
  5971  0967  3F42               	moviw [2]fsr1
  5972  0968  00F8               	movwf	??__div_to_l_+2
  5973  0969  3F43               	moviw [3]fsr1
  5974  096A  00F9               	movwf	??__div_to_l_+3
  5975  096B  1003               	clrc
  5976  096C  0D78               	rlf	??__div_to_l_+2,w
  5977  096D  0D79               	rlf	??__div_to_l_+3,w
  5978  096E  00FA               	movwf	??__div_to_l_+4
  5979  096F  087A               	movf	??__div_to_l_+4,w
  5980  0970  0020               	movlb	0	; select bank0
  5981  0971  00A5               	movwf	__div_to_l_@exp1
  5982  0972  0825               	movf	__div_to_l_@exp1,w
  5983  0973  1D03               	btfss	3,2
  5984  0974  297E               	goto	l2173
  5985  0975  3000               	movlw	0
  5986  0976  00F3               	movwf	?__div_to_l_+3
  5987  0977  3000               	movlw	0
  5988  0978  00F2               	movwf	?__div_to_l_+2
  5989  0979  3000               	movlw	0
  5990  097A  00F1               	movwf	?__div_to_l_+1
  5991  097B  3000               	movlw	0
  5992  097C  00F0               	movwf	?__div_to_l_
  5993  097D  0008               	return
  5994  097E                     l2173:	
  5995  097E  3073               	movlw	low (__div_to_l_@f2| 0)
  5996  097F  0086               	movwf	6
  5997  0980  0187               	clrf	7
  5998  0981  3F40               	moviw [0]fsr1
  5999  0982  00F6               	movwf	??__div_to_l_
  6000  0983  3F41               	moviw [1]fsr1
  6001  0984  00F7               	movwf	??__div_to_l_+1
  6002  0985  3F42               	moviw [2]fsr1
  6003  0986  00F8               	movwf	??__div_to_l_+2
  6004  0987  3F43               	moviw [3]fsr1
  6005  0988  00F9               	movwf	??__div_to_l_+3
  6006  0989  1003               	clrc
  6007  098A  0D78               	rlf	??__div_to_l_+2,w
  6008  098B  0D79               	rlf	??__div_to_l_+3,w
  6009  098C  00FA               	movwf	??__div_to_l_+4
  6010  098D  087A               	movf	??__div_to_l_+4,w
  6011  098E  00A4               	movwf	__div_to_l_@cntr
  6012  098F  0824               	movf	__div_to_l_@cntr,w
  6013  0990  1D03               	btfss	3,2
  6014  0991  299B               	goto	l2179
  6015  0992  3000               	movlw	0
  6016  0993  00F3               	movwf	?__div_to_l_+3
  6017  0994  3000               	movlw	0
  6018  0995  00F2               	movwf	?__div_to_l_+2
  6019  0996  3000               	movlw	0
  6020  0997  00F1               	movwf	?__div_to_l_+1
  6021  0998  3000               	movlw	0
  6022  0999  00F0               	movwf	?__div_to_l_
  6023  099A  0008               	return
  6024  099B                     l2179:	
  6025  099B  3070               	movlw	low (__div_to_l_@f1| 0)
  6026  099C  0086               	movwf	6
  6027  099D  0187               	clrf	7
  6028  099E  3000               	movlw	0
  6029  099F  0481               	iorwf	1,f
  6030  09A0  3141               	addfsr 1,1
  6031  09A1  3000               	movlw	0
  6032  09A2  0481               	iorwf	1,f
  6033  09A3  3141               	addfsr 1,1
  6034  09A4  3080               	movlw	128
  6035  09A5  0481               	iorwf	1,f
  6036  09A6  3141               	addfsr 1,1
  6037  09A7  3000               	movlw	0
  6038  09A8  0481               	iorwf	1,f
  6039  09A9  3070               	movlw	low (__div_to_l_@f1| 0)
  6040  09AA  0086               	movwf	6
  6041  09AB  0187               	clrf	7
  6042  09AC  30FF               	movlw	255
  6043  09AD  0581               	andwf	1,f
  6044  09AE  3141               	addfsr 1,1
  6045  09AF  30FF               	movlw	255
  6046  09B0  0581               	andwf	1,f
  6047  09B1  3141               	addfsr 1,1
  6048  09B2  30FF               	movlw	255
  6049  09B3  0581               	andwf	1,f
  6050  09B4  3141               	addfsr 1,1
  6051  09B5  3000               	movlw	0
  6052  09B6  0581               	andwf	1,f
  6053  09B7  3073               	movlw	low (__div_to_l_@f2| 0)
  6054  09B8  0086               	movwf	6
  6055  09B9  0187               	clrf	7
  6056  09BA  3000               	movlw	0
  6057  09BB  0481               	iorwf	1,f
  6058  09BC  3141               	addfsr 1,1
  6059  09BD  3000               	movlw	0
  6060  09BE  0481               	iorwf	1,f
  6061  09BF  3141               	addfsr 1,1
  6062  09C0  3080               	movlw	128
  6063  09C1  0481               	iorwf	1,f
  6064  09C2  3141               	addfsr 1,1
  6065  09C3  3000               	movlw	0
  6066  09C4  0481               	iorwf	1,f
  6067  09C5  3073               	movlw	low (__div_to_l_@f2| 0)
  6068  09C6  0086               	movwf	6
  6069  09C7  0187               	clrf	7
  6070  09C8  30FF               	movlw	255
  6071  09C9  0581               	andwf	1,f
  6072  09CA  3141               	addfsr 1,1
  6073  09CB  30FF               	movlw	255
  6074  09CC  0581               	andwf	1,f
  6075  09CD  3141               	addfsr 1,1
  6076  09CE  30FF               	movlw	255
  6077  09CF  0581               	andwf	1,f
  6078  09D0  3141               	addfsr 1,1
  6079  09D1  3000               	movlw	0
  6080  09D2  0581               	andwf	1,f
  6081  09D3  3000               	movlw	0
  6082  09D4  00A3               	movwf	__div_to_l_@quot+3
  6083  09D5  3000               	movlw	0
  6084  09D6  00A2               	movwf	__div_to_l_@quot+2
  6085  09D7  3000               	movlw	0
  6086  09D8  00A1               	movwf	__div_to_l_@quot+1
  6087  09D9  3000               	movlw	0
  6088  09DA  00A0               	movwf	__div_to_l_@quot
  6089  09DB  307F               	movlw	127
  6090  09DC  02A5               	subwf	__div_to_l_@exp1,f
  6091  09DD  30A0               	movlw	160
  6092  09DE  0724               	addwf	__div_to_l_@cntr,w
  6093  09DF  00F6               	movwf	??__div_to_l_
  6094  09E0  0876               	movf	??__div_to_l_,w
  6095  09E1  02A5               	subwf	__div_to_l_@exp1,f
  6096  09E2  3020               	movlw	32
  6097  09E3  00F6               	movwf	??__div_to_l_
  6098  09E4  0876               	movf	??__div_to_l_,w
  6099  09E5  00A4               	movwf	__div_to_l_@cntr
  6100  09E6                     l2189:	
  6101  09E6  3001               	movlw	1
  6102  09E7                     u3035:	
  6103  09E7  35A0               	lslf	__div_to_l_@quot,f
  6104  09E8  0DA1               	rlf	__div_to_l_@quot+1,f
  6105  09E9  0DA2               	rlf	__div_to_l_@quot+2,f
  6106  09EA  0DA3               	rlf	__div_to_l_@quot+3,f
  6107  09EB  0B89               	decfsz	9,f
  6108  09EC  29E7               	goto	u3035
  6109  09ED  3073               	movlw	low (__div_to_l_@f2| 0)
  6110  09EE  0086               	movwf	6
  6111  09EF  0187               	clrf	7
  6112  09F0  3F40               	moviw [0]fsr1
  6113  09F1  00F6               	movwf	??__div_to_l_
  6114  09F2  3F41               	moviw [1]fsr1
  6115  09F3  00F7               	movwf	??__div_to_l_+1
  6116  09F4  3F42               	moviw [2]fsr1
  6117  09F5  00F8               	movwf	??__div_to_l_+2
  6118  09F6  3F43               	moviw [3]fsr1
  6119  09F7  00F9               	movwf	??__div_to_l_+3
  6120  09F8  3070               	movlw	low (__div_to_l_@f1| 0)
  6121  09F9  0086               	movwf	6
  6122  09FA  0187               	clrf	7
  6123  09FB  3F40               	moviw [0]fsr1
  6124  09FC  00FA               	movwf	??__div_to_l_+4
  6125  09FD  3F41               	moviw [1]fsr1
  6126  09FE  00FB               	movwf	??__div_to_l_+5
  6127  09FF  3F42               	moviw [2]fsr1
  6128  0A00  00FC               	movwf	??__div_to_l_+6
  6129  0A01  3F43               	moviw [3]fsr1
  6130  0A02  00FD               	movwf	??__div_to_l_+7
  6131  0A03  0879               	movf	??__div_to_l_+3,w
  6132  0A04  027D               	subwf	??__div_to_l_+7,w
  6133  0A05  1D03               	skipz
  6134  0A06  2A11               	goto	u3045
  6135  0A07  0878               	movf	??__div_to_l_+2,w
  6136  0A08  027C               	subwf	??__div_to_l_+6,w
  6137  0A09  1D03               	skipz
  6138  0A0A  2A11               	goto	u3045
  6139  0A0B  0877               	movf	??__div_to_l_+1,w
  6140  0A0C  027B               	subwf	??__div_to_l_+5,w
  6141  0A0D  1D03               	skipz
  6142  0A0E  2A11               	goto	u3045
  6143  0A0F  0876               	movf	??__div_to_l_,w
  6144  0A10  027A               	subwf	??__div_to_l_+4,w
  6145  0A11                     u3045:	
  6146  0A11  1C03               	skipc
  6147  0A12  2A2E               	goto	l2197
  6148  0A13  3073               	movlw	low (__div_to_l_@f2| 0)
  6149  0A14  0086               	movwf	6
  6150  0A15  0187               	clrf	7
  6151  0A16  3F40               	moviw [0]fsr1
  6152  0A17  00F6               	movwf	??__div_to_l_
  6153  0A18  3F41               	moviw [1]fsr1
  6154  0A19  00F7               	movwf	??__div_to_l_+1
  6155  0A1A  3F42               	moviw [2]fsr1
  6156  0A1B  00F8               	movwf	??__div_to_l_+2
  6157  0A1C  3F43               	moviw [3]fsr1
  6158  0A1D  00F9               	movwf	??__div_to_l_+3
  6159  0A1E  3070               	movlw	low (__div_to_l_@f1| 0)
  6160  0A1F  0086               	movwf	6
  6161  0A20  0187               	clrf	7
  6162  0A21  0876               	movf	??__div_to_l_,w
  6163  0A22  0281               	subwf	1,f
  6164  0A23  3141               	addfsr 1,1
  6165  0A24  0877               	movf	??__div_to_l_+1,w
  6166  0A25  3B81               	subwfb	1,f
  6167  0A26  3141               	addfsr 1,1
  6168  0A27  0878               	movf	??__div_to_l_+2,w
  6169  0A28  3B81               	subwfb	1,f
  6170  0A29  3141               	addfsr 1,1
  6171  0A2A  0879               	movf	??__div_to_l_+3,w
  6172  0A2B  3B81               	subwfb	1,f
  6173  0A2C  317D               	addfsr 1,-3
  6174  0A2D  1420               	bsf	__div_to_l_@quot,0
  6175  0A2E                     l2197:	
  6176  0A2E  3070               	movlw	low (__div_to_l_@f1| 0)
  6177  0A2F  0086               	movwf	6
  6178  0A30  0187               	clrf	7
  6179  0A31  3581               	lslf	1,f
  6180  0A32  3141               	addfsr 1,1
  6181  0A33  0D81               	rlf	1,f
  6182  0A34  3141               	addfsr 1,1
  6183  0A35  0D81               	rlf	1,f
  6184  0A36  3141               	addfsr 1,1
  6185  0A37  0D81               	rlf	1,f
  6186  0A38  317D               	addfsr 1,-3
  6187  0A39  3001               	movlw	1
  6188  0A3A  02A4               	subwf	__div_to_l_@cntr,f
  6189  0A3B  1D03               	btfss	3,2
  6190  0A3C  29E6               	goto	l2189
  6191  0A3D  1FA5               	btfss	__div_to_l_@exp1,7
  6192  0A3E  2A5B               	goto	l2209
  6193  0A3F  0825               	movf	__div_to_l_@exp1,w
  6194  0A40  3A80               	xorlw	128
  6195  0A41  3E9F               	addlw	159
  6196  0A42  1803               	skipnc
  6197  0A43  2A4D               	goto	l2207
  6198  0A44  3000               	movlw	0
  6199  0A45  00F3               	movwf	?__div_to_l_+3
  6200  0A46  3000               	movlw	0
  6201  0A47  00F2               	movwf	?__div_to_l_+2
  6202  0A48  3000               	movlw	0
  6203  0A49  00F1               	movwf	?__div_to_l_+1
  6204  0A4A  3000               	movlw	0
  6205  0A4B  00F0               	movwf	?__div_to_l_
  6206  0A4C  0008               	return
  6207  0A4D                     l2207:	
  6208  0A4D  3001               	movlw	1
  6209  0A4E                     u3085:	
  6210  0A4E  36A3               	lsrf	__div_to_l_@quot+3,f
  6211  0A4F  0CA2               	rrf	__div_to_l_@quot+2,f
  6212  0A50  0CA1               	rrf	__div_to_l_@quot+1,f
  6213  0A51  0CA0               	rrf	__div_to_l_@quot,f
  6214  0A52  0B89               	decfsz	9,f
  6215  0A53  2A4E               	goto	u3085
  6216  0A54  3001               	movlw	1
  6217  0A55  00F6               	movwf	??__div_to_l_
  6218  0A56  0876               	movf	??__div_to_l_,w
  6219  0A57  07A5               	addwf	__div_to_l_@exp1,f
  6220  0A58  1903               	btfsc	3,2
  6221  0A59  2A74               	goto	l2217
  6222  0A5A  2A4D               	goto	l2207
  6223  0A5B                     l2209:	
  6224  0A5B  3020               	movlw	32
  6225  0A5C  0225               	subwf	__div_to_l_@exp1,w
  6226  0A5D  1C03               	skipc
  6227  0A5E  2A71               	goto	l530
  6228  0A5F  3000               	movlw	0
  6229  0A60  00F3               	movwf	?__div_to_l_+3
  6230  0A61  3000               	movlw	0
  6231  0A62  00F2               	movwf	?__div_to_l_+2
  6232  0A63  3000               	movlw	0
  6233  0A64  00F1               	movwf	?__div_to_l_+1
  6234  0A65  3000               	movlw	0
  6235  0A66  00F0               	movwf	?__div_to_l_
  6236  0A67  0008               	return
  6237  0A68                     l2215:	
  6238  0A68  3001               	movlw	1
  6239  0A69                     u3115:	
  6240  0A69  35A0               	lslf	__div_to_l_@quot,f
  6241  0A6A  0DA1               	rlf	__div_to_l_@quot+1,f
  6242  0A6B  0DA2               	rlf	__div_to_l_@quot+2,f
  6243  0A6C  0DA3               	rlf	__div_to_l_@quot+3,f
  6244  0A6D  0B89               	decfsz	9,f
  6245  0A6E  2A69               	goto	u3115
  6246  0A6F  3001               	movlw	1
  6247  0A70  02A5               	subwf	__div_to_l_@exp1,f
  6248  0A71                     l530:	
  6249  0A71  0825               	movf	__div_to_l_@exp1,w
  6250  0A72  1D03               	btfss	3,2
  6251  0A73  2A68               	goto	l2215
  6252  0A74                     l2217:	
  6253  0A74  0823               	movf	__div_to_l_@quot+3,w
  6254  0A75  00F3               	movwf	?__div_to_l_+3
  6255  0A76  0822               	movf	__div_to_l_@quot+2,w
  6256  0A77  00F2               	movwf	?__div_to_l_+2
  6257  0A78  0821               	movf	__div_to_l_@quot+1,w
  6258  0A79  00F1               	movwf	?__div_to_l_+1
  6259  0A7A  0820               	movf	__div_to_l_@quot,w
  6260  0A7B  00F0               	movwf	?__div_to_l_
  6261  0A7C  0008               	return
  6262  0A7D                     __end_of__div_to_l_:	
  6263                           
  6264                           	psect	text13
  6265  0016                     __ptext13:	
  6266 ;; *************** function ___lltoft *****************
  6267 ;; Defined at:
  6268 ;;		line 35 in file "/opt/microchip/xc8/v1.45/sources/common/lltoft.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;  c               4    8[COMMON] unsigned long 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  exp             1   13[COMMON] unsigned char 
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  3    8[COMMON] float 
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0, pclath, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6282 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;Total ram usage:        6 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    1
  6289 ;; This function calls:
  6290 ;;		___ftpack
  6291 ;; This function is called by:
  6292 ;;		_printf
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           
  6297                           ;psect for function ___lltoft
  6298  0016                     ___lltoft:	
  6299                           
  6300                           ;incstack = 0
  6301                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6302  0016  308E               	movlw	142
  6303  0017  00FC               	movwf	??___lltoft
  6304  0018  087C               	movf	??___lltoft,w
  6305  0019  00FD               	movwf	___lltoft@exp
  6306  001A                     l2347:	
  6307  001A  30FF               	movlw	255
  6308  001B  057B               	andwf	___lltoft@c+3,w
  6309  001C  1903               	btfsc	3,2
  6310  001D  282A               	goto	l2349
  6311  001E  3001               	movlw	1
  6312  001F                     u3415:	
  6313  001F  36FB               	lsrf	___lltoft@c+3,f
  6314  0020  0CFA               	rrf	___lltoft@c+2,f
  6315  0021  0CF9               	rrf	___lltoft@c+1,f
  6316  0022  0CF8               	rrf	___lltoft@c,f
  6317  0023  0B89               	decfsz	9,f
  6318  0024  281F               	goto	u3415
  6319  0025  3001               	movlw	1
  6320  0026  00FC               	movwf	??___lltoft
  6321  0027  087C               	movf	??___lltoft,w
  6322  0028  07FD               	addwf	___lltoft@exp,f
  6323  0029  281A               	goto	l2347
  6324  002A                     l2349:	
  6325  002A  0878               	movf	___lltoft@c,w
  6326  002B  00F0               	movwf	___ftpack@arg
  6327  002C  0879               	movf	___lltoft@c+1,w
  6328  002D  00F1               	movwf	___ftpack@arg+1
  6329  002E  087A               	movf	___lltoft@c+2,w
  6330  002F  00F2               	movwf	___ftpack@arg+2
  6331  0030  087D               	movf	___lltoft@exp,w
  6332  0031  00FC               	movwf	??___lltoft
  6333  0032  087C               	movf	??___lltoft,w
  6334  0033  00F3               	movwf	___ftpack@exp
  6335  0034  01F4               	clrf	___ftpack@sign
  6336  0035  3188  2006         	fcall	___ftpack
  6337  0037  0870               	movf	?___ftpack,w
  6338  0038  00F8               	movwf	?___lltoft
  6339  0039  0871               	movf	?___ftpack+1,w
  6340  003A  00F9               	movwf	?___lltoft+1
  6341  003B  0872               	movf	?___ftpack+2,w
  6342  003C  00FA               	movwf	?___lltoft+2
  6343  003D  0008               	return
  6344  003E                     __end_of___lltoft:	
  6345                           
  6346                           	psect	text14
  6347  14F0                     __ptext14:	
  6348 ;; *************** function ___llmod *****************
  6349 ;; Defined at:
  6350 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/llmod.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;  divisor         4    0[BANK0 ] unsigned long 
  6353 ;;  dividend        4    4[BANK0 ] unsigned long 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  counter         1    9[BANK0 ] unsigned char 
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  4    0[BANK0 ] unsigned long 
  6358 ;; Registers used:
  6359 ;;		wreg, status,2, status,0
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6365 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;Total ram usage:       10 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; This function calls:
  6372 ;;		Nothing
  6373 ;; This function is called by:
  6374 ;;		_printf
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           
  6379                           ;psect for function ___llmod
  6380  14F0                     ___llmod:	
  6381                           
  6382                           ;incstack = 0
  6383                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6384  14F0  0020               	movlb	0	; select bank0
  6385  14F1  0823               	movf	___llmod@divisor+3,w
  6386  14F2  0422               	iorwf	___llmod@divisor+2,w
  6387  14F3  0421               	iorwf	___llmod@divisor+1,w
  6388  14F4  0420               	iorwf	___llmod@divisor,w
  6389  14F5  1903               	skipnz
  6390  14F6  2D2A               	goto	l2339
  6391  14F7  01A9               	clrf	___llmod@counter
  6392  14F8  0AA9               	incf	___llmod@counter,f
  6393  14F9                     l2329:	
  6394  14F9  1BA3               	btfsc	___llmod@divisor+3,7
  6395  14FA  2D07               	goto	l2331
  6396  14FB  3001               	movlw	1
  6397  14FC                     u3365:	
  6398  14FC  35A0               	lslf	___llmod@divisor,f
  6399  14FD  0DA1               	rlf	___llmod@divisor+1,f
  6400  14FE  0DA2               	rlf	___llmod@divisor+2,f
  6401  14FF  0DA3               	rlf	___llmod@divisor+3,f
  6402  1500  0B89               	decfsz	9,f
  6403  1501  2CFC               	goto	u3365
  6404  1502  3001               	movlw	1
  6405  1503  00A8               	movwf	??___llmod
  6406  1504  0828               	movf	??___llmod,w
  6407  1505  07A9               	addwf	___llmod@counter,f
  6408  1506  2CF9               	goto	l2329
  6409  1507                     l2331:	
  6410  1507  0823               	movf	___llmod@divisor+3,w
  6411  1508  0227               	subwf	___llmod@dividend+3,w
  6412  1509  1D03               	skipz
  6413  150A  2D15               	goto	u3385
  6414  150B  0822               	movf	___llmod@divisor+2,w
  6415  150C  0226               	subwf	___llmod@dividend+2,w
  6416  150D  1D03               	skipz
  6417  150E  2D15               	goto	u3385
  6418  150F  0821               	movf	___llmod@divisor+1,w
  6419  1510  0225               	subwf	___llmod@dividend+1,w
  6420  1511  1D03               	skipz
  6421  1512  2D15               	goto	u3385
  6422  1513  0820               	movf	___llmod@divisor,w
  6423  1514  0224               	subwf	___llmod@dividend,w
  6424  1515                     u3385:	
  6425  1515  1C03               	skipc
  6426  1516  2D1F               	goto	l2335
  6427  1517  0820               	movf	___llmod@divisor,w
  6428  1518  02A4               	subwf	___llmod@dividend,f
  6429  1519  0821               	movf	___llmod@divisor+1,w
  6430  151A  3BA5               	subwfb	___llmod@dividend+1,f
  6431  151B  0822               	movf	___llmod@divisor+2,w
  6432  151C  3BA6               	subwfb	___llmod@dividend+2,f
  6433  151D  0823               	movf	___llmod@divisor+3,w
  6434  151E  3BA7               	subwfb	___llmod@dividend+3,f
  6435  151F                     l2335:	
  6436  151F  3001               	movlw	1
  6437  1520                     u3395:	
  6438  1520  36A3               	lsrf	___llmod@divisor+3,f
  6439  1521  0CA2               	rrf	___llmod@divisor+2,f
  6440  1522  0CA1               	rrf	___llmod@divisor+1,f
  6441  1523  0CA0               	rrf	___llmod@divisor,f
  6442  1524  0B89               	decfsz	9,f
  6443  1525  2D20               	goto	u3395
  6444  1526  3001               	movlw	1
  6445  1527  02A9               	subwf	___llmod@counter,f
  6446  1528  1D03               	btfss	3,2
  6447  1529  2D07               	goto	l2331
  6448  152A                     l2339:	
  6449  152A  0827               	movf	___llmod@dividend+3,w
  6450  152B  00A3               	movwf	?___llmod+3
  6451  152C  0826               	movf	___llmod@dividend+2,w
  6452  152D  00A2               	movwf	?___llmod+2
  6453  152E  0825               	movf	___llmod@dividend+1,w
  6454  152F  00A1               	movwf	?___llmod+1
  6455  1530  0824               	movf	___llmod@dividend,w
  6456  1531  00A0               	movwf	?___llmod
  6457  1532  0008               	return
  6458  1533                     __end_of___llmod:	
  6459                           
  6460                           	psect	text15
  6461  1578                     __ptext15:	
  6462 ;; *************** function ___lldiv *****************
  6463 ;; Defined at:
  6464 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  divisor         4    0[COMMON] unsigned long 
  6467 ;;  dividend        4    4[COMMON] unsigned long 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  quotient        4    9[COMMON] unsigned long 
  6470 ;;  counter         1   13[COMMON] unsigned char 
  6471 ;; Return value:  Size  Location     Type
  6472 ;;                  4    0[COMMON] unsigned long 
  6473 ;; Registers used:
  6474 ;;		wreg, status,2, status,0
  6475 ;; Tracked objects:
  6476 ;;		On entry : 0/0
  6477 ;;		On exit  : 0/0
  6478 ;;		Unchanged: 0/0
  6479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6480 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6481 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6483 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6484 ;;Total ram usage:       14 bytes
  6485 ;; Hardware stack levels used:    1
  6486 ;; This function calls:
  6487 ;;		Nothing
  6488 ;; This function is called by:
  6489 ;;		_printf
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           
  6494                           ;psect for function ___lldiv
  6495  1578                     ___lldiv:	
  6496                           
  6497                           ;incstack = 0
  6498                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6499  1578  3000               	movlw	0
  6500  1579  00FC               	movwf	___lldiv@quotient+3
  6501  157A  3000               	movlw	0
  6502  157B  00FB               	movwf	___lldiv@quotient+2
  6503  157C  3000               	movlw	0
  6504  157D  00FA               	movwf	___lldiv@quotient+1
  6505  157E  3000               	movlw	0
  6506  157F  00F9               	movwf	___lldiv@quotient
  6507  1580  0873               	movf	___lldiv@divisor+3,w
  6508  1581  0472               	iorwf	___lldiv@divisor+2,w
  6509  1582  0471               	iorwf	___lldiv@divisor+1,w
  6510  1583  0470               	iorwf	___lldiv@divisor,w
  6511  1584  1903               	skipnz
  6512  1585  2DC1               	goto	l2319
  6513  1586  01FD               	clrf	___lldiv@counter
  6514  1587  0AFD               	incf	___lldiv@counter,f
  6515  1588                     l2305:	
  6516  1588  1BF3               	btfsc	___lldiv@divisor+3,7
  6517  1589  2D96               	goto	l2307
  6518  158A  3001               	movlw	1
  6519  158B                     u3295:	
  6520  158B  35F0               	lslf	___lldiv@divisor,f
  6521  158C  0DF1               	rlf	___lldiv@divisor+1,f
  6522  158D  0DF2               	rlf	___lldiv@divisor+2,f
  6523  158E  0DF3               	rlf	___lldiv@divisor+3,f
  6524  158F  0B89               	decfsz	9,f
  6525  1590  2D8B               	goto	u3295
  6526  1591  3001               	movlw	1
  6527  1592  00F8               	movwf	??___lldiv
  6528  1593  0878               	movf	??___lldiv,w
  6529  1594  07FD               	addwf	___lldiv@counter,f
  6530  1595  2D88               	goto	l2305
  6531  1596                     l2307:	
  6532  1596  3001               	movlw	1
  6533  1597                     u3315:	
  6534  1597  35F9               	lslf	___lldiv@quotient,f
  6535  1598  0DFA               	rlf	___lldiv@quotient+1,f
  6536  1599  0DFB               	rlf	___lldiv@quotient+2,f
  6537  159A  0DFC               	rlf	___lldiv@quotient+3,f
  6538  159B  0B89               	decfsz	9,f
  6539  159C  2D97               	goto	u3315
  6540  159D  0873               	movf	___lldiv@divisor+3,w
  6541  159E  0277               	subwf	___lldiv@dividend+3,w
  6542  159F  1D03               	skipz
  6543  15A0  2DAB               	goto	u3325
  6544  15A1  0872               	movf	___lldiv@divisor+2,w
  6545  15A2  0276               	subwf	___lldiv@dividend+2,w
  6546  15A3  1D03               	skipz
  6547  15A4  2DAB               	goto	u3325
  6548  15A5  0871               	movf	___lldiv@divisor+1,w
  6549  15A6  0275               	subwf	___lldiv@dividend+1,w
  6550  15A7  1D03               	skipz
  6551  15A8  2DAB               	goto	u3325
  6552  15A9  0870               	movf	___lldiv@divisor,w
  6553  15AA  0274               	subwf	___lldiv@dividend,w
  6554  15AB                     u3325:	
  6555  15AB  1C03               	skipc
  6556  15AC  2DB6               	goto	l2315
  6557  15AD  0870               	movf	___lldiv@divisor,w
  6558  15AE  02F4               	subwf	___lldiv@dividend,f
  6559  15AF  0871               	movf	___lldiv@divisor+1,w
  6560  15B0  3BF5               	subwfb	___lldiv@dividend+1,f
  6561  15B1  0872               	movf	___lldiv@divisor+2,w
  6562  15B2  3BF6               	subwfb	___lldiv@dividend+2,f
  6563  15B3  0873               	movf	___lldiv@divisor+3,w
  6564  15B4  3BF7               	subwfb	___lldiv@dividend+3,f
  6565  15B5  1479               	bsf	___lldiv@quotient,0
  6566  15B6                     l2315:	
  6567  15B6  3001               	movlw	1
  6568  15B7                     u3335:	
  6569  15B7  36F3               	lsrf	___lldiv@divisor+3,f
  6570  15B8  0CF2               	rrf	___lldiv@divisor+2,f
  6571  15B9  0CF1               	rrf	___lldiv@divisor+1,f
  6572  15BA  0CF0               	rrf	___lldiv@divisor,f
  6573  15BB  0B89               	decfsz	9,f
  6574  15BC  2DB7               	goto	u3335
  6575  15BD  3001               	movlw	1
  6576  15BE  02FD               	subwf	___lldiv@counter,f
  6577  15BF  1D03               	btfss	3,2
  6578  15C0  2D96               	goto	l2307
  6579  15C1                     l2319:	
  6580  15C1  087C               	movf	___lldiv@quotient+3,w
  6581  15C2  00F3               	movwf	?___lldiv+3
  6582  15C3  087B               	movf	___lldiv@quotient+2,w
  6583  15C4  00F2               	movwf	?___lldiv+2
  6584  15C5  087A               	movf	___lldiv@quotient+1,w
  6585  15C6  00F1               	movwf	?___lldiv+1
  6586  15C7  0879               	movf	___lldiv@quotient,w
  6587  15C8  00F0               	movwf	?___lldiv
  6588  15C9  0008               	return
  6589  15CA                     __end_of___lldiv:	
  6590                           
  6591                           	psect	text16
  6592  161C                     __ptext16:	
  6593 ;; *************** function ___fttol *****************
  6594 ;; Defined at:
  6595 ;;		line 44 in file "/opt/microchip/xc8/v1.45/sources/common/fttol.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  f1              3   57[BANK0 ] float 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  lval            4   66[BANK0 ] unsigned long 
  6600 ;;  exp1            1   70[BANK0 ] unsigned char 
  6601 ;;  sign1           1   65[BANK0 ] unsigned char 
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  4   57[BANK0 ] long 
  6604 ;; Registers used:
  6605 ;;		wreg, status,2, status,0
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6612 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6615 ;;Total ram usage:       14 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; This function calls:
  6618 ;;		Nothing
  6619 ;; This function is called by:
  6620 ;;		_printf
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           
  6625                           ;psect for function ___fttol
  6626  161C                     ___fttol:	
  6627                           
  6628                           ;incstack = 0
  6629                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6630  161C  0020               	movlb	0	; select bank0
  6631  161D  0859               	movf	___fttol@f1,w
  6632  161E  00DD               	movwf	??___fttol
  6633  161F  085A               	movf	___fttol@f1+1,w
  6634  1620  00DE               	movwf	??___fttol+1
  6635  1621  085B               	movf	___fttol@f1+2,w
  6636  1622  00DF               	movwf	??___fttol+2
  6637  1623  1003               	clrc
  6638  1624  0D5E               	rlf	??___fttol+1,w
  6639  1625  0D5F               	rlf	??___fttol+2,w
  6640  1626  00E0               	movwf	??___fttol+3
  6641  1627  0860               	movf	??___fttol+3,w
  6642  1628  00E6               	movwf	___fttol@exp1
  6643  1629  0866               	movf	___fttol@exp1,w
  6644  162A  1D03               	btfss	3,2
  6645  162B  2E35               	goto	l2263
  6646  162C  3000               	movlw	0
  6647  162D  00DC               	movwf	?___fttol+3
  6648  162E  3000               	movlw	0
  6649  162F  00DB               	movwf	?___fttol+2
  6650  1630  3000               	movlw	0
  6651  1631  00DA               	movwf	?___fttol+1
  6652  1632  3000               	movlw	0
  6653  1633  00D9               	movwf	?___fttol
  6654  1634  0008               	return
  6655  1635                     l2263:	
  6656  1635  0859               	movf	___fttol@f1,w
  6657  1636  00DD               	movwf	??___fttol
  6658  1637  085A               	movf	___fttol@f1+1,w
  6659  1638  00DE               	movwf	??___fttol+1
  6660  1639  085B               	movf	___fttol@f1+2,w
  6661  163A  00DF               	movwf	??___fttol+2
  6662  163B  3017               	movlw	23
  6663  163C                     u3195:	
  6664  163C  36DF               	lsrf	??___fttol+2,f
  6665  163D  0CDE               	rrf	??___fttol+1,f
  6666  163E  0CDD               	rrf	??___fttol,f
  6667  163F  0B89               	decfsz	9,f
  6668  1640  2E3C               	goto	u3195
  6669  1641  085D               	movf	??___fttol,w
  6670  1642  00E0               	movwf	??___fttol+3
  6671  1643  0860               	movf	??___fttol+3,w
  6672  1644  00E1               	movwf	___fttol@sign1
  6673  1645  17DA               	bsf	___fttol@f1+1,7
  6674  1646  30FF               	movlw	255
  6675  1647  05D9               	andwf	___fttol@f1,f
  6676  1648  30FF               	movlw	255
  6677  1649  05DA               	andwf	___fttol@f1+1,f
  6678  164A  3000               	movlw	0
  6679  164B  05DB               	andwf	___fttol@f1+2,f
  6680  164C  0859               	movf	___fttol@f1,w
  6681  164D  00E2               	movwf	___fttol@lval
  6682  164E  085A               	movf	___fttol@f1+1,w
  6683  164F  00E3               	movwf	___fttol@lval+1
  6684  1650  085B               	movf	___fttol@f1+2,w
  6685  1651  00E4               	movwf	___fttol@lval+2
  6686  1652  01E5               	clrf	___fttol@lval+3
  6687  1653  308E               	movlw	142
  6688  1654  02E6               	subwf	___fttol@exp1,f
  6689  1655  1FE6               	btfss	___fttol@exp1,7
  6690  1656  2E73               	goto	l2283
  6691  1657  0866               	movf	___fttol@exp1,w
  6692  1658  3A80               	xorlw	128
  6693  1659  3E8F               	addlw	143
  6694  165A  1803               	skipnc
  6695  165B  2E65               	goto	l2281
  6696  165C  3000               	movlw	0
  6697  165D  00DC               	movwf	?___fttol+3
  6698  165E  3000               	movlw	0
  6699  165F  00DB               	movwf	?___fttol+2
  6700  1660  3000               	movlw	0
  6701  1661  00DA               	movwf	?___fttol+1
  6702  1662  3000               	movlw	0
  6703  1663  00D9               	movwf	?___fttol
  6704  1664  0008               	return
  6705  1665                     l2281:	
  6706  1665  3001               	movlw	1
  6707  1666                     u3225:	
  6708  1666  36E5               	lsrf	___fttol@lval+3,f
  6709  1667  0CE4               	rrf	___fttol@lval+2,f
  6710  1668  0CE3               	rrf	___fttol@lval+1,f
  6711  1669  0CE2               	rrf	___fttol@lval,f
  6712  166A  0B89               	decfsz	9,f
  6713  166B  2E66               	goto	u3225
  6714  166C  3001               	movlw	1
  6715  166D  00DD               	movwf	??___fttol
  6716  166E  085D               	movf	??___fttol,w
  6717  166F  07E6               	addwf	___fttol@exp1,f
  6718  1670  1903               	btfsc	3,2
  6719  1671  2E8C               	goto	l2291
  6720  1672  2E65               	goto	l2281
  6721  1673                     l2283:	
  6722  1673  3018               	movlw	24
  6723  1674  0266               	subwf	___fttol@exp1,w
  6724  1675  1C03               	skipc
  6725  1676  2E89               	goto	l650
  6726  1677  3000               	movlw	0
  6727  1678  00DC               	movwf	?___fttol+3
  6728  1679  3000               	movlw	0
  6729  167A  00DB               	movwf	?___fttol+2
  6730  167B  3000               	movlw	0
  6731  167C  00DA               	movwf	?___fttol+1
  6732  167D  3000               	movlw	0
  6733  167E  00D9               	movwf	?___fttol
  6734  167F  0008               	return
  6735  1680                     l2289:	
  6736  1680  3001               	movlw	1
  6737  1681                     u3255:	
  6738  1681  35E2               	lslf	___fttol@lval,f
  6739  1682  0DE3               	rlf	___fttol@lval+1,f
  6740  1683  0DE4               	rlf	___fttol@lval+2,f
  6741  1684  0DE5               	rlf	___fttol@lval+3,f
  6742  1685  0B89               	decfsz	9,f
  6743  1686  2E81               	goto	u3255
  6744  1687  3001               	movlw	1
  6745  1688  02E6               	subwf	___fttol@exp1,f
  6746  1689                     l650:	
  6747  1689  0866               	movf	___fttol@exp1,w
  6748  168A  1D03               	btfss	3,2
  6749  168B  2E80               	goto	l2289
  6750  168C                     l2291:	
  6751  168C  0861               	movf	___fttol@sign1,w
  6752  168D  1903               	btfsc	3,2
  6753  168E  2E9A               	goto	l2295
  6754  168F  09E2               	comf	___fttol@lval,f
  6755  1690  09E3               	comf	___fttol@lval+1,f
  6756  1691  09E4               	comf	___fttol@lval+2,f
  6757  1692  09E5               	comf	___fttol@lval+3,f
  6758  1693  0AE2               	incf	___fttol@lval,f
  6759  1694  1903               	skipnz
  6760  1695  0AE3               	incf	___fttol@lval+1,f
  6761  1696  1903               	skipnz
  6762  1697  0AE4               	incf	___fttol@lval+2,f
  6763  1698  1903               	skipnz
  6764  1699  0AE5               	incf	___fttol@lval+3,f
  6765  169A                     l2295:	
  6766  169A  0865               	movf	___fttol@lval+3,w
  6767  169B  00DC               	movwf	?___fttol+3
  6768  169C  0864               	movf	___fttol@lval+2,w
  6769  169D  00DB               	movwf	?___fttol+2
  6770  169E  0863               	movf	___fttol@lval+1,w
  6771  169F  00DA               	movwf	?___fttol+1
  6772  16A0  0862               	movf	___fttol@lval,w
  6773  16A1  00D9               	movwf	?___fttol
  6774  16A2  0008               	return
  6775  16A3                     __end_of___fttol:	
  6776                           
  6777                           	psect	text17
  6778  1497                     __ptext17:	
  6779 ;; *************** function ___ftsub *****************
  6780 ;; Defined at:
  6781 ;;		line 18 in file "/opt/microchip/xc8/v1.45/sources/common/ftsub.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  f2              3   32[BANK0 ] float 
  6784 ;;  f1              3   35[BANK0 ] float 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;		None
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  3   32[BANK0 ] float 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0, pclath, cstack
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6796 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6799 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6800 ;;Total ram usage:        6 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    2
  6803 ;; This function calls:
  6804 ;;		___ftadd
  6805 ;; This function is called by:
  6806 ;;		_printf
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           
  6811                           ;psect for function ___ftsub
  6812  1497                     ___ftsub:	
  6813                           
  6814                           ;incstack = 0
  6815                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6816  1497  0020               	movlb	0	; select bank0
  6817  1498  0842               	movf	___ftsub@f2+2,w
  6818  1499  0441               	iorwf	___ftsub@f2+1,w
  6819  149A  0440               	iorwf	___ftsub@f2,w
  6820  149B  1903               	skipnz
  6821  149C  2C9F               	goto	l2253
  6822  149D  3080               	movlw	128
  6823  149E  06C2               	xorwf	___ftsub@f2+2,f
  6824  149F                     l2253:	
  6825  149F  0843               	movf	___ftsub@f1,w
  6826  14A0  00B3               	movwf	___ftadd@f1
  6827  14A1  0844               	movf	___ftsub@f1+1,w
  6828  14A2  00B4               	movwf	___ftadd@f1+1
  6829  14A3  0845               	movf	___ftsub@f1+2,w
  6830  14A4  00B5               	movwf	___ftadd@f1+2
  6831  14A5  0840               	movf	___ftsub@f2,w
  6832  14A6  00B6               	movwf	___ftadd@f2
  6833  14A7  0841               	movf	___ftsub@f2+1,w
  6834  14A8  00B7               	movwf	___ftadd@f2+1
  6835  14A9  0842               	movf	___ftsub@f2+2,w
  6836  14AA  00B8               	movwf	___ftadd@f2+2
  6837  14AB  3188  206A         	fcall	___ftadd
  6838  14AD  0020               	movlb	0	; select bank0
  6839  14AE  0833               	movf	?___ftadd,w
  6840  14AF  00C0               	movwf	?___ftsub
  6841  14B0  0834               	movf	?___ftadd+1,w
  6842  14B1  00C1               	movwf	?___ftsub+1
  6843  14B2  0835               	movf	?___ftadd+2,w
  6844  14B3  00C2               	movwf	?___ftsub+2
  6845  14B4  0008               	return
  6846  14B5                     __end_of___ftsub:	
  6847                           
  6848                           	psect	text18
  6849  086A                     __ptext18:	
  6850 ;; *************** function ___ftadd *****************
  6851 ;; Defined at:
  6852 ;;		line 86 in file "/opt/microchip/xc8/v1.45/sources/common/ftadd.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  f1              3   19[BANK0 ] float 
  6855 ;;  f2              3   22[BANK0 ] float 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  exp1            1   31[BANK0 ] unsigned char 
  6858 ;;  exp2            1   30[BANK0 ] unsigned char 
  6859 ;;  sign            1   29[BANK0 ] unsigned char 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  3   19[BANK0 ] float 
  6862 ;; Registers used:
  6863 ;;		wreg, status,2, status,0, pclath, cstack
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6869 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;Total ram usage:       13 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:    1
  6876 ;; This function calls:
  6877 ;;		___ftpack
  6878 ;; This function is called by:
  6879 ;;		_main
  6880 ;;		_printf
  6881 ;;		___ftsub
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           
  6886                           ;psect for function ___ftadd
  6887  086A                     ___ftadd:	
  6888                           
  6889                           ;incstack = 0
  6890                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6891  086A  0020               	movlb	0	; select bank0
  6892  086B  0833               	movf	___ftadd@f1,w
  6893  086C  00B9               	movwf	??___ftadd
  6894  086D  0834               	movf	___ftadd@f1+1,w
  6895  086E  00BA               	movwf	??___ftadd+1
  6896  086F  0835               	movf	___ftadd@f1+2,w
  6897  0870  00BB               	movwf	??___ftadd+2
  6898  0871  1003               	clrc
  6899  0872  0D3A               	rlf	??___ftadd+1,w
  6900  0873  0D3B               	rlf	??___ftadd+2,w
  6901  0874  00BC               	movwf	??___ftadd+3
  6902  0875  083C               	movf	??___ftadd+3,w
  6903  0876  00BF               	movwf	___ftadd@exp1
  6904  0877  0836               	movf	___ftadd@f2,w
  6905  0878  00B9               	movwf	??___ftadd
  6906  0879  0837               	movf	___ftadd@f2+1,w
  6907  087A  00BA               	movwf	??___ftadd+1
  6908  087B  0838               	movf	___ftadd@f2+2,w
  6909  087C  00BB               	movwf	??___ftadd+2
  6910  087D  1003               	clrc
  6911  087E  0D3A               	rlf	??___ftadd+1,w
  6912  087F  0D3B               	rlf	??___ftadd+2,w
  6913  0880  00BC               	movwf	??___ftadd+3
  6914  0881  083C               	movf	??___ftadd+3,w
  6915  0882  00BE               	movwf	___ftadd@exp2
  6916  0883  083F               	movf	___ftadd@exp1,w
  6917  0884  1903               	btfsc	3,2
  6918  0885  2892               	goto	l1923
  6919  0886  083E               	movf	___ftadd@exp2,w
  6920  0887  023F               	subwf	___ftadd@exp1,w
  6921  0888  1803               	skipnc
  6922  0889  2899               	goto	l1927
  6923  088A  033F               	decf	___ftadd@exp1,w
  6924  088B  3AFF               	xorlw	255
  6925  088C  073E               	addwf	___ftadd@exp2,w
  6926  088D  00B9               	movwf	??___ftadd
  6927  088E  3019               	movlw	25
  6928  088F  0239               	subwf	??___ftadd,w
  6929  0890  1C03               	skipc
  6930  0891  2899               	goto	l1927
  6931  0892                     l1923:	
  6932  0892  0836               	movf	___ftadd@f2,w
  6933  0893  00B3               	movwf	?___ftadd
  6934  0894  0837               	movf	___ftadd@f2+1,w
  6935  0895  00B4               	movwf	?___ftadd+1
  6936  0896  0838               	movf	___ftadd@f2+2,w
  6937  0897  00B5               	movwf	?___ftadd+2
  6938  0898  0008               	return
  6939  0899                     l1927:	
  6940  0899  083E               	movf	___ftadd@exp2,w
  6941  089A  1903               	btfsc	3,2
  6942  089B  0008               	return
  6943  089C  083F               	movf	___ftadd@exp1,w
  6944  089D  023E               	subwf	___ftadd@exp2,w
  6945  089E  1803               	skipnc
  6946  089F  28A8               	goto	l1933
  6947  08A0  033E               	decf	___ftadd@exp2,w
  6948  08A1  3AFF               	xorlw	255
  6949  08A2  073F               	addwf	___ftadd@exp1,w
  6950  08A3  00B9               	movwf	??___ftadd
  6951  08A4  3019               	movlw	25
  6952  08A5  0239               	subwf	??___ftadd,w
  6953  08A6  1803               	btfsc	3,0
  6954  08A7  0008               	return
  6955  08A8                     l1933:	
  6956  08A8  3006               	movlw	6
  6957  08A9  00B9               	movwf	??___ftadd
  6958  08AA  0839               	movf	??___ftadd,w
  6959  08AB  00BD               	movwf	___ftadd@sign
  6960  08AC  1BB5               	btfsc	___ftadd@f1+2,7
  6961  08AD  17BD               	bsf	___ftadd@sign,7
  6962  08AE  1BB8               	btfsc	___ftadd@f2+2,7
  6963  08AF  173D               	bsf	___ftadd@sign,6
  6964  08B0  17B4               	bsf	___ftadd@f1+1,7
  6965  08B1  30FF               	movlw	255
  6966  08B2  05B3               	andwf	___ftadd@f1,f
  6967  08B3  30FF               	movlw	255
  6968  08B4  05B4               	andwf	___ftadd@f1+1,f
  6969  08B5  3000               	movlw	0
  6970  08B6  05B5               	andwf	___ftadd@f1+2,f
  6971  08B7  17B7               	bsf	___ftadd@f2+1,7
  6972  08B8  30FF               	movlw	255
  6973  08B9  05B6               	andwf	___ftadd@f2,f
  6974  08BA  30FF               	movlw	255
  6975  08BB  05B7               	andwf	___ftadd@f2+1,f
  6976  08BC  3000               	movlw	0
  6977  08BD  05B8               	andwf	___ftadd@f2+2,f
  6978  08BE  083E               	movf	___ftadd@exp2,w
  6979  08BF  023F               	subwf	___ftadd@exp1,w
  6980  08C0  1803               	skipnc
  6981  08C1  28E4               	goto	l1955
  6982  08C2                     l1945:	
  6983  08C2  3001               	movlw	1
  6984  08C3                     u2525:	
  6985  08C3  35B6               	lslf	___ftadd@f2,f
  6986  08C4  0DB7               	rlf	___ftadd@f2+1,f
  6987  08C5  0DB8               	rlf	___ftadd@f2+2,f
  6988  08C6  0B89               	decfsz	9,f
  6989  08C7  28C3               	goto	u2525
  6990  08C8  3001               	movlw	1
  6991  08C9  02BE               	subwf	___ftadd@exp2,f
  6992  08CA  083E               	movf	___ftadd@exp2,w
  6993  08CB  063F               	xorwf	___ftadd@exp1,w
  6994  08CC  1903               	skipnz
  6995  08CD  28DF               	goto	l1953
  6996  08CE  3001               	movlw	1
  6997  08CF  02BD               	subwf	___ftadd@sign,f
  6998  08D0  083D               	movf	___ftadd@sign,w
  6999  08D1  3907               	andlw	7
  7000  08D2  1903               	btfsc	3,2
  7001  08D3  28DF               	goto	l1953
  7002  08D4  28C2               	goto	l1945
  7003  08D5                     l1951:	
  7004  08D5  3001               	movlw	1
  7005  08D6                     u2555:	
  7006  08D6  36B5               	lsrf	___ftadd@f1+2,f
  7007  08D7  0CB4               	rrf	___ftadd@f1+1,f
  7008  08D8  0CB3               	rrf	___ftadd@f1,f
  7009  08D9  0B89               	decfsz	9,f
  7010  08DA  28D6               	goto	u2555
  7011  08DB  3001               	movlw	1
  7012  08DC  00B9               	movwf	??___ftadd
  7013  08DD  0839               	movf	??___ftadd,w
  7014  08DE  07BF               	addwf	___ftadd@exp1,f
  7015  08DF                     l1953:	
  7016  08DF  083F               	movf	___ftadd@exp1,w
  7017  08E0  063E               	xorwf	___ftadd@exp2,w
  7018  08E1  1903               	btfsc	3,2
  7019  08E2  2909               	goto	l573
  7020  08E3  28D5               	goto	l1951
  7021  08E4                     l1955:	
  7022  08E4  083F               	movf	___ftadd@exp1,w
  7023  08E5  023E               	subwf	___ftadd@exp2,w
  7024  08E6  1803               	skipnc
  7025  08E7  2909               	goto	l573
  7026  08E8                     l1957:	
  7027  08E8  3001               	movlw	1
  7028  08E9                     u2585:	
  7029  08E9  35B3               	lslf	___ftadd@f1,f
  7030  08EA  0DB4               	rlf	___ftadd@f1+1,f
  7031  08EB  0DB5               	rlf	___ftadd@f1+2,f
  7032  08EC  0B89               	decfsz	9,f
  7033  08ED  28E9               	goto	u2585
  7034  08EE  3001               	movlw	1
  7035  08EF  02BF               	subwf	___ftadd@exp1,f
  7036  08F0  083E               	movf	___ftadd@exp2,w
  7037  08F1  063F               	xorwf	___ftadd@exp1,w
  7038  08F2  1903               	skipnz
  7039  08F3  2905               	goto	l1965
  7040  08F4  3001               	movlw	1
  7041  08F5  02BD               	subwf	___ftadd@sign,f
  7042  08F6  083D               	movf	___ftadd@sign,w
  7043  08F7  3907               	andlw	7
  7044  08F8  1903               	btfsc	3,2
  7045  08F9  2905               	goto	l1965
  7046  08FA  28E8               	goto	l1957
  7047  08FB                     l1963:	
  7048  08FB  3001               	movlw	1
  7049  08FC                     u2615:	
  7050  08FC  36B8               	lsrf	___ftadd@f2+2,f
  7051  08FD  0CB7               	rrf	___ftadd@f2+1,f
  7052  08FE  0CB6               	rrf	___ftadd@f2,f
  7053  08FF  0B89               	decfsz	9,f
  7054  0900  28FC               	goto	u2615
  7055  0901  3001               	movlw	1
  7056  0902  00B9               	movwf	??___ftadd
  7057  0903  0839               	movf	??___ftadd,w
  7058  0904  07BE               	addwf	___ftadd@exp2,f
  7059  0905                     l1965:	
  7060  0905  083F               	movf	___ftadd@exp1,w
  7061  0906  063E               	xorwf	___ftadd@exp2,w
  7062  0907  1D03               	skipz
  7063  0908  28FB               	goto	l1963
  7064  0909                     l573:	
  7065  0909  1FBD               	btfss	___ftadd@sign,7
  7066  090A  291B               	goto	l1969
  7067  090B  30FF               	movlw	255
  7068  090C  06B3               	xorwf	___ftadd@f1,f
  7069  090D  30FF               	movlw	255
  7070  090E  06B4               	xorwf	___ftadd@f1+1,f
  7071  090F  30FF               	movlw	255
  7072  0910  06B5               	xorwf	___ftadd@f1+2,f
  7073  0911  3001               	movlw	1
  7074  0912  07B3               	addwf	___ftadd@f1,f
  7075  0913  3000               	movlw	0
  7076  0914  1803               	skipnc
  7077  0915  3001               	movlw	1
  7078  0916  07B4               	addwf	___ftadd@f1+1,f
  7079  0917  3000               	movlw	0
  7080  0918  1803               	skipnc
  7081  0919  3001               	movlw	1
  7082  091A  07B5               	addwf	___ftadd@f1+2,f
  7083  091B                     l1969:	
  7084  091B  1F3D               	btfss	___ftadd@sign,6
  7085  091C  292D               	goto	l1973
  7086  091D  30FF               	movlw	255
  7087  091E  06B6               	xorwf	___ftadd@f2,f
  7088  091F  30FF               	movlw	255
  7089  0920  06B7               	xorwf	___ftadd@f2+1,f
  7090  0921  30FF               	movlw	255
  7091  0922  06B8               	xorwf	___ftadd@f2+2,f
  7092  0923  3001               	movlw	1
  7093  0924  07B6               	addwf	___ftadd@f2,f
  7094  0925  3000               	movlw	0
  7095  0926  1803               	skipnc
  7096  0927  3001               	movlw	1
  7097  0928  07B7               	addwf	___ftadd@f2+1,f
  7098  0929  3000               	movlw	0
  7099  092A  1803               	skipnc
  7100  092B  3001               	movlw	1
  7101  092C  07B8               	addwf	___ftadd@f2+2,f
  7102  092D                     l1973:	
  7103  092D  01BD               	clrf	___ftadd@sign
  7104  092E  0833               	movf	___ftadd@f1,w
  7105  092F  07B6               	addwf	___ftadd@f2,f
  7106  0930  0834               	movf	___ftadd@f1+1,w
  7107  0931  3DB7               	addwfc	___ftadd@f2+1,f
  7108  0932  0835               	movf	___ftadd@f1+2,w
  7109  0933  3DB8               	addwfc	___ftadd@f2+2,f
  7110  0934  1FB8               	btfss	___ftadd@f2+2,7
  7111  0935  2948               	goto	l1983
  7112  0936  30FF               	movlw	255
  7113  0937  06B6               	xorwf	___ftadd@f2,f
  7114  0938  30FF               	movlw	255
  7115  0939  06B7               	xorwf	___ftadd@f2+1,f
  7116  093A  30FF               	movlw	255
  7117  093B  06B8               	xorwf	___ftadd@f2+2,f
  7118  093C  3001               	movlw	1
  7119  093D  07B6               	addwf	___ftadd@f2,f
  7120  093E  3000               	movlw	0
  7121  093F  1803               	skipnc
  7122  0940  3001               	movlw	1
  7123  0941  07B7               	addwf	___ftadd@f2+1,f
  7124  0942  3000               	movlw	0
  7125  0943  1803               	skipnc
  7126  0944  3001               	movlw	1
  7127  0945  07B8               	addwf	___ftadd@f2+2,f
  7128  0946  01BD               	clrf	___ftadd@sign
  7129  0947  0ABD               	incf	___ftadd@sign,f
  7130  0948                     l1983:	
  7131  0948  0836               	movf	___ftadd@f2,w
  7132  0949  00F0               	movwf	___ftpack@arg
  7133  094A  0837               	movf	___ftadd@f2+1,w
  7134  094B  00F1               	movwf	___ftpack@arg+1
  7135  094C  0838               	movf	___ftadd@f2+2,w
  7136  094D  00F2               	movwf	___ftpack@arg+2
  7137  094E  083F               	movf	___ftadd@exp1,w
  7138  094F  00B9               	movwf	??___ftadd
  7139  0950  0839               	movf	??___ftadd,w
  7140  0951  00F3               	movwf	___ftpack@exp
  7141  0952  083D               	movf	___ftadd@sign,w
  7142  0953  00BA               	movwf	??___ftadd+1
  7143  0954  083A               	movf	??___ftadd+1,w
  7144  0955  00F4               	movwf	___ftpack@sign
  7145  0956  3188  2006         	fcall	___ftpack
  7146  0958  0870               	movf	?___ftpack,w
  7147  0959  0020               	movlb	0	; select bank0
  7148  095A  00B3               	movwf	?___ftadd
  7149  095B  0871               	movf	?___ftpack+1,w
  7150  095C  00B4               	movwf	?___ftadd+1
  7151  095D  0872               	movf	?___ftpack+2,w
  7152  095E  00B5               	movwf	?___ftadd+2
  7153  095F  0008               	return
  7154  0960                     __end_of___ftadd:	
  7155                           
  7156                           	psect	text19
  7157  1434                     __ptext19:	
  7158 ;; *************** function ___ftneg *****************
  7159 ;; Defined at:
  7160 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/ftneg.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  f1              3   16[BANK0 ] float 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;		None
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  3   16[BANK0 ] float 
  7167 ;; Registers used:
  7168 ;;		wreg
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7174 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;Total ram usage:        3 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; This function calls:
  7181 ;;		Nothing
  7182 ;; This function is called by:
  7183 ;;		_main
  7184 ;;		_printf
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           
  7189                           ;psect for function ___ftneg
  7190  1434                     ___ftneg:	
  7191                           
  7192                           ;incstack = 0
  7193                           ; Regs used in ___ftneg: [wreg]
  7194  1434  0020               	movlb	0	; select bank0
  7195  1435  0832               	movf	___ftneg@f1+2,w
  7196  1436  0431               	iorwf	___ftneg@f1+1,w
  7197  1437  0430               	iorwf	___ftneg@f1,w
  7198  1438  1903               	skipnz
  7199  1439  0008               	return
  7200  143A  3080               	movlw	128
  7201  143B  06B2               	xorwf	___ftneg@f1+2,f
  7202  143C  0008               	return
  7203  143D                     __end_of___ftneg:	
  7204                           
  7205                           	psect	text20
  7206  14B5                     __ptext20:	
  7207 ;; *************** function ___ftge *****************
  7208 ;; Defined at:
  7209 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/ftge.c"
  7210 ;; Parameters:    Size  Location     Type
  7211 ;;  ff1             3    0[COMMON] float 
  7212 ;;  ff2             3    3[COMMON] float 
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;		None
  7215 ;; Return value:  Size  Location     Type
  7216 ;;		None               void
  7217 ;; Registers used:
  7218 ;;		wreg, status,2, status,0
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7224 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7226 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7227 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7228 ;;Total ram usage:        9 bytes
  7229 ;; Hardware stack levels used:    1
  7230 ;; This function calls:
  7231 ;;		Nothing
  7232 ;; This function is called by:
  7233 ;;		_printf
  7234 ;; This function uses a non-reentrant model
  7235 ;;
  7236                           
  7237                           
  7238                           ;psect for function ___ftge
  7239  14B5                     ___ftge:	
  7240                           
  7241                           ;incstack = 0
  7242                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7243  14B5  1FF2               	btfss	___ftge@ff1+2,7
  7244  14B6  2CCB               	goto	l2225
  7245  14B7  0970               	comf	___ftge@ff1,w
  7246  14B8  00F6               	movwf	??___ftge
  7247  14B9  0971               	comf	___ftge@ff1+1,w
  7248  14BA  00F7               	movwf	??___ftge+1
  7249  14BB  0972               	comf	___ftge@ff1+2,w
  7250  14BC  00F8               	movwf	??___ftge+2
  7251  14BD  0AF6               	incf	??___ftge,f
  7252  14BE  1903               	skipnz
  7253  14BF  0AF7               	incf	??___ftge+1,f
  7254  14C0  1903               	skipnz
  7255  14C1  0AF8               	incf	??___ftge+2,f
  7256  14C2  3000               	movlw	0
  7257  14C3  0776               	addwf	??___ftge,w
  7258  14C4  00F0               	movwf	___ftge@ff1
  7259  14C5  3000               	movlw	0
  7260  14C6  3D77               	addwfc	??___ftge+1,w
  7261  14C7  00F1               	movwf	___ftge@ff1+1
  7262  14C8  3080               	movlw	128
  7263  14C9  3D78               	addwfc	??___ftge+2,w
  7264  14CA  00F2               	movwf	___ftge@ff1+2
  7265  14CB                     l2225:	
  7266  14CB  1FF5               	btfss	___ftge@ff2+2,7
  7267  14CC  2CE1               	goto	l2229
  7268  14CD  0973               	comf	___ftge@ff2,w
  7269  14CE  00F6               	movwf	??___ftge
  7270  14CF  0974               	comf	___ftge@ff2+1,w
  7271  14D0  00F7               	movwf	??___ftge+1
  7272  14D1  0975               	comf	___ftge@ff2+2,w
  7273  14D2  00F8               	movwf	??___ftge+2
  7274  14D3  0AF6               	incf	??___ftge,f
  7275  14D4  1903               	skipnz
  7276  14D5  0AF7               	incf	??___ftge+1,f
  7277  14D6  1903               	skipnz
  7278  14D7  0AF8               	incf	??___ftge+2,f
  7279  14D8  3000               	movlw	0
  7280  14D9  0776               	addwf	??___ftge,w
  7281  14DA  00F3               	movwf	___ftge@ff2
  7282  14DB  3000               	movlw	0
  7283  14DC  3D77               	addwfc	??___ftge+1,w
  7284  14DD  00F4               	movwf	___ftge@ff2+1
  7285  14DE  3080               	movlw	128
  7286  14DF  3D78               	addwfc	??___ftge+2,w
  7287  14E0  00F5               	movwf	___ftge@ff2+2
  7288  14E1                     l2229:	
  7289  14E1  3080               	movlw	128
  7290  14E2  06F2               	xorwf	___ftge@ff1+2,f
  7291  14E3  3080               	movlw	128
  7292  14E4  06F5               	xorwf	___ftge@ff2+2,f
  7293  14E5  0875               	movf	___ftge@ff2+2,w
  7294  14E6  0272               	subwf	___ftge@ff1+2,w
  7295  14E7  1D03               	skipz
  7296  14E8  0008               	return
  7297  14E9  0874               	movf	___ftge@ff2+1,w
  7298  14EA  0271               	subwf	___ftge@ff1+1,w
  7299  14EB  1D03               	skipz
  7300  14EC  0008               	return
  7301  14ED  0873               	movf	___ftge@ff2,w
  7302  14EE  0270               	subwf	___ftge@ff1,w
  7303  14EF  0008               	return
  7304  14F0                     __end_of___ftge:	
  7305                           
  7306                           	psect	text21
  7307  147A                     __ptext21:	
  7308 ;; *************** function _pinConfig *****************
  7309 ;; Defined at:
  7310 ;;		line 171 in file "main.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;		None
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;		None
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;Total ram usage:        0 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; This function calls:
  7331 ;;		Nothing
  7332 ;; This function is called by:
  7333 ;;		_main
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           
  7338                           ;psect for function _pinConfig
  7339  147A                     _pinConfig:	
  7340                           
  7341                           ;main.c: 172: OSCCON = 0x6A;
  7342                           
  7343                           ;incstack = 0
  7344                           ; Regs used in _pinConfig: [wreg+status,2]
  7345  147A  306A               	movlw	106
  7346  147B  0021               	movlb	1	; select bank1
  7347  147C  0099               	movwf	25	;volatile
  7348                           
  7349                           ;main.c: 173: TXCKSEL = 1;
  7350  147D  0022               	movlb	2	; select bank2
  7351  147E  151D               	bsf	29,2	;volatile
  7352                           
  7353                           ;main.c: 174: RXDTSEL = 1;
  7354  147F  179D               	bsf	29,7	;volatile
  7355                           
  7356                           ;main.c: 176: TRISA = 0x10;
  7357  1480  3010               	movlw	16
  7358  1481  0021               	movlb	1	; select bank1
  7359  1482  008C               	movwf	12	;volatile
  7360                           
  7361                           ;main.c: 177: ANSELA =0x10;
  7362  1483  3010               	movlw	16
  7363  1484  0023               	movlb	3	; select bank3
  7364  1485  008C               	movwf	12	;volatile
  7365                           
  7366                           ;main.c: 178: TRISC = 0x0C;
  7367  1486  300C               	movlw	12
  7368  1487  0021               	movlb	1	; select bank1
  7369  1488  008E               	movwf	14	;volatile
  7370                           
  7371                           ;main.c: 179: ANSELC =0x0C;
  7372  1489  300C               	movlw	12
  7373  148A  0023               	movlb	3	; select bank3
  7374  148B  008E               	movwf	14	;volatile
  7375                           
  7376                           ;main.c: 180: TRISB = 0xF0;
  7377  148C  30F0               	movlw	240
  7378  148D  0021               	movlb	1	; select bank1
  7379  148E  008D               	movwf	13	;volatile
  7380                           
  7381                           ;main.c: 181: ANSELB =0xF0;
  7382  148F  30F0               	movlw	240
  7383  1490  0023               	movlb	3	; select bank3
  7384  1491  008D               	movwf	13	;volatile
  7385                           
  7386                           ;main.c: 182: INTCON = 0;
  7387  1492  018B               	clrf	11	;volatile
  7388                           
  7389                           ;main.c: 183: TSEN = 1;
  7390  1493  0022               	movlb	2	; select bank2
  7391  1494  1697               	bsf	23,5	;volatile
  7392                           
  7393                           ;main.c: 184: TSRNG = 0;
  7394  1495  1217               	bcf	23,4	;volatile
  7395  1496  0008               	return
  7396  1497                     __end_of_pinConfig:	
  7397                           
  7398                           	psect	text22
  7399  144B                     __ptext22:	
  7400 ;; *************** function ___lwtoft *****************
  7401 ;; Defined at:
  7402 ;;		line 28 in file "/opt/microchip/xc8/v1.45/sources/common/lwtoft.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;  c               2    8[COMMON] unsigned int 
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;		None
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  3    8[COMMON] float 
  7409 ;; Registers used:
  7410 ;;		wreg, status,2, status,0, pclath, cstack
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7416 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;Total ram usage:        4 bytes
  7421 ;; Hardware stack levels used:    1
  7422 ;; Hardware stack levels required when called:    1
  7423 ;; This function calls:
  7424 ;;		___ftpack
  7425 ;; This function is called by:
  7426 ;;		_main
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           
  7431                           ;psect for function ___lwtoft
  7432  144B                     ___lwtoft:	
  7433                           
  7434                           ;incstack = 0
  7435                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7436  144B  0878               	movf	___lwtoft@c,w
  7437  144C  00F0               	movwf	___ftpack@arg
  7438  144D  0879               	movf	___lwtoft@c+1,w
  7439  144E  00F1               	movwf	___ftpack@arg+1
  7440  144F  01F2               	clrf	___ftpack@arg+2
  7441  1450  308E               	movlw	142
  7442  1451  00FB               	movwf	??___lwtoft
  7443  1452  087B               	movf	??___lwtoft,w
  7444  1453  00F3               	movwf	___ftpack@exp
  7445  1454  01F4               	clrf	___ftpack@sign
  7446  1455  3188  2006         	fcall	___ftpack
  7447  1457  0870               	movf	?___ftpack,w
  7448  1458  00F8               	movwf	?___lwtoft
  7449  1459  0871               	movf	?___ftpack+1,w
  7450  145A  00F9               	movwf	?___lwtoft+1
  7451  145B  0872               	movf	?___ftpack+2,w
  7452  145C  00FA               	movwf	?___lwtoft+2
  7453  145D  0008               	return
  7454  145E                     __end_of___lwtoft:	
  7455                           
  7456                           	psect	text23
  7457  16A3                     __ptext23:	
  7458 ;; *************** function ___ftdiv *****************
  7459 ;; Defined at:
  7460 ;;		line 56 in file "/opt/microchip/xc8/v1.45/sources/common/ftdiv.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  f2              3    0[BANK0 ] float 
  7463 ;;  f1              3    3[BANK0 ] float 
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;  f3              3   11[BANK0 ] float 
  7466 ;;  sign            1   15[BANK0 ] unsigned char 
  7467 ;;  exp             1   14[BANK0 ] unsigned char 
  7468 ;;  cntr            1   10[BANK0 ] unsigned char 
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  3    0[BANK0 ] float 
  7471 ;; Registers used:
  7472 ;;		wreg, status,2, status,0, pclath, cstack
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7478 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;Total ram usage:       16 bytes
  7483 ;; Hardware stack levels used:    1
  7484 ;; Hardware stack levels required when called:    1
  7485 ;; This function calls:
  7486 ;;		___ftpack
  7487 ;; This function is called by:
  7488 ;;		_main
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           
  7493                           ;psect for function ___ftdiv
  7494  16A3                     ___ftdiv:	
  7495                           
  7496                           ;incstack = 0
  7497                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7498  16A3  0020               	movlb	0	; select bank0
  7499  16A4  0823               	movf	___ftdiv@f1,w
  7500  16A5  00A6               	movwf	??___ftdiv
  7501  16A6  0824               	movf	___ftdiv@f1+1,w
  7502  16A7  00A7               	movwf	??___ftdiv+1
  7503  16A8  0825               	movf	___ftdiv@f1+2,w
  7504  16A9  00A8               	movwf	??___ftdiv+2
  7505  16AA  1003               	clrc
  7506  16AB  0D27               	rlf	??___ftdiv+1,w
  7507  16AC  0D28               	rlf	??___ftdiv+2,w
  7508  16AD  00A9               	movwf	??___ftdiv+3
  7509  16AE  0829               	movf	??___ftdiv+3,w
  7510  16AF  00AE               	movwf	___ftdiv@exp
  7511  16B0  082E               	movf	___ftdiv@exp,w
  7512  16B1  1D03               	btfss	3,2
  7513  16B2  2EBA               	goto	l2671
  7514  16B3  3000               	movlw	0
  7515  16B4  00A0               	movwf	?___ftdiv
  7516  16B5  3000               	movlw	0
  7517  16B6  00A1               	movwf	?___ftdiv+1
  7518  16B7  3000               	movlw	0
  7519  16B8  00A2               	movwf	?___ftdiv+2
  7520  16B9  0008               	return
  7521  16BA                     l2671:	
  7522  16BA  0820               	movf	___ftdiv@f2,w
  7523  16BB  00A6               	movwf	??___ftdiv
  7524  16BC  0821               	movf	___ftdiv@f2+1,w
  7525  16BD  00A7               	movwf	??___ftdiv+1
  7526  16BE  0822               	movf	___ftdiv@f2+2,w
  7527  16BF  00A8               	movwf	??___ftdiv+2
  7528  16C0  1003               	clrc
  7529  16C1  0D27               	rlf	??___ftdiv+1,w
  7530  16C2  0D28               	rlf	??___ftdiv+2,w
  7531  16C3  00A9               	movwf	??___ftdiv+3
  7532  16C4  0829               	movf	??___ftdiv+3,w
  7533  16C5  00AF               	movwf	___ftdiv@sign
  7534  16C6  082F               	movf	___ftdiv@sign,w
  7535  16C7  1D03               	btfss	3,2
  7536  16C8  2ED0               	goto	l2677
  7537  16C9  3000               	movlw	0
  7538  16CA  00A0               	movwf	?___ftdiv
  7539  16CB  3000               	movlw	0
  7540  16CC  00A1               	movwf	?___ftdiv+1
  7541  16CD  3000               	movlw	0
  7542  16CE  00A2               	movwf	?___ftdiv+2
  7543  16CF  0008               	return
  7544  16D0                     l2677:	
  7545  16D0  3000               	movlw	0
  7546  16D1  00AB               	movwf	___ftdiv@f3
  7547  16D2  3000               	movlw	0
  7548  16D3  00AC               	movwf	___ftdiv@f3+1
  7549  16D4  3000               	movlw	0
  7550  16D5  00AD               	movwf	___ftdiv@f3+2
  7551  16D6  3089               	movlw	137
  7552  16D7  072F               	addwf	___ftdiv@sign,w
  7553  16D8  00A6               	movwf	??___ftdiv
  7554  16D9  0826               	movf	??___ftdiv,w
  7555  16DA  02AE               	subwf	___ftdiv@exp,f
  7556  16DB  0823               	movf	___ftdiv@f1,w
  7557  16DC  00A6               	movwf	??___ftdiv
  7558  16DD  0824               	movf	___ftdiv@f1+1,w
  7559  16DE  00A7               	movwf	??___ftdiv+1
  7560  16DF  0825               	movf	___ftdiv@f1+2,w
  7561  16E0  00A8               	movwf	??___ftdiv+2
  7562  16E1  3010               	movlw	16
  7563  16E2                     u4025:	
  7564  16E2  36A8               	lsrf	??___ftdiv+2,f
  7565  16E3  0CA7               	rrf	??___ftdiv+1,f
  7566  16E4  0CA6               	rrf	??___ftdiv,f
  7567  16E5  0B89               	decfsz	9,f
  7568  16E6  2EE2               	goto	u4025
  7569  16E7  0826               	movf	??___ftdiv,w
  7570  16E8  00A9               	movwf	??___ftdiv+3
  7571  16E9  0829               	movf	??___ftdiv+3,w
  7572  16EA  00AF               	movwf	___ftdiv@sign
  7573  16EB  0820               	movf	___ftdiv@f2,w
  7574  16EC  00A6               	movwf	??___ftdiv
  7575  16ED  0821               	movf	___ftdiv@f2+1,w
  7576  16EE  00A7               	movwf	??___ftdiv+1
  7577  16EF  0822               	movf	___ftdiv@f2+2,w
  7578  16F0  00A8               	movwf	??___ftdiv+2
  7579  16F1  3010               	movlw	16
  7580  16F2                     u4035:	
  7581  16F2  36A8               	lsrf	??___ftdiv+2,f
  7582  16F3  0CA7               	rrf	??___ftdiv+1,f
  7583  16F4  0CA6               	rrf	??___ftdiv,f
  7584  16F5  0B89               	decfsz	9,f
  7585  16F6  2EF2               	goto	u4035
  7586  16F7  0826               	movf	??___ftdiv,w
  7587  16F8  00A9               	movwf	??___ftdiv+3
  7588  16F9  0829               	movf	??___ftdiv+3,w
  7589  16FA  06AF               	xorwf	___ftdiv@sign,f
  7590  16FB  3080               	movlw	128
  7591  16FC  00A6               	movwf	??___ftdiv
  7592  16FD  0826               	movf	??___ftdiv,w
  7593  16FE  05AF               	andwf	___ftdiv@sign,f
  7594  16FF  17A4               	bsf	___ftdiv@f1+1,7
  7595  1700  30FF               	movlw	255
  7596  1701  05A3               	andwf	___ftdiv@f1,f
  7597  1702  30FF               	movlw	255
  7598  1703  05A4               	andwf	___ftdiv@f1+1,f
  7599  1704  3000               	movlw	0
  7600  1705  05A5               	andwf	___ftdiv@f1+2,f
  7601  1706  17A1               	bsf	___ftdiv@f2+1,7
  7602  1707  30FF               	movlw	255
  7603  1708  05A0               	andwf	___ftdiv@f2,f
  7604  1709  30FF               	movlw	255
  7605  170A  05A1               	andwf	___ftdiv@f2+1,f
  7606  170B  3000               	movlw	0
  7607  170C  05A2               	andwf	___ftdiv@f2+2,f
  7608  170D  3018               	movlw	24
  7609  170E  00A6               	movwf	??___ftdiv
  7610  170F  0826               	movf	??___ftdiv,w
  7611  1710  00AA               	movwf	___ftdiv@cntr
  7612  1711                     l2691:	
  7613  1711  3001               	movlw	1
  7614  1712                     u4045:	
  7615  1712  35AB               	lslf	___ftdiv@f3,f
  7616  1713  0DAC               	rlf	___ftdiv@f3+1,f
  7617  1714  0DAD               	rlf	___ftdiv@f3+2,f
  7618  1715  0B89               	decfsz	9,f
  7619  1716  2F12               	goto	u4045
  7620  1717  0822               	movf	___ftdiv@f2+2,w
  7621  1718  0225               	subwf	___ftdiv@f1+2,w
  7622  1719  1D03               	skipz
  7623  171A  2F21               	goto	u4055
  7624  171B  0821               	movf	___ftdiv@f2+1,w
  7625  171C  0224               	subwf	___ftdiv@f1+1,w
  7626  171D  1D03               	skipz
  7627  171E  2F21               	goto	u4055
  7628  171F  0820               	movf	___ftdiv@f2,w
  7629  1720  0223               	subwf	___ftdiv@f1,w
  7630  1721                     u4055:	
  7631  1721  1C03               	skipc
  7632  1722  2F2A               	goto	l2699
  7633  1723  0820               	movf	___ftdiv@f2,w
  7634  1724  02A3               	subwf	___ftdiv@f1,f
  7635  1725  0821               	movf	___ftdiv@f2+1,w
  7636  1726  3BA4               	subwfb	___ftdiv@f1+1,f
  7637  1727  0822               	movf	___ftdiv@f2+2,w
  7638  1728  3BA5               	subwfb	___ftdiv@f1+2,f
  7639  1729  142B               	bsf	___ftdiv@f3,0
  7640  172A                     l2699:	
  7641  172A  3001               	movlw	1
  7642  172B                     u4065:	
  7643  172B  35A3               	lslf	___ftdiv@f1,f
  7644  172C  0DA4               	rlf	___ftdiv@f1+1,f
  7645  172D  0DA5               	rlf	___ftdiv@f1+2,f
  7646  172E  0B89               	decfsz	9,f
  7647  172F  2F2B               	goto	u4065
  7648  1730  3001               	movlw	1
  7649  1731  02AA               	subwf	___ftdiv@cntr,f
  7650  1732  1D03               	btfss	3,2
  7651  1733  2F11               	goto	l2691
  7652  1734  082B               	movf	___ftdiv@f3,w
  7653  1735  00F0               	movwf	___ftpack@arg
  7654  1736  082C               	movf	___ftdiv@f3+1,w
  7655  1737  00F1               	movwf	___ftpack@arg+1
  7656  1738  082D               	movf	___ftdiv@f3+2,w
  7657  1739  00F2               	movwf	___ftpack@arg+2
  7658  173A  082E               	movf	___ftdiv@exp,w
  7659  173B  00A6               	movwf	??___ftdiv
  7660  173C  0826               	movf	??___ftdiv,w
  7661  173D  00F3               	movwf	___ftpack@exp
  7662  173E  082F               	movf	___ftdiv@sign,w
  7663  173F  00A7               	movwf	??___ftdiv+1
  7664  1740  0827               	movf	??___ftdiv+1,w
  7665  1741  00F4               	movwf	___ftpack@sign
  7666  1742  3188  2006         	fcall	___ftpack
  7667  1744  0870               	movf	?___ftpack,w
  7668  1745  0020               	movlb	0	; select bank0
  7669  1746  00A0               	movwf	?___ftdiv
  7670  1747  0871               	movf	?___ftpack+1,w
  7671  1748  00A1               	movwf	?___ftdiv+1
  7672  1749  0872               	movf	?___ftpack+2,w
  7673  174A  00A2               	movwf	?___ftdiv+2
  7674  174B  0008               	return
  7675  174C                     __end_of___ftdiv:	
  7676                           
  7677                           	psect	text24
  7678  0806                     __ptext24:	
  7679 ;; *************** function ___ftpack *****************
  7680 ;; Defined at:
  7681 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/float.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  arg             3    0[COMMON] unsigned um
  7684 ;;  exp             1    3[COMMON] unsigned char 
  7685 ;;  sign            1    4[COMMON] unsigned char 
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;		None
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  3    0[COMMON] float 
  7690 ;; Registers used:
  7691 ;;		wreg, status,2, status,0
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7697 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7699 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7700 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7701 ;;Total ram usage:        8 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; This function calls:
  7704 ;;		Nothing
  7705 ;; This function is called by:
  7706 ;;		___ftadd
  7707 ;;		___ftdiv
  7708 ;;		___ftmul
  7709 ;;		___lltoft
  7710 ;;		___lwtoft
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           
  7715                           ;psect for function ___ftpack
  7716  0806                     ___ftpack:	
  7717                           
  7718                           ;incstack = 0
  7719                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7720  0806  0873               	movf	___ftpack@exp,w
  7721  0807  1903               	btfsc	3,2
  7722  0808  280E               	goto	l1793
  7723  0809  0872               	movf	___ftpack@arg+2,w
  7724  080A  0471               	iorwf	___ftpack@arg+1,w
  7725  080B  0470               	iorwf	___ftpack@arg,w
  7726  080C  1D03               	skipz
  7727  080D  281F               	goto	l1799
  7728  080E                     l1793:	
  7729  080E  3000               	movlw	0
  7730  080F  00F0               	movwf	?___ftpack
  7731  0810  3000               	movlw	0
  7732  0811  00F1               	movwf	?___ftpack+1
  7733  0812  3000               	movlw	0
  7734  0813  00F2               	movwf	?___ftpack+2
  7735  0814  0008               	return
  7736  0815                     l1797:	
  7737  0815  3001               	movlw	1
  7738  0816  00F5               	movwf	??___ftpack
  7739  0817  0875               	movf	??___ftpack,w
  7740  0818  07F3               	addwf	___ftpack@exp,f
  7741  0819  3001               	movlw	1
  7742  081A                     u2105:	
  7743  081A  36F2               	lsrf	___ftpack@arg+2,f
  7744  081B  0CF1               	rrf	___ftpack@arg+1,f
  7745  081C  0CF0               	rrf	___ftpack@arg,f
  7746  081D  0B89               	decfsz	9,f
  7747  081E  281A               	goto	u2105
  7748  081F                     l1799:	
  7749  081F  30FE               	movlw	254
  7750  0820  0572               	andwf	___ftpack@arg+2,w
  7751  0821  1903               	btfsc	3,2
  7752  0822  2838               	goto	l542
  7753  0823  2815               	goto	l1797
  7754  0824                     l1801:	
  7755  0824  3001               	movlw	1
  7756  0825  00F5               	movwf	??___ftpack
  7757  0826  0875               	movf	??___ftpack,w
  7758  0827  07F3               	addwf	___ftpack@exp,f
  7759  0828  3001               	movlw	1
  7760  0829  07F0               	addwf	___ftpack@arg,f
  7761  082A  3000               	movlw	0
  7762  082B  1803               	skipnc
  7763  082C  3001               	movlw	1
  7764  082D  07F1               	addwf	___ftpack@arg+1,f
  7765  082E  3000               	movlw	0
  7766  082F  1803               	skipnc
  7767  0830  3001               	movlw	1
  7768  0831  07F2               	addwf	___ftpack@arg+2,f
  7769  0832  3001               	movlw	1
  7770  0833                     u2125:	
  7771  0833  36F2               	lsrf	___ftpack@arg+2,f
  7772  0834  0CF1               	rrf	___ftpack@arg+1,f
  7773  0835  0CF0               	rrf	___ftpack@arg,f
  7774  0836  0B89               	decfsz	9,f
  7775  0837  2833               	goto	u2125
  7776  0838                     l542:	
  7777  0838  30FF               	movlw	255
  7778  0839  0572               	andwf	___ftpack@arg+2,w
  7779  083A  1903               	btfsc	3,2
  7780  083B  2845               	goto	l1809
  7781  083C  2824               	goto	l1801
  7782  083D                     l1807:	
  7783  083D  3001               	movlw	1
  7784  083E  02F3               	subwf	___ftpack@exp,f
  7785  083F  3001               	movlw	1
  7786  0840                     u2145:	
  7787  0840  35F0               	lslf	___ftpack@arg,f
  7788  0841  0DF1               	rlf	___ftpack@arg+1,f
  7789  0842  0DF2               	rlf	___ftpack@arg+2,f
  7790  0843  0B89               	decfsz	9,f
  7791  0844  2840               	goto	u2145
  7792  0845                     l1809:	
  7793  0845  1BF1               	btfsc	___ftpack@arg+1,7
  7794  0846  284B               	goto	l549
  7795  0847  3002               	movlw	2
  7796  0848  0273               	subwf	___ftpack@exp,w
  7797  0849  1803               	skipnc
  7798  084A  283D               	goto	l1807
  7799  084B                     l549:	
  7800  084B  1873               	btfsc	___ftpack@exp,0
  7801  084C  2853               	goto	l550
  7802  084D  30FF               	movlw	255
  7803  084E  05F0               	andwf	___ftpack@arg,f
  7804  084F  307F               	movlw	127
  7805  0850  05F1               	andwf	___ftpack@arg+1,f
  7806  0851  30FF               	movlw	255
  7807  0852  05F2               	andwf	___ftpack@arg+2,f
  7808  0853                     l550:	
  7809  0853  1003               	clrc
  7810  0854  0CF3               	rrf	___ftpack@exp,f
  7811  0855  0873               	movf	___ftpack@exp,w
  7812  0856  00F5               	movwf	??___ftpack
  7813  0857  01F6               	clrf	??___ftpack+1
  7814  0858  01F7               	clrf	??___ftpack+2
  7815  0859  3010               	movlw	16
  7816  085A                     u2185:	
  7817  085A  35F5               	lslf	??___ftpack,f
  7818  085B  0DF6               	rlf	??___ftpack+1,f
  7819  085C  0DF7               	rlf	??___ftpack+2,f
  7820  085D  0B89               	decfsz	9,f
  7821  085E  285A               	goto	u2185
  7822  085F  0875               	movf	??___ftpack,w
  7823  0860  04F0               	iorwf	___ftpack@arg,f
  7824  0861  0876               	movf	??___ftpack+1,w
  7825  0862  04F1               	iorwf	___ftpack@arg+1,f
  7826  0863  0877               	movf	??___ftpack+2,w
  7827  0864  04F2               	iorwf	___ftpack@arg+2,f
  7828  0865  0874               	movf	___ftpack@sign,w
  7829  0866  1903               	btfsc	3,2
  7830  0867  0008               	return
  7831  0868  17F2               	bsf	___ftpack@arg+2,7
  7832  0869  0008               	return
  7833  086A                     __end_of___ftpack:	
  7834  007E                     btemp	set	126	;btemp
  7835  007E                     wtemp0	set	126


Data Sizes:
    Strings     159
    Constant    118
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     42      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_2(CODE[91]), STR_1(CODE[68]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 


Critical Paths under _main in COMMON

    _printf->___lldiv
    _printf->___lltoft
    _printf->___wmul
    _printf->__div_to_l_
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    ___ftadd->___wmul
    ___ftneg->___lwtoft
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftneg->___ftdiv

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   51557
                                             77 BANK0      2     2      0
                                             36 BANK1      6     6      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lwtoft
                          _pinConfig
                             _printf
                        _setup_comms
 ---------------------------------------------------------------------------------
 (1) _setup_comms                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              47    35     12   39993
                                             71 BANK0      6     6      0
                                              0 BANK1     36    24     12
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    9139
                                             48 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              14    11      3    8941
                                             48 BANK0     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2318
                                             12 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3768
                                             32 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1868
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     583
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             57 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3395
                                             32 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3222
                                             19 BANK0     13     7      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     204
                                             16 BANK0      3     0      3
                            ___ftdiv (ARG)
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     560
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (1) _pinConfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1874
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2450
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftadd
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftadd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftneg
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _pinConfig
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftsub
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _setup_comms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     2A      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      98      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      98      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 31 16:39:37 2023

            __CFG_CP$OFF 0000                       l96 0BFC                       l99 0C0F  
           ___awdiv@sign 0021      ___wmul@multiplicand 0026             ___ftadd@exp1 003F  
           ___ftadd@exp2 003E              __CFG_LVP$ON 0000             ___ftadd@sign 003D  
                    l110 0D8B                      l102 0C22                      l105 0D00  
                    l123 142D                      l107 0D11                      l206 02F8  
                    l183 0122                      l280 07F5                      l530 0A71  
                    l258 070E                      l364 1467                      l550 0853  
                    l542 0838                      l198 01C2                      l609 00E8  
                    l650 1689                      l549 084B                      l573 0909  
                    l599 006F                      _RA2 0062                      _RA5 0065  
                    _RC6 0076             __CFG_CPD$OFF 0000             ___awmod@sign 0076  
           __CFG_BORV$LO 0000                      wreg 0009             ___ftdiv@cntr 002A  
           ___ftdiv@sign 002F                     l2011 17B4                     l2023 17D0  
                   l2015 17BC                     l2111 1449                     l2121 0057  
                   l2027 17D8                     l2051 0B3D                     l2215 0A68  
                   l2207 0A4D                     l2143 00AA                     l2135 0090  
                   l2225 14CB                     l2305 1588                     l2217 0A74  
                   l2209 0A5B                     l2161 00DF                     l2153 00C4  
                   l2081 0EC4                     l2315 15B6                     l2307 1596  
                   l2331 1507                     l2163 00EB                     l2155 00D2  
                   l2059 0BB5                     l2075 0E65                     l2403 0176  
                   l2229 14E1                     l2253 149F                     l2173 097E  
                   l2093 0F84                     l2085 0EE1                     l2263 1635  
                   l2319 15C1                     l2335 151F                     l2503 0400  
                   l2431 01F9                     l2423 01C4                     l2415 0186  
                   l1801 0824                     l2281 1665                     l2329 14F9  
                   l2513 0460                     l2441 0238                     l2425 01E5  
                   l2417 01BD                     l2291 168C                     l2283 1673  
                   l2339 152A                     l2347 001A                     l2179 099B  
                   l2099 0FE3                     l2603 069D                     l2349 002A  
                   l2197 0A2E                     l2189 09E6                     l1901 1556  
                   l2621 0725                     l2613 06F2                     l2533 04A7  
                   l2517 0472                     l2509 0437                     l1807 083D  
                   l2295 169A                     l1823 1460                     l2551 0534  
                   l2527 0486                     l2471 032D                     l2391 0130  
                   l2383 011C                     l1809 0845                     l2289 1680  
                   l1913 1573                     l1905 1562                     l2641 077C  
                   l2633 0766                     l2609 06D4                     l2529 049E  
                   l2545 04C7                     l2465 02E1                     l2457 0294  
                   l1923 0892                     l1843 15D5                     l2635 0769  
                   l2627 073E                     l2563 056C                     l2547 052B  
                   l2483 0378                     l2395 013D                     l1933 08A8  
                   l1861 15F4                     l1909 156B                     l2653 079C  
                   l2661 07AD                     l2629 0741                     l2557 0551  
                   l2493 03AC                     l2581 065D                     l2389 0127  
                   l2717 0BEE                     l2671 16BA                     l1951 08D5  
                   l1927 0899                     l1871 160F                     l2647 078B  
                   l2591 0689                     l2575 064F                     l2479 0364  
                   l2663 00FA                     l1793 080E                     l1953 08DF  
                   l1945 08C2                     l1849 15E0                     l2649 078F  
                   l2497 03FA                     l2691 1711                     l1963 08FB  
                   l1955 08E4                     l1875 1617                     l1867 1606  
                   l1859 15E8                     l1891 1544                     l2579 0658  
                   l2747 0D03                     l1797 0815                     l2677 16D0  
                   l1973 092D                     l1965 0905                     l1957 08E8  
                   l2597 0697                     l1799 081F                     l1983 0948  
                   l1887 153D                     l1969 091B                     l1993 1763  
                   l2699 172A                     l1899 154A                     l1999 1779  
                   _ADGO 04E9                     STR_1 1882                     STR_2 1827  
                   _BRGH 0CF2                     u2105 081A                     u2125 0833  
                   u2215 1468                     u2145 0840                     u2305 15FF  
                   u2225 146D                     u3115 0A69                     u3035 09E7  
                   u2315 1607                     u3045 0A11                     u2405 1563  
                   u2185 085A                     u4025 16E2                     u3225 1666  
                   u4035 16F2                     u3315 1597                     u2275 15EB  
                   u4115 0CFA                     u4045 1712                     u2525 08C3  
                   u3325 15AB                     u3085 0A4E                     u4055 1721  
                   u2615 08FC                     u3255 1681                     u3335 15B7  
                   u3415 001F                     u2295 15F5                     u2375 154D  
                   u4207 0DB2                     u4065 172B                     u2555 08D6  
                   u3195 163C                     u2395 155C                     u2715 17BD  
                   u4147 0BF5             printf@tmpval 00B0                     u3365 14FC  
                   u2725 17C3                     u3605 0362                     u3525 024D  
                   u4157 0C08                     u3295 158B                     u4167 0C1B  
                   u2585 08E9                     u3385 1515                     u2905 0091  
                   u3705 04B3                     u4177 0CEC                     u3395 1520  
                   u2915 00A1                     u2755 17D9                     u3635 042B  
                   u4187 0D0A                     u2925 00AB                     u2765 17DF  
                   u2685 1785                     u3565 0304                     u4197 0D84  
                   u2695 1795                     u3735 053F                     u3575 0339  
                   u3905 0755                     u3825 06C8                     u3745 054D  
                   _RCIF 008D                     u2965 00C5                     u3845 06E8  
                   u3855 0706                     u3695 0492                     u2995 00E0  
                   u3895 0736                     _SPEN 0CEF                     _TSEN 08BD  
                   _TXEN 0CF5                     _TXIF 008C                     _SYNC 0CF4  
           __CFG_WRT$OFF 0000                     _Temp 00D7                     _Pval 00D9  
                   _main 0BE2             ___ftpack@arg 0070             ___ftpack@exp 0073  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0002            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000             ___ftmul@cntr 004E             ___ftmul@sign 004F  
           ___fttol@exp1 0066             ___fttol@lval 0062                    ?_main 0070  
        __end_of___awdiv 161C          __end_of___ftadd 0960            __CFG_WDTE$OFF 0000  
        __end_of___awmod 1578          __end_of___ftdiv 174C          __end_of___ftneg 143D  
        __end_of___lldiv 15CA          __end_of___ftmul 1800          ___awdiv@divisor 0077  
        __end_of___llmod 1533          __end_of___ftsub 14B5          __end_of___fttol 16A3  
        ___awdiv@counter 0020                    _RCREG 0199                    _RCSTA 019D  
                  _SPBRG 019B                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _TSRNG 08BC                    _FVval 00D5  
                  _TXREG 019A                    _TXSTA 019E                    _Ctemp 00D0  
           ___lltoft@exp 007D           __CFG_FCMEN$OFF 0000                    _Photo 00D3  
        __end_of_dpowers 18EE                    _scale 0DBC          __end_of_isdigit 144B  
          ___ftpack@sign 0074                    _putch 142C           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 07F6  
           __end_of_main 0DBC                   ??_main 006D            ___fttol@sign1 0061  
         __CFG_PLLEN$OFF 0000     __size_of__tdiv_to_l_ 00B6                   _ADCON0 009D  
                 _ADCON1 009E         ___llmod@dividend 0024                   ?_scale 0050  
                 _ADRESH 009C                   _ADRESL 009B         ___awdiv@dividend 0079  
                 _ANSELA 018C                   ?_putch 0070                   _ANSELB 018D  
                 _ANSELC 018E         __end_of___ftpack 086A         __end_of___lltoft 003E  
                 _INTCON 000B                   _FVRCON 0117         __end_of___lwtoft 145E  
                 _OSCCON 0099                   _TRISC4 0474                   _TRISC5 0475  
         __CFG_PWRTE$OFF 0000         __end_of__powers_ 1915                   ___ftge 14B5  
                 ___wmul 145E                ??___awdiv 007B                ??___ftadd 0039  
         __CFG_STVREN$ON 0000                ??___awmod 0074                ??___ftdiv 0026  
              ??___ftneg 007C                ??___lldiv 0078                ??___ftmul 0046  
              ??___llmod 0028                ??___ftsub 007E                ??___fttol 005D  
                 _fround 0A7D         ___awdiv@quotient 0022          ___awmod@divisor 0070  
        ___awmod@counter 0075                   _printf 00F4    ___ftmul@f3_as_product 004B  
              ??_isdigit 0070             ?_setup_comms 0070  __end_of__initialization 07FD  
             ___ftadd@f1 0033               ___ftadd@f2 0036               ___ftge@ff1 0070  
             ___ftge@ff2 0073               ___ftdiv@f1 0023               ___ftdiv@f2 0020  
             ___ftdiv@f3 002B               ___ftneg@f1 0030               ___ftmul@f1 0040  
             ___ftmul@f2 0043               ___ftsub@f1 0043               ___ftsub@f2 0040  
             ___fttol@f1 0059           __pcstackCOMMON 0070               ___lltoft@c 0078  
          __end_of_scale 1000            __end_of_putch 1434               ___lwtoft@c 0078  
             __div_to_l_ 0960          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 0053          __div_to_l_@quot 0020                  ??_putch 0070  
             __pbssBANK1 00CA            __div_to_l_@f1 0070            __div_to_l_@f2 0073  
     __size_of_pinConfig 001D               __pmaintext 0BE2                  ?___ftge 0070  
                ?___wmul 0024                  ?_fround 0050                ?___ftpack 0070  
                ?_printf 00A0                ?___lltoft 0078                ?___lwtoft 0078  
                _RXDTSEL 08EF                  _TXCKSEL 08EA        __end_of__npowers_ 1827  
        __size_of___ftge 003B                  ___awdiv 15CA                  ___ftadd 086A  
                ___awmod 1533                  _Voltage 00CA                  ___ftdiv 16A3  
                ___ftneg 1434                  ___lldiv 1578          __size_of___wmul 001C  
                ___ftmul 174C                  ___llmod 14F0                  ___ftsub 1497  
                ___fttol 161C               _fround$564 005A               _fround$565 0057  
            _Temperature 00CD               ??___ftpack 0075          __size_of_fround 0165  
             ??___lltoft 007C                  __ptext1 0005                  __ptext2 00F4  
                __ptext3 0DBC                  __ptext4 142C                  __ptext5 143D  
                __ptext6 0A7D                  __ptext7 145E                  __ptext8 174C  
                __ptext9 1533          __size_of_printf 0702               ??___lwtoft 007B  
            ?__div_to_l_ 0070                  _dpowers 18C6                  _isdigit 143D  
       ___awmod@dividend 0072        __end_of_pinConfig 1497                  clrloop0 0801  
   end_of_initialization 07FD     __size_of_setup_comms 0011          ___lldiv@divisor 0070  
        ___lldiv@counter 007D                  printf@c 00C3                  printf@f 00A0  
         __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0073               _printf$567 00AC  
          ??__tdiv_to_l_ 0076         __CFG_FOSC$INTOSC 0000              ___ftdiv@exp 002E  
            printf@width 00BC      __size_of__div_to_l_ 011D              ___ftmul@exp 004A  
         __end_of___ftge 14F0           __end_of___wmul 147A           __end_of_fround 0BE2  
         __end_of_printf 07F6      start_initialization 07F6      __end_of__tdiv_to_l_ 00F4  
        ___llmod@divisor 0020          ___llmod@counter 0029                 ??___ftge 0076  
               ??___wmul 007C                 ??_fround 0053                 ??_printf 0067  
             fround@prec 005D        __size_of___ftpack 0064        __size_of___lltoft 0028  
              ___latbits 0002        __size_of___lwtoft 0013            __pcstackBANK0 0020  
          __pcstackBANK1 00A0                 ?___awdiv 0077                 ?___ftadd 0033  
               ?___awmod 0070                 ?___ftdiv 0020                 ?___ftneg 0030  
               ?___lldiv 0070                 ?___ftmul 0040                 ?___llmod 0020  
               ?___ftsub 0040                __npowers_ 1800                 ?___fttol 0059  
            __tdiv_to_l_ 003E             ??__div_to_l_ 0076                 ?_isdigit 0070  
              _scale$566 0055           __size_of_scale 0244                _pinConfig 147A  
         __size_of_putch 0008           ___wmul@product 007C                clear_ram0 0800  
     __end_of__div_to_l_ 0A7D        ___wmul@multiplier 0024               printf@flag 00BA  
             printf@fval 00BE               printf@prec 00C1               ?_pinConfig 0070  
          ??_setup_comms 0070         __size_of___awdiv 0052         __size_of___ftadd 00F6  
       __size_of___awmod 0045         __size_of___ftdiv 00A9         __size_of___ftneg 0009  
       __size_of___lldiv 0052         __size_of___ftmul 00B4         __size_of___llmod 0043  
       __size_of___ftsub 001E         __size_of___fttol 0087                 ___ftpack 0806  
               ___lltoft 0016              _isdigit$348 0070                 ___lwtoft 144B  
       __size_of_isdigit 000E                 _main$562 00C4                 _main$563 00C7  
               __ptext10 15CA                 __ptext11 003E                 __ptext20 14B5  
               __ptext12 0960                 __ptext21 147A                 __ptext13 0016  
               __ptext22 144B                 __ptext14 14F0                 __ptext23 16A3  
               __ptext15 1578                 __ptext24 0806                 __ptext16 161C  
               __ptext17 1497                 __ptext18 086A                 __ptext19 1434  
               __powers_ 18EE            __size_of_main 01DA      __end_of_setup_comms 0016  
              printf@exp 00B8                printf@val 00B4                putch@byte 0070  
               isdigit@c 0071                 scale@scl 0058              ??_pinConfig 0070  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024         __tdiv_to_l_@quot 0020  
       ___lldiv@dividend 0074        __CFG_CLKOUTEN$OFF 0000                 printf@ap 00AF  
           ?__tdiv_to_l_ 0070            __pstringtext1 18C6            __pstringtext2 18EE  
          __pstringtext3 1800            __pstringtext4 1882            __pstringtext5 0000  
       ___lldiv@quotient 0079              _setup_comms 0005  
