

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 10 09:40:05 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 1.45
    27                           ; Generated 16/11/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1829 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0113                     	;# 
   114  0114                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0117                     	;# 
   118  0118                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011B                     	;# 
   122  011D                     	;# 
   123  011E                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  018E                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019C                     	;# 
   141  019D                     	;# 
   142  019E                     	;# 
   143  019F                     	;# 
   144  020C                     	;# 
   145  020D                     	;# 
   146  020E                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  0219                     	;# 
   163  021A                     	;# 
   164  021B                     	;# 
   165  021C                     	;# 
   166  021D                     	;# 
   167  021E                     	;# 
   168  021F                     	;# 
   169  0291                     	;# 
   170  0291                     	;# 
   171  0292                     	;# 
   172  0293                     	;# 
   173  0294                     	;# 
   174  0295                     	;# 
   175  0295                     	;# 
   176  0296                     	;# 
   177  0298                     	;# 
   178  0298                     	;# 
   179  0299                     	;# 
   180  029A                     	;# 
   181  029B                     	;# 
   182  029C                     	;# 
   183  029D                     	;# 
   184  029E                     	;# 
   185  0311                     	;# 
   186  0311                     	;# 
   187  0312                     	;# 
   188  0313                     	;# 
   189  0318                     	;# 
   190  0318                     	;# 
   191  0319                     	;# 
   192  031A                     	;# 
   193  038C                     	;# 
   194  038D                     	;# 
   195  038E                     	;# 
   196  0391                     	;# 
   197  0392                     	;# 
   198  0393                     	;# 
   199  0394                     	;# 
   200  0395                     	;# 
   201  0396                     	;# 
   202  039A                     	;# 
   203  039C                     	;# 
   204  039D                     	;# 
   205  039E                     	;# 
   206  039F                     	;# 
   207  0415                     	;# 
   208  0416                     	;# 
   209  0417                     	;# 
   210  041C                     	;# 
   211  041D                     	;# 
   212  041E                     	;# 
   213  0FE4                     	;# 
   214  0FE5                     	;# 
   215  0FE6                     	;# 
   216  0FE7                     	;# 
   217  0FE8                     	;# 
   218  0FE9                     	;# 
   219  0FEA                     	;# 
   220  0FEB                     	;# 
   221  0FED                     	;# 
   222  0FEE                     	;# 
   223  0FEF                     	;# 
   224                           
   225                           	psect	stringtext1
   226  0800                     __pstringtext1:	
   227  0800                     _dpowers:	
   228  0800  3401               	retlw	1
   229  0801  3400               	retlw	0
   230  0802  340A               	retlw	10
   231  0803  3400               	retlw	0
   232  0804  3464               	retlw	100
   233  0805  3400               	retlw	0
   234  0806  34E8               	retlw	232
   235  0807  3403               	retlw	3
   236  0808  3410               	retlw	16
   237  0809  3427               	retlw	39
   238  080A                     __end_of_dpowers:	
   239  000B                     _INTCON	set	11
   240  0065                     _RA5	set	101
   241  008D                     _RCIF	set	141
   242  008C                     _TXIF	set	140
   243  008D                     _TRISB	set	141
   244  008E                     _TRISC	set	142
   245  008C                     _TRISA	set	140
   246  0099                     _OSCCON	set	153
   247  009B                     _ADRESL	set	155
   248  009C                     _ADRESH	set	156
   249  009D                     _ADCON0	set	157
   250  009E                     _ADCON1	set	158
   251  0474                     _TRISC4	set	1140
   252  0475                     _TRISC5	set	1141
   253  04E9                     _ADGO	set	1257
   254  0117                     _FVRCON	set	279
   255  08BC                     _TSRNG	set	2236
   256  08BD                     _TSEN	set	2237
   257  08EF                     _RXDTSEL	set	2287
   258  08EA                     _TXCKSEL	set	2282
   259  019B                     _SPBRG	set	411
   260  018D                     _ANSELB	set	397
   261  018E                     _ANSELC	set	398
   262  018C                     _ANSELA	set	396
   263  0199                     _RCREG	set	409
   264  019A                     _TXREG	set	410
   265  019E                     _TXSTA	set	414
   266  019D                     _RCSTA	set	413
   267  0CF2                     _BRGH	set	3314
   268  0CEF                     _SPEN	set	3311
   269  0CF4                     _SYNC	set	3316
   270  0CF5                     _TXEN	set	3317
   271  080A                     STR_1:	
   272  080A  3452               	retlw	82	;'R'
   273  080B  3461               	retlw	97	;'a'
   274  080C  3477               	retlw	119	;'w'
   275  080D  3420               	retlw	32	;' '
   276  080E  3454               	retlw	84	;'T'
   277  080F  3465               	retlw	101	;'e'
   278  0810  346D               	retlw	109	;'m'
   279  0811  3470               	retlw	112	;'p'
   280  0812  3420               	retlw	32	;' '
   281  0813  3476               	retlw	118	;'v'
   282  0814  3461               	retlw	97	;'a'
   283  0815  346C               	retlw	108	;'l'
   284  0816  3475               	retlw	117	;'u'
   285  0817  3465               	retlw	101	;'e'
   286  0818  3420               	retlw	32	;' '
   287  0819  3469               	retlw	105	;'i'
   288  081A  3473               	retlw	115	;'s'
   289  081B  3420               	retlw	32	;' '
   290  081C  3425               	retlw	37	;'%'
   291  081D  3464               	retlw	100	;'d'
   292  081E  3420               	retlw	32	;' '
   293  081F  3452               	retlw	82	;'R'
   294  0820  3441               	retlw	65	;'A'
   295  0821  3457               	retlw	87	;'W'
   296  0822  3420               	retlw	32	;' '
   297  0823  347C               	retlw	124	;'|'
   298  0824  3420               	retlw	32	;' '
   299  0825  3450               	retlw	80	;'P'
   300  0826  346F               	retlw	111	;'o'
   301  0827  3474               	retlw	116	;'t'
   302  0828  3420               	retlw	32	;' '
   303  0829  3476               	retlw	118	;'v'
   304  082A  3461               	retlw	97	;'a'
   305  082B  346C               	retlw	108	;'l'
   306  082C  3475               	retlw	117	;'u'
   307  082D  3465               	retlw	101	;'e'
   308  082E  3420               	retlw	32	;' '
   309  082F  3469               	retlw	105	;'i'
   310  0830  3473               	retlw	115	;'s'
   311  0831  3420               	retlw	32	;' '
   312  0832  3425               	retlw	37	;'%'
   313  0833  3464               	retlw	100	;'d'
   314  0834  3420               	retlw	32	;' '
   315  0835  347C               	retlw	124	;'|'
   316  0836  3420               	retlw	32	;' '
   317  0837  3446               	retlw	70	;'F'
   318  0838  3469               	retlw	105	;'i'
   319  0839  3478               	retlw	120	;'x'
   320  083A  3465               	retlw	101	;'e'
   321  083B  3464               	retlw	100	;'d'
   322  083C  3420               	retlw	32	;' '
   323  083D  3456               	retlw	86	;'V'
   324  083E  346F               	retlw	111	;'o'
   325  083F  346C               	retlw	108	;'l'
   326  0840  3474               	retlw	116	;'t'
   327  0841  3461               	retlw	97	;'a'
   328  0842  3467               	retlw	103	;'g'
   329  0843  3465               	retlw	101	;'e'
   330  0844  3420               	retlw	32	;' '
   331  0845  3469               	retlw	105	;'i'
   332  0846  3473               	retlw	115	;'s'
   333  0847  3420               	retlw	32	;' '
   334  0848  3425               	retlw	37	;'%'
   335  0849  3464               	retlw	100	;'d'
   336  084A  3420               	retlw	32	;' '
   337  084B  340A               	retlw	10
   338  084C  340D               	retlw	13
   339  084D  3400               	retlw	0
   340                           
   341                           	psect	stringtext2
   342  0000                     __pstringtext2:	
   343                           
   344                           ; #config settings
   345  0000                     
   346                           	psect	cinit
   347  07F3                     start_initialization:	
   348  07F3                     __initialization:	
   349                           
   350                           ; Clear objects allocated to BANK0
   351  07F3  0020               	movlb	0	; select bank0
   352  07F4  01D8               	clrf	__pbssBANK0& (0+127)
   353  07F5  01D9               	clrf	(__pbssBANK0+1)& (0+127)
   354  07F6  01DA               	clrf	(__pbssBANK0+2)& (0+127)
   355  07F7  01DB               	clrf	(__pbssBANK0+3)& (0+127)
   356  07F8  01DC               	clrf	(__pbssBANK0+4)& (0+127)
   357  07F9  01DD               	clrf	(__pbssBANK0+5)& (0+127)
   358  07FA  01DE               	clrf	(__pbssBANK0+6)& (0+127)
   359  07FB  01DF               	clrf	(__pbssBANK0+7)& (0+127)
   360  07FC  01E0               	clrf	(__pbssBANK0+8)& (0+127)
   361  07FD                     end_of_initialization:	
   362                           ;End of C runtime variable initialization code
   363                           
   364  07FD                     __end_of__initialization:	
   365  07FD  0020               	movlb	0
   366  07FE  3186  2EF0         	ljmp	_main	;jump to C main() function
   367                           
   368                           	psect	bssBANK0
   369  0058                     __pbssBANK0:	
   370  0058                     _Ctemp:	
   371  0058                     	ds	3
   372  005B                     _FVval:	
   373  005B                     	ds	2
   374  005D                     _Temp:	
   375  005D                     	ds	2
   376  005F                     _Pval:	
   377  005F                     	ds	2
   378                           
   379                           	psect	cstackCOMMON
   380  0070                     __pcstackCOMMON:	
   381  0070                     ?_pinConfig:	
   382  0070                     ??_pinConfig:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_setup_comms:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ??_setup_comms:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_RA5Blink:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ??_RA5Blink:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_main:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_putch:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ??_putch:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?___lwdiv:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?___ftpack:	
   410                           ; 2 bytes @ 0x0
   411                           
   412  0070                     putch@byte:	
   413                           ; 3 bytes @ 0x0
   414                           
   415  0070                     ___lwdiv@divisor:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ___ftpack@arg:	
   419                           ; 2 bytes @ 0x0
   420                           
   421                           
   422                           ; 3 bytes @ 0x0
   423  0070                     	ds	2
   424  0072                     ___lwdiv@dividend:	
   425                           
   426                           ; 2 bytes @ 0x2
   427  0072                     	ds	1
   428  0073                     ___ftpack@exp:	
   429                           
   430                           ; 1 bytes @ 0x3
   431  0073                     	ds	1
   432  0074                     ??___lwdiv:	
   433  0074                     ___ftpack@sign:	
   434                           ; 1 bytes @ 0x4
   435                           
   436                           
   437                           ; 1 bytes @ 0x4
   438  0074                     	ds	1
   439  0075                     ??___ftpack:	
   440  0075                     ___lwdiv@quotient:	
   441                           ; 1 bytes @ 0x5
   442                           
   443                           
   444                           ; 2 bytes @ 0x5
   445  0075                     	ds	2
   446  0077                     ___lwdiv@counter:	
   447                           
   448                           ; 1 bytes @ 0x7
   449  0077                     	ds	1
   450  0078                     ?___lwmod:	
   451  0078                     ?___lwtoft:	
   452                           ; 2 bytes @ 0x8
   453                           
   454  0078                     ___lwmod@divisor:	
   455                           ; 3 bytes @ 0x8
   456                           
   457  0078                     ___lwtoft@c:	
   458                           ; 2 bytes @ 0x8
   459                           
   460                           
   461                           ; 2 bytes @ 0x8
   462  0078                     	ds	2
   463  007A                     ___lwmod@dividend:	
   464                           
   465                           ; 2 bytes @ 0xA
   466  007A                     	ds	1
   467  007B                     ??___lwtoft:	
   468                           
   469                           ; 1 bytes @ 0xB
   470  007B                     	ds	1
   471  007C                     ??___ftneg:	
   472  007C                     ??___lwmod:	
   473                           ; 1 bytes @ 0xC
   474                           
   475                           
   476                           ; 1 bytes @ 0xC
   477  007C                     	ds	1
   478  007D                     ___lwmod@counter:	
   479                           
   480                           ; 1 bytes @ 0xD
   481  007D                     	ds	1
   482                           
   483                           	psect	cstackBANK0
   484  0020                     __pcstackBANK0:	
   485  0020                     ?_printf:	
   486  0020                     ?___ftdiv:	
   487                           ; 2 bytes @ 0x0
   488                           
   489  0020                     printf@f:	
   490                           ; 3 bytes @ 0x0
   491                           
   492  0020                     ___ftdiv@f2:	
   493                           ; 2 bytes @ 0x0
   494                           
   495                           
   496                           ; 3 bytes @ 0x0
   497  0020                     	ds	3
   498  0023                     ___ftdiv@f1:	
   499                           
   500                           ; 3 bytes @ 0x3
   501  0023                     	ds	3
   502  0026                     ??___ftdiv:	
   503                           
   504                           ; 1 bytes @ 0x6
   505  0026                     	ds	2
   506  0028                     ??_printf:	
   507                           
   508                           ; 1 bytes @ 0x8
   509  0028                     	ds	2
   510  002A                     ___ftdiv@cntr:	
   511                           
   512                           ; 1 bytes @ 0xA
   513  002A                     	ds	1
   514  002B                     ___ftdiv@f3:	
   515                           
   516                           ; 3 bytes @ 0xB
   517  002B                     	ds	1
   518  002C                     printf@ap:	
   519                           
   520                           ; 1 bytes @ 0xC
   521  002C                     	ds	1
   522  002D                     printf@flag:	
   523                           
   524                           ; 1 bytes @ 0xD
   525  002D                     	ds	1
   526  002E                     printf@prec:	
   527  002E                     ___ftdiv@exp:	
   528                           ; 1 bytes @ 0xE
   529                           
   530                           
   531                           ; 1 bytes @ 0xE
   532  002E                     	ds	1
   533  002F                     ___ftdiv@sign:	
   534  002F                     printf@val:	
   535                           ; 1 bytes @ 0xF
   536                           
   537                           
   538                           ; 2 bytes @ 0xF
   539  002F                     	ds	1
   540  0030                     ?___ftneg:	
   541  0030                     ___ftneg@f1:	
   542                           ; 3 bytes @ 0x10
   543                           
   544                           
   545                           ; 3 bytes @ 0x10
   546  0030                     	ds	1
   547  0031                     printf@c:	
   548                           
   549                           ; 1 bytes @ 0x11
   550  0031                     	ds	2
   551  0033                     ?___ftadd:	
   552  0033                     ___ftadd@f1:	
   553                           ; 3 bytes @ 0x13
   554                           
   555                           
   556                           ; 3 bytes @ 0x13
   557  0033                     	ds	3
   558  0036                     ___ftadd@f2:	
   559                           
   560                           ; 3 bytes @ 0x16
   561  0036                     	ds	3
   562  0039                     ??___ftadd:	
   563                           
   564                           ; 1 bytes @ 0x19
   565  0039                     	ds	4
   566  003D                     ___ftadd@sign:	
   567                           
   568                           ; 1 bytes @ 0x1D
   569  003D                     	ds	1
   570  003E                     ___ftadd@exp2:	
   571                           
   572                           ; 1 bytes @ 0x1E
   573  003E                     	ds	1
   574  003F                     ___ftadd@exp1:	
   575                           
   576                           ; 1 bytes @ 0x1F
   577  003F                     	ds	1
   578  0040                     ?___ftmul:	
   579  0040                     ___ftmul@f1:	
   580                           ; 3 bytes @ 0x20
   581                           
   582                           
   583                           ; 3 bytes @ 0x20
   584  0040                     	ds	3
   585  0043                     ___ftmul@f2:	
   586                           
   587                           ; 3 bytes @ 0x23
   588  0043                     	ds	3
   589  0046                     ??___ftmul:	
   590                           
   591                           ; 1 bytes @ 0x26
   592  0046                     	ds	4
   593  004A                     ___ftmul@exp:	
   594                           
   595                           ; 1 bytes @ 0x2A
   596  004A                     	ds	1
   597  004B                     ___ftmul@f3_as_product:	
   598                           
   599                           ; 3 bytes @ 0x2B
   600  004B                     	ds	3
   601  004E                     ___ftmul@cntr:	
   602                           
   603                           ; 1 bytes @ 0x2E
   604  004E                     	ds	1
   605  004F                     ___ftmul@sign:	
   606                           
   607                           ; 1 bytes @ 0x2F
   608  004F                     	ds	1
   609  0050                     ??_main:	
   610                           
   611                           ; 1 bytes @ 0x30
   612  0050                     	ds	2
   613  0052                     _main$507:	
   614                           
   615                           ; 3 bytes @ 0x32
   616  0052                     	ds	3
   617  0055                     _main$508:	
   618                           
   619                           ; 3 bytes @ 0x35
   620  0055                     	ds	3
   621                           
   622                           	psect	maintext
   623  06F0                     __pmaintext:	
   624 ;;
   625 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   626 ;;
   627 ;; *************** function _main *****************
   628 ;; Defined at:
   629 ;;		line 48 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : B1F/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   644 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   645 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   646 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
   647 ;;Total ram usage:        8 bytes
   648 ;; Hardware stack levels required when called:    2
   649 ;; This function calls:
   650 ;;		_RA5Blink
   651 ;;		___ftadd
   652 ;;		___ftdiv
   653 ;;		___ftmul
   654 ;;		___ftneg
   655 ;;		___lwtoft
   656 ;;		_pinConfig
   657 ;;		_printf
   658 ;;		_setup_comms
   659 ;; This function is called by:
   660 ;;		Startup code after reset
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           
   665                           ;psect for function _main
   666  06F0                     _main:	
   667                           
   668                           ;main.c: 50: pinConfig();
   669                           
   670                           ;incstack = 0
   671                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   672  06F0  3183  2305  3186   	fcall	_pinConfig
   673                           
   674                           ;main.c: 52: setup_comms();
   675  06F3  3182  22E1  3186   	fcall	_setup_comms
   676                           
   677                           ;main.c: 54: FVRCON = 0xA2;
   678  06F6  30A2               	movlw	162
   679  06F7  0022               	movlb	2	; select bank2
   680  06F8  0097               	movwf	23	;volatile
   681                           
   682                           ;main.c: 58: ADCON1 = 0xC0;
   683  06F9  30C0               	movlw	192
   684  06FA  0021               	movlb	1	; select bank1
   685  06FB  009E               	movwf	30	;volatile
   686  06FC                     l1327:	
   687                           ;main.c: 60: while (1) {
   688                           
   689                           
   690                           ;main.c: 63: ADCON0 = 0x2D;
   691  06FC  302D               	movlw	45
   692  06FD  0021               	movlb	1	; select bank1
   693  06FE  009D               	movwf	29	;volatile
   694                           
   695                           ;main.c: 64: _delay((unsigned long)((10)*(4000000.0/4000.0)));
   696  06FF  300D               	movlw	13
   697  0700  0020               	movlb	0	; select bank0
   698  0701  00D0               	movwf	??_main
   699  0702  30FB               	movlw	251
   700  0703                     u1647:	
   701  0703  0B89               	decfsz	9,f
   702  0704  2F03               	goto	u1647
   703  0705  0BD0               	decfsz	??_main,f
   704  0706  2F03               	goto	u1647
   705  0707  3200               	nop2
   706                           
   707                           ;main.c: 65: ADGO = 1;
   708  0708  0021               	movlb	1	; select bank1
   709  0709  149D               	bsf	29,1	;volatile
   710  070A                     l88:	
   711                           ;main.c: 66: while(ADGO)continue;
   712                           
   713  070A  189D               	btfsc	29,1	;volatile
   714  070B  2F0A               	goto	l88
   715                           
   716                           ;main.c: 67: Pval = (unsigned)((ADRESH<<8)+(ADRESL));
   717  070C  081C               	movf	28,w	;volatile
   718  070D  0020               	movlb	0	; select bank0
   719  070E  00E0               	movwf	_Pval+1
   720  070F  0021               	movlb	1	; select bank1
   721  0710  081B               	movf	27,w	;volatile
   722  0711  0020               	movlb	0	; select bank0
   723  0712  00DF               	movwf	_Pval
   724                           
   725                           ;main.c: 70: ADCON0 = 0x7D;
   726  0713  307D               	movlw	125
   727  0714  0021               	movlb	1	; select bank1
   728  0715  009D               	movwf	29	;volatile
   729                           
   730                           ;main.c: 71: _delay((unsigned long)((10)*(4000000.0/4000.0)));
   731  0716  300D               	movlw	13
   732  0717  0020               	movlb	0	; select bank0
   733  0718  00D0               	movwf	??_main
   734  0719  30FB               	movlw	251
   735  071A                     u1657:	
   736  071A  0B89               	decfsz	9,f
   737  071B  2F1A               	goto	u1657
   738  071C  0BD0               	decfsz	??_main,f
   739  071D  2F1A               	goto	u1657
   740  071E  3200               	nop2
   741                           
   742                           ;main.c: 72: ADGO = 1;
   743  071F  0021               	movlb	1	; select bank1
   744  0720  149D               	bsf	29,1	;volatile
   745  0721                     l91:	
   746                           ;main.c: 73: while(ADGO)continue;
   747                           
   748  0721  189D               	btfsc	29,1	;volatile
   749  0722  2F21               	goto	l91
   750                           
   751                           ;main.c: 74: FVval = ((ADRESH<<8)+(ADRESL));
   752  0723  081C               	movf	28,w	;volatile
   753  0724  0020               	movlb	0	; select bank0
   754  0725  00DC               	movwf	_FVval+1
   755  0726  0021               	movlb	1	; select bank1
   756  0727  081B               	movf	27,w	;volatile
   757  0728  0020               	movlb	0	; select bank0
   758  0729  00DB               	movwf	_FVval
   759                           
   760                           ;main.c: 77: ADCON0 = 0x75;
   761  072A  3075               	movlw	117
   762  072B  0021               	movlb	1	; select bank1
   763  072C  009D               	movwf	29	;volatile
   764                           
   765                           ;main.c: 78: _delay((unsigned long)((10)*(4000000.0/4000.0)));
   766  072D  300D               	movlw	13
   767  072E  0020               	movlb	0	; select bank0
   768  072F  00D0               	movwf	??_main
   769  0730  30FB               	movlw	251
   770  0731                     u1667:	
   771  0731  0B89               	decfsz	9,f
   772  0732  2F31               	goto	u1667
   773  0733  0BD0               	decfsz	??_main,f
   774  0734  2F31               	goto	u1667
   775  0735  3200               	nop2
   776                           
   777                           ;main.c: 79: ADGO = 1;
   778  0736  0021               	movlb	1	; select bank1
   779  0737  149D               	bsf	29,1	;volatile
   780  0738                     l94:	
   781                           ;main.c: 80: while(ADGO)continue;
   782                           
   783  0738  189D               	btfsc	29,1	;volatile
   784  0739  2F38               	goto	l94
   785                           
   786                           ;main.c: 81: Temp = ((ADRESH<<8)+(ADRESL));
   787  073A  081C               	movf	28,w	;volatile
   788  073B  0020               	movlb	0	; select bank0
   789  073C  00DE               	movwf	_Temp+1
   790  073D  0021               	movlb	1	; select bank1
   791  073E  081B               	movf	27,w	;volatile
   792  073F  0020               	movlb	0	; select bank0
   793  0740  00DD               	movwf	_Temp
   794                           
   795                           ;main.c: 85: Ctemp = ((0.659-((1.48)*(1-((float)Temp/1023))))/0.00132)-40;
   796  0741  085E               	movf	_Temp+1,w
   797  0742  00F9               	movwf	___lwtoft@c+1
   798  0743  085D               	movf	_Temp,w
   799  0744  00F8               	movwf	___lwtoft@c
   800  0745  3182  22F2  3186   	fcall	___lwtoft
   801  0748  0878               	movf	?___lwtoft,w
   802  0749  0020               	movlb	0	; select bank0
   803  074A  00A3               	movwf	___ftdiv@f1
   804  074B  0879               	movf	?___lwtoft+1,w
   805  074C  00A4               	movwf	___ftdiv@f1+1
   806  074D  087A               	movf	?___lwtoft+2,w
   807  074E  00A5               	movwf	___ftdiv@f1+2
   808  074F  30C0               	movlw	192
   809  0750  00A0               	movwf	___ftdiv@f2
   810  0751  307F               	movlw	127
   811  0752  00A1               	movwf	___ftdiv@f2+1
   812  0753  3044               	movlw	68
   813  0754  00A2               	movwf	___ftdiv@f2+2
   814  0755  3183  23E6  3186   	fcall	___ftdiv
   815  0758  0020               	movlb	0	; select bank0
   816  0759  0820               	movf	?___ftdiv,w
   817  075A  00B0               	movwf	___ftneg@f1
   818  075B  0821               	movf	?___ftdiv+1,w
   819  075C  00B1               	movwf	___ftneg@f1+1
   820  075D  0822               	movf	?___ftdiv+2,w
   821  075E  00B2               	movwf	___ftneg@f1+2
   822  075F  3182  22C8  3186   	fcall	___ftneg
   823  0762  0020               	movlb	0	; select bank0
   824  0763  0830               	movf	?___ftneg,w
   825  0764  00B6               	movwf	___ftadd@f2
   826  0765  0831               	movf	?___ftneg+1,w
   827  0766  00B7               	movwf	___ftadd@f2+1
   828  0767  0832               	movf	?___ftneg+2,w
   829  0768  00B8               	movwf	___ftadd@f2+2
   830  0769  3000               	movlw	0
   831  076A  00B3               	movwf	___ftadd@f1
   832  076B  3080               	movlw	128
   833  076C  00B4               	movwf	___ftadd@f1+1
   834  076D  303F               	movlw	63
   835  076E  00B5               	movwf	___ftadd@f1+2
   836  076F  3185  25FA  3186   	fcall	___ftadd
   837  0772  0020               	movlb	0	; select bank0
   838  0773  0833               	movf	?___ftadd,w
   839  0774  00C3               	movwf	___ftmul@f2
   840  0775  0834               	movf	?___ftadd+1,w
   841  0776  00C4               	movwf	___ftmul@f2+1
   842  0777  0835               	movf	?___ftadd+2,w
   843  0778  00C5               	movwf	___ftmul@f2+2
   844  0779  3071               	movlw	113
   845  077A  00C0               	movwf	___ftmul@f1
   846  077B  30BD               	movlw	189
   847  077C  00C1               	movwf	___ftmul@f1+1
   848  077D  303F               	movlw	63
   849  077E  00C2               	movwf	___ftmul@f1+2
   850  077F  3184  248F  3186   	fcall	___ftmul
   851  0782  0020               	movlb	0	; select bank0
   852  0783  0840               	movf	?___ftmul,w
   853  0784  00D2               	movwf	_main$507
   854  0785  0841               	movf	?___ftmul+1,w
   855  0786  00D3               	movwf	_main$507+1
   856  0787  0842               	movf	?___ftmul+2,w
   857  0788  00D4               	movwf	_main$507+2
   858                           
   859                           ;main.c: 85: Ctemp = ((0.659-((1.48)*(1-((float)Temp/1023))))/0.00132)-40;
   860  0789  3004               	movlw	4
   861  078A  00A0               	movwf	___ftdiv@f2
   862  078B  30AD               	movlw	173
   863  078C  00A1               	movwf	___ftdiv@f2+1
   864  078D  303A               	movlw	58
   865  078E  00A2               	movwf	___ftdiv@f2+2
   866  078F  30B4               	movlw	180
   867  0790  00B3               	movwf	___ftadd@f1
   868  0791  3028               	movlw	40
   869  0792  00B4               	movwf	___ftadd@f1+1
   870  0793  303F               	movlw	63
   871  0794  00B5               	movwf	___ftadd@f1+2
   872  0795  0852               	movf	_main$507,w
   873  0796  00B0               	movwf	___ftneg@f1
   874  0797  0853               	movf	_main$507+1,w
   875  0798  00B1               	movwf	___ftneg@f1+1
   876  0799  0854               	movf	_main$507+2,w
   877  079A  00B2               	movwf	___ftneg@f1+2
   878  079B  3182  22C8  3186   	fcall	___ftneg
   879  079E  0020               	movlb	0	; select bank0
   880  079F  0830               	movf	?___ftneg,w
   881  07A0  00B6               	movwf	___ftadd@f2
   882  07A1  0831               	movf	?___ftneg+1,w
   883  07A2  00B7               	movwf	___ftadd@f2+1
   884  07A3  0832               	movf	?___ftneg+2,w
   885  07A4  00B8               	movwf	___ftadd@f2+2
   886  07A5  3185  25FA  3186   	fcall	___ftadd
   887  07A8  0020               	movlb	0	; select bank0
   888  07A9  0833               	movf	?___ftadd,w
   889  07AA  00A3               	movwf	___ftdiv@f1
   890  07AB  0834               	movf	?___ftadd+1,w
   891  07AC  00A4               	movwf	___ftdiv@f1+1
   892  07AD  0835               	movf	?___ftadd+2,w
   893  07AE  00A5               	movwf	___ftdiv@f1+2
   894  07AF  3183  23E6  3186   	fcall	___ftdiv
   895  07B2  0020               	movlb	0	; select bank0
   896  07B3  0820               	movf	?___ftdiv,w
   897  07B4  00D5               	movwf	_main$508
   898  07B5  0821               	movf	?___ftdiv+1,w
   899  07B6  00D6               	movwf	_main$508+1
   900  07B7  0822               	movf	?___ftdiv+2,w
   901  07B8  00D7               	movwf	_main$508+2
   902                           
   903                           ;main.c: 85: Ctemp = ((0.659-((1.48)*(1-((float)Temp/1023))))/0.00132)-40;
   904  07B9  3000               	movlw	0
   905  07BA  00B3               	movwf	___ftadd@f1
   906  07BB  3020               	movlw	32
   907  07BC  00B4               	movwf	___ftadd@f1+1
   908  07BD  30C2               	movlw	194
   909  07BE  00B5               	movwf	___ftadd@f1+2
   910  07BF  0855               	movf	_main$508,w
   911  07C0  00B6               	movwf	___ftadd@f2
   912  07C1  0856               	movf	_main$508+1,w
   913  07C2  00B7               	movwf	___ftadd@f2+1
   914  07C3  0857               	movf	_main$508+2,w
   915  07C4  00B8               	movwf	___ftadd@f2+2
   916  07C5  3185  25FA  3186   	fcall	___ftadd
   917  07C8  0020               	movlb	0	; select bank0
   918  07C9  0833               	movf	?___ftadd,w
   919  07CA  00D8               	movwf	_Ctemp
   920  07CB  0834               	movf	?___ftadd+1,w
   921  07CC  00D9               	movwf	_Ctemp+1
   922  07CD  0835               	movf	?___ftadd+2,w
   923  07CE  00DA               	movwf	_Ctemp+2
   924                           
   925                           ;main.c: 86: printf("Raw Temp value is %d RAW | Pot value is %d | Fixed Voltage is %d \n
      +                          \r", Temp, Pval, FVval);
   926  07CF  300A               	movlw	low (STR_1| (0+32768))
   927  07D0  00A0               	movwf	printf@f
   928  07D1  3088               	movlw	high (STR_1| (0+32768))
   929  07D2  00A1               	movwf	printf@f+1
   930  07D3  085E               	movf	_Temp+1,w
   931  07D4  00A3               	movwf	?_printf+3
   932  07D5  085D               	movf	_Temp,w
   933  07D6  00A2               	movwf	?_printf+2
   934  07D7  0860               	movf	_Pval+1,w
   935  07D8  00A5               	movwf	?_printf+5
   936  07D9  085F               	movf	_Pval,w
   937  07DA  00A4               	movwf	?_printf+4
   938  07DB  085C               	movf	_FVval+1,w
   939  07DC  00A7               	movwf	?_printf+7
   940  07DD  085B               	movf	_FVval,w
   941  07DE  00A6               	movwf	?_printf+6
   942  07DF  3185  2543  3186   	fcall	_printf
   943                           
   944                           ;main.c: 87: _delay((unsigned long)((1000)*(4000000.0/4000.0)));
   945  07E2  3006               	movlw	6
   946  07E3  0020               	movlb	0	; select bank0
   947  07E4  00D1               	movwf	??_main+1
   948  07E5  3013               	movlw	19
   949  07E6  00D0               	movwf	??_main
   950  07E7  30AD               	movlw	173
   951  07E8                     u1677:	
   952  07E8  0B89               	decfsz	9,f
   953  07E9  2FE8               	goto	u1677
   954  07EA  0BD0               	decfsz	??_main,f
   955  07EB  2FE8               	goto	u1677
   956  07EC  0BD1               	decfsz	??_main+1,f
   957  07ED  2FE8               	goto	u1677
   958  07EE  3200               	nop2
   959                           
   960                           ;main.c: 90: RA5Blink();
   961  07EF  3182  22D1  3186   	fcall	_RA5Blink
   962  07F2  2EFC               	goto	l1327
   963  07F3                     __end_of_main:	
   964                           ;main.c: 91: }
   965                           ;main.c: 92: return;
   966                           
   967                           
   968                           	psect	text1
   969  02E1                     __ptext1:	
   970 ;; *************** function _setup_comms *****************
   971 ;; Defined at:
   972 ;;		line 95 in file "main.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   990 ;;Total ram usage:        0 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _setup_comms
  1001  02E1                     _setup_comms:	
  1002                           
  1003                           ;main.c: 96: TRISC5 = 1;
  1004                           
  1005                           ;incstack = 0
  1006                           ; Regs used in _setup_comms: [wreg]
  1007  02E1  0021               	movlb	1	; select bank1
  1008  02E2  168E               	bsf	14,5	;volatile
  1009                           
  1010                           ;main.c: 97: TRISC4 = 1;
  1011  02E3  160E               	bsf	14,4	;volatile
  1012                           
  1013                           ;main.c: 98: SPBRG = ((int)(4000000L/(16UL * 9600) -1));
  1014  02E4  3000               	movlw	0
  1015  02E5  0023               	movlb	3	; select bank3
  1016  02E6  009C               	movwf	28	;volatile
  1017  02E7  3019               	movlw	25
  1018  02E8  009B               	movwf	27	;volatile
  1019                           
  1020                           ;main.c: 99: RCSTA = (0 | 0x90);
  1021  02E9  3090               	movlw	144
  1022  02EA  009D               	movwf	29	;volatile
  1023                           
  1024                           ;main.c: 100: TXSTA = (0x4 | 0 | 0x20);
  1025  02EB  3024               	movlw	36
  1026  02EC  009E               	movwf	30	;volatile
  1027                           
  1028                           ;main.c: 101: TXEN = 1;
  1029  02ED  169E               	bsf	30,5	;volatile
  1030                           
  1031                           ;main.c: 102: SYNC = 0;
  1032  02EE  121E               	bcf	30,4	;volatile
  1033                           
  1034                           ;main.c: 103: SPEN = 1;
  1035  02EF  179D               	bsf	29,7	;volatile
  1036                           
  1037                           ;main.c: 104: BRGH = 1;
  1038  02F0  151E               	bsf	30,2	;volatile
  1039  02F1  0008               	return
  1040  02F2                     __end_of_setup_comms:	
  1041                           
  1042                           	psect	text2
  1043  0543                     __ptext2:	
  1044 ;; *************** function _printf *****************
  1045 ;; Defined at:
  1046 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  1049 ;;		 -> STR_1(68), 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  tmpval          4    0        struct .
  1052 ;;  val             2   15[BANK0 ] unsigned int 
  1053 ;;  cp              2    0        PTR const unsigned char 
  1054 ;;  len             2    0        unsigned int 
  1055 ;;  c               1   17[BANK0 ] char 
  1056 ;;  prec            1   14[BANK0 ] char 
  1057 ;;  flag            1   13[BANK0 ] unsigned char 
  1058 ;;  ap              1   12[BANK0 ] PTR void [1]
  1059 ;;		 -> ?_printf(2), 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  2    0[BANK0 ] int 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1069 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1070 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1071 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1072 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1073 ;;Total ram usage:       18 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    1
  1076 ;; This function calls:
  1077 ;;		___lwdiv
  1078 ;;		___lwmod
  1079 ;;		_putch
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _printf
  1087  0543                     _printf:	
  1088                           
  1089                           ;doprnt.c: 466: va_list ap;
  1090                           ;doprnt.c: 499: signed char c;
  1091                           ;doprnt.c: 506: signed char prec;
  1092                           ;doprnt.c: 508: unsigned char flag;
  1093                           ;doprnt.c: 523: union {
  1094                           ;doprnt.c: 524: unsigned long vd;
  1095                           ;doprnt.c: 525: double integ;
  1096                           ;doprnt.c: 526: } tmpval;
  1097                           ;doprnt.c: 528: unsigned int val;
  1098                           ;doprnt.c: 529: unsigned len;
  1099                           ;doprnt.c: 530: const char * cp;
  1100                           ;doprnt.c: 533: *ap = __va_start();
  1101                           
  1102                           ;incstack = 0
  1103                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1104  0543  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1105  0544  0020               	movlb	0	; select bank0
  1106  0545  00A8               	movwf	??_printf
  1107  0546  0828               	movf	??_printf,w
  1108  0547  00AC               	movwf	printf@ap
  1109  0548                     l1143:	
  1110                           ;doprnt.c: 536: while(c = *f++) {
  1111                           
  1112  0548  0020               	movlb	0	; select bank0
  1113  0549  0821               	movf	printf@f+1,w
  1114  054A  00A9               	movwf	??_printf+1
  1115  054B  0820               	movf	printf@f,w
  1116  054C  00A8               	movwf	??_printf
  1117  054D  0AA0               	incf	printf@f,f
  1118  054E  1903               	skipnz
  1119  054F  0AA1               	incf	printf@f+1,f
  1120  0550  0828               	movf	??_printf,w
  1121  0551  0084               	movwf	4
  1122  0552  0829               	movf	??_printf+1,w
  1123  0553  0085               	movwf	5
  1124  0554  0800               	movf	0,w	;code access
  1125  0555  00AA               	movwf	??_printf+2
  1126  0556  082A               	movf	??_printf+2,w
  1127  0557  00B1               	movwf	printf@c
  1128  0558  0831               	movf	printf@c,w
  1129  0559  1903               	btfsc	3,2
  1130  055A  0008               	return
  1131                           
  1132                           ;doprnt.c: 538: if(c != '%')
  1133  055B  3025               	movlw	37
  1134  055C  0631               	xorwf	printf@c,w
  1135  055D  1903               	btfsc	3,2
  1136  055E  2D64               	goto	l1103
  1137                           
  1138                           ;doprnt.c: 540: {
  1139                           ;doprnt.c: 541: (putch(c) );
  1140  055F  0831               	movf	printf@c,w
  1141  0560  3182  22C0  3185   	fcall	_putch
  1142                           
  1143                           ;doprnt.c: 542: continue;
  1144  0563  2D48               	goto	l1143
  1145  0564                     l1103:	
  1146                           
  1147                           ;doprnt.c: 543: }
  1148                           ;doprnt.c: 548: flag = 0;
  1149  0564  0020               	movlb	0	; select bank0
  1150  0565  01AD               	clrf	printf@flag
  1151                           
  1152                           ;doprnt.c: 822: }
  1153                           
  1154                           ;doprnt.c: 813: continue;
  1155                           
  1156                           ;doprnt.c: 802: default:
  1157                           
  1158                           ;doprnt.c: 698: case 'i':
  1159                           ;doprnt.c: 699: break;
  1160                           
  1161                           ;doprnt.c: 697: case 'd':
  1162                           
  1163                           ;doprnt.c: 638: goto alldone;
  1164                           
  1165                           ;doprnt.c: 637: case 0:
  1166                           
  1167                           ;doprnt.c: 635: switch(c = *f++) {
  1168  0566  0821               	movf	printf@f+1,w
  1169  0567  00A9               	movwf	??_printf+1
  1170  0568  0820               	movf	printf@f,w
  1171  0569  00A8               	movwf	??_printf
  1172  056A  0AA0               	incf	printf@f,f
  1173  056B  1903               	skipnz
  1174  056C  0AA1               	incf	printf@f+1,f
  1175  056D  0828               	movf	??_printf,w
  1176  056E  0084               	movwf	4
  1177  056F  0829               	movf	??_printf+1,w
  1178  0570  0085               	movwf	5
  1179  0571  0800               	movf	0,w	;code access
  1180  0572  00B1               	movwf	printf@c
  1181                           
  1182                           ; Switch size 1, requested type "space"
  1183                           ; Number of cases is 3, Range of values is 0 to 105
  1184                           ; switch strategies available:
  1185                           ; Name         Instructions Cycles
  1186                           ; simple_byte           10     6 (average)
  1187                           ; direct_byte          218     6 (fixed)
  1188                           ; jumptable            260     6 (fixed)
  1189                           ;	Chosen strategy is simple_byte
  1190  0573  3A00               	xorlw	0	; case 0
  1191  0574  1903               	skipnz
  1192  0575  2DF9               	goto	l153
  1193  0576  3A64               	xorlw	100	; case 100
  1194  0577  1903               	skipnz
  1195  0578  2D7D               	goto	l1109
  1196  0579  3A0D               	xorlw	13	; case 105
  1197  057A  1903               	skipnz
  1198  057B  2D7D               	goto	l1109
  1199  057C  2D48               	goto	l1143
  1200  057D                     l1109:	
  1201                           
  1202                           ;doprnt.c: 1253: {
  1203                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1204  057D  082C               	movf	printf@ap,w
  1205  057E  0086               	movwf	6
  1206  057F  0187               	clrf	7
  1207  0580  3F40               	moviw [0]fsr1
  1208  0581  00AF               	movwf	printf@val
  1209  0582  3F41               	moviw [1]fsr1
  1210  0583  00B0               	movwf	printf@val+1
  1211  0584  3002               	movlw	2
  1212  0585  00A8               	movwf	??_printf
  1213  0586  0828               	movf	??_printf,w
  1214  0587  07AC               	addwf	printf@ap,f
  1215                           
  1216                           ;doprnt.c: 1261: if((int)val < 0) {
  1217  0588  1FB0               	btfss	printf@val+1,7
  1218  0589  2D93               	goto	l1119
  1219                           
  1220                           ;doprnt.c: 1262: flag |= 0x03;
  1221  058A  3003               	movlw	3
  1222  058B  00A8               	movwf	??_printf
  1223  058C  0828               	movf	??_printf,w
  1224  058D  04AD               	iorwf	printf@flag,f
  1225                           
  1226                           ;doprnt.c: 1263: val = -val;
  1227  058E  09AF               	comf	printf@val,f
  1228  058F  09B0               	comf	printf@val+1,f
  1229  0590  0AAF               	incf	printf@val,f
  1230  0591  1903               	skipnz
  1231  0592  0AB0               	incf	printf@val+1,f
  1232  0593                     l1119:	
  1233                           
  1234                           ;doprnt.c: 1264: }
  1235                           ;doprnt.c: 1266: }
  1236                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1237  0593  01B1               	clrf	printf@c
  1238  0594  0AB1               	incf	printf@c,f
  1239  0595  3005               	movlw	5
  1240  0596  0631               	xorwf	printf@c,w
  1241  0597  1903               	btfsc	3,2
  1242  0598  2DB8               	goto	l1131
  1243  0599                     l1125:	
  1244                           
  1245                           ;doprnt.c: 1306: if(val < dpowers[c])
  1246  0599  0831               	movf	printf@c,w
  1247  059A  00A8               	movwf	??_printf
  1248  059B  01A9               	clrf	??_printf+1
  1249  059C  35A8               	lslf	??_printf,f
  1250  059D  0DA9               	rlf	??_printf+1,f
  1251  059E  3000               	movlw	low (_dpowers| (0+32768))
  1252  059F  0728               	addwf	??_printf,w
  1253  05A0  0084               	movwf	4
  1254  05A1  3088               	movlw	high (_dpowers| (0+32768))
  1255  05A2  3D29               	addwfc	??_printf+1,w
  1256  05A3  0085               	movwf	5
  1257  05A4  3F00               	moviw [0]fsr0
  1258  05A5  00AA               	movwf	??_printf+2
  1259  05A6  3F01               	moviw [1]fsr0
  1260  05A7  00AB               	movwf	??_printf+3
  1261  05A8  082B               	movf	??_printf+3,w
  1262  05A9  0230               	subwf	printf@val+1,w
  1263  05AA  1D03               	skipz
  1264  05AB  2DAE               	goto	u1125
  1265  05AC  082A               	movf	??_printf+2,w
  1266  05AD  022F               	subwf	printf@val,w
  1267  05AE                     u1125:	
  1268  05AE  1C03               	btfss	3,0
  1269  05AF  2DB8               	goto	l1131
  1270                           
  1271                           ;doprnt.c: 1307: break;
  1272  05B0  3001               	movlw	1
  1273  05B1  00A8               	movwf	??_printf
  1274  05B2  0828               	movf	??_printf,w
  1275  05B3  07B1               	addwf	printf@c,f
  1276  05B4  3005               	movlw	5
  1277  05B5  0631               	xorwf	printf@c,w
  1278  05B6  1D03               	btfss	3,2
  1279  05B7  2D99               	goto	l1125
  1280  05B8                     l1131:	
  1281                           
  1282                           ;doprnt.c: 1422: {
  1283                           ;doprnt.c: 1438: if(flag & 0x03)
  1284  05B8  082D               	movf	printf@flag,w
  1285  05B9  3903               	andlw	3
  1286  05BA  1903               	btfsc	3,2
  1287  05BB  2DC0               	goto	l1135
  1288                           
  1289                           ;doprnt.c: 1439: (putch('-') );
  1290  05BC  302D               	movlw	45
  1291  05BD  3182  22C0  3185   	fcall	_putch
  1292  05C0                     l1135:	
  1293                           
  1294                           ;doprnt.c: 1469: }
  1295                           ;doprnt.c: 1472: prec = c;
  1296  05C0  0020               	movlb	0	; select bank0
  1297  05C1  0831               	movf	printf@c,w
  1298  05C2  00A8               	movwf	??_printf
  1299  05C3  0828               	movf	??_printf,w
  1300  05C4  00AE               	movwf	printf@prec
  1301  05C5                     l1141:	
  1302                           ;doprnt.c: 1474: while(prec--) {
  1303                           
  1304  05C5  30FF               	movlw	255
  1305  05C6  0020               	movlb	0	; select bank0
  1306  05C7  00A8               	movwf	??_printf
  1307  05C8  0828               	movf	??_printf,w
  1308  05C9  07AE               	addwf	printf@prec,f
  1309  05CA  0A2E               	incf	printf@prec,w
  1310  05CB  1903               	btfsc	3,2
  1311  05CC  2D48               	goto	l1143
  1312                           
  1313                           ;doprnt.c: 1478: {
  1314                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1315  05CD  300A               	movlw	10
  1316  05CE  00F8               	movwf	___lwmod@divisor
  1317  05CF  3000               	movlw	0
  1318  05D0  00F9               	movwf	___lwmod@divisor+1
  1319  05D1  082E               	movf	printf@prec,w
  1320  05D2  00A8               	movwf	??_printf
  1321  05D3  01A9               	clrf	??_printf+1
  1322  05D4  35A8               	lslf	??_printf,f
  1323  05D5  0DA9               	rlf	??_printf+1,f
  1324  05D6  3000               	movlw	low (_dpowers| (0+32768))
  1325  05D7  0728               	addwf	??_printf,w
  1326  05D8  0084               	movwf	4
  1327  05D9  3088               	movlw	high (_dpowers| (0+32768))
  1328  05DA  3D29               	addwfc	??_printf+1,w
  1329  05DB  0085               	movwf	5
  1330  05DC  3F00               	moviw [0]fsr0
  1331  05DD  00F0               	movwf	___lwdiv@divisor
  1332  05DE  3F01               	moviw [1]fsr0
  1333  05DF  00F1               	movwf	___lwdiv@divisor+1
  1334  05E0  0830               	movf	printf@val+1,w
  1335  05E1  00F3               	movwf	___lwdiv@dividend+1
  1336  05E2  082F               	movf	printf@val,w
  1337  05E3  00F2               	movwf	___lwdiv@dividend
  1338  05E4  3183  234E  3185   	fcall	___lwdiv
  1339  05E7  0871               	movf	?___lwdiv+1,w
  1340  05E8  00FB               	movwf	___lwmod@dividend+1
  1341  05E9  0870               	movf	?___lwdiv,w
  1342  05EA  00FA               	movwf	___lwmod@dividend
  1343  05EB  3183  2322  3185   	fcall	___lwmod
  1344  05EE  0878               	movf	?___lwmod,w
  1345  05EF  3E30               	addlw	48
  1346  05F0  0020               	movlb	0	; select bank0
  1347  05F1  00AA               	movwf	??_printf+2
  1348  05F2  082A               	movf	??_printf+2,w
  1349  05F3  00B1               	movwf	printf@c
  1350                           
  1351                           ;doprnt.c: 1523: }
  1352                           ;doprnt.c: 1524: (putch(c) );
  1353  05F4  0831               	movf	printf@c,w
  1354  05F5  3182  22C0  3185   	fcall	_putch
  1355  05F8  2DC5               	goto	l1141
  1356  05F9                     l153:	
  1357                           ;doprnt.c: 1540: return 0;
  1358                           ;	Return value of _printf is never used
  1359                           
  1360                           ;doprnt.c: 1525: }
  1361                           ;doprnt.c: 1533: }
  1362                           ;doprnt.c: 1535: alldone:
  1363                           
  1364  05F9  0008               	return
  1365  05FA                     __end_of_printf:	
  1366                           
  1367                           	psect	text3
  1368  02C0                     __ptext3:	
  1369 ;; *************** function _putch *****************
  1370 ;; Defined at:
  1371 ;;		line 107 in file "main.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  byte            1    wreg     unsigned char 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  byte            1    0[COMMON] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1389 ;;Total ram usage:        1 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_printf
  1395 ;;		_getche
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           
  1400                           ;psect for function _putch
  1401  02C0                     _putch:	
  1402                           
  1403                           ;incstack = 0
  1404                           ; Regs used in _putch: [wreg]
  1405                           ;putch@byte stored from wreg
  1406  02C0  00F0               	movwf	putch@byte
  1407  02C1                     l105:	
  1408                           ;main.c: 111: continue;
  1409                           
  1410                           ;main.c: 110: while(!TXIF)
  1411                           
  1412  02C1  0020               	movlb	0	; select bank0
  1413  02C2  1E11               	btfss	17,4	;volatile
  1414  02C3  2AC1               	goto	l105
  1415                           
  1416                           ;main.c: 112: TXREG = byte;
  1417  02C4  0870               	movf	putch@byte,w
  1418  02C5  0023               	movlb	3	; select bank3
  1419  02C6  009A               	movwf	26	;volatile
  1420  02C7  0008               	return
  1421  02C8                     __end_of_putch:	
  1422                           
  1423                           	psect	text4
  1424  0322                     __ptext4:	
  1425 ;; *************** function ___lwmod *****************
  1426 ;; Defined at:
  1427 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  divisor         2    8[COMMON] unsigned int 
  1430 ;;  dividend        2   10[COMMON] unsigned int 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  counter         1   13[COMMON] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  2    8[COMMON] unsigned int 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1445 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1446 ;;Total ram usage:        6 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_printf
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           
  1456                           ;psect for function ___lwmod
  1457  0322                     ___lwmod:	
  1458                           
  1459                           ;incstack = 0
  1460                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1461  0322  0878               	movf	___lwmod@divisor,w
  1462  0323  0479               	iorwf	___lwmod@divisor+1,w
  1463  0324  1903               	btfsc	3,2
  1464  0325  2B49               	goto	l1069
  1465  0326  01FD               	clrf	___lwmod@counter
  1466  0327  0AFD               	incf	___lwmod@counter,f
  1467  0328                     l1059:	
  1468  0328  1BF9               	btfsc	___lwmod@divisor+1,7
  1469  0329  2B34               	goto	l1061
  1470  032A  3001               	movlw	1
  1471  032B                     u1045:	
  1472  032B  35F8               	lslf	___lwmod@divisor,f
  1473  032C  0DF9               	rlf	___lwmod@divisor+1,f
  1474  032D  0B89               	decfsz	9,f
  1475  032E  2B2B               	goto	u1045
  1476  032F  3001               	movlw	1
  1477  0330  00FC               	movwf	??___lwmod
  1478  0331  087C               	movf	??___lwmod,w
  1479  0332  07FD               	addwf	___lwmod@counter,f
  1480  0333  2B28               	goto	l1059
  1481  0334                     l1061:	
  1482  0334  0879               	movf	___lwmod@divisor+1,w
  1483  0335  027B               	subwf	___lwmod@dividend+1,w
  1484  0336  1D03               	skipz
  1485  0337  2B3A               	goto	u1065
  1486  0338  0878               	movf	___lwmod@divisor,w
  1487  0339  027A               	subwf	___lwmod@dividend,w
  1488  033A                     u1065:	
  1489  033A  1C03               	skipc
  1490  033B  2B40               	goto	l1065
  1491  033C  0878               	movf	___lwmod@divisor,w
  1492  033D  02FA               	subwf	___lwmod@dividend,f
  1493  033E  0879               	movf	___lwmod@divisor+1,w
  1494  033F  3BFB               	subwfb	___lwmod@dividend+1,f
  1495  0340                     l1065:	
  1496  0340  3001               	movlw	1
  1497  0341                     u1075:	
  1498  0341  36F9               	lsrf	___lwmod@divisor+1,f
  1499  0342  0CF8               	rrf	___lwmod@divisor,f
  1500  0343  0B89               	decfsz	9,f
  1501  0344  2B41               	goto	u1075
  1502  0345  3001               	movlw	1
  1503  0346  02FD               	subwf	___lwmod@counter,f
  1504  0347  1D03               	btfss	3,2
  1505  0348  2B34               	goto	l1061
  1506  0349                     l1069:	
  1507  0349  087B               	movf	___lwmod@dividend+1,w
  1508  034A  00F9               	movwf	?___lwmod+1
  1509  034B  087A               	movf	___lwmod@dividend,w
  1510  034C  00F8               	movwf	?___lwmod
  1511  034D  0008               	return
  1512  034E                     __end_of___lwmod:	
  1513                           
  1514                           	psect	text5
  1515  034E                     __ptext5:	
  1516 ;; *************** function ___lwdiv *****************
  1517 ;; Defined at:
  1518 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  divisor         2    0[COMMON] unsigned int 
  1521 ;;  dividend        2    2[COMMON] unsigned int 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  quotient        2    5[COMMON] unsigned int 
  1524 ;;  counter         1    7[COMMON] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  2    0[COMMON] unsigned int 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1534 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1535 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1537 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1538 ;;Total ram usage:        8 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_printf
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function ___lwdiv
  1549  034E                     ___lwdiv:	
  1550                           
  1551                           ;incstack = 0
  1552                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1553  034E  01F5               	clrf	___lwdiv@quotient
  1554  034F  01F6               	clrf	___lwdiv@quotient+1
  1555  0350  0870               	movf	___lwdiv@divisor,w
  1556  0351  0471               	iorwf	___lwdiv@divisor+1,w
  1557  0352  1903               	btfsc	3,2
  1558  0353  2B7D               	goto	l1047
  1559  0354  01F7               	clrf	___lwdiv@counter
  1560  0355  0AF7               	incf	___lwdiv@counter,f
  1561  0356                     l1035:	
  1562  0356  1BF1               	btfsc	___lwdiv@divisor+1,7
  1563  0357  2B62               	goto	l1037
  1564  0358  3001               	movlw	1
  1565  0359                     u975:	
  1566  0359  35F0               	lslf	___lwdiv@divisor,f
  1567  035A  0DF1               	rlf	___lwdiv@divisor+1,f
  1568  035B  0B89               	decfsz	9,f
  1569  035C  2B59               	goto	u975
  1570  035D  3001               	movlw	1
  1571  035E  00F4               	movwf	??___lwdiv
  1572  035F  0874               	movf	??___lwdiv,w
  1573  0360  07F7               	addwf	___lwdiv@counter,f
  1574  0361  2B56               	goto	l1035
  1575  0362                     l1037:	
  1576  0362  3001               	movlw	1
  1577  0363                     u995:	
  1578  0363  35F5               	lslf	___lwdiv@quotient,f
  1579  0364  0DF6               	rlf	___lwdiv@quotient+1,f
  1580  0365  0B89               	decfsz	9,f
  1581  0366  2B63               	goto	u995
  1582  0367  0871               	movf	___lwdiv@divisor+1,w
  1583  0368  0273               	subwf	___lwdiv@dividend+1,w
  1584  0369  1D03               	skipz
  1585  036A  2B6D               	goto	u1005
  1586  036B  0870               	movf	___lwdiv@divisor,w
  1587  036C  0272               	subwf	___lwdiv@dividend,w
  1588  036D                     u1005:	
  1589  036D  1C03               	skipc
  1590  036E  2B74               	goto	l1043
  1591  036F  0870               	movf	___lwdiv@divisor,w
  1592  0370  02F2               	subwf	___lwdiv@dividend,f
  1593  0371  0871               	movf	___lwdiv@divisor+1,w
  1594  0372  3BF3               	subwfb	___lwdiv@dividend+1,f
  1595  0373  1475               	bsf	___lwdiv@quotient,0
  1596  0374                     l1043:	
  1597  0374  3001               	movlw	1
  1598  0375                     u1015:	
  1599  0375  36F1               	lsrf	___lwdiv@divisor+1,f
  1600  0376  0CF0               	rrf	___lwdiv@divisor,f
  1601  0377  0B89               	decfsz	9,f
  1602  0378  2B75               	goto	u1015
  1603  0379  3001               	movlw	1
  1604  037A  02F7               	subwf	___lwdiv@counter,f
  1605  037B  1D03               	btfss	3,2
  1606  037C  2B62               	goto	l1037
  1607  037D                     l1047:	
  1608  037D  0876               	movf	___lwdiv@quotient+1,w
  1609  037E  00F1               	movwf	?___lwdiv+1
  1610  037F  0875               	movf	___lwdiv@quotient,w
  1611  0380  00F0               	movwf	?___lwdiv
  1612  0381  0008               	return
  1613  0382                     __end_of___lwdiv:	
  1614                           
  1615                           	psect	text6
  1616  0305                     __ptext6:	
  1617 ;; *************** function _pinConfig *****************
  1618 ;; Defined at:
  1619 ;;		line 130 in file "main.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1637 ;;Total ram usage:        0 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           
  1647                           ;psect for function _pinConfig
  1648  0305                     _pinConfig:	
  1649                           
  1650                           ;main.c: 131: OSCCON = 0x6A;
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in _pinConfig: [wreg+status,2]
  1654  0305  306A               	movlw	106
  1655  0306  0021               	movlb	1	; select bank1
  1656  0307  0099               	movwf	25	;volatile
  1657                           
  1658                           ;main.c: 132: TXCKSEL = 1;
  1659  0308  0022               	movlb	2	; select bank2
  1660  0309  151D               	bsf	29,2	;volatile
  1661                           
  1662                           ;main.c: 133: RXDTSEL = 1;
  1663  030A  179D               	bsf	29,7	;volatile
  1664                           
  1665                           ;main.c: 135: TRISA = 0x10;
  1666  030B  3010               	movlw	16
  1667  030C  0021               	movlb	1	; select bank1
  1668  030D  008C               	movwf	12	;volatile
  1669                           
  1670                           ;main.c: 136: ANSELA =0x10;
  1671  030E  3010               	movlw	16
  1672  030F  0023               	movlb	3	; select bank3
  1673  0310  008C               	movwf	12	;volatile
  1674                           
  1675                           ;main.c: 137: TRISC = 0x0C;
  1676  0311  300C               	movlw	12
  1677  0312  0021               	movlb	1	; select bank1
  1678  0313  008E               	movwf	14	;volatile
  1679                           
  1680                           ;main.c: 138: ANSELC =0x0C;
  1681  0314  300C               	movlw	12
  1682  0315  0023               	movlb	3	; select bank3
  1683  0316  008E               	movwf	14	;volatile
  1684                           
  1685                           ;main.c: 139: TRISB = 0xF0;
  1686  0317  30F0               	movlw	240
  1687  0318  0021               	movlb	1	; select bank1
  1688  0319  008D               	movwf	13	;volatile
  1689                           
  1690                           ;main.c: 140: ANSELB =0xF0;
  1691  031A  30F0               	movlw	240
  1692  031B  0023               	movlb	3	; select bank3
  1693  031C  008D               	movwf	13	;volatile
  1694                           
  1695                           ;main.c: 141: INTCON = 0;
  1696  031D  018B               	clrf	11	;volatile
  1697                           
  1698                           ;main.c: 142: TSEN = 1;
  1699  031E  0022               	movlb	2	; select bank2
  1700  031F  1697               	bsf	23,5	;volatile
  1701                           
  1702                           ;main.c: 143: TSRNG = 0;
  1703  0320  1217               	bcf	23,4	;volatile
  1704  0321  0008               	return
  1705  0322                     __end_of_pinConfig:	
  1706                           
  1707                           	psect	text7
  1708  02F2                     __ptext7:	
  1709 ;; *************** function ___lwtoft *****************
  1710 ;; Defined at:
  1711 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  c               2    8[COMMON] unsigned int 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  3    8[COMMON] float 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1725 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;Total ram usage:        4 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    1
  1732 ;; This function calls:
  1733 ;;		___ftpack
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function ___lwtoft
  1741  02F2                     ___lwtoft:	
  1742                           
  1743                           ;incstack = 0
  1744                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1745  02F2  0878               	movf	___lwtoft@c,w
  1746  02F3  00F0               	movwf	___ftpack@arg
  1747  02F4  0879               	movf	___lwtoft@c+1,w
  1748  02F5  00F1               	movwf	___ftpack@arg+1
  1749  02F6  01F2               	clrf	___ftpack@arg+2
  1750  02F7  308E               	movlw	142
  1751  02F8  00FB               	movwf	??___lwtoft
  1752  02F9  087B               	movf	??___lwtoft,w
  1753  02FA  00F3               	movwf	___ftpack@exp
  1754  02FB  01F4               	clrf	___ftpack@sign
  1755  02FC  3183  2382         	fcall	___ftpack
  1756  02FE  0870               	movf	?___ftpack,w
  1757  02FF  00F8               	movwf	?___lwtoft
  1758  0300  0871               	movf	?___ftpack+1,w
  1759  0301  00F9               	movwf	?___lwtoft+1
  1760  0302  0872               	movf	?___ftpack+2,w
  1761  0303  00FA               	movwf	?___lwtoft+2
  1762  0304  0008               	return
  1763  0305                     __end_of___lwtoft:	
  1764                           
  1765                           	psect	text8
  1766  02C8                     __ptext8:	
  1767 ;; *************** function ___ftneg *****************
  1768 ;; Defined at:
  1769 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  f1              3   16[BANK0 ] float 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  3   16[BANK0 ] float 
  1776 ;; Registers used:
  1777 ;;		wreg
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1783 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1786 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1787 ;;Total ram usage:        3 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function ___ftneg
  1798  02C8                     ___ftneg:	
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in ___ftneg: [wreg]
  1802  02C8  0020               	movlb	0	; select bank0
  1803  02C9  0832               	movf	___ftneg@f1+2,w
  1804  02CA  0431               	iorwf	___ftneg@f1+1,w
  1805  02CB  0430               	iorwf	___ftneg@f1,w
  1806  02CC  1903               	skipnz
  1807  02CD  0008               	return
  1808  02CE  3080               	movlw	128
  1809  02CF  06B2               	xorwf	___ftneg@f1+2,f
  1810  02D0  0008               	return
  1811  02D1                     __end_of___ftneg:	
  1812                           
  1813                           	psect	text9
  1814  048F                     __ptext9:	
  1815 ;; *************** function ___ftmul *****************
  1816 ;; Defined at:
  1817 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  f1              3   32[BANK0 ] float 
  1820 ;;  f2              3   35[BANK0 ] float 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  f3_as_produc    3   43[BANK0 ] unsigned um
  1823 ;;  sign            1   47[BANK0 ] unsigned char 
  1824 ;;  cntr            1   46[BANK0 ] unsigned char 
  1825 ;;  exp             1   42[BANK0 ] unsigned char 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  3   32[BANK0 ] float 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0, pclath, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1835 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1836 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1838 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1839 ;;Total ram usage:       16 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    1
  1842 ;; This function calls:
  1843 ;;		___ftpack
  1844 ;; This function is called by:
  1845 ;;		_main
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function ___ftmul
  1851  048F                     ___ftmul:	
  1852                           
  1853                           ;incstack = 0
  1854                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1855  048F  0020               	movlb	0	; select bank0
  1856  0490  0840               	movf	___ftmul@f1,w
  1857  0491  00C6               	movwf	??___ftmul
  1858  0492  0841               	movf	___ftmul@f1+1,w
  1859  0493  00C7               	movwf	??___ftmul+1
  1860  0494  0842               	movf	___ftmul@f1+2,w
  1861  0495  00C8               	movwf	??___ftmul+2
  1862  0496  1003               	clrc
  1863  0497  0D47               	rlf	??___ftmul+1,w
  1864  0498  0D48               	rlf	??___ftmul+2,w
  1865  0499  00C9               	movwf	??___ftmul+3
  1866  049A  0849               	movf	??___ftmul+3,w
  1867  049B  00CA               	movwf	___ftmul@exp
  1868  049C  084A               	movf	___ftmul@exp,w
  1869  049D  1D03               	btfss	3,2
  1870  049E  2CA6               	goto	l1265
  1871  049F  3000               	movlw	0
  1872  04A0  00C0               	movwf	?___ftmul
  1873  04A1  3000               	movlw	0
  1874  04A2  00C1               	movwf	?___ftmul+1
  1875  04A3  3000               	movlw	0
  1876  04A4  00C2               	movwf	?___ftmul+2
  1877  04A5  0008               	return
  1878  04A6                     l1265:	
  1879  04A6  0843               	movf	___ftmul@f2,w
  1880  04A7  00C6               	movwf	??___ftmul
  1881  04A8  0844               	movf	___ftmul@f2+1,w
  1882  04A9  00C7               	movwf	??___ftmul+1
  1883  04AA  0845               	movf	___ftmul@f2+2,w
  1884  04AB  00C8               	movwf	??___ftmul+2
  1885  04AC  1003               	clrc
  1886  04AD  0D47               	rlf	??___ftmul+1,w
  1887  04AE  0D48               	rlf	??___ftmul+2,w
  1888  04AF  00C9               	movwf	??___ftmul+3
  1889  04B0  0849               	movf	??___ftmul+3,w
  1890  04B1  00CF               	movwf	___ftmul@sign
  1891  04B2  084F               	movf	___ftmul@sign,w
  1892  04B3  1D03               	btfss	3,2
  1893  04B4  2CBC               	goto	l1271
  1894  04B5  3000               	movlw	0
  1895  04B6  00C0               	movwf	?___ftmul
  1896  04B7  3000               	movlw	0
  1897  04B8  00C1               	movwf	?___ftmul+1
  1898  04B9  3000               	movlw	0
  1899  04BA  00C2               	movwf	?___ftmul+2
  1900  04BB  0008               	return
  1901  04BC                     l1271:	
  1902  04BC  084F               	movf	___ftmul@sign,w
  1903  04BD  3E7B               	addlw	123
  1904  04BE  00C6               	movwf	??___ftmul
  1905  04BF  0846               	movf	??___ftmul,w
  1906  04C0  07CA               	addwf	___ftmul@exp,f
  1907  04C1  0840               	movf	___ftmul@f1,w
  1908  04C2  00C6               	movwf	??___ftmul
  1909  04C3  0841               	movf	___ftmul@f1+1,w
  1910  04C4  00C7               	movwf	??___ftmul+1
  1911  04C5  0842               	movf	___ftmul@f1+2,w
  1912  04C6  00C8               	movwf	??___ftmul+2
  1913  04C7  3010               	movlw	16
  1914  04C8                     u1505:	
  1915  04C8  36C8               	lsrf	??___ftmul+2,f
  1916  04C9  0CC7               	rrf	??___ftmul+1,f
  1917  04CA  0CC6               	rrf	??___ftmul,f
  1918  04CB  0B89               	decfsz	9,f
  1919  04CC  2CC8               	goto	u1505
  1920  04CD  0846               	movf	??___ftmul,w
  1921  04CE  00C9               	movwf	??___ftmul+3
  1922  04CF  0849               	movf	??___ftmul+3,w
  1923  04D0  00CF               	movwf	___ftmul@sign
  1924  04D1  0843               	movf	___ftmul@f2,w
  1925  04D2  00C6               	movwf	??___ftmul
  1926  04D3  0844               	movf	___ftmul@f2+1,w
  1927  04D4  00C7               	movwf	??___ftmul+1
  1928  04D5  0845               	movf	___ftmul@f2+2,w
  1929  04D6  00C8               	movwf	??___ftmul+2
  1930  04D7  3010               	movlw	16
  1931  04D8                     u1515:	
  1932  04D8  36C8               	lsrf	??___ftmul+2,f
  1933  04D9  0CC7               	rrf	??___ftmul+1,f
  1934  04DA  0CC6               	rrf	??___ftmul,f
  1935  04DB  0B89               	decfsz	9,f
  1936  04DC  2CD8               	goto	u1515
  1937  04DD  0846               	movf	??___ftmul,w
  1938  04DE  00C9               	movwf	??___ftmul+3
  1939  04DF  0849               	movf	??___ftmul+3,w
  1940  04E0  06CF               	xorwf	___ftmul@sign,f
  1941  04E1  3080               	movlw	128
  1942  04E2  00C6               	movwf	??___ftmul
  1943  04E3  0846               	movf	??___ftmul,w
  1944  04E4  05CF               	andwf	___ftmul@sign,f
  1945  04E5  17C1               	bsf	___ftmul@f1+1,7
  1946  04E6  17C4               	bsf	___ftmul@f2+1,7
  1947  04E7  30FF               	movlw	255
  1948  04E8  05C3               	andwf	___ftmul@f2,f
  1949  04E9  30FF               	movlw	255
  1950  04EA  05C4               	andwf	___ftmul@f2+1,f
  1951  04EB  3000               	movlw	0
  1952  04EC  05C5               	andwf	___ftmul@f2+2,f
  1953  04ED  3000               	movlw	0
  1954  04EE  00CB               	movwf	___ftmul@f3_as_product
  1955  04EF  3000               	movlw	0
  1956  04F0  00CC               	movwf	___ftmul@f3_as_product+1
  1957  04F1  3000               	movlw	0
  1958  04F2  00CD               	movwf	___ftmul@f3_as_product+2
  1959  04F3  3007               	movlw	7
  1960  04F4  00C6               	movwf	??___ftmul
  1961  04F5  0846               	movf	??___ftmul,w
  1962  04F6  00CE               	movwf	___ftmul@cntr
  1963  04F7                     l1283:	
  1964  04F7  1C40               	btfss	___ftmul@f1,0
  1965  04F8  2CFF               	goto	l1287
  1966  04F9  0843               	movf	___ftmul@f2,w
  1967  04FA  07CB               	addwf	___ftmul@f3_as_product,f
  1968  04FB  0844               	movf	___ftmul@f2+1,w
  1969  04FC  3DCC               	addwfc	___ftmul@f3_as_product+1,f
  1970  04FD  0845               	movf	___ftmul@f2+2,w
  1971  04FE  3DCD               	addwfc	___ftmul@f3_as_product+2,f
  1972  04FF                     l1287:	
  1973  04FF  3001               	movlw	1
  1974  0500                     u1535:	
  1975  0500  36C2               	lsrf	___ftmul@f1+2,f
  1976  0501  0CC1               	rrf	___ftmul@f1+1,f
  1977  0502  0CC0               	rrf	___ftmul@f1,f
  1978  0503  0B89               	decfsz	9,f
  1979  0504  2D00               	goto	u1535
  1980  0505  3001               	movlw	1
  1981  0506                     u1545:	
  1982  0506  35C3               	lslf	___ftmul@f2,f
  1983  0507  0DC4               	rlf	___ftmul@f2+1,f
  1984  0508  0DC5               	rlf	___ftmul@f2+2,f
  1985  0509  0B89               	decfsz	9,f
  1986  050A  2D06               	goto	u1545
  1987  050B  3001               	movlw	1
  1988  050C  02CE               	subwf	___ftmul@cntr,f
  1989  050D  1D03               	btfss	3,2
  1990  050E  2CF7               	goto	l1283
  1991  050F  3009               	movlw	9
  1992  0510  00C6               	movwf	??___ftmul
  1993  0511  0846               	movf	??___ftmul,w
  1994  0512  00CE               	movwf	___ftmul@cntr
  1995  0513                     l1295:	
  1996  0513  1C40               	btfss	___ftmul@f1,0
  1997  0514  2D1B               	goto	l1299
  1998  0515  0843               	movf	___ftmul@f2,w
  1999  0516  07CB               	addwf	___ftmul@f3_as_product,f
  2000  0517  0844               	movf	___ftmul@f2+1,w
  2001  0518  3DCC               	addwfc	___ftmul@f3_as_product+1,f
  2002  0519  0845               	movf	___ftmul@f2+2,w
  2003  051A  3DCD               	addwfc	___ftmul@f3_as_product+2,f
  2004  051B                     l1299:	
  2005  051B  3001               	movlw	1
  2006  051C                     u1575:	
  2007  051C  36C2               	lsrf	___ftmul@f1+2,f
  2008  051D  0CC1               	rrf	___ftmul@f1+1,f
  2009  051E  0CC0               	rrf	___ftmul@f1,f
  2010  051F  0B89               	decfsz	9,f
  2011  0520  2D1C               	goto	u1575
  2012  0521  3001               	movlw	1
  2013  0522                     u1585:	
  2014  0522  36CD               	lsrf	___ftmul@f3_as_product+2,f
  2015  0523  0CCC               	rrf	___ftmul@f3_as_product+1,f
  2016  0524  0CCB               	rrf	___ftmul@f3_as_product,f
  2017  0525  0B89               	decfsz	9,f
  2018  0526  2D22               	goto	u1585
  2019  0527  3001               	movlw	1
  2020  0528  02CE               	subwf	___ftmul@cntr,f
  2021  0529  1D03               	btfss	3,2
  2022  052A  2D13               	goto	l1295
  2023  052B  084B               	movf	___ftmul@f3_as_product,w
  2024  052C  00F0               	movwf	___ftpack@arg
  2025  052D  084C               	movf	___ftmul@f3_as_product+1,w
  2026  052E  00F1               	movwf	___ftpack@arg+1
  2027  052F  084D               	movf	___ftmul@f3_as_product+2,w
  2028  0530  00F2               	movwf	___ftpack@arg+2
  2029  0531  084A               	movf	___ftmul@exp,w
  2030  0532  00C6               	movwf	??___ftmul
  2031  0533  0846               	movf	??___ftmul,w
  2032  0534  00F3               	movwf	___ftpack@exp
  2033  0535  084F               	movf	___ftmul@sign,w
  2034  0536  00C7               	movwf	??___ftmul+1
  2035  0537  0847               	movf	??___ftmul+1,w
  2036  0538  00F4               	movwf	___ftpack@sign
  2037  0539  3183  2382         	fcall	___ftpack
  2038  053B  0870               	movf	?___ftpack,w
  2039  053C  0020               	movlb	0	; select bank0
  2040  053D  00C0               	movwf	?___ftmul
  2041  053E  0871               	movf	?___ftpack+1,w
  2042  053F  00C1               	movwf	?___ftmul+1
  2043  0540  0872               	movf	?___ftpack+2,w
  2044  0541  00C2               	movwf	?___ftmul+2
  2045  0542  0008               	return
  2046  0543                     __end_of___ftmul:	
  2047                           
  2048                           	psect	text10
  2049  03E6                     __ptext10:	
  2050 ;; *************** function ___ftdiv *****************
  2051 ;; Defined at:
  2052 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  f2              3    0[BANK0 ] float 
  2055 ;;  f1              3    3[BANK0 ] float 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  f3              3   11[BANK0 ] float 
  2058 ;;  sign            1   15[BANK0 ] unsigned char 
  2059 ;;  exp             1   14[BANK0 ] unsigned char 
  2060 ;;  cntr            1   10[BANK0 ] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  3    0[BANK0 ] float 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0, pclath, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2070 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2071 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2072 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2073 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2074 ;;Total ram usage:       16 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    1
  2077 ;; This function calls:
  2078 ;;		___ftpack
  2079 ;; This function is called by:
  2080 ;;		_main
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           
  2085                           ;psect for function ___ftdiv
  2086  03E6                     ___ftdiv:	
  2087                           
  2088                           ;incstack = 0
  2089                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2090  03E6  0020               	movlb	0	; select bank0
  2091  03E7  0823               	movf	___ftdiv@f1,w
  2092  03E8  00A6               	movwf	??___ftdiv
  2093  03E9  0824               	movf	___ftdiv@f1+1,w
  2094  03EA  00A7               	movwf	??___ftdiv+1
  2095  03EB  0825               	movf	___ftdiv@f1+2,w
  2096  03EC  00A8               	movwf	??___ftdiv+2
  2097  03ED  1003               	clrc
  2098  03EE  0D27               	rlf	??___ftdiv+1,w
  2099  03EF  0D28               	rlf	??___ftdiv+2,w
  2100  03F0  00A9               	movwf	??___ftdiv+3
  2101  03F1  0829               	movf	??___ftdiv+3,w
  2102  03F2  00AE               	movwf	___ftdiv@exp
  2103  03F3  082E               	movf	___ftdiv@exp,w
  2104  03F4  1D03               	btfss	3,2
  2105  03F5  2BFD               	goto	l1223
  2106  03F6  3000               	movlw	0
  2107  03F7  00A0               	movwf	?___ftdiv
  2108  03F8  3000               	movlw	0
  2109  03F9  00A1               	movwf	?___ftdiv+1
  2110  03FA  3000               	movlw	0
  2111  03FB  00A2               	movwf	?___ftdiv+2
  2112  03FC  0008               	return
  2113  03FD                     l1223:	
  2114  03FD  0820               	movf	___ftdiv@f2,w
  2115  03FE  00A6               	movwf	??___ftdiv
  2116  03FF  0821               	movf	___ftdiv@f2+1,w
  2117  0400  00A7               	movwf	??___ftdiv+1
  2118  0401  0822               	movf	___ftdiv@f2+2,w
  2119  0402  00A8               	movwf	??___ftdiv+2
  2120  0403  1003               	clrc
  2121  0404  0D27               	rlf	??___ftdiv+1,w
  2122  0405  0D28               	rlf	??___ftdiv+2,w
  2123  0406  00A9               	movwf	??___ftdiv+3
  2124  0407  0829               	movf	??___ftdiv+3,w
  2125  0408  00AF               	movwf	___ftdiv@sign
  2126  0409  082F               	movf	___ftdiv@sign,w
  2127  040A  1D03               	btfss	3,2
  2128  040B  2C13               	goto	l1229
  2129  040C  3000               	movlw	0
  2130  040D  00A0               	movwf	?___ftdiv
  2131  040E  3000               	movlw	0
  2132  040F  00A1               	movwf	?___ftdiv+1
  2133  0410  3000               	movlw	0
  2134  0411  00A2               	movwf	?___ftdiv+2
  2135  0412  0008               	return
  2136  0413                     l1229:	
  2137  0413  3000               	movlw	0
  2138  0414  00AB               	movwf	___ftdiv@f3
  2139  0415  3000               	movlw	0
  2140  0416  00AC               	movwf	___ftdiv@f3+1
  2141  0417  3000               	movlw	0
  2142  0418  00AD               	movwf	___ftdiv@f3+2
  2143  0419  3089               	movlw	137
  2144  041A  072F               	addwf	___ftdiv@sign,w
  2145  041B  00A6               	movwf	??___ftdiv
  2146  041C  0826               	movf	??___ftdiv,w
  2147  041D  02AE               	subwf	___ftdiv@exp,f
  2148  041E  0823               	movf	___ftdiv@f1,w
  2149  041F  00A6               	movwf	??___ftdiv
  2150  0420  0824               	movf	___ftdiv@f1+1,w
  2151  0421  00A7               	movwf	??___ftdiv+1
  2152  0422  0825               	movf	___ftdiv@f1+2,w
  2153  0423  00A8               	movwf	??___ftdiv+2
  2154  0424  3010               	movlw	16
  2155  0425                     u1425:	
  2156  0425  36A8               	lsrf	??___ftdiv+2,f
  2157  0426  0CA7               	rrf	??___ftdiv+1,f
  2158  0427  0CA6               	rrf	??___ftdiv,f
  2159  0428  0B89               	decfsz	9,f
  2160  0429  2C25               	goto	u1425
  2161  042A  0826               	movf	??___ftdiv,w
  2162  042B  00A9               	movwf	??___ftdiv+3
  2163  042C  0829               	movf	??___ftdiv+3,w
  2164  042D  00AF               	movwf	___ftdiv@sign
  2165  042E  0820               	movf	___ftdiv@f2,w
  2166  042F  00A6               	movwf	??___ftdiv
  2167  0430  0821               	movf	___ftdiv@f2+1,w
  2168  0431  00A7               	movwf	??___ftdiv+1
  2169  0432  0822               	movf	___ftdiv@f2+2,w
  2170  0433  00A8               	movwf	??___ftdiv+2
  2171  0434  3010               	movlw	16
  2172  0435                     u1435:	
  2173  0435  36A8               	lsrf	??___ftdiv+2,f
  2174  0436  0CA7               	rrf	??___ftdiv+1,f
  2175  0437  0CA6               	rrf	??___ftdiv,f
  2176  0438  0B89               	decfsz	9,f
  2177  0439  2C35               	goto	u1435
  2178  043A  0826               	movf	??___ftdiv,w
  2179  043B  00A9               	movwf	??___ftdiv+3
  2180  043C  0829               	movf	??___ftdiv+3,w
  2181  043D  06AF               	xorwf	___ftdiv@sign,f
  2182  043E  3080               	movlw	128
  2183  043F  00A6               	movwf	??___ftdiv
  2184  0440  0826               	movf	??___ftdiv,w
  2185  0441  05AF               	andwf	___ftdiv@sign,f
  2186  0442  17A4               	bsf	___ftdiv@f1+1,7
  2187  0443  30FF               	movlw	255
  2188  0444  05A3               	andwf	___ftdiv@f1,f
  2189  0445  30FF               	movlw	255
  2190  0446  05A4               	andwf	___ftdiv@f1+1,f
  2191  0447  3000               	movlw	0
  2192  0448  05A5               	andwf	___ftdiv@f1+2,f
  2193  0449  17A1               	bsf	___ftdiv@f2+1,7
  2194  044A  30FF               	movlw	255
  2195  044B  05A0               	andwf	___ftdiv@f2,f
  2196  044C  30FF               	movlw	255
  2197  044D  05A1               	andwf	___ftdiv@f2+1,f
  2198  044E  3000               	movlw	0
  2199  044F  05A2               	andwf	___ftdiv@f2+2,f
  2200  0450  3018               	movlw	24
  2201  0451  00A6               	movwf	??___ftdiv
  2202  0452  0826               	movf	??___ftdiv,w
  2203  0453  00AA               	movwf	___ftdiv@cntr
  2204  0454                     l1243:	
  2205  0454  3001               	movlw	1
  2206  0455                     u1445:	
  2207  0455  35AB               	lslf	___ftdiv@f3,f
  2208  0456  0DAC               	rlf	___ftdiv@f3+1,f
  2209  0457  0DAD               	rlf	___ftdiv@f3+2,f
  2210  0458  0B89               	decfsz	9,f
  2211  0459  2C55               	goto	u1445
  2212  045A  0822               	movf	___ftdiv@f2+2,w
  2213  045B  0225               	subwf	___ftdiv@f1+2,w
  2214  045C  1D03               	skipz
  2215  045D  2C64               	goto	u1455
  2216  045E  0821               	movf	___ftdiv@f2+1,w
  2217  045F  0224               	subwf	___ftdiv@f1+1,w
  2218  0460  1D03               	skipz
  2219  0461  2C64               	goto	u1455
  2220  0462  0820               	movf	___ftdiv@f2,w
  2221  0463  0223               	subwf	___ftdiv@f1,w
  2222  0464                     u1455:	
  2223  0464  1C03               	skipc
  2224  0465  2C6D               	goto	l1251
  2225  0466  0820               	movf	___ftdiv@f2,w
  2226  0467  02A3               	subwf	___ftdiv@f1,f
  2227  0468  0821               	movf	___ftdiv@f2+1,w
  2228  0469  3BA4               	subwfb	___ftdiv@f1+1,f
  2229  046A  0822               	movf	___ftdiv@f2+2,w
  2230  046B  3BA5               	subwfb	___ftdiv@f1+2,f
  2231  046C  142B               	bsf	___ftdiv@f3,0
  2232  046D                     l1251:	
  2233  046D  3001               	movlw	1
  2234  046E                     u1465:	
  2235  046E  35A3               	lslf	___ftdiv@f1,f
  2236  046F  0DA4               	rlf	___ftdiv@f1+1,f
  2237  0470  0DA5               	rlf	___ftdiv@f1+2,f
  2238  0471  0B89               	decfsz	9,f
  2239  0472  2C6E               	goto	u1465
  2240  0473  3001               	movlw	1
  2241  0474  02AA               	subwf	___ftdiv@cntr,f
  2242  0475  1D03               	btfss	3,2
  2243  0476  2C54               	goto	l1243
  2244  0477  082B               	movf	___ftdiv@f3,w
  2245  0478  00F0               	movwf	___ftpack@arg
  2246  0479  082C               	movf	___ftdiv@f3+1,w
  2247  047A  00F1               	movwf	___ftpack@arg+1
  2248  047B  082D               	movf	___ftdiv@f3+2,w
  2249  047C  00F2               	movwf	___ftpack@arg+2
  2250  047D  082E               	movf	___ftdiv@exp,w
  2251  047E  00A6               	movwf	??___ftdiv
  2252  047F  0826               	movf	??___ftdiv,w
  2253  0480  00F3               	movwf	___ftpack@exp
  2254  0481  082F               	movf	___ftdiv@sign,w
  2255  0482  00A7               	movwf	??___ftdiv+1
  2256  0483  0827               	movf	??___ftdiv+1,w
  2257  0484  00F4               	movwf	___ftpack@sign
  2258  0485  3183  2382         	fcall	___ftpack
  2259  0487  0870               	movf	?___ftpack,w
  2260  0488  0020               	movlb	0	; select bank0
  2261  0489  00A0               	movwf	?___ftdiv
  2262  048A  0871               	movf	?___ftpack+1,w
  2263  048B  00A1               	movwf	?___ftdiv+1
  2264  048C  0872               	movf	?___ftpack+2,w
  2265  048D  00A2               	movwf	?___ftdiv+2
  2266  048E  0008               	return
  2267  048F                     __end_of___ftdiv:	
  2268                           
  2269                           	psect	text11
  2270  05FA                     __ptext11:	
  2271 ;; *************** function ___ftadd *****************
  2272 ;; Defined at:
  2273 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  f1              3   19[BANK0 ] float 
  2276 ;;  f2              3   22[BANK0 ] float 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  exp1            1   31[BANK0 ] unsigned char 
  2279 ;;  exp2            1   30[BANK0 ] unsigned char 
  2280 ;;  sign            1   29[BANK0 ] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  3   19[BANK0 ] float 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0, pclath, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2290 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2291 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2292 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2293 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2294 ;;Total ram usage:       13 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    1
  2297 ;; This function calls:
  2298 ;;		___ftpack
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           
  2305                           ;psect for function ___ftadd
  2306  05FA                     ___ftadd:	
  2307                           
  2308                           ;incstack = 0
  2309                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2310  05FA  0020               	movlb	0	; select bank0
  2311  05FB  0833               	movf	___ftadd@f1,w
  2312  05FC  00B9               	movwf	??___ftadd
  2313  05FD  0834               	movf	___ftadd@f1+1,w
  2314  05FE  00BA               	movwf	??___ftadd+1
  2315  05FF  0835               	movf	___ftadd@f1+2,w
  2316  0600  00BB               	movwf	??___ftadd+2
  2317  0601  1003               	clrc
  2318  0602  0D3A               	rlf	??___ftadd+1,w
  2319  0603  0D3B               	rlf	??___ftadd+2,w
  2320  0604  00BC               	movwf	??___ftadd+3
  2321  0605  083C               	movf	??___ftadd+3,w
  2322  0606  00BF               	movwf	___ftadd@exp1
  2323  0607  0836               	movf	___ftadd@f2,w
  2324  0608  00B9               	movwf	??___ftadd
  2325  0609  0837               	movf	___ftadd@f2+1,w
  2326  060A  00BA               	movwf	??___ftadd+1
  2327  060B  0838               	movf	___ftadd@f2+2,w
  2328  060C  00BB               	movwf	??___ftadd+2
  2329  060D  1003               	clrc
  2330  060E  0D3A               	rlf	??___ftadd+1,w
  2331  060F  0D3B               	rlf	??___ftadd+2,w
  2332  0610  00BC               	movwf	??___ftadd+3
  2333  0611  083C               	movf	??___ftadd+3,w
  2334  0612  00BE               	movwf	___ftadd@exp2
  2335  0613  083F               	movf	___ftadd@exp1,w
  2336  0614  1903               	btfsc	3,2
  2337  0615  2E22               	goto	l1153
  2338  0616  083E               	movf	___ftadd@exp2,w
  2339  0617  023F               	subwf	___ftadd@exp1,w
  2340  0618  1803               	skipnc
  2341  0619  2E29               	goto	l1157
  2342  061A  033F               	decf	___ftadd@exp1,w
  2343  061B  3AFF               	xorlw	255
  2344  061C  073E               	addwf	___ftadd@exp2,w
  2345  061D  00B9               	movwf	??___ftadd
  2346  061E  3019               	movlw	25
  2347  061F  0239               	subwf	??___ftadd,w
  2348  0620  1C03               	skipc
  2349  0621  2E29               	goto	l1157
  2350  0622                     l1153:	
  2351  0622  0836               	movf	___ftadd@f2,w
  2352  0623  00B3               	movwf	?___ftadd
  2353  0624  0837               	movf	___ftadd@f2+1,w
  2354  0625  00B4               	movwf	?___ftadd+1
  2355  0626  0838               	movf	___ftadd@f2+2,w
  2356  0627  00B5               	movwf	?___ftadd+2
  2357  0628  0008               	return
  2358  0629                     l1157:	
  2359  0629  083E               	movf	___ftadd@exp2,w
  2360  062A  1903               	btfsc	3,2
  2361  062B  0008               	return
  2362  062C  083F               	movf	___ftadd@exp1,w
  2363  062D  023E               	subwf	___ftadd@exp2,w
  2364  062E  1803               	skipnc
  2365  062F  2E38               	goto	l1163
  2366  0630  033E               	decf	___ftadd@exp2,w
  2367  0631  3AFF               	xorlw	255
  2368  0632  073F               	addwf	___ftadd@exp1,w
  2369  0633  00B9               	movwf	??___ftadd
  2370  0634  3019               	movlw	25
  2371  0635  0239               	subwf	??___ftadd,w
  2372  0636  1803               	btfsc	3,0
  2373  0637  0008               	return
  2374  0638                     l1163:	
  2375  0638  3006               	movlw	6
  2376  0639  00B9               	movwf	??___ftadd
  2377  063A  0839               	movf	??___ftadd,w
  2378  063B  00BD               	movwf	___ftadd@sign
  2379  063C  1BB5               	btfsc	___ftadd@f1+2,7
  2380  063D  17BD               	bsf	___ftadd@sign,7
  2381  063E  1BB8               	btfsc	___ftadd@f2+2,7
  2382  063F  173D               	bsf	___ftadd@sign,6
  2383  0640  17B4               	bsf	___ftadd@f1+1,7
  2384  0641  30FF               	movlw	255
  2385  0642  05B3               	andwf	___ftadd@f1,f
  2386  0643  30FF               	movlw	255
  2387  0644  05B4               	andwf	___ftadd@f1+1,f
  2388  0645  3000               	movlw	0
  2389  0646  05B5               	andwf	___ftadd@f1+2,f
  2390  0647  17B7               	bsf	___ftadd@f2+1,7
  2391  0648  30FF               	movlw	255
  2392  0649  05B6               	andwf	___ftadd@f2,f
  2393  064A  30FF               	movlw	255
  2394  064B  05B7               	andwf	___ftadd@f2+1,f
  2395  064C  3000               	movlw	0
  2396  064D  05B8               	andwf	___ftadd@f2+2,f
  2397  064E  083E               	movf	___ftadd@exp2,w
  2398  064F  023F               	subwf	___ftadd@exp1,w
  2399  0650  1803               	skipnc
  2400  0651  2E74               	goto	l1185
  2401  0652                     l1175:	
  2402  0652  3001               	movlw	1
  2403  0653                     u1265:	
  2404  0653  35B6               	lslf	___ftadd@f2,f
  2405  0654  0DB7               	rlf	___ftadd@f2+1,f
  2406  0655  0DB8               	rlf	___ftadd@f2+2,f
  2407  0656  0B89               	decfsz	9,f
  2408  0657  2E53               	goto	u1265
  2409  0658  3001               	movlw	1
  2410  0659  02BE               	subwf	___ftadd@exp2,f
  2411  065A  083E               	movf	___ftadd@exp2,w
  2412  065B  063F               	xorwf	___ftadd@exp1,w
  2413  065C  1903               	skipnz
  2414  065D  2E6F               	goto	l1183
  2415  065E  3001               	movlw	1
  2416  065F  02BD               	subwf	___ftadd@sign,f
  2417  0660  083D               	movf	___ftadd@sign,w
  2418  0661  3907               	andlw	7
  2419  0662  1903               	btfsc	3,2
  2420  0663  2E6F               	goto	l1183
  2421  0664  2E52               	goto	l1175
  2422  0665                     l1181:	
  2423  0665  3001               	movlw	1
  2424  0666                     u1295:	
  2425  0666  36B5               	lsrf	___ftadd@f1+2,f
  2426  0667  0CB4               	rrf	___ftadd@f1+1,f
  2427  0668  0CB3               	rrf	___ftadd@f1,f
  2428  0669  0B89               	decfsz	9,f
  2429  066A  2E66               	goto	u1295
  2430  066B  3001               	movlw	1
  2431  066C  00B9               	movwf	??___ftadd
  2432  066D  0839               	movf	??___ftadd,w
  2433  066E  07BF               	addwf	___ftadd@exp1,f
  2434  066F                     l1183:	
  2435  066F  083F               	movf	___ftadd@exp1,w
  2436  0670  063E               	xorwf	___ftadd@exp2,w
  2437  0671  1903               	btfsc	3,2
  2438  0672  2E99               	goto	l429
  2439  0673  2E65               	goto	l1181
  2440  0674                     l1185:	
  2441  0674  083F               	movf	___ftadd@exp1,w
  2442  0675  023E               	subwf	___ftadd@exp2,w
  2443  0676  1803               	skipnc
  2444  0677  2E99               	goto	l429
  2445  0678                     l1187:	
  2446  0678  3001               	movlw	1
  2447  0679                     u1325:	
  2448  0679  35B3               	lslf	___ftadd@f1,f
  2449  067A  0DB4               	rlf	___ftadd@f1+1,f
  2450  067B  0DB5               	rlf	___ftadd@f1+2,f
  2451  067C  0B89               	decfsz	9,f
  2452  067D  2E79               	goto	u1325
  2453  067E  3001               	movlw	1
  2454  067F  02BF               	subwf	___ftadd@exp1,f
  2455  0680  083E               	movf	___ftadd@exp2,w
  2456  0681  063F               	xorwf	___ftadd@exp1,w
  2457  0682  1903               	skipnz
  2458  0683  2E95               	goto	l1195
  2459  0684  3001               	movlw	1
  2460  0685  02BD               	subwf	___ftadd@sign,f
  2461  0686  083D               	movf	___ftadd@sign,w
  2462  0687  3907               	andlw	7
  2463  0688  1903               	btfsc	3,2
  2464  0689  2E95               	goto	l1195
  2465  068A  2E78               	goto	l1187
  2466  068B                     l1193:	
  2467  068B  3001               	movlw	1
  2468  068C                     u1355:	
  2469  068C  36B8               	lsrf	___ftadd@f2+2,f
  2470  068D  0CB7               	rrf	___ftadd@f2+1,f
  2471  068E  0CB6               	rrf	___ftadd@f2,f
  2472  068F  0B89               	decfsz	9,f
  2473  0690  2E8C               	goto	u1355
  2474  0691  3001               	movlw	1
  2475  0692  00B9               	movwf	??___ftadd
  2476  0693  0839               	movf	??___ftadd,w
  2477  0694  07BE               	addwf	___ftadd@exp2,f
  2478  0695                     l1195:	
  2479  0695  083F               	movf	___ftadd@exp1,w
  2480  0696  063E               	xorwf	___ftadd@exp2,w
  2481  0697  1D03               	skipz
  2482  0698  2E8B               	goto	l1193
  2483  0699                     l429:	
  2484  0699  1FBD               	btfss	___ftadd@sign,7
  2485  069A  2EAB               	goto	l1199
  2486  069B  30FF               	movlw	255
  2487  069C  06B3               	xorwf	___ftadd@f1,f
  2488  069D  30FF               	movlw	255
  2489  069E  06B4               	xorwf	___ftadd@f1+1,f
  2490  069F  30FF               	movlw	255
  2491  06A0  06B5               	xorwf	___ftadd@f1+2,f
  2492  06A1  3001               	movlw	1
  2493  06A2  07B3               	addwf	___ftadd@f1,f
  2494  06A3  3000               	movlw	0
  2495  06A4  1803               	skipnc
  2496  06A5  3001               	movlw	1
  2497  06A6  07B4               	addwf	___ftadd@f1+1,f
  2498  06A7  3000               	movlw	0
  2499  06A8  1803               	skipnc
  2500  06A9  3001               	movlw	1
  2501  06AA  07B5               	addwf	___ftadd@f1+2,f
  2502  06AB                     l1199:	
  2503  06AB  1F3D               	btfss	___ftadd@sign,6
  2504  06AC  2EBD               	goto	l1203
  2505  06AD  30FF               	movlw	255
  2506  06AE  06B6               	xorwf	___ftadd@f2,f
  2507  06AF  30FF               	movlw	255
  2508  06B0  06B7               	xorwf	___ftadd@f2+1,f
  2509  06B1  30FF               	movlw	255
  2510  06B2  06B8               	xorwf	___ftadd@f2+2,f
  2511  06B3  3001               	movlw	1
  2512  06B4  07B6               	addwf	___ftadd@f2,f
  2513  06B5  3000               	movlw	0
  2514  06B6  1803               	skipnc
  2515  06B7  3001               	movlw	1
  2516  06B8  07B7               	addwf	___ftadd@f2+1,f
  2517  06B9  3000               	movlw	0
  2518  06BA  1803               	skipnc
  2519  06BB  3001               	movlw	1
  2520  06BC  07B8               	addwf	___ftadd@f2+2,f
  2521  06BD                     l1203:	
  2522  06BD  01BD               	clrf	___ftadd@sign
  2523  06BE  0833               	movf	___ftadd@f1,w
  2524  06BF  07B6               	addwf	___ftadd@f2,f
  2525  06C0  0834               	movf	___ftadd@f1+1,w
  2526  06C1  3DB7               	addwfc	___ftadd@f2+1,f
  2527  06C2  0835               	movf	___ftadd@f1+2,w
  2528  06C3  3DB8               	addwfc	___ftadd@f2+2,f
  2529  06C4  1FB8               	btfss	___ftadd@f2+2,7
  2530  06C5  2ED8               	goto	l1213
  2531  06C6  30FF               	movlw	255
  2532  06C7  06B6               	xorwf	___ftadd@f2,f
  2533  06C8  30FF               	movlw	255
  2534  06C9  06B7               	xorwf	___ftadd@f2+1,f
  2535  06CA  30FF               	movlw	255
  2536  06CB  06B8               	xorwf	___ftadd@f2+2,f
  2537  06CC  3001               	movlw	1
  2538  06CD  07B6               	addwf	___ftadd@f2,f
  2539  06CE  3000               	movlw	0
  2540  06CF  1803               	skipnc
  2541  06D0  3001               	movlw	1
  2542  06D1  07B7               	addwf	___ftadd@f2+1,f
  2543  06D2  3000               	movlw	0
  2544  06D3  1803               	skipnc
  2545  06D4  3001               	movlw	1
  2546  06D5  07B8               	addwf	___ftadd@f2+2,f
  2547  06D6  01BD               	clrf	___ftadd@sign
  2548  06D7  0ABD               	incf	___ftadd@sign,f
  2549  06D8                     l1213:	
  2550  06D8  0836               	movf	___ftadd@f2,w
  2551  06D9  00F0               	movwf	___ftpack@arg
  2552  06DA  0837               	movf	___ftadd@f2+1,w
  2553  06DB  00F1               	movwf	___ftpack@arg+1
  2554  06DC  0838               	movf	___ftadd@f2+2,w
  2555  06DD  00F2               	movwf	___ftpack@arg+2
  2556  06DE  083F               	movf	___ftadd@exp1,w
  2557  06DF  00B9               	movwf	??___ftadd
  2558  06E0  0839               	movf	??___ftadd,w
  2559  06E1  00F3               	movwf	___ftpack@exp
  2560  06E2  083D               	movf	___ftadd@sign,w
  2561  06E3  00BA               	movwf	??___ftadd+1
  2562  06E4  083A               	movf	??___ftadd+1,w
  2563  06E5  00F4               	movwf	___ftpack@sign
  2564  06E6  3183  2382         	fcall	___ftpack
  2565  06E8  0870               	movf	?___ftpack,w
  2566  06E9  0020               	movlb	0	; select bank0
  2567  06EA  00B3               	movwf	?___ftadd
  2568  06EB  0871               	movf	?___ftpack+1,w
  2569  06EC  00B4               	movwf	?___ftadd+1
  2570  06ED  0872               	movf	?___ftpack+2,w
  2571  06EE  00B5               	movwf	?___ftadd+2
  2572  06EF  0008               	return
  2573  06F0                     __end_of___ftadd:	
  2574                           
  2575                           	psect	text12
  2576  0382                     __ptext12:	
  2577 ;; *************** function ___ftpack *****************
  2578 ;; Defined at:
  2579 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  arg             3    0[COMMON] unsigned um
  2582 ;;  exp             1    3[COMMON] unsigned char 
  2583 ;;  sign            1    4[COMMON] unsigned char 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  3    0[COMMON] float 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2595 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2597 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2598 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2599 ;;Total ram usage:        8 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		___ftadd
  2605 ;;		___ftdiv
  2606 ;;		___ftmul
  2607 ;;		___lwtoft
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function ___ftpack
  2613  0382                     ___ftpack:	
  2614                           
  2615                           ;incstack = 0
  2616                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2617  0382  0873               	movf	___ftpack@exp,w
  2618  0383  1903               	btfsc	3,2
  2619  0384  2B8A               	goto	l997
  2620  0385  0872               	movf	___ftpack@arg+2,w
  2621  0386  0471               	iorwf	___ftpack@arg+1,w
  2622  0387  0470               	iorwf	___ftpack@arg,w
  2623  0388  1D03               	skipz
  2624  0389  2B9B               	goto	l1003
  2625  038A                     l997:	
  2626  038A  3000               	movlw	0
  2627  038B  00F0               	movwf	?___ftpack
  2628  038C  3000               	movlw	0
  2629  038D  00F1               	movwf	?___ftpack+1
  2630  038E  3000               	movlw	0
  2631  038F  00F2               	movwf	?___ftpack+2
  2632  0390  0008               	return
  2633  0391                     l1001:	
  2634  0391  3001               	movlw	1
  2635  0392  00F5               	movwf	??___ftpack
  2636  0393  0875               	movf	??___ftpack,w
  2637  0394  07F3               	addwf	___ftpack@exp,f
  2638  0395  3001               	movlw	1
  2639  0396                     u865:	
  2640  0396  36F2               	lsrf	___ftpack@arg+2,f
  2641  0397  0CF1               	rrf	___ftpack@arg+1,f
  2642  0398  0CF0               	rrf	___ftpack@arg,f
  2643  0399  0B89               	decfsz	9,f
  2644  039A  2B96               	goto	u865
  2645  039B                     l1003:	
  2646  039B  30FE               	movlw	254
  2647  039C  0572               	andwf	___ftpack@arg+2,w
  2648  039D  1903               	btfsc	3,2
  2649  039E  2BB4               	goto	l398
  2650  039F  2B91               	goto	l1001
  2651  03A0                     l1005:	
  2652  03A0  3001               	movlw	1
  2653  03A1  00F5               	movwf	??___ftpack
  2654  03A2  0875               	movf	??___ftpack,w
  2655  03A3  07F3               	addwf	___ftpack@exp,f
  2656  03A4  3001               	movlw	1
  2657  03A5  07F0               	addwf	___ftpack@arg,f
  2658  03A6  3000               	movlw	0
  2659  03A7  1803               	skipnc
  2660  03A8  3001               	movlw	1
  2661  03A9  07F1               	addwf	___ftpack@arg+1,f
  2662  03AA  3000               	movlw	0
  2663  03AB  1803               	skipnc
  2664  03AC  3001               	movlw	1
  2665  03AD  07F2               	addwf	___ftpack@arg+2,f
  2666  03AE  3001               	movlw	1
  2667  03AF                     u885:	
  2668  03AF  36F2               	lsrf	___ftpack@arg+2,f
  2669  03B0  0CF1               	rrf	___ftpack@arg+1,f
  2670  03B1  0CF0               	rrf	___ftpack@arg,f
  2671  03B2  0B89               	decfsz	9,f
  2672  03B3  2BAF               	goto	u885
  2673  03B4                     l398:	
  2674  03B4  30FF               	movlw	255
  2675  03B5  0572               	andwf	___ftpack@arg+2,w
  2676  03B6  1903               	btfsc	3,2
  2677  03B7  2BC1               	goto	l1013
  2678  03B8  2BA0               	goto	l1005
  2679  03B9                     l1011:	
  2680  03B9  3001               	movlw	1
  2681  03BA  02F3               	subwf	___ftpack@exp,f
  2682  03BB  3001               	movlw	1
  2683  03BC                     u905:	
  2684  03BC  35F0               	lslf	___ftpack@arg,f
  2685  03BD  0DF1               	rlf	___ftpack@arg+1,f
  2686  03BE  0DF2               	rlf	___ftpack@arg+2,f
  2687  03BF  0B89               	decfsz	9,f
  2688  03C0  2BBC               	goto	u905
  2689  03C1                     l1013:	
  2690  03C1  1BF1               	btfsc	___ftpack@arg+1,7
  2691  03C2  2BC7               	goto	l405
  2692  03C3  3002               	movlw	2
  2693  03C4  0273               	subwf	___ftpack@exp,w
  2694  03C5  1803               	skipnc
  2695  03C6  2BB9               	goto	l1011
  2696  03C7                     l405:	
  2697  03C7  1873               	btfsc	___ftpack@exp,0
  2698  03C8  2BCF               	goto	l406
  2699  03C9  30FF               	movlw	255
  2700  03CA  05F0               	andwf	___ftpack@arg,f
  2701  03CB  307F               	movlw	127
  2702  03CC  05F1               	andwf	___ftpack@arg+1,f
  2703  03CD  30FF               	movlw	255
  2704  03CE  05F2               	andwf	___ftpack@arg+2,f
  2705  03CF                     l406:	
  2706  03CF  1003               	clrc
  2707  03D0  0CF3               	rrf	___ftpack@exp,f
  2708  03D1  0873               	movf	___ftpack@exp,w
  2709  03D2  00F5               	movwf	??___ftpack
  2710  03D3  01F6               	clrf	??___ftpack+1
  2711  03D4  01F7               	clrf	??___ftpack+2
  2712  03D5  3010               	movlw	16
  2713  03D6                     u945:	
  2714  03D6  35F5               	lslf	??___ftpack,f
  2715  03D7  0DF6               	rlf	??___ftpack+1,f
  2716  03D8  0DF7               	rlf	??___ftpack+2,f
  2717  03D9  0B89               	decfsz	9,f
  2718  03DA  2BD6               	goto	u945
  2719  03DB  0875               	movf	??___ftpack,w
  2720  03DC  04F0               	iorwf	___ftpack@arg,f
  2721  03DD  0876               	movf	??___ftpack+1,w
  2722  03DE  04F1               	iorwf	___ftpack@arg+1,f
  2723  03DF  0877               	movf	??___ftpack+2,w
  2724  03E0  04F2               	iorwf	___ftpack@arg+2,f
  2725  03E1  0874               	movf	___ftpack@sign,w
  2726  03E2  1903               	btfsc	3,2
  2727  03E3  0008               	return
  2728  03E4  17F2               	bsf	___ftpack@arg+2,7
  2729  03E5  0008               	return
  2730  03E6                     __end_of___ftpack:	
  2731                           
  2732                           	psect	text13
  2733  02D1                     __ptext13:	
  2734 ;; *************** function _RA5Blink *****************
  2735 ;; Defined at:
  2736 ;;		line 146 in file "main.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;Total ram usage:        2 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           
  2764                           ;psect for function _RA5Blink
  2765  02D1                     _RA5Blink:	
  2766                           
  2767                           ;main.c: 147: RA5 ^= 0x01;
  2768                           
  2769                           ;incstack = 0
  2770                           ; Regs used in _RA5Blink: [wreg]
  2771  02D1  0020               	movlb	0	; select bank0
  2772  02D2  3020               	movlw	32
  2773  02D3  068C               	xorwf	12,f
  2774                           
  2775                           ;main.c: 148: _delay((unsigned long)((200)*(4000000.0/4000.0)));
  2776  02D4  3002               	movlw	2
  2777  02D5  00F1               	movwf	??_RA5Blink+1
  2778  02D6  3004               	movlw	4
  2779  02D7  00F0               	movwf	??_RA5Blink
  2780  02D8  30BA               	movlw	186
  2781  02D9                     u1687:	
  2782  02D9  0B89               	decfsz	9,f
  2783  02DA  2AD9               	goto	u1687
  2784  02DB  0BF0               	decfsz	??_RA5Blink,f
  2785  02DC  2AD9               	goto	u1687
  2786  02DD  0BF1               	decfsz	??_RA5Blink+1,f
  2787  02DE  2AD9               	goto	u1687
  2788  02DF  3200               	nop2
  2789  02E0  0008               	return
  2790  02E1                     __end_of_RA5Blink:	
  2791  007E                     btemp	set	126	;btemp
  2792  007E                     wtemp0	set	126


Data Sizes:
    Strings     68
    Constant    10
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      65
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 68
		 -> STR_1(CODE[68]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _printf->___lwmod
    ___lwmod->___lwdiv
    ___lwtoft->___ftpack
    ___ftneg->___lwtoft
    ___ftmul->___lwtoft
    ___ftdiv->___lwtoft
    ___ftadd->___lwtoft

Critical Paths under _main in BANK0

    _main->___ftmul
    ___ftneg->___ftdiv
    ___ftmul->___ftadd
    ___ftadd->___ftneg

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   10256
                                             48 BANK0      8     8      0
                           _RA5Blink
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lwtoft
                          _pinConfig
                             _printf
                        _setup_comms
 ---------------------------------------------------------------------------------
 (1) _setup_comms                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              26    18      8     994
                                              0 BANK0     18    10      8
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _pinConfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1782
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     151
                                             16 BANK0      3     0      3
                            ___ftdiv (ARG)
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2139
                                             32 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2199
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    2945
                                             19 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _RA5Blink                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RA5Blink
   ___ftadd
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftdiv
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftadd (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftneg
     ___ftdiv (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _pinConfig
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _setup_comms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      41       5       81.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 10 09:40:05 2023

            __CFG_CP$OFF 0000                       l91 0721                       l94 0738  
                     l88 070A             ___ftadd@exp1 003F             ___ftadd@exp2 003E  
            __CFG_LVP$ON 0000             ___ftadd@sign 003D                      l105 02C1  
                    l153 05F9                      l405 03C7                      l406 03CF  
                    l429 0699                      l398 03B4                      l997 038A  
                    _RA5 0065             __CFG_CPD$OFF 0000                      u905 03BC  
                    u945 03D6                      u865 0396                      u885 03AF  
                    u975 0359                      u995 0363             __CFG_BORV$LO 0000  
                    wreg 0009             ___ftdiv@cntr 002A             ___ftdiv@sign 002F  
                   l1001 0391                     l1011 03B9                     l1003 039B  
                   l1013 03C1                     l1005 03A0                     l1103 0564  
                   l1203 06BD                     l1043 0374                     l1035 0356  
                   l1131 05B8                     l1213 06D8                     l1037 0362  
                   l1061 0334                     l1141 05C5                     l1125 0599  
                   l1109 057D                     l1223 03FD                     l1047 037D  
                   l1135 05C0                     l1119 0593                     l1143 0548  
                   l1153 0622                     l1065 0340                     l1163 0638  
                   l1251 046D                     l1243 0454                     l1059 0328  
                   l1181 0665                     l1157 0629                     l1229 0413  
                   l1069 0349                     l1183 066F                     l1175 0652  
                   l1271 04BC                     l1327 06FC                     l1193 068B  
                   l1185 0674                     l1265 04A6                     l1195 0695  
                   l1187 0678                     l1283 04F7                     l1199 06AB  
                   l1295 0513                     l1287 04FF                     l1299 051B  
                   _ADGO 04E9                     STR_1 080A                     _BRGH 0CF2  
                   u1005 036D                     u1015 0375                     u1045 032B  
                   u1125 05AE                     u1065 033A                     u1075 0341  
                   u1325 0679                     u1265 0653                     u1425 0425  
                   u1505 04C8                     u1355 068C                     u1435 0435  
                   u1515 04D8                     u1445 0455                     u1295 0666  
                   u1455 0464                     u1535 0500                     u1465 046E  
                   u1545 0506                     u1575 051C                     u1647 0703  
                   u1585 0522                     u1657 071A                     u1667 0731  
                   u1677 07E8                     u1687 02D9                     _RCIF 008D  
                   _SPEN 0CEF                     _TSEN 08BD                     _TXEN 0CF5  
                   _TXIF 008C                     _SYNC 0CF4             __CFG_WRT$OFF 0000  
                   _Temp 005D                     _Pval 005F                     _main 06F0  
           ___ftpack@arg 0070             ___ftpack@exp 0073                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000             ___ftmul@cntr 004E  
           ___ftmul@sign 004F         __end_of_RA5Blink 02E1                    ?_main 0070  
        __end_of___ftadd 06F0            __CFG_WDTE$OFF 0000          __end_of___ftdiv 048F  
        __end_of___ftneg 02D1          __end_of___ftmul 0543          __end_of___lwdiv 0382  
        __end_of___lwmod 034E                    _RCREG 0199                    _RCSTA 019D  
                  _SPBRG 019B                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _TSRNG 08BC                    _FVval 005B  
                  _TXREG 019A                    _TXSTA 019E                    _Ctemp 0058  
         __CFG_FCMEN$OFF 0000          __end_of_dpowers 080A            ___ftpack@sign 0074  
                  _putch 02C0           __CFG_BOREN$OFF 0000                    status 0003  
                  wtemp0 007E          __initialization 07F3             __end_of_main 07F3  
                 ??_main 0050           __CFG_PLLEN$OFF 0000                   _ADCON0 009D  
                 _ADCON1 009E                   _ADRESH 009C                   _ADRESL 009B  
                 _ANSELA 018C                   ?_putch 0070                   _ANSELB 018D  
                 _ANSELC 018E         __end_of___ftpack 03E6                   _INTCON 000B  
                 _FVRCON 0117         __end_of___lwtoft 0305                   _OSCCON 0099  
                 _TRISC4 0474                   _TRISC5 0475           __CFG_PWRTE$OFF 0000  
              ??___ftadd 0039           __CFG_STVREN$ON 0000                ??___ftdiv 0026  
              ??___ftneg 007C                ??___ftmul 0046                ??___lwdiv 0074  
              ??___lwmod 007C                   _printf 0543    ___ftmul@f3_as_product 004B  
           ?_setup_comms 0070  __end_of__initialization 07FD                ?_RA5Blink 0070  
             ___ftadd@f1 0033               ___ftadd@f2 0036               ___ftdiv@f1 0023  
             ___ftdiv@f2 0020               ___ftdiv@f3 002B               ___ftneg@f1 0030  
             ___ftmul@f1 0040               ___ftmul@f2 0043           __pcstackCOMMON 0070  
          __end_of_putch 02C8               ___lwtoft@c 0078                  ??_putch 0070  
             __pbssBANK0 0058               ??_RA5Blink 0070       __size_of_pinConfig 001D  
             __pmaintext 06F0                ?___ftpack 0070                  ?_printf 0020  
              ?___lwtoft 0078                  _RXDTSEL 08EF                  _TXCKSEL 08EA  
                ___ftadd 05FA                  ___ftdiv 03E6                  ___ftneg 02C8  
                ___ftmul 048F                  ___lwdiv 034E                  ___lwmod 0322  
             ??___ftpack 0075                  __ptext1 02E1                  __ptext2 0543  
                __ptext3 02C0                  __ptext4 0322                  __ptext5 034E  
                __ptext6 0305                  __ptext7 02F2                  __ptext8 02C8  
                __ptext9 048F          __size_of_printf 00B7               ??___lwtoft 007B  
                _dpowers 0800        __end_of_pinConfig 0322     end_of_initialization 07FD  
   __size_of_setup_comms 0011                  printf@c 0031                  printf@f 0020  
       __CFG_FOSC$INTOSC 0000              ___ftdiv@exp 002E        __size_of_RA5Blink 0010  
            ___ftmul@exp 004A           __end_of_printf 05FA      start_initialization 07F3  
               ??_printf 0028        __size_of___ftpack 0064                ___latbits 0002  
      __size_of___lwtoft 0013            __pcstackBANK0 0020         ___lwdiv@dividend 0072  
               ?___ftadd 0033                 ?___ftdiv 0020                 ?___ftneg 0030  
               ?___ftmul 0040                 ?___lwdiv 0070                 ?___lwmod 0078  
       ___lwdiv@quotient 0075                _pinConfig 0305           __size_of_putch 0008  
               _RA5Blink 02D1               printf@flag 002D               printf@prec 002E  
             ?_pinConfig 0070            ??_setup_comms 0070         __size_of___ftadd 00F6  
       __size_of___ftdiv 00A9         __size_of___ftneg 0009         __size_of___ftmul 00B4  
       __size_of___lwdiv 0034         __size_of___lwmod 002C                 ___ftpack 0382  
               ___lwtoft 02F2                 _main$507 0052                 _main$508 0055  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 03E6  
               __ptext11 05FA                 __ptext12 0382                 __ptext13 02D1  
          __size_of_main 0103      __end_of_setup_comms 02F2                printf@val 002F  
              putch@byte 0070              ??_pinConfig 0070         ___lwmod@dividend 007A  
      __CFG_CLKOUTEN$OFF 0000                 printf@ap 002C            __pstringtext1 0800  
          __pstringtext2 0000          ___lwmod@divisor 0078          ___lwmod@counter 007D  
            _setup_comms 02E1  
