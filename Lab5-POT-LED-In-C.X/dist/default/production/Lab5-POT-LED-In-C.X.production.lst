

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Feb 23 03:03:04 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1829 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  008E                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011D                     	;# 
   112  011E                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  018E                     	;# 
   116  0191                     	;# 
   117  0191                     	;# 
   118  0192                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0194                     	;# 
   123  0195                     	;# 
   124  0196                     	;# 
   125  0199                     	;# 
   126  019A                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019F                     	;# 
   133  020C                     	;# 
   134  020D                     	;# 
   135  020E                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0219                     	;# 
   152  021A                     	;# 
   153  021B                     	;# 
   154  021C                     	;# 
   155  021D                     	;# 
   156  021E                     	;# 
   157  021F                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  0311                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0318                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  038C                     	;# 
   183  038D                     	;# 
   184  038E                     	;# 
   185  0391                     	;# 
   186  0392                     	;# 
   187  0393                     	;# 
   188  0394                     	;# 
   189  0395                     	;# 
   190  0396                     	;# 
   191  039A                     	;# 
   192  039C                     	;# 
   193  039D                     	;# 
   194  039E                     	;# 
   195  039F                     	;# 
   196  0415                     	;# 
   197  0416                     	;# 
   198  0417                     	;# 
   199  041C                     	;# 
   200  041D                     	;# 
   201  041E                     	;# 
   202  0FE4                     	;# 
   203  0FE5                     	;# 
   204  0FE6                     	;# 
   205  0FE7                     	;# 
   206  0FE8                     	;# 
   207  0FE9                     	;# 
   208  0FEA                     	;# 
   209  0FEB                     	;# 
   210  0FED                     	;# 
   211  0FEE                     	;# 
   212  0FEF                     	;# 
   213                           
   214                           	psect	idataCOMMON
   215  076D                     __pidataCOMMON:	
   216                           
   217                           ;initializer for _PWM_freq
   218  076D  34E8               	retlw	232
   219  076E  3403               	retlw	3
   220  076F  3400               	retlw	0
   221  0770  3400               	retlw	0
   222                           
   223                           ;initializer for _TMR2PRESCALE
   224  0771  3404               	retlw	4
   225  0772  3400               	retlw	0
   226  001C                     _T2CON	set	28
   227  0011                     _PIR1	set	17
   228  001B                     _PR2	set	27
   229  006F                     _RB7	set	111
   230  008E                     _TRISC	set	142
   231  008C                     _TRISA	set	140
   232  009B                     _ADRESL	set	155
   233  009C                     _ADRESH	set	156
   234  009E                     _ADCON1	set	158
   235  009D                     _ADCON0	set	157
   236  0465                     _TRISA5	set	1125
   237  0473                     _TRISC3	set	1139
   238  0472                     _TRISC2	set	1138
   239  04E9                     _GO_nDONE	set	1257
   240  011E                     _APFCON1	set	286
   241  018E                     _ANSELC	set	398
   242  029E                     _CCPTMRS	set	670
   243  0298                     _CCPR2L	set	664
   244  029A                     _CCP2CON	set	666
   245  14D5                     _DC2B1	set	5333
   246  14D4                     _DC2B0	set	5332
   247                           
   248                           ; #config settings
   249  0000                     
   250                           	psect	cinit
   251  07ED                     start_initialization:	
   252  07ED                     __initialization:	
   253                           
   254                           ; Initialize objects allocated to COMMON
   255  07ED  306D               	movlw	low __pidataCOMMON
   256  07EE  0084               	movwf	4
   257  07EF  3087               	movlw	(high __pidataCOMMON)| (0+128)
   258  07F0  0085               	movwf	5
   259  07F1  0012               	moviw fsr0++
   260  07F2  00F7               	movwf	__pdataCOMMON& (0+127)
   261  07F3  0012               	moviw fsr0++
   262  07F4  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   263  07F5  0012               	moviw fsr0++
   264  07F6  00F9               	movwf	(__pdataCOMMON+2)& (0+127)
   265  07F7  0012               	moviw fsr0++
   266  07F8  00FA               	movwf	(__pdataCOMMON+3)& (0+127)
   267  07F9  0012               	moviw fsr0++
   268  07FA  00FB               	movwf	(__pdataCOMMON+4)& (0+127)
   269  07FB  0012               	moviw fsr0++
   270  07FC  00FC               	movwf	(__pdataCOMMON+5)& (0+127)
   271  07FD                     end_of_initialization:	
   272                           ;End of C runtime variable initialization code
   273                           
   274  07FD                     __end_of__initialization:	
   275  07FD  0020               	movlb	0
   276  07FE  3187  2FBC         	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	dataCOMMON
   279  0077                     __pdataCOMMON:	
   280  0077                     _PWM_freq:	
   281  0077                     	ds	4
   282  007B                     _TMR2PRESCALE:	
   283  007B                     	ds	2
   284                           
   285                           	psect	cstackCOMMON
   286  0070                     __pcstackCOMMON:	
   287  0070                     ?_PWM_Initialize:	
   288  0070                     ??_PWM_Initialize:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_PWM_Duty:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_ADC_Initialize:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ??_ADC_Initialize:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_main:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_ADC_Read:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     PWM_Duty@duty:	
   307                           ; 2 bytes @ 0x0
   308                           
   309                           
   310                           ; 2 bytes @ 0x0
   311  0070                     	ds	2
   312  0072                     ??_PWM_Duty:	
   313  0072                     ??_ADC_Read:	
   314                           ; 1 bytes @ 0x2
   315                           
   316                           
   317                           ; 1 bytes @ 0x2
   318  0072                     	ds	2
   319  0074                     ??_main:	
   320                           
   321                           ; 1 bytes @ 0x4
   322  0074                     	ds	1
   323  0075                     main@adc_value:	
   324                           
   325                           ; 2 bytes @ 0x5
   326  0075                     	ds	2
   327                           
   328                           	psect	maintext
   329  07BC                     __pmaintext:	
   330 ;;
   331 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   332 ;;
   333 ;; *************** function _main *****************
   334 ;; Defined at:
   335 ;;		line 69 in file "main.c"
   336 ;; Parameters:    Size  Location     Type
   337 ;;		None
   338 ;; Auto vars:     Size  Location     Type
   339 ;;  adc_value       2    5[COMMON] unsigned int 
   340 ;; Return value:  Size  Location     Type
   341 ;;                  1    wreg      void 
   342 ;; Registers used:
   343 ;;		wreg, status,2, status,0, pclath, cstack
   344 ;; Tracked objects:
   345 ;;		On entry : B1F/0
   346 ;;		On exit  : 0/0
   347 ;;		Unchanged: 0/0
   348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   353 ;;Total ram usage:        3 bytes
   354 ;; Hardware stack levels required when called:    1
   355 ;; This function calls:
   356 ;;		_ADC_Initialize
   357 ;;		_ADC_Read
   358 ;;		_PWM_Duty
   359 ;;		_PWM_Initialize
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           
   366                           ;psect for function _main
   367  07BC                     _main:	
   368                           
   369                           ;main.c: 73: unsigned int adc_value = 0;
   370                           
   371                           ;incstack = 0
   372                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   373  07BC  01F5               	clrf	main@adc_value
   374  07BD  01F6               	clrf	main@adc_value+1
   375                           
   376                           ;main.c: 81: TRISA = 0x00;
   377  07BE  0021               	movlb	1	; select bank1
   378  07BF  018C               	clrf	12	;volatile
   379                           
   380                           ;main.c: 82: TRISC = 0x00;
   381  07C0  018E               	clrf	14	;volatile
   382                           
   383                           ;main.c: 84: TRISC2 = 1;
   384  07C1  150E               	bsf	14,2	;volatile
   385                           
   386                           ;main.c: 85: ANSELC = 0x00;
   387  07C2  0023               	movlb	3	; select bank3
   388  07C3  018E               	clrf	14	;volatile
   389                           
   390                           ;main.c: 87: TRISC3 = 1;
   391  07C4  0021               	movlb	1	; select bank1
   392  07C5  158E               	bsf	14,3	;volatile
   393                           
   394                           ;main.c: 88: ANSELC = ((1u << 3u) | ANSELC);
   395  07C6  0023               	movlb	3	; select bank3
   396  07C7  080E               	movf	14,w
   397  07C8  3808               	iorlw	8
   398  07C9  008E               	movwf	14	;volatile
   399                           
   400                           ;main.c: 90: ADC_Initialize();
   401  07CA  3187  2767  3187   	fcall	_ADC_Initialize
   402                           
   403                           ;main.c: 91: PWM_Initialize();
   404  07CD  3187  2773  3187   	fcall	_PWM_Initialize
   405  07D0                     l602:	
   406                           ;main.c: 95: do {
   407                           
   408                           
   409                           ;main.c: 97: if (!RB7) TRISA5 = ~TRISA5;
   410  07D0  0020               	movlb	0	; select bank0
   411  07D1  1B8D               	btfsc	13,7	;volatile
   412  07D2  2FD6               	goto	l606
   413  07D3  3020               	movlw	32
   414  07D4  0021               	movlb	1	; select bank1
   415  07D5  068C               	xorwf	12,f
   416  07D6                     l606:	
   417                           
   418                           ;main.c: 100: adc_value = ADC_Read();
   419  07D6  3187  2783  3187   	fcall	_ADC_Read
   420  07D9  0871               	movf	?_ADC_Read+1,w
   421  07DA  00F6               	movwf	main@adc_value+1
   422  07DB  0870               	movf	?_ADC_Read,w
   423  07DC  00F5               	movwf	main@adc_value
   424                           
   425                           ;main.c: 101: PWM_Duty(adc_value);
   426  07DD  0876               	movf	main@adc_value+1,w
   427  07DE  00F1               	movwf	PWM_Duty@duty+1
   428  07DF  0875               	movf	main@adc_value,w
   429  07E0  00F0               	movwf	PWM_Duty@duty
   430  07E1  3187  2796  3187   	fcall	_PWM_Duty
   431                           
   432                           ;main.c: 103: _delay((unsigned long)((50)*(4000000.0/4000.0)));
   433  07E4  3041               	movlw	65
   434  07E5  00F4               	movwf	??_main
   435  07E6  30EE               	movlw	238
   436  07E7                     u157:	
   437  07E7  0B89               	decfsz	9,f
   438  07E8  2FE7               	goto	u157
   439  07E9  0BF4               	decfsz	??_main,f
   440  07EA  2FE7               	goto	u157
   441  07EB  3200               	nop2
   442                           
   443                           ;main.c: 105: } while(1);
   444  07EC  2FD0               	goto	l602
   445  07ED                     __end_of_main:	
   446                           
   447                           	psect	text1
   448  0773                     __ptext1:	
   449 ;; *************** function _PWM_Initialize *****************
   450 ;; Defined at:
   451 ;;		line 31 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   469 ;;Total ram usage:        0 bytes
   470 ;; Hardware stack levels used:    1
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           
   479                           ;psect for function _PWM_Initialize
   480  0773                     _PWM_Initialize:	
   481                           
   482                           ;main.c: 32: APFCON1 = 0x01;
   483                           
   484                           ;incstack = 0
   485                           ; Regs used in _PWM_Initialize: [wreg+status,2]
   486  0773  3001               	movlw	1
   487  0774  0022               	movlb	2	; select bank2
   488  0775  009E               	movwf	30	;volatile
   489                           
   490                           ;main.c: 33: PR2 = 0xFF;
   491  0776  30FF               	movlw	255
   492  0777  0020               	movlb	0	; select bank0
   493  0778  009B               	movwf	27	;volatile
   494                           
   495                           ;main.c: 34: CCP2CON = 0x0C;
   496  0779  300C               	movlw	12
   497  077A  0025               	movlb	5	; select bank5
   498  077B  009A               	movwf	26	;volatile
   499                           
   500                           ;main.c: 35: CCPR2L = 0x00;
   501  077C  0198               	clrf	24	;volatile
   502                           
   503                           ;main.c: 36: CCPTMRS = 0x00;
   504  077D  019E               	clrf	30	;volatile
   505                           
   506                           ;main.c: 37: PIR1 &= 0xFF;
   507  077E  0020               	movlb	0	; select bank0
   508  077F  0811               	movf	17,w	;volatile
   509                           
   510                           ;main.c: 38: T2CON = 0b00000101;
   511  0780  3005               	movlw	5
   512  0781  009C               	movwf	28	;volatile
   513  0782  0008               	return
   514  0783                     __end_of_PWM_Initialize:	
   515                           
   516                           	psect	text2
   517  0796                     __ptext2:	
   518 ;; *************** function _PWM_Duty *****************
   519 ;; Defined at:
   520 ;;		line 42 in file "main.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;  duty            2    0[COMMON] unsigned int 
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   537 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   538 ;;Total ram usage:        4 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           
   548                           ;psect for function _PWM_Duty
   549  0796                     _PWM_Duty:	
   550                           
   551                           ;main.c: 44: if(duty<1024)
   552                           
   553                           ;incstack = 0
   554                           ; Regs used in _PWM_Duty: [wreg+status,2+status,0]
   555  0796  3004               	movlw	4
   556  0797  0271               	subwf	PWM_Duty@duty+1,w
   557  0798  3000               	movlw	0
   558  0799  1903               	skipnz
   559  079A  0270               	subwf	PWM_Duty@duty,w
   560  079B  1803               	skipnc
   561  079C  0008               	return
   562                           
   563                           ;main.c: 45: {
   564                           ;main.c: 48: DC2B0 = duty & 1;
   565  079D  1C70               	btfss	PWM_Duty@duty,0
   566  079E  2FA2               	goto	u90
   567  079F  0025               	movlb	5	; select bank5
   568  07A0  161A               	bsf	26,4	;volatile
   569  07A1  2FA4               	goto	l580
   570  07A2                     u90:	
   571  07A2  0025               	movlb	5	; select bank5
   572  07A3  121A               	bcf	26,4	;volatile
   573  07A4                     l580:	
   574                           
   575                           ;main.c: 49: DC2B1 = (duty & 2)>>1;
   576  07A4  0871               	movf	PWM_Duty@duty+1,w
   577  07A5  00F3               	movwf	??_PWM_Duty+1
   578  07A6  0870               	movf	PWM_Duty@duty,w
   579  07A7  00F2               	movwf	??_PWM_Duty
   580  07A8  36F3               	lsrf	??_PWM_Duty+1,f
   581  07A9  0CF2               	rrf	??_PWM_Duty,f
   582  07AA  1C72               	btfss	??_PWM_Duty,0
   583  07AB  2FAF               	goto	u110
   584  07AC  0025               	movlb	5	; select bank5
   585  07AD  169A               	bsf	26,5	;volatile
   586  07AE  2FB1               	goto	u124
   587  07AF                     u110:	
   588  07AF  0025               	movlb	5	; select bank5
   589  07B0  129A               	bcf	26,5	;volatile
   590  07B1                     u124:	
   591                           
   592                           ;main.c: 50: CCPR2L = duty>>2;
   593  07B1  0871               	movf	PWM_Duty@duty+1,w
   594  07B2  00F3               	movwf	??_PWM_Duty+1
   595  07B3  0870               	movf	PWM_Duty@duty,w
   596  07B4  00F2               	movwf	??_PWM_Duty
   597  07B5  36F3               	lsrf	??_PWM_Duty+1,f
   598  07B6  0CF2               	rrf	??_PWM_Duty,f
   599  07B7  36F3               	lsrf	??_PWM_Duty+1,f
   600  07B8  0CF2               	rrf	??_PWM_Duty,f
   601  07B9  0872               	movf	??_PWM_Duty,w
   602  07BA  0098               	movwf	24	;volatile
   603  07BB  0008               	return
   604  07BC                     __end_of_PWM_Duty:	
   605                           
   606                           	psect	text3
   607  0783                     __ptext3:	
   608 ;; *************** function _ADC_Read *****************
   609 ;; Defined at:
   610 ;;		line 59 in file "main.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  2    0[COMMON] unsigned int 
   617 ;; Registers used:
   618 ;;		wreg
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   627 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   628 ;;Total ram usage:        3 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           
   638                           ;psect for function _ADC_Read
   639  0783                     _ADC_Read:	
   640                           
   641                           ;main.c: 61: ADCON0 = 0b00101101;
   642                           
   643                           ;incstack = 0
   644                           ; Regs used in _ADC_Read: [wreg]
   645  0783  302D               	movlw	45
   646  0784  0021               	movlb	1	; select bank1
   647  0785  009D               	movwf	29	;volatile
   648                           
   649                           ;main.c: 63: _delay((unsigned long)((2)*(4000000.0/4000.0)));
   650  0786  3003               	movlw	3
   651  0787  00F2               	movwf	??_ADC_Read
   652  0788  3098               	movlw	152
   653  0789                     u167:	
   654  0789  0B89               	decfsz	9,f
   655  078A  2F89               	goto	u167
   656  078B  0BF2               	decfsz	??_ADC_Read,f
   657  078C  2F89               	goto	u167
   658                           
   659                           ;main.c: 64: GO_nDONE = 1;
   660  078D  0021               	movlb	1	; select bank1
   661  078E  149D               	bsf	29,1	;volatile
   662  078F                     l61:	
   663                           ;main.c: 65: while(GO_nDONE);
   664                           
   665  078F  189D               	btfsc	29,1	;volatile
   666  0790  2F8F               	goto	l61
   667                           
   668                           ;main.c: 66: return ((ADRESH << 8u) + ADRESL);
   669  0791  081C               	movf	28,w	;volatile
   670  0792  00F1               	movwf	?_ADC_Read+1
   671  0793  081B               	movf	27,w	;volatile
   672  0794  00F0               	movwf	?_ADC_Read
   673  0795  0008               	return
   674  0796                     __end_of_ADC_Read:	
   675                           
   676                           	psect	text4
   677  0767                     __ptext4:	
   678 ;; *************** function _ADC_Initialize *****************
   679 ;; Defined at:
   680 ;;		line 54 in file "main.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           
   708                           ;psect for function _ADC_Initialize
   709  0767                     _ADC_Initialize:	
   710                           
   711                           ;main.c: 56: ADCON0 = 0b00101101;
   712                           
   713                           ;incstack = 0
   714                           ; Regs used in _ADC_Initialize: [wreg]
   715  0767  302D               	movlw	45
   716  0768  0021               	movlb	1	; select bank1
   717  0769  009D               	movwf	29	;volatile
   718                           
   719                           ;main.c: 57: ADCON1 = 0b11000000;
   720  076A  30C0               	movlw	192
   721  076B  009E               	movwf	30	;volatile
   722  076C  0008               	return
   723  076D                     __end_of_ADC_Initialize:	
   724  007E                     btemp	set	126	;btemp
   725  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     165
                                              4 COMMON     3     3      0
                     _ADC_Initialize
                           _ADC_Read
                           _PWM_Duty
                     _PWM_Initialize
 ---------------------------------------------------------------------------------
 (1) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Duty                                             4     2      2     141
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2       0
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _PWM_Duty
   _PWM_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Feb 23 03:03:04 2023

__size_of_PWM_Initialize 0010              __CFG_CP$OFF 0000                       l61 078F  
                     u90 07A2              __CFG_LVP$ON 0000                      l602 07D0  
                    l606 07D6                      l580 07A4                      _RB7 006F  
                    u110 07AF                      u124 07B1                      u157 07E7  
                    _PR2 001B                      u167 0789             __CFG_CPD$OFF 0000  
           __CFG_BORV$LO 0000                      wreg 0009                     _PIR1 0011  
           __CFG_WRT$OFF 0000                     _main 07BC                     fsr0h 0005  
                   fsr0l 0004                     btemp 007E         __end_of_ADC_Read 0796  
                   start 0002            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
                  _DC2B0 14D4                    _DC2B1 14D5                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _T2CON 001C                    _TRISA 008C  
                  _TRISC 008E           __CFG_FCMEN$OFF 0000           __CFG_BOREN$OFF 0000  
       __end_of_PWM_Duty 07BC                    wtemp0 007E            main@adc_value 0075  
        __initialization 07ED             __end_of_main 07ED                   ??_main 0074  
         __CFG_PLLEN$OFF 0000                   _ADCON0 009D                   _ADCON1 009E  
                 _ADRESH 009C                   _ADRESL 009B                   _CCPR2L 0298  
                 _ANSELC 018E                   _TRISA5 0465                   _TRISC2 0472  
                 _TRISC3 0473           __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000  
         _PWM_Initialize 0773             __pdataCOMMON 0077                ?_ADC_Read 0070  
           PWM_Duty@duty 0070  __end_of__initialization 07FD   __end_of_PWM_Initialize 0783  
         __pcstackCOMMON 0070                ?_PWM_Duty 0070               ??_ADC_Read 0072  
        ?_PWM_Initialize 0070               __pmaintext 07BC                  _CCP2CON 029A  
                _APFCON1 011E                  _CCPTMRS 029E               ??_PWM_Duty 0072  
__size_of_ADC_Initialize 0006                  __ptext1 0773                  __ptext2 0796  
                __ptext3 0783                  __ptext4 0767     end_of_initialization 07FD  
       __CFG_FOSC$INTOSC 0000        __size_of_ADC_Read 0013            __pidataCOMMON 076D  
         _ADC_Initialize 0767      start_initialization 07ED        __size_of_PWM_Duty 0026  
       ??_PWM_Initialize 0070   __end_of_ADC_Initialize 076D                ___latbits 0002  
        ?_ADC_Initialize 0070                 _ADC_Read 0783                 _GO_nDONE 04E9  
               _PWM_Duty 0796                 _PWM_freq 0077             _TMR2PRESCALE 007B  
          __size_of_main 0031        __CFG_CLKOUTEN$OFF 0000         ??_ADC_Initialize 0070  
